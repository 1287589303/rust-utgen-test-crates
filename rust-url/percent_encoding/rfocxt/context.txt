CrateContext {
    crate_name: "percent_encoding",
    crate_path: "/home/abezbm/rust-utgen-test-crates/rust-url/percent_encoding",
    entry_file_paths: [
        "/home/abezbm/rust-utgen-test-crates/rust-url/percent_encoding/src/lib.rs",
    ],
    main_mod_contexts: [
        RefCell {
            value: ModContext {
             mod_info: Mod(
                ModModInfo {
                    mod_name: "percent_encoding",
                    mod_tree: MyPath {
                        name: "percent_encoding",
                        next: None,
                    },
                    file_path: "/home/abezbm/rust-utgen-test-crates/rust-url/percent_encoding/src/lib.rs",
                    parent_directory_path: "/home/abezbm/rust-utgen-test-crates/rust-url/percent_encoding/src",
                    mod_file_directory_path: None,
                    visibility: PubT,
                },
            ),
             syntax_context: SyntaxContext {
                consts: [],
                trait_aliases: [],
                uses: [
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg,
                                                            span: bytes(1971..1974),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(1975..1982),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(1983..1984),
                                                },
                                                Literal {
                                                    lit: "alloc",
                                                    span: bytes(1985..1992),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: alloc,
                                            span: bytes(1999..2004),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Group(
                                            UseGroup {
                                                brace_token: Brace,
                                                items: [
                                                    UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: borrow,
                                                                span: bytes(2012..2018),
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Group(
                                                                UseGroup {
                                                                    brace_token: Brace,
                                                                    items: [
                                                                        UseTree::Name(
                                                                            UseName {
                                                                                ident: Ident {
                                                                                    sym: Cow,
                                                                                    span: bytes(2021..2024),
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        UseTree::Name(
                                                                            UseName {
                                                                                ident: Ident {
                                                                                    sym: ToOwned,
                                                                                    span: bytes(2026..2033),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    Comma,
                                                    UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: string,
                                                                span: bytes(2040..2046),
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: String,
                                                                        span: bytes(2048..2054),
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    Comma,
                                                    UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: vec,
                                                                span: bytes(2060..2063),
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Vec,
                                                                        span: bytes(2065..2068),
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    Comma,
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: core,
                                            span: bytes(2077..2081),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Group(
                                            UseGroup {
                                                brace_token: Brace,
                                                items: [
                                                    UseTree::Name(
                                                        UseName {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(2084..2087),
                                                            },
                                                        },
                                                    ),
                                                    Comma,
                                                    UseTree::Name(
                                                        UseName {
                                                            ident: Ident {
                                                                sym: slice,
                                                                span: bytes(2089..2094),
                                                            },
                                                        },
                                                    ),
                                                    Comma,
                                                    UseTree::Name(
                                                        UseName {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(2096..2099),
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: self,
                                            span: bytes(2111..2115),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: ascii_set,
                                                    span: bytes(2117..2126),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: AsciiSet,
                                                                        span: bytes(2129..2137),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: CONTROLS,
                                                                        span: bytes(2139..2147),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: NON_ALPHANUMERIC,
                                                                        span: bytes(2149..2165),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: PubT,
                    },
                ],
                mods: [
                    ModItem {
                        mod_name: "ascii_set",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [],
                                vis: Visibility::Inherited,
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: ascii_set,
                                    span: bytes(2173..2182),
                                },
                                content: None,
                                semi: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    ModItem {
                        mod_name: "tests",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg,
                                                            span: bytes(12865..12868),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: test,
                                                    span: bytes(12869..12873),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: tests,
                                    span: bytes(12880..12885),
                                },
                                content: Some(
                                    (
                                        Brace,
                                        [],
                                    ),
                                ),
                                semi: None,
                            },
                        ),
                        inside_items: [
                            Item::Use {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: super,
                                            span: bytes(12897..12902),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Glob(
                                            UseGlob {
                                                star_token: Star,
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ],
                        visibility: Pri,
                    },
                ],
                statics: [],
                types: [],
                structs: [
                    StructItem {
                        struct_name: Name {
                            name: "PercentEncode",
                            complete_name: "percent_encoding::PercentEncode",
                            import_name: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "PercentEncode",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: derive,
                                                            span: bytes(5098..5104),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: Debug,
                                                    span: bytes(5105..5110),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(5110..5111),
                                                },
                                                Ident {
                                                    sym: Clone,
                                                    span: bytes(5112..5117),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(5117..5118),
                                                },
                                                Ident {
                                                    sym: PartialEq,
                                                    span: bytes(5119..5128),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(5128..5129),
                                                },
                                                Ident {
                                                    sym: Eq,
                                                    span: bytes(5130..5132),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                struct_token: Struct,
                                ident: Ident {
                                    sym: PercentEncode,
                                    span: bytes(5146..5159),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(5160..5161),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(5161..5162),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                fields: Fields::Named {
                                    brace_token: Brace,
                                    named: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: bytes,
                                                    span: bytes(5170..5175),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: Some(
                                                    Lifetime {
                                                        apostrophe: bytes(5178..5179),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(5179..5180),
                                                        },
                                                    },
                                                ),
                                                mutability: None,
                                                elem: Type::Slice {
                                                    bracket_token: Bracket,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(5182..5184),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                        Comma,
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: ascii_set,
                                                    span: bytes(5191..5200),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: Some(
                                                    Lifetime {
                                                        apostrophe: bytes(5203..5204),
                                                        ident: Ident {
                                                            sym: static,
                                                            span: bytes(5204..5210),
                                                        },
                                                    },
                                                ),
                                                mutability: None,
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: AsciiSet,
                                                                    span: bytes(5211..5219),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                        Comma,
                                    ],
                                },
                                semi_token: None,
                            },
                        ),
                        visibility: PubT,
                        relative_types: [
                            "AsciiSet",
                            "u8",
                        ],
                    },
                    StructItem {
                        struct_name: Name {
                            name: "PercentDecode",
                            complete_name: "percent_encoding::PercentDecode",
                            import_name: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "PercentDecode",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: derive,
                                                            span: bytes(8448..8454),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: Clone,
                                                    span: bytes(8455..8460),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(8460..8461),
                                                },
                                                Ident {
                                                    sym: Debug,
                                                    span: bytes(8462..8467),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                struct_token: Struct,
                                ident: Ident {
                                    sym: PercentDecode,
                                    span: bytes(8481..8494),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(8495..8496),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(8496..8497),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                fields: Fields::Named {
                                    brace_token: Brace,
                                    named: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: bytes,
                                                    span: bytes(8505..8510),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: slice,
                                                                span: bytes(8512..8517),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Iter,
                                                                span: bytes(8519..8523),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(8524..8525),
                                                                            ident: Ident {
                                                                                sym: a,
                                                                                span: bytes(8525..8526),
                                                                            },
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    GenericArgument::Type(
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u8,
                                                                                            span: bytes(8528..8530),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                    ],
                                },
                                semi_token: None,
                            },
                        ),
                        visibility: PubT,
                        relative_types: [
                            "Iter",
                            "slice",
                            "u8",
                        ],
                    },
                ],
                enums: [],
                unions: [],
                impls: [
                    ImplItem {
                        impl_num: 0,
                        struct_name: Name {
                            name: "PercentEncode",
                            complete_name: "percent_encoding::PercentEncode",
                            import_name: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "PercentEncode",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(5229..5230),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(5230..5231),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Iterator,
                                                        span: bytes(5233..5241),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: PercentEncode,
                                                    span: bytes(5246..5259),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(5260..5261),
                                                                ident: Ident {
                                                                    sym: a,
                                                                    span: bytes(5261..5262),
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [
                            ImplTypeItem {
                                item: Some(
                                    ImplItemType {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Item,
                                            span: bytes(5275..5279),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: Some(
                                                Lifetime {
                                                    apostrophe: bytes(5283..5284),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(5284..5285),
                                                    },
                                                },
                                            ),
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(5286..5289),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "next",
                                    complete_name: "<percent_encoding::PercentEncode as >::next",
                                    import_name: MyPath {
                                        name: "<percent_encoding",
                                        next: Some(
                                            MyPath {
                                                name: "PercentEncode as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "next",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#0}::next",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next,
                                                span: bytes(5299..5303),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(5309..5313),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Option,
                                                                    span: bytes(5318..5324),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Reference {
                                                                                and_token: And,
                                                                                lifetime: Some(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(5326..5327),
                                                                                        ident: Ident {
                                                                                            sym: a,
                                                                                            span: bytes(5327..5328),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                mutability: None,
                                                                                elem: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: str,
                                                                                                    span: bytes(5329..5332),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Let {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::TupleStruct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Some,
                                                                                span: bytes(5351..5355),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Pat::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Pat::Reference {
                                                                                attrs: [],
                                                                                and_token: And,
                                                                                mutability: None,
                                                                                pat: Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: first_byte,
                                                                                        span: bytes(5358..5368),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: remaining,
                                                                                    span: bytes(5370..5379),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(5384..5388),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: bytes,
                                                                            span: bytes(5389..5394),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: split_first,
                                                                    span: bytes(5395..5406),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(5426..5430),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: ascii_set,
                                                                                        span: bytes(5431..5440),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: should_percent_encode,
                                                                                span: bytes(5441..5462),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: first_byte,
                                                                                                    span: bytes(5463..5473),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Assign {
                                                                                        attrs: [],
                                                                                        left: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(5493..5497),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: bytes,
                                                                                                    span: bytes(5498..5503),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        eq_token: Eq,
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: remaining,
                                                                                                            span: bytes(5506..5515),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Some,
                                                                                                            span: bytes(5533..5537),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: percent_encode_byte,
                                                                                                                    span: bytes(5538..5557),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: first_byte,
                                                                                                                        span: bytes(5558..5568),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    None,
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: Some(
                                                                            (
                                                                                Else,
                                                                                Expr::Block {
                                                                                    attrs: [],
                                                                                    label: None,
                                                                                    block: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::ForLoop {
                                                                                                    attrs: [],
                                                                                                    label: None,
                                                                                                    for_token: For,
                                                                                                    pat: Pat::Tuple {
                                                                                                        attrs: [],
                                                                                                        paren_token: Paren,
                                                                                                        elems: [
                                                                                                            Pat::Ident {
                                                                                                                attrs: [],
                                                                                                                by_ref: None,
                                                                                                                mutability: None,
                                                                                                                ident: Ident {
                                                                                                                    sym: i,
                                                                                                                    span: bytes(5769..5770),
                                                                                                                },
                                                                                                                subpat: None,
                                                                                                            },
                                                                                                            Comma,
                                                                                                            Pat::Reference {
                                                                                                                attrs: [],
                                                                                                                and_token: And,
                                                                                                                mutability: None,
                                                                                                                pat: Pat::Ident {
                                                                                                                    attrs: [],
                                                                                                                    by_ref: None,
                                                                                                                    mutability: None,
                                                                                                                    ident: Ident {
                                                                                                                        sym: byte,
                                                                                                                        span: bytes(5773..5777),
                                                                                                                    },
                                                                                                                    subpat: None,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    in_token: In,
                                                                                                    expr: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::MethodCall {
                                                                                                            attrs: [],
                                                                                                            receiver: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: remaining,
                                                                                                                                span: bytes(5782..5791),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            method: Ident {
                                                                                                                sym: iter,
                                                                                                                span: bytes(5792..5796),
                                                                                                            },
                                                                                                            turbofish: None,
                                                                                                            paren_token: Paren,
                                                                                                            args: [],
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: enumerate,
                                                                                                            span: bytes(5799..5808),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [],
                                                                                                    },
                                                                                                    body: Block {
                                                                                                        brace_token: Brace,
                                                                                                        stmts: [
                                                                                                            Stmt::Expr(
                                                                                                                Expr::If {
                                                                                                                    attrs: [],
                                                                                                                    if_token: If,
                                                                                                                    cond: Expr::MethodCall {
                                                                                                                        attrs: [],
                                                                                                                        receiver: Expr::Field {
                                                                                                                            attrs: [],
                                                                                                                            base: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: self,
                                                                                                                                                span: bytes(5836..5840),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            dot_token: Dot,
                                                                                                                            member: Member::Named(
                                                                                                                                Ident {
                                                                                                                                    sym: ascii_set,
                                                                                                                                    span: bytes(5841..5850),
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        },
                                                                                                                        dot_token: Dot,
                                                                                                                        method: Ident {
                                                                                                                            sym: should_percent_encode,
                                                                                                                            span: bytes(5851..5872),
                                                                                                                        },
                                                                                                                        turbofish: None,
                                                                                                                        paren_token: Paren,
                                                                                                                        args: [
                                                                                                                            Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: byte,
                                                                                                                                                span: bytes(5873..5877),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                    then_branch: Block {
                                                                                                                        brace_token: Brace,
                                                                                                                        stmts: [
                                                                                                                            Stmt::Local {
                                                                                                                                attrs: [],
                                                                                                                                let_token: Let,
                                                                                                                                pat: Pat::Tuple {
                                                                                                                                    attrs: [],
                                                                                                                                    paren_token: Paren,
                                                                                                                                    elems: [
                                                                                                                                        Pat::Ident {
                                                                                                                                            attrs: [],
                                                                                                                                            by_ref: None,
                                                                                                                                            mutability: None,
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: unchanged_slice,
                                                                                                                                                span: bytes(5995..6010),
                                                                                                                                            },
                                                                                                                                            subpat: None,
                                                                                                                                        },
                                                                                                                                        Comma,
                                                                                                                                        Pat::Ident {
                                                                                                                                            attrs: [],
                                                                                                                                            by_ref: None,
                                                                                                                                            mutability: None,
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: remaining,
                                                                                                                                                span: bytes(6012..6021),
                                                                                                                                            },
                                                                                                                                            subpat: None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                                init: Some(
                                                                                                                                    LocalInit {
                                                                                                                                        eq_token: Eq,
                                                                                                                                        expr: Expr::MethodCall {
                                                                                                                                            attrs: [],
                                                                                                                                            receiver: Expr::Field {
                                                                                                                                                attrs: [],
                                                                                                                                                base: Expr::Path {
                                                                                                                                                    attrs: [],
                                                                                                                                                    qself: None,
                                                                                                                                                    path: Path {
                                                                                                                                                        leading_colon: None,
                                                                                                                                                        segments: [
                                                                                                                                                            PathSegment {
                                                                                                                                                                ident: Ident {
                                                                                                                                                                    sym: self,
                                                                                                                                                                    span: bytes(6025..6029),
                                                                                                                                                                },
                                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                dot_token: Dot,
                                                                                                                                                member: Member::Named(
                                                                                                                                                    Ident {
                                                                                                                                                        sym: bytes,
                                                                                                                                                        span: bytes(6030..6035),
                                                                                                                                                    },
                                                                                                                                                ),
                                                                                                                                            },
                                                                                                                                            dot_token: Dot,
                                                                                                                                            method: Ident {
                                                                                                                                                sym: split_at,
                                                                                                                                                span: bytes(6036..6044),
                                                                                                                                            },
                                                                                                                                            turbofish: None,
                                                                                                                                            paren_token: Paren,
                                                                                                                                            args: [
                                                                                                                                                Expr::Binary {
                                                                                                                                                    attrs: [],
                                                                                                                                                    left: Expr::Lit {
                                                                                                                                                        attrs: [],
                                                                                                                                                        lit: Lit::Int {
                                                                                                                                                            token: 1,
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    op: BinOp::Add(
                                                                                                                                                        Plus,
                                                                                                                                                    ),
                                                                                                                                                    right: Expr::Path {
                                                                                                                                                        attrs: [],
                                                                                                                                                        qself: None,
                                                                                                                                                        path: Path {
                                                                                                                                                            leading_colon: None,
                                                                                                                                                            segments: [
                                                                                                                                                                PathSegment {
                                                                                                                                                                    ident: Ident {
                                                                                                                                                                        sym: i,
                                                                                                                                                                        span: bytes(6049..6050),
                                                                                                                                                                    },
                                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                                },
                                                                                                                                                            ],
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                        diverge: None,
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                                semi_token: Semi,
                                                                                                                            },
                                                                                                                            Stmt::Expr(
                                                                                                                                Expr::Assign {
                                                                                                                                    attrs: [],
                                                                                                                                    left: Expr::Field {
                                                                                                                                        attrs: [],
                                                                                                                                        base: Expr::Path {
                                                                                                                                            attrs: [],
                                                                                                                                            qself: None,
                                                                                                                                            path: Path {
                                                                                                                                                leading_colon: None,
                                                                                                                                                segments: [
                                                                                                                                                    PathSegment {
                                                                                                                                                        ident: Ident {
                                                                                                                                                            sym: self,
                                                                                                                                                            span: bytes(6077..6081),
                                                                                                                                                        },
                                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                                    },
                                                                                                                                                ],
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        dot_token: Dot,
                                                                                                                                        member: Member::Named(
                                                                                                                                            Ident {
                                                                                                                                                sym: bytes,
                                                                                                                                                span: bytes(6082..6087),
                                                                                                                                            },
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                    eq_token: Eq,
                                                                                                                                    right: Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: remaining,
                                                                                                                                                        span: bytes(6090..6099),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                Some(
                                                                                                                                    Semi,
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                            Stmt::Expr(
                                                                                                                                Expr::Return {
                                                                                                                                    attrs: [],
                                                                                                                                    return_token: Return,
                                                                                                                                    expr: Some(
                                                                                                                                        Expr::Call {
                                                                                                                                            attrs: [],
                                                                                                                                            func: Expr::Path {
                                                                                                                                                attrs: [],
                                                                                                                                                qself: None,
                                                                                                                                                path: Path {
                                                                                                                                                    leading_colon: None,
                                                                                                                                                    segments: [
                                                                                                                                                        PathSegment {
                                                                                                                                                            ident: Ident {
                                                                                                                                                                sym: Some,
                                                                                                                                                                span: bytes(6132..6136),
                                                                                                                                                            },
                                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                                        },
                                                                                                                                                    ],
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            paren_token: Paren,
                                                                                                                                            args: [
                                                                                                                                                Expr::Unsafe {
                                                                                                                                                    attrs: [],
                                                                                                                                                    unsafe_token: Unsafe,
                                                                                                                                                    block: Block {
                                                                                                                                                        brace_token: Brace,
                                                                                                                                                        stmts: [
                                                                                                                                                            Stmt::Expr(
                                                                                                                                                                Expr::Call {
                                                                                                                                                                    attrs: [],
                                                                                                                                                                    func: Expr::Path {
                                                                                                                                                                        attrs: [],
                                                                                                                                                                        qself: None,
                                                                                                                                                                        path: Path {
                                                                                                                                                                            leading_colon: None,
                                                                                                                                                                            segments: [
                                                                                                                                                                                PathSegment {
                                                                                                                                                                                    ident: Ident {
                                                                                                                                                                                        sym: str,
                                                                                                                                                                                        span: bytes(6146..6149),
                                                                                                                                                                                    },
                                                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                                                },
                                                                                                                                                                                PathSep,
                                                                                                                                                                                PathSegment {
                                                                                                                                                                                    ident: Ident {
                                                                                                                                                                                        sym: from_utf8_unchecked,
                                                                                                                                                                                        span: bytes(6151..6170),
                                                                                                                                                                                    },
                                                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                                                },
                                                                                                                                                                            ],
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    paren_token: Paren,
                                                                                                                                                                    args: [
                                                                                                                                                                        Expr::Path {
                                                                                                                                                                            attrs: [],
                                                                                                                                                                            qself: None,
                                                                                                                                                                            path: Path {
                                                                                                                                                                                leading_colon: None,
                                                                                                                                                                                segments: [
                                                                                                                                                                                    PathSegment {
                                                                                                                                                                                        ident: Ident {
                                                                                                                                                                                            sym: unchanged_slice,
                                                                                                                                                                                            span: bytes(6171..6186),
                                                                                                                                                                                        },
                                                                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                                                                    },
                                                                                                                                                                                ],
                                                                                                                                                                            },
                                                                                                                                                                        },
                                                                                                                                                                    ],
                                                                                                                                                                },
                                                                                                                                                                None,
                                                                                                                                                            ),
                                                                                                                                                        ],
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                                Some(
                                                                                                                                    Semi,
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                    },
                                                                                                                    else_branch: None,
                                                                                                                },
                                                                                                                None,
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                            Stmt::Local {
                                                                                                attrs: [],
                                                                                                let_token: Let,
                                                                                                pat: Pat::Ident {
                                                                                                    attrs: [],
                                                                                                    by_ref: None,
                                                                                                    mutability: None,
                                                                                                    ident: Ident {
                                                                                                        sym: unchanged_slice,
                                                                                                        span: bytes(6252..6267),
                                                                                                    },
                                                                                                    subpat: None,
                                                                                                },
                                                                                                init: Some(
                                                                                                    LocalInit {
                                                                                                        eq_token: Eq,
                                                                                                        expr: Expr::Field {
                                                                                                            attrs: [],
                                                                                                            base: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: self,
                                                                                                                                span: bytes(6270..6274),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            member: Member::Named(
                                                                                                                Ident {
                                                                                                                    sym: bytes,
                                                                                                                    span: bytes(6275..6280),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                        diverge: None,
                                                                                                    },
                                                                                                ),
                                                                                                semi_token: Semi,
                                                                                            },
                                                                                            Stmt::Expr(
                                                                                                Expr::Assign {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Field {
                                                                                                        attrs: [],
                                                                                                        base: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: self,
                                                                                                                            span: bytes(6298..6302),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        member: Member::Named(
                                                                                                            Ident {
                                                                                                                sym: bytes,
                                                                                                                span: bytes(6303..6308),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                    eq_token: Eq,
                                                                                                    right: Expr::Reference {
                                                                                                        attrs: [],
                                                                                                        and_token: And,
                                                                                                        mutability: None,
                                                                                                        expr: Expr::Index {
                                                                                                            attrs: [],
                                                                                                            expr: Expr::Array {
                                                                                                                attrs: [],
                                                                                                                bracket_token: Bracket,
                                                                                                                elems: [],
                                                                                                            },
                                                                                                            bracket_token: Bracket,
                                                                                                            index: Expr::Range {
                                                                                                                attrs: [],
                                                                                                                start: None,
                                                                                                                limits: RangeLimits::HalfOpen(
                                                                                                                    DotDot,
                                                                                                                ),
                                                                                                                end: None,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                Some(
                                                                                                    Semi,
                                                                                                ),
                                                                                            ),
                                                                                            Stmt::Expr(
                                                                                                Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Some,
                                                                                                                        span: bytes(6336..6340),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Unsafe {
                                                                                                            attrs: [],
                                                                                                            unsafe_token: Unsafe,
                                                                                                            block: Block {
                                                                                                                brace_token: Brace,
                                                                                                                stmts: [
                                                                                                                    Stmt::Expr(
                                                                                                                        Expr::Call {
                                                                                                                            attrs: [],
                                                                                                                            func: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: str,
                                                                                                                                                span: bytes(6350..6353),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                        PathSep,
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: from_utf8_unchecked,
                                                                                                                                                span: bytes(6355..6374),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            paren_token: Paren,
                                                                                                                            args: [
                                                                                                                                Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: unchanged_slice,
                                                                                                                                                    span: bytes(6375..6390),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                        None,
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: Some(
                                                            (
                                                                Else,
                                                                Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: None,
                                                                                                    span: bytes(6438..6442),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "size_hint",
                                    complete_name: "<percent_encoding::PercentEncode as >::size_hint",
                                    import_name: MyPath {
                                        name: "<percent_encoding",
                                        next: Some(
                                            MyPath {
                                                name: "PercentEncode as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "size_hint",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#0}::size_hint",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: size_hint,
                                                span: bytes(6467..6476),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(6478..6482),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Tuple {
                                                    paren_token: Paren,
                                                    elems: [
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(6488..6493),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        Comma,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(6495..6501),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: usize,
                                                                                                        span: bytes(6502..6507),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(6523..6527),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: bytes,
                                                                        span: bytes(6528..6533),
                                                                    },
                                                                ),
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: is_empty,
                                                                span: bytes(6534..6542),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 0,
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Some,
                                                                                                    span: bytes(6563..6567),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 0,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: Some(
                                                            (
                                                                Else,
                                                                Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::Tuple {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    elems: [
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                        Comma,
                                                                                        Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Some,
                                                                                                                span: bytes(6605..6609),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Field {
                                                                                                        attrs: [],
                                                                                                        base: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: self,
                                                                                                                            span: bytes(6610..6614),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        member: Member::Named(
                                                                                                            Ident {
                                                                                                                sym: bytes,
                                                                                                                span: bytes(6615..6620),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: len,
                                                                                                        span: bytes(6621..6624),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [],
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [
                            "str",
                        ],
                    },
                    ImplItem {
                        impl_num: 1,
                        struct_name: Name {
                            name: "PercentEncode",
                            complete_name: "percent_encoding::PercentEncode",
                            import_name: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "PercentEncode",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "Display",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "fmt",
                                    next: Some(
                                        MyPath {
                                            name: "Display",
                                            next: None,
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(6653..6656),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Display,
                                                        span: bytes(6658..6665),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: PercentEncode,
                                                    span: bytes(6670..6683),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(6684..6685),
                                                                ident: Ident {
                                                                    sym: _,
                                                                    span: bytes(6685..6686),
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "fmt",
                                    complete_name: "<percent_encoding::PercentEncode as fmt::Display>::fmt",
                                    import_name: MyPath {
                                        name: "<percent_encoding",
                                        next: Some(
                                            MyPath {
                                                name: "PercentEncode as fmt",
                                                next: Some(
                                                    MyPath {
                                                        name: "Display>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fmt",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#1}::fmt",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: fmt,
                                                span: bytes(6697..6700),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(6702..6706),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: formatter,
                                                                span: bytes(6708..6717),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: fmt,
                                                                                span: bytes(6724..6727),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Formatter,
                                                                                span: bytes(6729..6738),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Lifetime(
                                                                                        Lifetime {
                                                                                            apostrophe: bytes(6739..6740),
                                                                                            ident: Ident {
                                                                                                sym: _,
                                                                                                span: bytes(6740..6741),
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: fmt,
                                                                    span: bytes(6747..6750),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Result,
                                                                    span: bytes(6752..6758),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::ForLoop {
                                                        attrs: [],
                                                        label: None,
                                                        for_token: For,
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: c,
                                                                span: bytes(6773..6774),
                                                            },
                                                            subpat: None,
                                                        },
                                                        in_token: In,
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Paren {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                expr: Expr::Unary {
                                                                    attrs: [],
                                                                    op: UnOp::Deref(
                                                                        Star,
                                                                    ),
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(6780..6784),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: clone,
                                                                span: bytes(6786..6791),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        body: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Try {
                                                                        attrs: [],
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: formatter,
                                                                                                span: bytes(6808..6817),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: write_str,
                                                                                span: bytes(6818..6827),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: c,
                                                                                                    span: bytes(6828..6829),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        question_token: Question,
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Ok,
                                                                            span: bytes(6850..6852),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [],
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [],
                    },
                    ImplItem {
                        impl_num: 2,
                        struct_name: Name {
                            name: "Cow",
                            complete_name: "",
                            import_name: MyPath {
                                name: "alloc",
                                next: Some(
                                    MyPath {
                                        name: "borrow",
                                        next: Some(
                                            MyPath {
                                                name: "Cow",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg,
                                                            span: bytes(6868..6871),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(6872..6879),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(6880..6881),
                                                },
                                                Literal {
                                                    lit: "alloc",
                                                    span: bytes(6882..6889),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(6897..6898),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(6898..6899),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: From,
                                                        span: bytes(6901..6905),
                                                    },
                                                    arguments: PathArguments::AngleBracketed {
                                                        colon2_token: None,
                                                        lt_token: Lt,
                                                        args: [
                                                            GenericArgument::Type(
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: PercentEncode,
                                                                                    span: bytes(6906..6919),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: None,
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::Lifetime(
                                                                                            Lifetime {
                                                                                                apostrophe: bytes(6920..6921),
                                                                                                ident: Ident {
                                                                                                    sym: a,
                                                                                                    span: bytes(6921..6922),
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Gt,
                                                    },
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Cow,
                                                    span: bytes(6929..6932),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(6933..6934),
                                                                ident: Ident {
                                                                    sym: a,
                                                                    span: bytes(6934..6935),
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(6937..6940),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "from",
                                    complete_name: "<alloc::borrow::Cow as >::from",
                                    import_name: MyPath {
                                        name: "<alloc",
                                        next: Some(
                                            MyPath {
                                                name: "borrow",
                                                next: Some(
                                                    MyPath {
                                                        name: "Cow as >",
                                                        next: Some(
                                                            MyPath {
                                                                name: "from",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#2}::from",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: from,
                                                span: bytes(6951..6955),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            ident: Ident {
                                                                sym: iter,
                                                                span: bytes(6960..6964),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: PercentEncode,
                                                                            span: bytes(6966..6979),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Lifetime(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(6980..6981),
                                                                                        ident: Ident {
                                                                                            sym: a,
                                                                                            span: bytes(6981..6982),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(6988..6992),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Match {
                                                        attrs: [],
                                                        match_token: Match,
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: iter,
                                                                                span: bytes(7009..7013),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: next,
                                                                span: bytes(7014..7018),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        brace_token: Brace,
                                                        arms: [
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: None,
                                                                        span: bytes(7035..7039),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Str {
                                                                            token: "",
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: into,
                                                                        span: bytes(7046..7050),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::TupleStruct {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Some,
                                                                                    span: bytes(7066..7070),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: first,
                                                                                span: bytes(7071..7076),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Match {
                                                                    attrs: [],
                                                                    match_token: Match,
                                                                    expr: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: iter,
                                                                                            span: bytes(7087..7091),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: next,
                                                                            span: bytes(7092..7096),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    brace_token: Brace,
                                                                    arms: [
                                                                        Arm {
                                                                            attrs: [],
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: None,
                                                                                    span: bytes(7117..7121),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            guard: None,
                                                                            fat_arrow_token: FatArrow,
                                                                            body: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: first,
                                                                                                    span: bytes(7125..7130),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: into,
                                                                                    span: bytes(7131..7135),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            comma: Some(
                                                                                Comma,
                                                                            ),
                                                                        },
                                                                        Arm {
                                                                            attrs: [],
                                                                            pat: Pat::TupleStruct {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Some,
                                                                                                span: bytes(7155..7159),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: second,
                                                                                            span: bytes(7160..7166),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                            guard: None,
                                                                            fat_arrow_token: FatArrow,
                                                                            body: Expr::Block {
                                                                                attrs: [],
                                                                                label: None,
                                                                                block: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Local {
                                                                                            attrs: [],
                                                                                            let_token: Let,
                                                                                            pat: Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: Some(
                                                                                                    Mut,
                                                                                                ),
                                                                                                ident: Ident {
                                                                                                    sym: string,
                                                                                                    span: bytes(7201..7207),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                            init: Some(
                                                                                                LocalInit {
                                                                                                    eq_token: Eq,
                                                                                                    expr: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: first,
                                                                                                                            span: bytes(7210..7215),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: to_owned,
                                                                                                            span: bytes(7216..7224),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [],
                                                                                                    },
                                                                                                    diverge: None,
                                                                                                },
                                                                                            ),
                                                                                            semi_token: Semi,
                                                                                        },
                                                                                        Stmt::Expr(
                                                                                            Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: string,
                                                                                                                    span: bytes(7248..7254),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: push_str,
                                                                                                    span: bytes(7255..7263),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: second,
                                                                                                                        span: bytes(7264..7270),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: string,
                                                                                                                    span: bytes(7293..7299),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: extend,
                                                                                                    span: bytes(7300..7306),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: iter,
                                                                                                                        span: bytes(7307..7311),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: string,
                                                                                                                    span: bytes(7334..7340),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: into,
                                                                                                    span: bytes(7341..7345),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [],
                                                                                            },
                                                                                            None,
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            },
                                                                            comma: None,
                                                                        },
                                                                    ],
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [],
                    },
                    ImplItem {
                        impl_num: 3,
                        struct_name: Name {
                            name: "PercentDecode",
                            complete_name: "percent_encoding::PercentDecode",
                            import_name: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "PercentDecode",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Iterator,
                                                        span: bytes(8834..8842),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: PercentDecode,
                                                    span: bytes(8847..8860),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(8861..8862),
                                                                ident: Ident {
                                                                    sym: _,
                                                                    span: bytes(8862..8863),
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [
                            ImplTypeItem {
                                item: Some(
                                    ImplItemType {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Item,
                                            span: bytes(8876..8880),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u8,
                                                            span: bytes(8883..8885),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "next",
                                    complete_name: "<percent_encoding::PercentDecode as >::next",
                                    import_name: MyPath {
                                        name: "<percent_encoding",
                                        next: Some(
                                            MyPath {
                                                name: "PercentDecode as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "next",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#3}::next",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next,
                                                span: bytes(8895..8899),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(8905..8909),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Option,
                                                                    span: bytes(8914..8920),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u8,
                                                                                                span: bytes(8921..8923),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(8935..8939),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: bytes,
                                                                        span: bytes(8940..8945),
                                                                    },
                                                                ),
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: next,
                                                                span: bytes(8946..8950),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: map,
                                                            span: bytes(8953..8956),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Closure {
                                                                attrs: [],
                                                                lifetimes: None,
                                                                constness: None,
                                                                movability: None,
                                                                asyncness: None,
                                                                capture: None,
                                                                or1_token: Or,
                                                                inputs: [
                                                                    Pat::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: None,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: byte,
                                                                                span: bytes(8959..8963),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    },
                                                                ],
                                                                or2_token: Or,
                                                                output: ReturnType::Default,
                                                                body: Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::If {
                                                                                    attrs: [],
                                                                                    if_token: If,
                                                                                    cond: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: byte,
                                                                                                            span: bytes(8982..8986),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Eq(
                                                                                            EqEq,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Byte {
                                                                                                token: b'%',
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    then_branch: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Call {
                                                                                                        attrs: [],
                                                                                                        func: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: after_percent_sign,
                                                                                                                            span: bytes(9013..9031),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Reference {
                                                                                                                attrs: [],
                                                                                                                and_token: And,
                                                                                                                mutability: Some(
                                                                                                                    Mut,
                                                                                                                ),
                                                                                                                expr: Expr::Field {
                                                                                                                    attrs: [],
                                                                                                                    base: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: self,
                                                                                                                                        span: bytes(9037..9041),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    dot_token: Dot,
                                                                                                                    member: Member::Named(
                                                                                                                        Ident {
                                                                                                                            sym: bytes,
                                                                                                                            span: bytes(9042..9047),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: unwrap_or,
                                                                                                        span: bytes(9049..9058),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: byte,
                                                                                                                            span: bytes(9059..9063),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                    else_branch: Some(
                                                                                        (
                                                                                            Else,
                                                                                            Expr::Block {
                                                                                                attrs: [],
                                                                                                label: None,
                                                                                                block: Block {
                                                                                                    brace_token: Brace,
                                                                                                    stmts: [
                                                                                                        Stmt::Expr(
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: byte,
                                                                                                                                span: bytes(9102..9106),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            None,
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "size_hint",
                                    complete_name: "<percent_encoding::PercentDecode as >::size_hint",
                                    import_name: MyPath {
                                        name: "<percent_encoding",
                                        next: Some(
                                            MyPath {
                                                name: "PercentDecode as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "size_hint",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#3}::size_hint",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: size_hint,
                                                span: bytes(9146..9155),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(9157..9161),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Tuple {
                                                    paren_token: Paren,
                                                    elems: [
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(9167..9172),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        Comma,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(9174..9180),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: usize,
                                                                                                        span: bytes(9181..9186),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: bytes,
                                                            span: bytes(9203..9208),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(9211..9215),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: bytes,
                                                                            span: bytes(9216..9221),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: len,
                                                                    span: bytes(9222..9225),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: bytes,
                                                                                            span: bytes(9239..9244),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 2,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Div(
                                                                    Slash,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 3,
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Some,
                                                                                    span: bytes(9255..9259),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: bytes,
                                                                                        span: bytes(9260..9265),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [
                            "u8",
                        ],
                    },
                    ImplItem {
                        impl_num: 4,
                        struct_name: Name {
                            name: "Cow",
                            complete_name: "",
                            import_name: MyPath {
                                name: "alloc",
                                next: Some(
                                    MyPath {
                                        name: "borrow",
                                        next: Some(
                                            MyPath {
                                                name: "Cow",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg,
                                                            span: bytes(9279..9282),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(9283..9290),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(9291..9292),
                                                },
                                                Literal {
                                                    lit: "alloc",
                                                    span: bytes(9293..9300),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(9308..9309),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(9309..9310),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: From,
                                                        span: bytes(9312..9316),
                                                    },
                                                    arguments: PathArguments::AngleBracketed {
                                                        colon2_token: None,
                                                        lt_token: Lt,
                                                        args: [
                                                            GenericArgument::Type(
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: PercentDecode,
                                                                                    span: bytes(9317..9330),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: None,
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::Lifetime(
                                                                                            Lifetime {
                                                                                                apostrophe: bytes(9331..9332),
                                                                                                ident: Ident {
                                                                                                    sym: a,
                                                                                                    span: bytes(9332..9333),
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Gt,
                                                    },
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Cow,
                                                    span: bytes(9340..9343),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(9344..9345),
                                                                ident: Ident {
                                                                    sym: a,
                                                                    span: bytes(9345..9346),
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(9349..9351),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "from",
                                    complete_name: "<alloc::borrow::Cow as >::from",
                                    import_name: MyPath {
                                        name: "<alloc",
                                        next: Some(
                                            MyPath {
                                                name: "borrow",
                                                next: Some(
                                                    MyPath {
                                                        name: "Cow as >",
                                                        next: Some(
                                                            MyPath {
                                                                name: "from",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#4}::from",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: from,
                                                span: bytes(9363..9367),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: iter,
                                                                span: bytes(9368..9372),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: PercentDecode,
                                                                            span: bytes(9374..9387),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Lifetime(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(9388..9389),
                                                                                        ident: Ident {
                                                                                            sym: a,
                                                                                            span: bytes(9389..9390),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(9396..9400),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Match {
                                                        attrs: [],
                                                        match_token: Match,
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: iter,
                                                                                span: bytes(9417..9421),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: if_any,
                                                                span: bytes(9422..9428),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        brace_token: Brace,
                                                        arms: [
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::TupleStruct {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Some,
                                                                                    span: bytes(9445..9449),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: vec,
                                                                                span: bytes(9450..9453),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Cow,
                                                                                        span: bytes(9458..9461),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Owned,
                                                                                        span: bytes(9463..9468),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: vec,
                                                                                            span: bytes(9469..9472),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: None,
                                                                        span: bytes(9487..9491),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Cow,
                                                                                        span: bytes(9495..9498),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Borrowed,
                                                                                        span: bytes(9500..9508),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: iter,
                                                                                                    span: bytes(9509..9513),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: bytes,
                                                                                        span: bytes(9514..9519),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: as_slice,
                                                                                span: bytes(9520..9528),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                    ],
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [],
                    },
                    ImplItem {
                        impl_num: 5,
                        struct_name: Name {
                            name: "PercentDecode",
                            complete_name: "percent_encoding::PercentDecode",
                            import_name: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "PercentDecode",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: None,
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(9557..9558),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(9558..9559),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: None,
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: PercentDecode,
                                                    span: bytes(9561..9574),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(9575..9576),
                                                                ident: Ident {
                                                                    sym: a,
                                                                    span: bytes(9576..9577),
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "if_any",
                                    complete_name: "percent_encoding::PercentDecode::if_any",
                                    import_name: MyPath {
                                        name: "percent_encoding",
                                        next: Some(
                                            MyPath {
                                                name: "PercentDecode",
                                                next: Some(
                                                    MyPath {
                                                        name: "if_any",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#5}::if_any",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(9681..9684),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(9685..9692),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(9693..9694),
                                                        },
                                                        Literal {
                                                            lit: "alloc",
                                                            span: bytes(9695..9702),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: if_any,
                                                span: bytes(9712..9718),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(9720..9724),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Option,
                                                                    span: bytes(9729..9735),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Vec,
                                                                                                span: bytes(9736..9739),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: u8,
                                                                                                                            span: bytes(9740..9742),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: bytes_iter,
                                                            span: bytes(9763..9773),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(9776..9780),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: bytes,
                                                                            span: bytes(9781..9786),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: clone,
                                                                    span: bytes(9787..9792),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::While {
                                                        attrs: [],
                                                        label: None,
                                                        while_token: While,
                                                        cond: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: bytes_iter,
                                                                                span: bytes(9810..9820),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: any,
                                                                span: bytes(9821..9824),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Closure {
                                                                    attrs: [],
                                                                    lifetimes: None,
                                                                    constness: None,
                                                                    movability: None,
                                                                    asyncness: None,
                                                                    capture: None,
                                                                    or1_token: Or,
                                                                    inputs: [
                                                                        Pat::Reference {
                                                                            attrs: [],
                                                                            and_token: And,
                                                                            mutability: None,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: b,
                                                                                    span: bytes(9827..9828),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        },
                                                                    ],
                                                                    or2_token: Or,
                                                                    output: ReturnType::Default,
                                                                    body: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: b,
                                                                                            span: bytes(9830..9831),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Eq(
                                                                            EqEq,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'%',
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        body: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::Let {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::TupleStruct {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Some,
                                                                                                span: bytes(9862..9866),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: decoded_byte,
                                                                                            span: bytes(9867..9879),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                            eq_token: Eq,
                                                                            expr: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: after_percent_sign,
                                                                                                    span: bytes(9883..9901),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Reference {
                                                                                        attrs: [],
                                                                                        and_token: And,
                                                                                        mutability: Some(
                                                                                            Mut,
                                                                                        ),
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: bytes_iter,
                                                                                                            span: bytes(9907..9917),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Local {
                                                                                    attrs: [],
                                                                                    let_token: Let,
                                                                                    pat: Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: initial_bytes,
                                                                                            span: bytes(9941..9954),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                    init: Some(
                                                                                        LocalInit {
                                                                                            eq_token: Eq,
                                                                                            expr: Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Field {
                                                                                                    attrs: [],
                                                                                                    base: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: self,
                                                                                                                        span: bytes(9957..9961),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    member: Member::Named(
                                                                                                        Ident {
                                                                                                            sym: bytes,
                                                                                                            span: bytes(9962..9967),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: as_slice,
                                                                                                    span: bytes(9968..9976),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [],
                                                                                            },
                                                                                            diverge: None,
                                                                                        },
                                                                                    ),
                                                                                    semi_token: Semi,
                                                                                },
                                                                                Stmt::Local {
                                                                                    attrs: [],
                                                                                    let_token: Let,
                                                                                    pat: Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: unchanged_bytes_len,
                                                                                            span: bytes(10000..10019),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                    init: Some(
                                                                                        LocalInit {
                                                                                            eq_token: Eq,
                                                                                            expr: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: initial_bytes,
                                                                                                                            span: bytes(10022..10035),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: len,
                                                                                                            span: bytes(10036..10039),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [],
                                                                                                    },
                                                                                                    op: BinOp::Sub(
                                                                                                        Minus,
                                                                                                    ),
                                                                                                    right: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: bytes_iter,
                                                                                                                            span: bytes(10044..10054),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: len,
                                                                                                            span: bytes(10055..10058),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Sub(
                                                                                                    Minus,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 3,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            diverge: None,
                                                                                        },
                                                                                    ),
                                                                                    semi_token: Semi,
                                                                                },
                                                                                Stmt::Local {
                                                                                    attrs: [],
                                                                                    let_token: Let,
                                                                                    pat: Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: Some(
                                                                                            Mut,
                                                                                        ),
                                                                                        ident: Ident {
                                                                                            sym: decoded,
                                                                                            span: bytes(10090..10097),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                    init: Some(
                                                                                        LocalInit {
                                                                                            eq_token: Eq,
                                                                                            expr: Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: initial_bytes,
                                                                                                                        span: bytes(10100..10113),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Range {
                                                                                                        attrs: [],
                                                                                                        start: None,
                                                                                                        limits: RangeLimits::HalfOpen(
                                                                                                            DotDot,
                                                                                                        ),
                                                                                                        end: Some(
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: unchanged_bytes_len,
                                                                                                                                span: bytes(10116..10135),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: to_owned,
                                                                                                    span: bytes(10137..10145),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [],
                                                                                            },
                                                                                            diverge: None,
                                                                                        },
                                                                                    ),
                                                                                    semi_token: Semi,
                                                                                },
                                                                                Stmt::Expr(
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: decoded,
                                                                                                            span: bytes(10165..10172),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: push,
                                                                                            span: bytes(10173..10177),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: decoded_byte,
                                                                                                                span: bytes(10178..10190),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: decoded,
                                                                                                            span: bytes(10209..10216),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: extend,
                                                                                            span: bytes(10217..10223),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Struct {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: PercentDecode,
                                                                                                                span: bytes(10224..10237),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                brace_token: Brace,
                                                                                                fields: [
                                                                                                    FieldValue {
                                                                                                        attrs: [],
                                                                                                        member: Member::Named(
                                                                                                            Ident {
                                                                                                                sym: bytes,
                                                                                                                span: bytes(10240..10245),
                                                                                                            },
                                                                                                        ),
                                                                                                        colon_token: Some(
                                                                                                            Colon,
                                                                                                        ),
                                                                                                        expr: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: bytes_iter,
                                                                                                                            span: bytes(10247..10257),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                                dot2_token: None,
                                                                                                rest: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::Return {
                                                                                        attrs: [],
                                                                                        return_token: Return,
                                                                                        expr: Some(
                                                                                            Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: Some,
                                                                                                                    span: bytes(10285..10289),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: decoded,
                                                                                                                        span: bytes(10290..10297),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: None,
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: None,
                                                                        span: bytes(10361..10365),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "decode_utf8",
                                    complete_name: "percent_encoding::PercentDecode::decode_utf8",
                                    import_name: MyPath {
                                        name: "percent_encoding",
                                        next: Some(
                                            MyPath {
                                                name: "PercentDecode",
                                                next: Some(
                                                    MyPath {
                                                        name: "decode_utf8",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#5}::decode_utf8",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(10533..10536),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(10537..10544),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(10545..10546),
                                                        },
                                                        Literal {
                                                            lit: "alloc",
                                                            span: bytes(10547..10554),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: decode_utf8,
                                                span: bytes(10568..10579),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: None,
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(10580..10584),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Result,
                                                                    span: bytes(10589..10595),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Cow,
                                                                                                span: bytes(10596..10599),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Lifetime(
                                                                                                        Lifetime {
                                                                                                            apostrophe: bytes(10600..10601),
                                                                                                            ident: Ident {
                                                                                                                sym: a,
                                                                                                                span: bytes(10601..10602),
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                    Comma,
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: str,
                                                                                                                            span: bytes(10604..10607),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: str,
                                                                                                span: bytes(10610..10613),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Utf8Error,
                                                                                                span: bytes(10615..10624),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Match {
                                                        attrs: [],
                                                        match_token: Match,
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(10642..10646),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: clone,
                                                                    span: bytes(10647..10652),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: into,
                                                                span: bytes(10655..10659),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        brace_token: Brace,
                                                        arms: [
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::TupleStruct {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Cow,
                                                                                    span: bytes(10676..10679),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Borrowed,
                                                                                    span: bytes(10681..10689),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: bytes,
                                                                                span: bytes(10690..10695),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Match {
                                                                    attrs: [],
                                                                    match_token: Match,
                                                                    expr: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: str,
                                                                                            span: bytes(10706..10709),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: from_utf8,
                                                                                            span: bytes(10711..10720),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: bytes,
                                                                                                span: bytes(10721..10726),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    brace_token: Brace,
                                                                    arms: [
                                                                        Arm {
                                                                            attrs: [],
                                                                            pat: Pat::TupleStruct {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Ok,
                                                                                                span: bytes(10746..10748),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: s,
                                                                                            span: bytes(10749..10750),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                            guard: None,
                                                                            fat_arrow_token: FatArrow,
                                                                            body: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Ok,
                                                                                                    span: bytes(10755..10757),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: s,
                                                                                                            span: bytes(10758..10759),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: into,
                                                                                            span: bytes(10760..10764),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                ],
                                                                            },
                                                                            comma: Some(
                                                                                Comma,
                                                                            ),
                                                                        },
                                                                        Arm {
                                                                            attrs: [],
                                                                            pat: Pat::TupleStruct {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Err,
                                                                                                span: bytes(10785..10788),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: e,
                                                                                            span: bytes(10789..10790),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                            guard: None,
                                                                            fat_arrow_token: FatArrow,
                                                                            body: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Err,
                                                                                                    span: bytes(10795..10798),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: e,
                                                                                                        span: bytes(10799..10800),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            comma: Some(
                                                                                Comma,
                                                                            ),
                                                                        },
                                                                    ],
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::TupleStruct {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Cow,
                                                                                    span: bytes(10830..10833),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Owned,
                                                                                    span: bytes(10835..10840),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: bytes,
                                                                                span: bytes(10841..10846),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Match {
                                                                    attrs: [],
                                                                    match_token: Match,
                                                                    expr: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: String,
                                                                                            span: bytes(10857..10863),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: from_utf8,
                                                                                            span: bytes(10865..10874),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: bytes,
                                                                                                span: bytes(10875..10880),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    brace_token: Brace,
                                                                    arms: [
                                                                        Arm {
                                                                            attrs: [],
                                                                            pat: Pat::TupleStruct {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Ok,
                                                                                                span: bytes(10900..10902),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: s,
                                                                                            span: bytes(10903..10904),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                            guard: None,
                                                                            fat_arrow_token: FatArrow,
                                                                            body: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Ok,
                                                                                                    span: bytes(10909..10911),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: s,
                                                                                                            span: bytes(10912..10913),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: into,
                                                                                            span: bytes(10914..10918),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                ],
                                                                            },
                                                                            comma: Some(
                                                                                Comma,
                                                                            ),
                                                                        },
                                                                        Arm {
                                                                            attrs: [],
                                                                            pat: Pat::TupleStruct {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Err,
                                                                                                span: bytes(10939..10942),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: e,
                                                                                            span: bytes(10943..10944),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                            guard: None,
                                                                            fat_arrow_token: FatArrow,
                                                                            body: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Err,
                                                                                                    span: bytes(10949..10952),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: e,
                                                                                                            span: bytes(10953..10954),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: utf8_error,
                                                                                            span: bytes(10955..10965),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                ],
                                                                            },
                                                                            comma: Some(
                                                                                Comma,
                                                                            ),
                                                                        },
                                                                    ],
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "decode_utf8_lossy",
                                    complete_name: "percent_encoding::PercentDecode::decode_utf8_lossy",
                                    import_name: MyPath {
                                        name: "percent_encoding",
                                        next: Some(
                                            MyPath {
                                                name: "PercentDecode",
                                                next: Some(
                                                    MyPath {
                                                        name: "decode_utf8_lossy",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#5}::decode_utf8_lossy",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(11196..11199),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(11200..11207),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(11208..11209),
                                                        },
                                                        Literal {
                                                            lit: "alloc",
                                                            span: bytes(11210..11217),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: decode_utf8_lossy,
                                                span: bytes(11231..11248),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: None,
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(11249..11253),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Cow,
                                                                    span: bytes(11258..11261),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(11262..11263),
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(11263..11264),
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: str,
                                                                                                span: bytes(11266..11269),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: decode_utf8_lossy,
                                                                            span: bytes(11281..11298),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(11299..11303),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: clone,
                                                                        span: bytes(11304..11309),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: into,
                                                                    span: bytes(11312..11316),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [],
                    },
                ],
                functions: [
                    FnItem {
                        fn_name: Name {
                            name: "percent_encode_byte",
                            complete_name: "percent_encoding::percent_encode_byte",
                            import_name: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "percent_encode_byte",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "percent_encode_byte",
                        item: Some(
                            ItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(2540..2546),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: percent_encode_byte,
                                        span: bytes(2555..2574),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: byte,
                                                        span: bytes(2575..2579),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u8,
                                                                    span: bytes(2581..2583),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: Some(
                                                Lifetime {
                                                    apostrophe: bytes(2589..2590),
                                                    ident: Ident {
                                                        sym: static,
                                                        span: bytes(2590..2596),
                                                    },
                                                },
                                            ),
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(2597..2600),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Item(
                                            Item::Static {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                static_token: Static,
                                                mutability: StaticMutability::None,
                                                ident: Ident {
                                                    sym: ENC_TABLE,
                                                    span: bytes(2614..2623),
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Array {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(2627..2629),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                        len: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 768,
                                                            },
                                                        },
                                                    },
                                                },
                                                eq_token: Eq,
                                                expr: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::ByteStr {
                                                        token: b"\
                                                              %00%01%02%03%04%05%06%07%08%09%0A%0B%0C%0D%0E%0F\
                                                              %10%11%12%13%14%15%16%17%18%19%1A%1B%1C%1D%1E%1F\
                                                              %20%21%22%23%24%25%26%27%28%29%2A%2B%2C%2D%2E%2F\
                                                              %30%31%32%33%34%35%36%37%38%39%3A%3B%3C%3D%3E%3F\
                                                              %40%41%42%43%44%45%46%47%48%49%4A%4B%4C%4D%4E%4F\
                                                              %50%51%52%53%54%55%56%57%58%59%5A%5B%5C%5D%5E%5F\
                                                              %60%61%62%63%64%65%66%67%68%69%6A%6B%6C%6D%6E%6F\
                                                              %70%71%72%73%74%75%76%77%78%79%7A%7B%7C%7D%7E%7F\
                                                              %80%81%82%83%84%85%86%87%88%89%8A%8B%8C%8D%8E%8F\
                                                              %90%91%92%93%94%95%96%97%98%99%9A%9B%9C%9D%9E%9F\
                                                              %A0%A1%A2%A3%A4%A5%A6%A7%A8%A9%AA%AB%AC%AD%AE%AF\
                                                              %B0%B1%B2%B3%B4%B5%B6%B7%B8%B9%BA%BB%BC%BD%BE%BF\
                                                              %C0%C1%C2%C3%C4%C5%C6%C7%C8%C9%CA%CB%CC%CD%CE%CF\
                                                              %D0%D1%D2%D3%D4%D5%D6%D7%D8%D9%DA%DB%DC%DD%DE%DF\
                                                              %E0%E1%E2%E3%E4%E5%E6%E7%E8%E9%EA%EB%EC%ED%EE%EF\
                                                              %F0%F1%F2%F3%F4%F5%F6%F7%F8%F9%FA%FB%FC%FD%FE%FF\
                                                              ",
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: index,
                                                    span: bytes(3556..3561),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: usize,
                                                                                span: bytes(3564..3569),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from,
                                                                                span: bytes(3571..3575),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: byte,
                                                                                    span: bytes(3576..3580),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        op: BinOp::Mul(
                                                            Star,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 3,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Unsafe {
                                                attrs: [],
                                                unsafe_token: Unsafe,
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: str,
                                                                                    span: bytes(3714..3717),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: from_utf8_unchecked,
                                                                                    span: bytes(3719..3738),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: None,
                                                                        expr: Expr::Index {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: ENC_TABLE,
                                                                                                span: bytes(3740..3749),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            bracket_token: Bracket,
                                                                            index: Expr::Range {
                                                                                attrs: [],
                                                                                start: Some(
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: index,
                                                                                                        span: bytes(3750..3755),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                limits: RangeLimits::HalfOpen(
                                                                                    DotDot,
                                                                                ),
                                                                                end: Some(
                                                                                    Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: index,
                                                                                                            span: bytes(3757..3762),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 3,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Static {
                                attrs: [],
                                vis: Visibility::Inherited,
                                static_token: Static,
                                mutability: StaticMutability::None,
                                ident: Ident {
                                    sym: ENC_TABLE,
                                    span: bytes(2614..2623),
                                },
                                colon_token: Colon,
                                ty: Type::Reference {
                                    and_token: And,
                                    lifetime: None,
                                    mutability: None,
                                    elem: Type::Array {
                                        bracket_token: Bracket,
                                        elem: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u8,
                                                            span: bytes(2627..2629),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        semi_token: Semi,
                                        len: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 768,
                                            },
                                        },
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::ByteStr {
                                        token: b"\
                                              %00%01%02%03%04%05%06%07%08%09%0A%0B%0C%0D%0E%0F\
                                              %10%11%12%13%14%15%16%17%18%19%1A%1B%1C%1D%1E%1F\
                                              %20%21%22%23%24%25%26%27%28%29%2A%2B%2C%2D%2E%2F\
                                              %30%31%32%33%34%35%36%37%38%39%3A%3B%3C%3D%3E%3F\
                                              %40%41%42%43%44%45%46%47%48%49%4A%4B%4C%4D%4E%4F\
                                              %50%51%52%53%54%55%56%57%58%59%5A%5B%5C%5D%5E%5F\
                                              %60%61%62%63%64%65%66%67%68%69%6A%6B%6C%6D%6E%6F\
                                              %70%71%72%73%74%75%76%77%78%79%7A%7B%7C%7D%7E%7F\
                                              %80%81%82%83%84%85%86%87%88%89%8A%8B%8C%8D%8E%8F\
                                              %90%91%92%93%94%95%96%97%98%99%9A%9B%9C%9D%9E%9F\
                                              %A0%A1%A2%A3%A4%A5%A6%A7%A8%A9%AA%AB%AC%AD%AE%AF\
                                              %B0%B1%B2%B3%B4%B5%B6%B7%B8%B9%BA%BB%BC%BD%BE%BF\
                                              %C0%C1%C2%C3%C4%C5%C6%C7%C8%C9%CA%CB%CC%CD%CE%CF\
                                              %D0%D1%D2%D3%D4%D5%D6%D7%D8%D9%DA%DB%DC%DD%DE%DF\
                                              %E0%E1%E2%E3%E4%E5%E6%E7%E8%E9%EA%EB%EC%ED%EE%EF\
                                              %F0%F1%F2%F3%F4%F5%F6%F7%F8%F9%FA%FB%FC%FD%FE%FF\
                                              ",
                                    },
                                },
                                semi_token: Semi,
                            },
                        ],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "percent_encode",
                            complete_name: "percent_encoding::percent_encode",
                            import_name: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "percent_encode",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "percent_encode",
                        item: Some(
                            ItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(4368..4374),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: percent_encode,
                                        span: bytes(4383..4397),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Lifetime(
                                                LifetimeParam {
                                                    attrs: [],
                                                    lifetime: Lifetime {
                                                        apostrophe: bytes(4398..4399),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(4399..4400),
                                                        },
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(4402..4407),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(4410..4411),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(4411..4412),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(4414..4416),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: ascii_set,
                                                        span: bytes(4419..4428),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(4431..4432),
                                                            ident: Ident {
                                                                sym: static,
                                                                span: bytes(4432..4438),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: AsciiSet,
                                                                        span: bytes(4439..4447),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: PercentEncode,
                                                            span: bytes(4452..4465),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(4466..4467),
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(4467..4468),
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: PercentEncode,
                                                                span: bytes(4476..4489),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: bytes,
                                                                span: bytes(4500..4505),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: input,
                                                                            span: bytes(4507..4512),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: ascii_set,
                                                                span: bytes(4522..4531),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ascii_set,
                                                                            span: bytes(4522..4531),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "utf8_percent_encode",
                            complete_name: "percent_encoding::utf8_percent_encode",
                            import_name: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "utf8_percent_encode",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "utf8_percent_encode",
                        item: Some(
                            ItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(4866..4872),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: utf8_percent_encode,
                                        span: bytes(4881..4900),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Lifetime(
                                                LifetimeParam {
                                                    attrs: [],
                                                    lifetime: Lifetime {
                                                        apostrophe: bytes(4901..4902),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(4902..4903),
                                                        },
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(4905..4910),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(4913..4914),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(4914..4915),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(4916..4919),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: ascii_set,
                                                        span: bytes(4921..4930),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(4933..4934),
                                                            ident: Ident {
                                                                sym: static,
                                                                span: bytes(4934..4940),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: AsciiSet,
                                                                        span: bytes(4941..4949),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: PercentEncode,
                                                            span: bytes(4954..4967),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(4968..4969),
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(4969..4970),
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: percent_encode,
                                                                    span: bytes(4978..4992),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: input,
                                                                            span: bytes(4993..4998),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: as_bytes,
                                                            span: bytes(4999..5007),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: ascii_set,
                                                                        span: bytes(5011..5020),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "percent_decode_str",
                            complete_name: "percent_encoding::percent_decode_str",
                            import_name: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "percent_decode_str",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "percent_decode_str",
                        item: Some(
                            ItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(7558..7564),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: percent_decode_str,
                                        span: bytes(7573..7591),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(7592..7597),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(7600..7603),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: PercentDecode,
                                                            span: bytes(7608..7621),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(7622..7623),
                                                                        ident: Ident {
                                                                            sym: _,
                                                                            span: bytes(7623..7624),
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: percent_decode,
                                                                    span: bytes(7632..7646),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: input,
                                                                            span: bytes(7647..7652),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: as_bytes,
                                                            span: bytes(7653..7661),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "percent_decode",
                            complete_name: "percent_encoding::percent_decode",
                            import_name: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "percent_decode",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "percent_decode",
                        item: Some(
                            ItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(8278..8284),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: percent_decode,
                                        span: bytes(8293..8307),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(8308..8313),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(8317..8319),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: PercentDecode,
                                                            span: bytes(8325..8338),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(8339..8340),
                                                                        ident: Ident {
                                                                            sym: _,
                                                                            span: bytes(8340..8341),
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: PercentDecode,
                                                                span: bytes(8349..8362),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: bytes,
                                                                span: bytes(8373..8378),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: input,
                                                                                span: bytes(8380..8385),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: iter,
                                                                span: bytes(8386..8390),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                    },
                                                    Comma,
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "after_percent_sign",
                            complete_name: "percent_encoding::after_percent_sign",
                            import_name: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "after_percent_sign",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "after_percent_sign",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: after_percent_sign,
                                        span: bytes(8539..8557),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: iter,
                                                        span: bytes(8558..8562),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: slice,
                                                                        span: bytes(8569..8574),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Iter,
                                                                        span: bytes(8576..8580),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Lifetime(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(8581..8582),
                                                                                    ident: Ident {
                                                                                        sym: _,
                                                                                        span: bytes(8582..8583),
                                                                                    },
                                                                                },
                                                                            ),
                                                                            Comma,
                                                                            GenericArgument::Type(
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u8,
                                                                                                    span: bytes(8585..8587),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Option,
                                                            span: bytes(8593..8599),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u8,
                                                                                        span: bytes(8600..8602),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: cloned_iter,
                                                    span: bytes(8618..8629),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: iter,
                                                                            span: bytes(8632..8636),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: clone,
                                                            span: bytes(8637..8642),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: h,
                                                    span: bytes(8654..8655),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: char,
                                                                                    span: bytes(8658..8662),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: from,
                                                                                    span: bytes(8664..8668),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Try {
                                                                            attrs: [],
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: cloned_iter,
                                                                                                    span: bytes(8670..8681),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: next,
                                                                                    span: bytes(8682..8686),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            question_token: Question,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: to_digit,
                                                                span: bytes(8691..8699),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 16,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: l,
                                                    span: bytes(8714..8715),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: char,
                                                                                    span: bytes(8718..8722),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: from,
                                                                                    span: bytes(8724..8728),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Try {
                                                                            attrs: [],
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: cloned_iter,
                                                                                                    span: bytes(8730..8741),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: next,
                                                                                    span: bytes(8742..8746),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            question_token: Question,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: to_digit,
                                                                span: bytes(8751..8759),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 16,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Unary {
                                                    attrs: [],
                                                    op: UnOp::Deref(
                                                        Star,
                                                    ),
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: iter,
                                                                        span: bytes(8771..8775),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                eq_token: Eq,
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cloned_iter,
                                                                    span: bytes(8778..8789),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Some,
                                                                    span: bytes(8795..8799),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: h,
                                                                                    span: bytes(8800..8801),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(8805..8807),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            op: BinOp::Mul(
                                                                Star,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0x10,
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Add(
                                                            Plus,
                                                        ),
                                                        right: Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: l,
                                                                                span: bytes(8817..8818),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u8,
                                                                                span: bytes(8822..8824),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "decode_utf8_lossy",
                            complete_name: "percent_encoding::decode_utf8_lossy",
                            import_name: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "decode_utf8_lossy",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "decode_utf8_lossy",
                        item: Some(
                            ItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg,
                                                            span: bytes(11443..11446),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(11447..11454),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(11455..11456),
                                                },
                                                Literal {
                                                    lit: "alloc",
                                                    span: bytes(11457..11464),
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: allow,
                                                            span: bytes(11469..11474),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: ambiguous_wide_pointer_comparisons,
                                                    span: bytes(11475..11509),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: decode_utf8_lossy,
                                        span: bytes(11515..11532),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(11533..11538),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Cow,
                                                                    span: bytes(11540..11543),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(11544..11545),
                                                                                ident: Ident {
                                                                                    sym: _,
                                                                                    span: bytes(11545..11546),
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Slice {
                                                                                bracket_token: Bracket,
                                                                                elem: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u8,
                                                                                                    span: bytes(11549..11551),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Cow,
                                                            span: bytes(11558..11561),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(11562..11563),
                                                                        ident: Ident {
                                                                            sym: _,
                                                                            span: bytes(11563..11564),
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: str,
                                                                                        span: bytes(11566..11569),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Match {
                                                attrs: [],
                                                match_token: Match,
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: input,
                                                                    span: bytes(11668..11673),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                arms: [
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::TupleStruct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Cow,
                                                                            span: bytes(11684..11687),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Borrowed,
                                                                            span: bytes(11689..11697),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: bytes,
                                                                        span: bytes(11698..11703),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: String,
                                                                                span: bytes(11708..11714),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from_utf8_lossy,
                                                                                span: bytes(11716..11731),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: bytes,
                                                                                    span: bytes(11732..11737),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::TupleStruct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Cow,
                                                                            span: bytes(11748..11751),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Owned,
                                                                            span: bytes(11753..11758),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: bytes,
                                                                        span: bytes(11759..11764),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::Match {
                                                                            attrs: [],
                                                                            match_token: Match,
                                                                            expr: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: String,
                                                                                                    span: bytes(11789..11795),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: from_utf8_lossy,
                                                                                                    span: bytes(11797..11812),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Reference {
                                                                                        attrs: [],
                                                                                        and_token: And,
                                                                                        mutability: None,
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: bytes,
                                                                                                            span: bytes(11814..11819),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            brace_token: Brace,
                                                                            arms: [
                                                                                Arm {
                                                                                    attrs: [],
                                                                                    pat: Pat::TupleStruct {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Cow,
                                                                                                        span: bytes(11839..11842),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Borrowed,
                                                                                                        span: bytes(11844..11852),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        elems: [
                                                                                            Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: utf8,
                                                                                                    span: bytes(11853..11857),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    guard: None,
                                                                                    fat_arrow_token: FatArrow,
                                                                                    body: Expr::Block {
                                                                                        attrs: [],
                                                                                        label: None,
                                                                                        block: Block {
                                                                                            brace_token: Brace,
                                                                                            stmts: [
                                                                                                Stmt::Local {
                                                                                                    attrs: [],
                                                                                                    let_token: Let,
                                                                                                    pat: Pat::Type {
                                                                                                        attrs: [],
                                                                                                        pat: Pat::Ident {
                                                                                                            attrs: [],
                                                                                                            by_ref: None,
                                                                                                            mutability: None,
                                                                                                            ident: Ident {
                                                                                                                sym: raw_utf8,
                                                                                                                span: bytes(12365..12373),
                                                                                                            },
                                                                                                            subpat: None,
                                                                                                        },
                                                                                                        colon_token: Colon,
                                                                                                        ty: Type::Ptr {
                                                                                                            star_token: Star,
                                                                                                            const_token: Some(
                                                                                                                Const,
                                                                                                            ),
                                                                                                            mutability: None,
                                                                                                            elem: Type::Slice {
                                                                                                                bracket_token: Bracket,
                                                                                                                elem: Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: u8,
                                                                                                                                    span: bytes(12383..12385),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    init: Some(
                                                                                                        LocalInit {
                                                                                                            eq_token: Eq,
                                                                                                            expr: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: utf8,
                                                                                                                                    span: bytes(12389..12393),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: as_bytes,
                                                                                                                    span: bytes(12394..12402),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [],
                                                                                                            },
                                                                                                            diverge: None,
                                                                                                        },
                                                                                                    ),
                                                                                                    semi_token: Semi,
                                                                                                },
                                                                                                Stmt::Macro {
                                                                                                    attrs: [],
                                                                                                    mac: Macro {
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: debug_assert,
                                                                                                                        span: bytes(12426..12438),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                        bang_token: Not,
                                                                                                        delimiter: MacroDelimiter::Paren(
                                                                                                            Paren,
                                                                                                        ),
                                                                                                        tokens: TokenStream [
                                                                                                            Ident {
                                                                                                                sym: raw_utf8,
                                                                                                                span: bytes(12440..12448),
                                                                                                            },
                                                                                                            Punct {
                                                                                                                char: '=',
                                                                                                                spacing: Joint,
                                                                                                                span: bytes(12449..12450),
                                                                                                            },
                                                                                                            Punct {
                                                                                                                char: '=',
                                                                                                                spacing: Alone,
                                                                                                                span: bytes(12450..12451),
                                                                                                            },
                                                                                                            Punct {
                                                                                                                char: '&',
                                                                                                                spacing: Joint,
                                                                                                                span: bytes(12452..12453),
                                                                                                            },
                                                                                                            Punct {
                                                                                                                char: '*',
                                                                                                                spacing: Alone,
                                                                                                                span: bytes(12453..12454),
                                                                                                            },
                                                                                                            Ident {
                                                                                                                sym: bytes,
                                                                                                                span: bytes(12454..12459),
                                                                                                            },
                                                                                                            Ident {
                                                                                                                sym: as,
                                                                                                                span: bytes(12460..12462),
                                                                                                            },
                                                                                                            Punct {
                                                                                                                char: '*',
                                                                                                                spacing: Alone,
                                                                                                                span: bytes(12463..12464),
                                                                                                            },
                                                                                                            Ident {
                                                                                                                sym: const,
                                                                                                                span: bytes(12464..12469),
                                                                                                            },
                                                                                                            Group {
                                                                                                                delimiter: Bracket,
                                                                                                                stream: TokenStream [
                                                                                                                    Ident {
                                                                                                                        sym: u8,
                                                                                                                        span: bytes(12471..12473),
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: bytes(12470..12474),
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    semi_token: Some(
                                                                                                        Semi,
                                                                                                    ),
                                                                                                },
                                                                                                Stmt::Expr(
                                                                                                    Expr::Call {
                                                                                                        attrs: [],
                                                                                                        func: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: Cow,
                                                                                                                            span: bytes(12706..12709),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                    PathSep,
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: Owned,
                                                                                                                            span: bytes(12711..12716),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Unsafe {
                                                                                                                attrs: [],
                                                                                                                unsafe_token: Unsafe,
                                                                                                                block: Block {
                                                                                                                    brace_token: Brace,
                                                                                                                    stmts: [
                                                                                                                        Stmt::Expr(
                                                                                                                            Expr::Call {
                                                                                                                                attrs: [],
                                                                                                                                func: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: String,
                                                                                                                                                    span: bytes(12726..12732),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                            PathSep,
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: from_utf8_unchecked,
                                                                                                                                                    span: bytes(12734..12753),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                paren_token: Paren,
                                                                                                                                args: [
                                                                                                                                    Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: bytes,
                                                                                                                                                        span: bytes(12754..12759),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                            None,
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    None,
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    comma: None,
                                                                                },
                                                                                Arm {
                                                                                    attrs: [],
                                                                                    pat: Pat::TupleStruct {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Cow,
                                                                                                        span: bytes(12798..12801),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Owned,
                                                                                                        span: bytes(12803..12808),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        elems: [
                                                                                            Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: s,
                                                                                                    span: bytes(12809..12810),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    guard: None,
                                                                                    fat_arrow_token: FatArrow,
                                                                                    body: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Cow,
                                                                                                            span: bytes(12815..12818),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Owned,
                                                                                                            span: bytes(12820..12825),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: s,
                                                                                                                span: bytes(12826..12827),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    comma: Some(
                                                                                        Comma,
                                                                                    ),
                                                                                },
                                                                            ],
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                        comma: None,
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                ],
                traits: [],
                use_trees: [
                    UseTree {
                        use_name: "Cow",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "alloc",
                            next: Some(
                                MyPath {
                                    name: "borrow",
                                    next: Some(
                                        MyPath {
                                            name: "Cow",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "ToOwned",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "alloc",
                            next: Some(
                                MyPath {
                                    name: "borrow",
                                    next: Some(
                                        MyPath {
                                            name: "ToOwned",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "String",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "alloc",
                            next: Some(
                                MyPath {
                                    name: "string",
                                    next: Some(
                                        MyPath {
                                            name: "String",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "Vec",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "alloc",
                            next: Some(
                                MyPath {
                                    name: "vec",
                                    next: Some(
                                        MyPath {
                                            name: "Vec",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "fmt",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "core",
                            next: Some(
                                MyPath {
                                    name: "fmt",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "slice",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "core",
                            next: Some(
                                MyPath {
                                    name: "slice",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "str",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "core",
                            next: Some(
                                MyPath {
                                    name: "str",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "AsciiSet",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "percent_encoding",
                            next: Some(
                                MyPath {
                                    name: "ascii_set",
                                    next: Some(
                                        MyPath {
                                            name: "AsciiSet",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: PubT,
                    },
                    UseTree {
                        use_name: "CONTROLS",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "self",
                            next: Some(
                                MyPath {
                                    name: "ascii_set",
                                    next: Some(
                                        MyPath {
                                            name: "CONTROLS",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: PubT,
                    },
                    UseTree {
                        use_name: "NON_ALPHANUMERIC",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "self",
                            next: Some(
                                MyPath {
                                    name: "ascii_set",
                                    next: Some(
                                        MyPath {
                                            name: "NON_ALPHANUMERIC",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: PubT,
                    },
                ],
            },
             sub_mods: [
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "tests",
                            mod_tree: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "tests",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "",
                            parent_directory_path: "",
                            mod_file_directory_path: None,
                            visibility: PubS,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: super,
                                                    span: bytes(12897..12902),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Glob(
                                                    UseGlob {
                                                        star_token: Star,
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        mods: [],
                        statics: [],
                        types: [],
                        structs: [],
                        enums: [],
                        unions: [],
                        impls: [],
                        functions: [],
                        traits: [],
                        use_trees: [
                            UseTree {
                                use_name: "*",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "super",
                                    next: Some(
                                        MyPath {
                                            name: "*",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                        ],
                    },
                     sub_mods: []
                     }
                    ,
                },
                RefCell {
                    value: ModContext {
                     mod_info: Fn(
                        FunctionModInfo {
                            function_name: "percent_encode_byte",
                            mod_tree: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "percent_encode_byte",
                                        next: None,
                                    },
                                ),
                            },
                            visibility: Pri,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [],
                        mods: [],
                        statics: [
                            StaticItem {
                                item: Some(
                                    ItemStatic {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        static_token: Static,
                                        mutability: StaticMutability::None,
                                        ident: Ident {
                                            sym: ENC_TABLE,
                                            span: bytes(2614..2623),
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Array {
                                                bracket_token: Bracket,
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u8,
                                                                    span: bytes(2627..2629),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                                len: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 768,
                                                    },
                                                },
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::ByteStr {
                                                token: b"\
                                                      %00%01%02%03%04%05%06%07%08%09%0A%0B%0C%0D%0E%0F\
                                                      %10%11%12%13%14%15%16%17%18%19%1A%1B%1C%1D%1E%1F\
                                                      %20%21%22%23%24%25%26%27%28%29%2A%2B%2C%2D%2E%2F\
                                                      %30%31%32%33%34%35%36%37%38%39%3A%3B%3C%3D%3E%3F\
                                                      %40%41%42%43%44%45%46%47%48%49%4A%4B%4C%4D%4E%4F\
                                                      %50%51%52%53%54%55%56%57%58%59%5A%5B%5C%5D%5E%5F\
                                                      %60%61%62%63%64%65%66%67%68%69%6A%6B%6C%6D%6E%6F\
                                                      %70%71%72%73%74%75%76%77%78%79%7A%7B%7C%7D%7E%7F\
                                                      %80%81%82%83%84%85%86%87%88%89%8A%8B%8C%8D%8E%8F\
                                                      %90%91%92%93%94%95%96%97%98%99%9A%9B%9C%9D%9E%9F\
                                                      %A0%A1%A2%A3%A4%A5%A6%A7%A8%A9%AA%AB%AC%AD%AE%AF\
                                                      %B0%B1%B2%B3%B4%B5%B6%B7%B8%B9%BA%BB%BC%BD%BE%BF\
                                                      %C0%C1%C2%C3%C4%C5%C6%C7%C8%C9%CA%CB%CC%CD%CE%CF\
                                                      %D0%D1%D2%D3%D4%D5%D6%D7%D8%D9%DA%DB%DC%DD%DE%DF\
                                                      %E0%E1%E2%E3%E4%E5%E6%E7%E8%E9%EA%EB%EC%ED%EE%EF\
                                                      %F0%F1%F2%F3%F4%F5%F6%F7%F8%F9%FA%FB%FC%FD%FE%FF\
                                                      ",
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        types: [],
                        structs: [],
                        enums: [],
                        unions: [],
                        impls: [],
                        functions: [],
                        traits: [],
                        use_trees: [],
                    },
                     sub_mods: []
                     }
                    ,
                },
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "ascii_set",
                            mod_tree: MyPath {
                                name: "percent_encoding",
                                next: Some(
                                    MyPath {
                                        name: "ascii_set",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "/home/abezbm/rust-utgen-test-crates/rust-url/percent_encoding/src/ascii_set.rs",
                            parent_directory_path: "/home/abezbm/rust-utgen-test-crates/rust-url/percent_encoding/src",
                            mod_file_directory_path: None,
                            visibility: PubS,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [
                            ConstItem {
                                item: Some(
                                    ItemConst {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: ASCII_RANGE_LEN,
                                            span: bytes(17487..17502),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(17504..17509),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 0x80,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            ConstItem {
                                item: Some(
                                    ItemConst {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: BITS_PER_CHUNK,
                                            span: bytes(17525..17539),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(17541..17546),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 8,
                                                },
                                            },
                                            op: BinOp::Mul(
                                                Star,
                                            ),
                                            right: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: mem,
                                                                    span: bytes(17553..17556),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: size_of,
                                                                    span: bytes(17558..17565),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: Some(
                                                                        PathSep,
                                                                    ),
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Chunk,
                                                                                                span: bytes(17568..17573),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [],
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            ConstItem {
                                item: Some(
                                    ItemConst {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        const_token: Const,
                                        ident: Ident {
                                            sym: CONTROLS,
                                            span: bytes(19560..19568),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: AsciiSet,
                                                                span: bytes(19571..19579),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Reference {
                                            attrs: [],
                                            and_token: And,
                                            mutability: None,
                                            expr: Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: AsciiSet,
                                                                span: bytes(19583..19591),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: mask,
                                                                span: bytes(19598..19602),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Array {
                                                            attrs: [],
                                                            bracket_token: Bracket,
                                                            elems: [
                                                                Expr::Unary {
                                                                    attrs: [],
                                                                    op: UnOp::Not(
                                                                        Not,
                                                                    ),
                                                                    expr: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 0_u32,
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                                Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 0,
                                                                    },
                                                                },
                                                                Comma,
                                                                Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 0,
                                                                    },
                                                                },
                                                                Comma,
                                                                Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                    op: BinOp::Shl(
                                                                        Shl,
                                                                    ),
                                                                    right: Expr::Paren {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 0x7F_u32,
                                                                                },
                                                                            },
                                                                            op: BinOp::Rem(
                                                                                Percent,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 32,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: PubT,
                            },
                            ConstItem {
                                item: Some(
                                    ItemConst {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        const_token: Const,
                                        ident: Ident {
                                            sym: NON_ALPHANUMERIC,
                                            span: bytes(20249..20265),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: AsciiSet,
                                                                span: bytes(20268..20276),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Reference {
                                            attrs: [],
                                            and_token: And,
                                            mutability: None,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::MethodCall {
                                                                                                            attrs: [],
                                                                                                            receiver: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::MethodCall {
                                                                                                                    attrs: [],
                                                                                                                    receiver: Expr::MethodCall {
                                                                                                                        attrs: [],
                                                                                                                        receiver: Expr::MethodCall {
                                                                                                                            attrs: [],
                                                                                                                            receiver: Expr::MethodCall {
                                                                                                                                attrs: [],
                                                                                                                                receiver: Expr::MethodCall {
                                                                                                                                    attrs: [],
                                                                                                                                    receiver: Expr::MethodCall {
                                                                                                                                        attrs: [],
                                                                                                                                        receiver: Expr::MethodCall {
                                                                                                                                            attrs: [],
                                                                                                                                            receiver: Expr::MethodCall {
                                                                                                                                                attrs: [],
                                                                                                                                                receiver: Expr::MethodCall {
                                                                                                                                                    attrs: [],
                                                                                                                                                    receiver: Expr::MethodCall {
                                                                                                                                                        attrs: [],
                                                                                                                                                        receiver: Expr::MethodCall {
                                                                                                                                                            attrs: [],
                                                                                                                                                            receiver: Expr::MethodCall {
                                                                                                                                                                attrs: [],
                                                                                                                                                                receiver: Expr::MethodCall {
                                                                                                                                                                    attrs: [],
                                                                                                                                                                    receiver: Expr::MethodCall {
                                                                                                                                                                        attrs: [],
                                                                                                                                                                        receiver: Expr::MethodCall {
                                                                                                                                                                            attrs: [],
                                                                                                                                                                            receiver: Expr::MethodCall {
                                                                                                                                                                                attrs: [],
                                                                                                                                                                                receiver: Expr::Path {
                                                                                                                                                                                    attrs: [],
                                                                                                                                                                                    qself: None,
                                                                                                                                                                                    path: Path {
                                                                                                                                                                                        leading_colon: None,
                                                                                                                                                                                        segments: [
                                                                                                                                                                                            PathSegment {
                                                                                                                                                                                                ident: Ident {
                                                                                                                                                                                                    sym: CONTROLS,
                                                                                                                                                                                                    span: bytes(20280..20288),
                                                                                                                                                                                                },
                                                                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                                                                            },
                                                                                                                                                                                        ],
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                                dot_token: Dot,
                                                                                                                                                                                method: Ident {
                                                                                                                                                                                    sym: add,
                                                                                                                                                                                    span: bytes(20294..20297),
                                                                                                                                                                                },
                                                                                                                                                                                turbofish: None,
                                                                                                                                                                                paren_token: Paren,
                                                                                                                                                                                args: [
                                                                                                                                                                                    Expr::Lit {
                                                                                                                                                                                        attrs: [],
                                                                                                                                                                                        lit: Lit::Byte {
                                                                                                                                                                                            token: b' ',
                                                                                                                                                                                        },
                                                                                                                                                                                    },
                                                                                                                                                                                ],
                                                                                                                                                                            },
                                                                                                                                                                            dot_token: Dot,
                                                                                                                                                                            method: Ident {
                                                                                                                                                                                sym: add,
                                                                                                                                                                                span: bytes(20309..20312),
                                                                                                                                                                            },
                                                                                                                                                                            turbofish: None,
                                                                                                                                                                            paren_token: Paren,
                                                                                                                                                                            args: [
                                                                                                                                                                                Expr::Lit {
                                                                                                                                                                                    attrs: [],
                                                                                                                                                                                    lit: Lit::Byte {
                                                                                                                                                                                        token: b'!',
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                            ],
                                                                                                                                                                        },
                                                                                                                                                                        dot_token: Dot,
                                                                                                                                                                        method: Ident {
                                                                                                                                                                            sym: add,
                                                                                                                                                                            span: bytes(20324..20327),
                                                                                                                                                                        },
                                                                                                                                                                        turbofish: None,
                                                                                                                                                                        paren_token: Paren,
                                                                                                                                                                        args: [
                                                                                                                                                                            Expr::Lit {
                                                                                                                                                                                attrs: [],
                                                                                                                                                                                lit: Lit::Byte {
                                                                                                                                                                                    token: b'"',
                                                                                                                                                                                },
                                                                                                                                                                            },
                                                                                                                                                                        ],
                                                                                                                                                                    },
                                                                                                                                                                    dot_token: Dot,
                                                                                                                                                                    method: Ident {
                                                                                                                                                                        sym: add,
                                                                                                                                                                        span: bytes(20339..20342),
                                                                                                                                                                    },
                                                                                                                                                                    turbofish: None,
                                                                                                                                                                    paren_token: Paren,
                                                                                                                                                                    args: [
                                                                                                                                                                        Expr::Lit {
                                                                                                                                                                            attrs: [],
                                                                                                                                                                            lit: Lit::Byte {
                                                                                                                                                                                token: b'#',
                                                                                                                                                                            },
                                                                                                                                                                        },
                                                                                                                                                                    ],
                                                                                                                                                                },
                                                                                                                                                                dot_token: Dot,
                                                                                                                                                                method: Ident {
                                                                                                                                                                    sym: add,
                                                                                                                                                                    span: bytes(20354..20357),
                                                                                                                                                                },
                                                                                                                                                                turbofish: None,
                                                                                                                                                                paren_token: Paren,
                                                                                                                                                                args: [
                                                                                                                                                                    Expr::Lit {
                                                                                                                                                                        attrs: [],
                                                                                                                                                                        lit: Lit::Byte {
                                                                                                                                                                            token: b'$',
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                ],
                                                                                                                                                            },
                                                                                                                                                            dot_token: Dot,
                                                                                                                                                            method: Ident {
                                                                                                                                                                sym: add,
                                                                                                                                                                span: bytes(20369..20372),
                                                                                                                                                            },
                                                                                                                                                            turbofish: None,
                                                                                                                                                            paren_token: Paren,
                                                                                                                                                            args: [
                                                                                                                                                                Expr::Lit {
                                                                                                                                                                    attrs: [],
                                                                                                                                                                    lit: Lit::Byte {
                                                                                                                                                                        token: b'%',
                                                                                                                                                                    },
                                                                                                                                                                },
                                                                                                                                                            ],
                                                                                                                                                        },
                                                                                                                                                        dot_token: Dot,
                                                                                                                                                        method: Ident {
                                                                                                                                                            sym: add,
                                                                                                                                                            span: bytes(20384..20387),
                                                                                                                                                        },
                                                                                                                                                        turbofish: None,
                                                                                                                                                        paren_token: Paren,
                                                                                                                                                        args: [
                                                                                                                                                            Expr::Lit {
                                                                                                                                                                attrs: [],
                                                                                                                                                                lit: Lit::Byte {
                                                                                                                                                                    token: b'&',
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                    },
                                                                                                                                                    dot_token: Dot,
                                                                                                                                                    method: Ident {
                                                                                                                                                        sym: add,
                                                                                                                                                        span: bytes(20399..20402),
                                                                                                                                                    },
                                                                                                                                                    turbofish: None,
                                                                                                                                                    paren_token: Paren,
                                                                                                                                                    args: [
                                                                                                                                                        Expr::Lit {
                                                                                                                                                            attrs: [],
                                                                                                                                                            lit: Lit::Byte {
                                                                                                                                                                token: b'\'',
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                    ],
                                                                                                                                                },
                                                                                                                                                dot_token: Dot,
                                                                                                                                                method: Ident {
                                                                                                                                                    sym: add,
                                                                                                                                                    span: bytes(20415..20418),
                                                                                                                                                },
                                                                                                                                                turbofish: None,
                                                                                                                                                paren_token: Paren,
                                                                                                                                                args: [
                                                                                                                                                    Expr::Lit {
                                                                                                                                                        attrs: [],
                                                                                                                                                        lit: Lit::Byte {
                                                                                                                                                            token: b'(',
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                ],
                                                                                                                                            },
                                                                                                                                            dot_token: Dot,
                                                                                                                                            method: Ident {
                                                                                                                                                sym: add,
                                                                                                                                                span: bytes(20430..20433),
                                                                                                                                            },
                                                                                                                                            turbofish: None,
                                                                                                                                            paren_token: Paren,
                                                                                                                                            args: [
                                                                                                                                                Expr::Lit {
                                                                                                                                                    attrs: [],
                                                                                                                                                    lit: Lit::Byte {
                                                                                                                                                        token: b')',
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                        dot_token: Dot,
                                                                                                                                        method: Ident {
                                                                                                                                            sym: add,
                                                                                                                                            span: bytes(20445..20448),
                                                                                                                                        },
                                                                                                                                        turbofish: None,
                                                                                                                                        paren_token: Paren,
                                                                                                                                        args: [
                                                                                                                                            Expr::Lit {
                                                                                                                                                attrs: [],
                                                                                                                                                lit: Lit::Byte {
                                                                                                                                                    token: b'*',
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                    dot_token: Dot,
                                                                                                                                    method: Ident {
                                                                                                                                        sym: add,
                                                                                                                                        span: bytes(20460..20463),
                                                                                                                                    },
                                                                                                                                    turbofish: None,
                                                                                                                                    paren_token: Paren,
                                                                                                                                    args: [
                                                                                                                                        Expr::Lit {
                                                                                                                                            attrs: [],
                                                                                                                                            lit: Lit::Byte {
                                                                                                                                                token: b'+',
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                                dot_token: Dot,
                                                                                                                                method: Ident {
                                                                                                                                    sym: add,
                                                                                                                                    span: bytes(20475..20478),
                                                                                                                                },
                                                                                                                                turbofish: None,
                                                                                                                                paren_token: Paren,
                                                                                                                                args: [
                                                                                                                                    Expr::Lit {
                                                                                                                                        attrs: [],
                                                                                                                                        lit: Lit::Byte {
                                                                                                                                            token: b',',
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                            dot_token: Dot,
                                                                                                                            method: Ident {
                                                                                                                                sym: add,
                                                                                                                                span: bytes(20490..20493),
                                                                                                                            },
                                                                                                                            turbofish: None,
                                                                                                                            paren_token: Paren,
                                                                                                                            args: [
                                                                                                                                Expr::Lit {
                                                                                                                                    attrs: [],
                                                                                                                                    lit: Lit::Byte {
                                                                                                                                        token: b'-',
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                        dot_token: Dot,
                                                                                                                        method: Ident {
                                                                                                                            sym: add,
                                                                                                                            span: bytes(20505..20508),
                                                                                                                        },
                                                                                                                        turbofish: None,
                                                                                                                        paren_token: Paren,
                                                                                                                        args: [
                                                                                                                            Expr::Lit {
                                                                                                                                attrs: [],
                                                                                                                                lit: Lit::Byte {
                                                                                                                                    token: b'.',
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                    dot_token: Dot,
                                                                                                                    method: Ident {
                                                                                                                        sym: add,
                                                                                                                        span: bytes(20520..20523),
                                                                                                                    },
                                                                                                                    turbofish: None,
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [
                                                                                                                        Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Byte {
                                                                                                                                token: b'/',
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: add,
                                                                                                                    span: bytes(20535..20538),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Lit {
                                                                                                                        attrs: [],
                                                                                                                        lit: Lit::Byte {
                                                                                                                            token: b':',
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            method: Ident {
                                                                                                                sym: add,
                                                                                                                span: bytes(20550..20553),
                                                                                                            },
                                                                                                            turbofish: None,
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Byte {
                                                                                                                        token: b';',
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: add,
                                                                                                            span: bytes(20565..20568),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Byte {
                                                                                                                    token: b'<',
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: add,
                                                                                                        span: bytes(20580..20583),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Byte {
                                                                                                                token: b'=',
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: add,
                                                                                                    span: bytes(20595..20598),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Byte {
                                                                                                            token: b'>',
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: add,
                                                                                                span: bytes(20610..20613),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Byte {
                                                                                                        token: b'?',
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: add,
                                                                                            span: bytes(20625..20628),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Byte {
                                                                                                    token: b'@',
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: add,
                                                                                        span: bytes(20640..20643),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Byte {
                                                                                                token: b'[',
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: add,
                                                                                    span: bytes(20655..20658),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Byte {
                                                                                            token: b'\\',
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: add,
                                                                                span: bytes(20671..20674),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b']',
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: add,
                                                                            span: bytes(20686..20689),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Byte {
                                                                                    token: b'^',
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: add,
                                                                        span: bytes(20701..20704),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'_',
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: add,
                                                                    span: bytes(20716..20719),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Byte {
                                                                            token: b'`',
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: add,
                                                                span: bytes(20731..20734),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Byte {
                                                                        token: b'{',
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: add,
                                                            span: bytes(20746..20749),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Byte {
                                                                    token: b'|',
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: add,
                                                        span: bytes(20761..20764),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Byte {
                                                                token: b'}',
                                                            },
                                                        },
                                                    ],
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: add,
                                                    span: bytes(20776..20779),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Byte {
                                                            token: b'~',
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: PubT,
                            },
                        ],
                        trait_aliases: [],
                        uses: [
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: core,
                                                    span: bytes(16681..16685),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: mem,
                                                                        span: bytes(16688..16691),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: ops,
                                                                        span: bytes(16693..16696),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        mods: [
                            ModItem {
                                mod_name: "tests",
                                file_name: None,
                                item: Some(
                                    ItemMod {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(20790..20793),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: test,
                                                            span: bytes(20794..20798),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        unsafety: None,
                                        mod_token: Mod,
                                        ident: Ident {
                                            sym: tests,
                                            span: bytes(20805..20810),
                                        },
                                        content: Some(
                                            (
                                                Brace,
                                                [],
                                            ),
                                        ),
                                        semi: None,
                                    },
                                ),
                                inside_items: [
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: super,
                                                    span: bytes(20821..20826),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Glob(
                                                    UseGlob {
                                                        star_token: Star,
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ],
                                visibility: Pri,
                            },
                        ],
                        statics: [],
                        types: [
                            TypeItem {
                                item: Some(
                                    ItemType {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Chunk,
                                            span: bytes(17467..17472),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(17475..17478),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        structs: [
                            StructItem {
                                struct_name: Name {
                                    name: "AsciiSet",
                                    complete_name: "percent_encoding::ascii_set::AsciiSet",
                                    import_name: MyPath {
                                        name: "percent_encoding",
                                        next: Some(
                                            MyPath {
                                                name: "ascii_set",
                                                next: Some(
                                                    MyPath {
                                                        name: "AsciiSet",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemStruct {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: derive,
                                                                    span: bytes(17354..17360),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: Debug,
                                                            span: bytes(17361..17366),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(17366..17367),
                                                        },
                                                        Ident {
                                                            sym: PartialEq,
                                                            span: bytes(17368..17377),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(17377..17378),
                                                        },
                                                        Ident {
                                                            sym: Eq,
                                                            span: bytes(17379..17381),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: AsciiSet,
                                            span: bytes(17395..17403),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        fields: Fields::Named {
                                            brace_token: Brace,
                                            named: [
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: mask,
                                                            span: bytes(17410..17414),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Array {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Chunk,
                                                                            span: bytes(17417..17422),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                        len: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: ASCII_RANGE_LEN,
                                                                                span: bytes(17424..17439),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Div(
                                                                Slash,
                                                            ),
                                                            right: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: BITS_PER_CHUNK,
                                                                                span: bytes(17442..17456),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                                Comma,
                                            ],
                                        },
                                        semi_token: None,
                                    },
                                ),
                                visibility: PubT,
                                relative_types: [
                                    "ASCII_RANGE_LEN",
                                    "BITS_PER_CHUNK",
                                    "Chunk",
                                ],
                            },
                        ],
                        enums: [],
                        unions: [],
                        impls: [
                            ImplItem {
                                impl_num: 0,
                                struct_name: Name {
                                    name: "AsciiSet",
                                    complete_name: "percent_encoding::ascii_set::AsciiSet",
                                    import_name: MyPath {
                                        name: "percent_encoding",
                                        next: Some(
                                            MyPath {
                                                name: "ascii_set",
                                                next: Some(
                                                    MyPath {
                                                        name: "AsciiSet",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: None,
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: None,
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: AsciiSet,
                                                            span: bytes(17584..17592),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [
                                    ImplConstItem {
                                        item: Some(
                                            ImplItemConst {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                const_token: Const,
                                                ident: Ident {
                                                    sym: EMPTY,
                                                    span: bytes(17631..17636),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: AsciiSet,
                                                                    span: bytes(17638..17646),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                eq_token: Eq,
                                                expr: Expr::Struct {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: AsciiSet,
                                                                    span: bytes(17649..17657),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    brace_token: Brace,
                                                    fields: [
                                                        FieldValue {
                                                            attrs: [],
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: mask,
                                                                    span: bytes(17668..17672),
                                                                },
                                                            ),
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            expr: Expr::Repeat {
                                                                attrs: [],
                                                                bracket_token: Bracket,
                                                                expr: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 0,
                                                                    },
                                                                },
                                                                semi_token: Semi,
                                                                len: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: ASCII_RANGE_LEN,
                                                                                        span: bytes(17678..17693),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Div(
                                                                        Slash,
                                                                    ),
                                                                    right: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: BITS_PER_CHUNK,
                                                                                        span: bytes(17696..17710),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        Comma,
                                                    ],
                                                    dot2_token: None,
                                                    rest: None,
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: PubT,
                                    },
                                ],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "contains",
                                            complete_name: "percent_encoding::ascii_set::AsciiSet::contains",
                                            import_name: MyPath {
                                                name: "percent_encoding",
                                                next: Some(
                                                    MyPath {
                                                        name: "ascii_set",
                                                        next: Some(
                                                            MyPath {
                                                                name: "AsciiSet",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "contains",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::contains",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Restricted {
                                                    pub_token: Pub,
                                                    paren_token: Paren,
                                                    in_token: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: crate,
                                                                    span: bytes(17824..17829),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: Some(
                                                        Const,
                                                    ),
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: contains,
                                                        span: bytes(17840..17848),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(17850..17854),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: byte,
                                                                        span: bytes(17856..17860),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(17862..17864),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: bool,
                                                                            span: bytes(17869..17873),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: chunk,
                                                                    span: bytes(17888..17893),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Index {
                                                                        attrs: [],
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(17896..17900),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: mask,
                                                                                    span: bytes(17901..17905),
                                                                                },
                                                                            ),
                                                                        },
                                                                        bracket_token: Bracket,
                                                                        index: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: byte,
                                                                                                    span: bytes(17906..17910),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: usize,
                                                                                                    span: bytes(17914..17919),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Div(
                                                                                Slash,
                                                                            ),
                                                                            right: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: BITS_PER_CHUNK,
                                                                                                span: bytes(17922..17936),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: mask,
                                                                    span: bytes(17951..17955),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                        op: BinOp::Shl(
                                                                            Shl,
                                                                        ),
                                                                        right: Expr::Paren {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            expr: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: byte,
                                                                                                        span: bytes(17964..17968),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: usize,
                                                                                                        span: bytes(17972..17977),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::Rem(
                                                                                    Percent,
                                                                                ),
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: BITS_PER_CHUNK,
                                                                                                    span: bytes(17980..17994),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: chunk,
                                                                                            span: bytes(18006..18011),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::BitAnd(
                                                                            And,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: mask,
                                                                                            span: bytes(18014..18018),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Ne(
                                                                    Ne,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 0,
                                                                    },
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubS,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "should_percent_encode",
                                            complete_name: "percent_encoding::ascii_set::AsciiSet::should_percent_encode",
                                            import_name: MyPath {
                                                name: "percent_encoding",
                                                next: Some(
                                                    MyPath {
                                                        name: "ascii_set",
                                                        next: Some(
                                                            MyPath {
                                                                name: "AsciiSet",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "should_percent_encode",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::should_percent_encode",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Restricted {
                                                    pub_token: Pub,
                                                    paren_token: Paren,
                                                    in_token: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: crate,
                                                                    span: bytes(18040..18045),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: should_percent_encode,
                                                        span: bytes(18050..18071),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(18073..18077),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: byte,
                                                                        span: bytes(18079..18083),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(18085..18087),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: bool,
                                                                            span: bytes(18092..18096),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Unary {
                                                                    attrs: [],
                                                                    op: UnOp::Not(
                                                                        Not,
                                                                    ),
                                                                    expr: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: byte,
                                                                                            span: bytes(18108..18112),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: is_ascii,
                                                                            span: bytes(18113..18121),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                },
                                                                op: BinOp::Or(
                                                                    OrOr,
                                                                ),
                                                                right: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(18127..18131),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: contains,
                                                                        span: bytes(18132..18140),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: byte,
                                                                                            span: bytes(18141..18145),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubS,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "add",
                                            complete_name: "percent_encoding::ascii_set::AsciiSet::add",
                                            import_name: MyPath {
                                                name: "percent_encoding",
                                                next: Some(
                                                    MyPath {
                                                        name: "ascii_set",
                                                        next: Some(
                                                            MyPath {
                                                                name: "AsciiSet",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "add",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::add",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: Some(
                                                        Const,
                                                    ),
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: add,
                                                        span: bytes(18171..18174),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(18176..18180),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: byte,
                                                                        span: bytes(18182..18186),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(18188..18190),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(18195..18199),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                ident: Ident {
                                                                    sym: mask,
                                                                    span: bytes(18218..18222),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(18225..18229),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: mask,
                                                                                span: bytes(18230..18234),
                                                                            },
                                                                        ),
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: mask,
                                                                                        span: bytes(18244..18248),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: byte,
                                                                                                span: bytes(18249..18253),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(18257..18262),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Div(
                                                                            Slash,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: BITS_PER_CHUNK,
                                                                                            span: bytes(18265..18279),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::BitOrAssign(
                                                                    OrEq,
                                                                ),
                                                                right: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                    op: BinOp::Shl(
                                                                        Shl,
                                                                    ),
                                                                    right: Expr::Paren {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: byte,
                                                                                                    span: bytes(18290..18294),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: usize,
                                                                                                    span: bytes(18298..18303),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Rem(
                                                                                Percent,
                                                                            ),
                                                                            right: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: BITS_PER_CHUNK,
                                                                                                span: bytes(18306..18320),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Struct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: AsciiSet,
                                                                                span: bytes(18331..18339),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: mask,
                                                                                span: bytes(18342..18346),
                                                                            },
                                                                        ),
                                                                        colon_token: None,
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: mask,
                                                                                            span: bytes(18342..18346),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                                rest: None,
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: true,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "remove",
                                            complete_name: "percent_encoding::ascii_set::AsciiSet::remove",
                                            import_name: MyPath {
                                                name: "percent_encoding",
                                                next: Some(
                                                    MyPath {
                                                        name: "ascii_set",
                                                        next: Some(
                                                            MyPath {
                                                                name: "AsciiSet",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "remove",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::remove",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: Some(
                                                        Const,
                                                    ),
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: remove,
                                                        span: bytes(18373..18379),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(18381..18385),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: byte,
                                                                        span: bytes(18387..18391),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(18393..18395),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(18400..18404),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                ident: Ident {
                                                                    sym: mask,
                                                                    span: bytes(18423..18427),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(18430..18434),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: mask,
                                                                                span: bytes(18435..18439),
                                                                            },
                                                                        ),
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: mask,
                                                                                        span: bytes(18449..18453),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: byte,
                                                                                                span: bytes(18454..18458),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(18462..18467),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Div(
                                                                            Slash,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: BITS_PER_CHUNK,
                                                                                            span: bytes(18470..18484),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::BitAndAssign(
                                                                    AndEq,
                                                                ),
                                                                right: Expr::Unary {
                                                                    attrs: [],
                                                                    op: UnOp::Not(
                                                                        Not,
                                                                    ),
                                                                    expr: Expr::Paren {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 1,
                                                                                },
                                                                            },
                                                                            op: BinOp::Shl(
                                                                                Shl,
                                                                            ),
                                                                            right: Expr::Paren {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                expr: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Cast {
                                                                                        attrs: [],
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: byte,
                                                                                                            span: bytes(18497..18501),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        as_token: As,
                                                                                        ty: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: usize,
                                                                                                            span: bytes(18505..18510),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Rem(
                                                                                        Percent,
                                                                                    ),
                                                                                    right: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: BITS_PER_CHUNK,
                                                                                                        span: bytes(18513..18527),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Struct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: AsciiSet,
                                                                                span: bytes(18539..18547),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: mask,
                                                                                span: bytes(18550..18554),
                                                                            },
                                                                        ),
                                                                        colon_token: None,
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: mask,
                                                                                            span: bytes(18550..18554),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                                rest: None,
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: true,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "union",
                                            complete_name: "percent_encoding::ascii_set::AsciiSet::union",
                                            import_name: MyPath {
                                                name: "percent_encoding",
                                                next: Some(
                                                    MyPath {
                                                        name: "ascii_set",
                                                        next: Some(
                                                            MyPath {
                                                                name: "AsciiSet",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "union",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::union",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: Some(
                                                        Const,
                                                    ),
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: union,
                                                        span: bytes(18619..18624),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(18626..18630),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: other,
                                                                        span: bytes(18632..18637),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(18639..18643),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(18648..18652),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: mask,
                                                                    span: bytes(18667..18671),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Array {
                                                                        attrs: [],
                                                                        bracket_token: Bracket,
                                                                        elems: [
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(18688..18692),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mask,
                                                                                                span: bytes(18693..18697),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 0,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::BitOr(
                                                                                    Or,
                                                                                ),
                                                                                right: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: other,
                                                                                                            span: bytes(18703..18708),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mask,
                                                                                                span: bytes(18709..18713),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 0,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(18730..18734),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mask,
                                                                                                span: bytes(18735..18739),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 1,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::BitOr(
                                                                                    Or,
                                                                                ),
                                                                                right: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: other,
                                                                                                            span: bytes(18745..18750),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mask,
                                                                                                span: bytes(18751..18755),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 1,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(18772..18776),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mask,
                                                                                                span: bytes(18777..18781),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 2,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::BitOr(
                                                                                    Or,
                                                                                ),
                                                                                right: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: other,
                                                                                                            span: bytes(18787..18792),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mask,
                                                                                                span: bytes(18793..18797),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 2,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(18814..18818),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mask,
                                                                                                span: bytes(18819..18823),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 3,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::BitOr(
                                                                                    Or,
                                                                                ),
                                                                                right: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: other,
                                                                                                            span: bytes(18829..18834),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mask,
                                                                                                span: bytes(18835..18839),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 3,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                        ],
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Struct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: AsciiSet,
                                                                                span: bytes(18863..18871),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: mask,
                                                                                span: bytes(18874..18878),
                                                                            },
                                                                        ),
                                                                        colon_token: None,
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: mask,
                                                                                            span: bytes(18874..18878),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                                rest: None,
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: true,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "complement",
                                            complete_name: "percent_encoding::ascii_set::AsciiSet::complement",
                                            import_name: MyPath {
                                                name: "percent_encoding",
                                                next: Some(
                                                    MyPath {
                                                        name: "ascii_set",
                                                        next: Some(
                                                            MyPath {
                                                                name: "AsciiSet",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "complement",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::complement",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: Some(
                                                        Const,
                                                    ),
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: complement,
                                                        span: bytes(18945..18955),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(18957..18961),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(18966..18970),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: mask,
                                                                    span: bytes(18985..18989),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Array {
                                                                        attrs: [],
                                                                        bracket_token: Bracket,
                                                                        elems: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Not(
                                                                                    Not,
                                                                                ),
                                                                                expr: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(18994..18998),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mask,
                                                                                                span: bytes(18999..19003),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 0,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Not(
                                                                                    Not,
                                                                                ),
                                                                                expr: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(19009..19013),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mask,
                                                                                                span: bytes(19014..19018),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 1,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Not(
                                                                                    Not,
                                                                                ),
                                                                                expr: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(19024..19028),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mask,
                                                                                                span: bytes(19029..19033),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 2,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Not(
                                                                                    Not,
                                                                                ),
                                                                                expr: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(19039..19043),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mask,
                                                                                                span: bytes(19044..19048),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 3,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Struct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: AsciiSet,
                                                                                span: bytes(19062..19070),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: mask,
                                                                                span: bytes(19073..19077),
                                                                            },
                                                                        ),
                                                                        colon_token: None,
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: mask,
                                                                                            span: bytes(19073..19077),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                                rest: None,
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "AsciiSet",
                                ],
                            },
                            ImplItem {
                                impl_num: 1,
                                struct_name: Name {
                                    name: "AsciiSet",
                                    complete_name: "percent_encoding::ascii_set::AsciiSet",
                                    import_name: MyPath {
                                        name: "percent_encoding",
                                        next: Some(
                                            MyPath {
                                                name: "ascii_set",
                                                next: Some(
                                                    MyPath {
                                                        name: "AsciiSet",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Add",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "ops",
                                            next: Some(
                                                MyPath {
                                                    name: "Add",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ops,
                                                                span: bytes(19094..19097),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Add,
                                                                span: bytes(19099..19102),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: AsciiSet,
                                                            span: bytes(19107..19115),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    ImplTypeItem {
                                        item: Some(
                                            ImplItemType {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Output,
                                                    span: bytes(19127..19133),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(19136..19140),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "add",
                                            complete_name: "<percent_encoding::ascii_set::AsciiSet as ops::Add>::add",
                                            import_name: MyPath {
                                                name: "<percent_encoding",
                                                next: Some(
                                                    MyPath {
                                                        name: "ascii_set",
                                                        next: Some(
                                                            MyPath {
                                                                name: "AsciiSet as ops",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "Add>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "add",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#1}::add",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: add,
                                                        span: bytes(19150..19153),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(19154..19158),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: other,
                                                                        span: bytes(19160..19165),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(19167..19171),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(19176..19180),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(19191..19195),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: union,
                                                                    span: bytes(19196..19201),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: other,
                                                                                        span: bytes(19202..19207),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "Self",
                                ],
                            },
                            ImplItem {
                                impl_num: 2,
                                struct_name: Name {
                                    name: "AsciiSet",
                                    complete_name: "percent_encoding::ascii_set::AsciiSet",
                                    import_name: MyPath {
                                        name: "percent_encoding",
                                        next: Some(
                                            MyPath {
                                                name: "ascii_set",
                                                next: Some(
                                                    MyPath {
                                                        name: "AsciiSet",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Not",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "ops",
                                            next: Some(
                                                MyPath {
                                                    name: "Not",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ops,
                                                                span: bytes(19223..19226),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Not,
                                                                span: bytes(19228..19231),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: AsciiSet,
                                                            span: bytes(19236..19244),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    ImplTypeItem {
                                        item: Some(
                                            ImplItemType {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Output,
                                                    span: bytes(19256..19262),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(19265..19269),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "not",
                                            complete_name: "<percent_encoding::ascii_set::AsciiSet as ops::Not>::not",
                                            import_name: MyPath {
                                                name: "<percent_encoding",
                                                next: Some(
                                                    MyPath {
                                                        name: "ascii_set",
                                                        next: Some(
                                                            MyPath {
                                                                name: "AsciiSet as ops",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "Not>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "not",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#2}::not",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: not,
                                                        span: bytes(19279..19282),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(19283..19287),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(19292..19296),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(19307..19311),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: complement,
                                                                    span: bytes(19312..19322),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "Self",
                                ],
                            },
                        ],
                        functions: [],
                        traits: [],
                        use_trees: [
                            UseTree {
                                use_name: "mem",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "core",
                                    next: Some(
                                        MyPath {
                                            name: "mem",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "ops",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "core",
                                    next: Some(
                                        MyPath {
                                            name: "ops",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                        ],
                    },
                     sub_mods: [
                        RefCell {
                            value: ModContext {
                             mod_info: Mod(
                                ModModInfo {
                                    mod_name: "tests",
                                    mod_tree: MyPath {
                                        name: "percent_encoding",
                                        next: Some(
                                            MyPath {
                                                name: "ascii_set",
                                                next: Some(
                                                    MyPath {
                                                        name: "tests",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                    file_path: "",
                                    parent_directory_path: "",
                                    mod_file_directory_path: None,
                                    visibility: PubS,
                                },
                            ),
                             syntax_context: SyntaxContext {
                                consts: [],
                                trait_aliases: [],
                                uses: [
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: super,
                                                            span: bytes(20821..20826),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Glob(
                                                            UseGlob {
                                                                star_token: Star,
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                mods: [],
                                statics: [],
                                types: [],
                                structs: [],
                                enums: [],
                                unions: [],
                                impls: [],
                                functions: [],
                                traits: [],
                                use_trees: [
                                    UseTree {
                                        use_name: "*",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "super",
                                            next: Some(
                                                MyPath {
                                                    name: "*",
                                                    next: None,
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                ],
                            },
                             sub_mods: []
                             }
                            ,
                        },
                    ]
                     }
                    ,
                },
            ]
             }
            ,
        },
    ],
}