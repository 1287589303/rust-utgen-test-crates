{
  "name": "percent_encoding::decode_utf8_lossy",
  "mod_info": {
    "name": "",
    "loc": "percent_encoding/src/lib.rs:9:1:481:2"
  },
  "visible": true,
  "loc": "percent_encoding/src/lib.rs:339:1:365:2",
  "doc": "",
  "code": [
    "fn decode_utf8_lossy(input: Cow<'_, [u8]>) -> Cow<'_, str> {",
    "    // Note: This function is duplicated in `form_urlencoded/src/query_encoding.rs`.",
    "    match input {",
    "        Cow::Borrowed(bytes) => String::from_utf8_lossy(bytes),",
    "        Cow::Owned(bytes) => {",
    "            match String::from_utf8_lossy(&bytes) {",
    "                Cow::Borrowed(utf8) => {",
    "                    // If from_utf8_lossy returns a Cow::Borrowed, then we can",
    "                    // be sure our original bytes were valid UTF-8. This is because",
    "                    // if the bytes were invalid UTF-8 from_utf8_lossy would have",
    "                    // to allocate a new owned string to back the Cow so it could",
    "                    // replace invalid bytes with a placeholder.",
    "",
    "                    // First we do a debug_assert to confirm our description above.",
    "                    let raw_utf8: *const [u8] = utf8.as_bytes();",
    "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);",
    "",
    "                    // Given we know the original input bytes are valid UTF-8,",
    "                    // and we have ownership of those bytes, we re-use them and",
    "                    // return a Cow::Owned here.",
    "                    Cow::Owned(unsafe { String::from_utf8_unchecked(bytes) })",
    "                }",
    "                Cow::Owned(s) => Cow::Owned(s),",
    "            }",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "input matches Cow::Owned(bytes)",
          "norm": null,
          "value": "true",
          "line": 341,
          "bound": null
        },
        {
          "cond": "String::from_utf8_lossy(&bytes) matches Cow::Owned(s)",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": "Cow::Owned(s)",
      "path": [
        0,
        3,
        6,
        7,
        10,
        21,
        22,
        23,
        24,
        25,
        26,
        27
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "input matches Cow::Owned(bytes)",
          "norm": null,
          "value": "true",
          "line": 341,
          "bound": null
        },
        {
          "cond": "String::from_utf8_lossy(&bytes) matches Cow::Borrowed(utf8)",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "String::from_utf8_lossy(&bytes) matches Cow::Borrowed(utf8)",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "raw_utf8 == &*bytes as *const [u8]",
          "norm": "&*bytes as *const [u8] == raw_utf8",
          "value": "true",
          "line": 354,
          "bound": null
        }
      ],
      "ret": "Cow::Owned(unsafe { String::from_utf8_unchecked(bytes) })",
      "path": [
        0,
        3,
        6,
        7,
        9,
        11,
        12,
        13,
        14,
        15,
        18,
        19,
        20,
        23,
        24,
        25,
        26,
        27
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "input matches Cow::Owned(bytes)",
          "norm": null,
          "value": "true",
          "line": 341,
          "bound": null
        },
        {
          "cond": "String::from_utf8_lossy(&bytes) matches Cow::Borrowed(utf8)",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "String::from_utf8_lossy(&bytes) matches Cow::Borrowed(utf8)",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "raw_utf8 == &*bytes as *const [u8]",
          "norm": "&*bytes as *const [u8] == raw_utf8",
          "value": "false",
          "line": 354,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        6,
        7,
        9,
        11,
        12,
        13,
        14,
        16,
        30,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "input matches Cow::Borrowed(bytes)",
          "norm": null,
          "value": "true",
          "line": 341,
          "bound": null
        },
        {
          "cond": "input matches Cow::Borrowed(bytes)",
          "norm": null,
          "value": "true",
          "line": 341,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        5,
        26,
        27
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}