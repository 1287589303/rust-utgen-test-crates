{
  "name": "percent_encoding::after_percent_sign",
  "mod_info": {
    "name": "",
    "loc": "percent_encoding/src/lib.rs:9:1:481:2"
  },
  "visible": true,
  "loc": "percent_encoding/src/lib.rs:252:1:258:2",
  "doc": "",
  "code": [
    "fn after_percent_sign(iter: &mut slice::Iter<'_, u8>) -> Option<u8> {",
    "    let mut cloned_iter = iter.clone();",
    "    let h = char::from(*cloned_iter.next()?).to_digit(16)?;",
    "    let l = char::from(*cloned_iter.next()?).to_digit(16)?;",
    "    *iter = cloned_iter;",
    "    Some(h as u8 * 0x10 + l as u8)",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 0,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "cloned_iter.next()?",
          "norm": null,
          "value": "Err/None",
          "line": 254,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        8,
        35,
        36,
        37
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "cloned_iter.next()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 254,
          "bound": null
        },
        {
          "cond": "char::from(*cloned_iter.next()?).to_digit(16)?",
          "norm": null,
          "value": "Err/None",
          "line": 254,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        13,
        15,
        16,
        35,
        36,
        37
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "cloned_iter.next()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 254,
          "bound": null
        },
        {
          "cond": "char::from(*cloned_iter.next()?).to_digit(16)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 254,
          "bound": null
        },
        {
          "cond": "cloned_iter.next()?",
          "norm": null,
          "value": "Err/None",
          "line": 255,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        14,
        17,
        18,
        20,
        22,
        23,
        34,
        36,
        37
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "cloned_iter.next()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 254,
          "bound": null
        },
        {
          "cond": "char::from(*cloned_iter.next()?).to_digit(16)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 254,
          "bound": null
        },
        {
          "cond": "cloned_iter.next()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 255,
          "bound": null
        },
        {
          "cond": "char::from(*cloned_iter.next()?).to_digit(16)?",
          "norm": null,
          "value": "Err/None",
          "line": 255,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        14,
        17,
        18,
        21,
        24,
        25,
        26,
        28,
        30,
        31,
        34,
        36,
        37
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "cloned_iter.next()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 254,
          "bound": null
        },
        {
          "cond": "char::from(*cloned_iter.next()?).to_digit(16)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 254,
          "bound": null
        },
        {
          "cond": "cloned_iter.next()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 255,
          "bound": null
        },
        {
          "cond": "char::from(*cloned_iter.next()?).to_digit(16)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 255,
          "bound": null
        }
      ],
      "ret": "Some(h as u8 * 0x10 + l as u8)",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        14,
        17,
        18,
        21,
        24,
        25,
        26,
        29,
        32,
        33,
        37
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}