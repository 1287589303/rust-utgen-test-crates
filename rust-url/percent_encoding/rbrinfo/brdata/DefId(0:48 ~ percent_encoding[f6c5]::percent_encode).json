{
  "name": "percent_encoding::percent_encode",
  "mod_info": {
    "name": "",
    "loc": "percent_encoding/src/lib.rs:9:1:481:2"
  },
  "visible": true,
  "loc": "percent_encoding/src/lib.rs:117:1:122:2",
  "doc": "/// Percent-encode the given bytes with the given set.\n///\n/// Non-ASCII bytes and bytes in `ascii_set` are encoded.\n///\n/// The return type:\n///\n/// * Implements `Iterator<Item = &str>` and therefore has a `.collect::<String>()` method,\n/// * Implements `Display` and therefore has a `.to_string()` method,\n/// * Implements `Into<Cow<str>>` borrowing `input` when none of its bytes are encoded.\n///\n/// # Examples\n///\n/// ```\n/// use percent_encoding::{percent_encode, NON_ALPHANUMERIC};\n///\n/// assert_eq!(percent_encode(b\"foo bar?\", NON_ALPHANUMERIC).to_string(), \"foo%20bar%3F\");\n/// ```\n",
  "code": [
    "pub fn percent_encode<'a>(input: &'a [u8], ascii_set: &'static AsciiSet) -> PercentEncode<'a> {",
    "    PercentEncode {",
    "        bytes: input,",
    "        ascii_set,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "PercentEncode {\n        bytes: input,\n        ascii_set,\n    }",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}