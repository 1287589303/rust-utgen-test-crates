{
  "name": "percent_encoding::{impl#5}::if_any",
  "mod_info": {
    "name": "",
    "loc": "percent_encoding/src/lib.rs:9:1:481:2"
  },
  "visible": true,
  "loc": "percent_encoding/src/lib.rs:292:5:306:6",
  "doc": "/// If the percent-decoding is different from the input, return it as a new bytes vector.\n",
  "code": [
    "fn if_any(&self) -> Option<Vec<u8>> {",
    "    let mut bytes_iter = self.bytes.clone();",
    "    while bytes_iter.any(|&b| b == b'%') {",
    "        if let Some(decoded_byte) = after_percent_sign(&mut bytes_iter) {",
    "            let initial_bytes = self.bytes.as_slice();",
    "            let unchanged_bytes_len = initial_bytes.len() - bytes_iter.len() - 3;",
    "            let mut decoded = initial_bytes[..unchanged_bytes_len].to_owned();",
    "            decoded.push(decoded_byte);",
    "            decoded.extend(PercentDecode { bytes: bytes_iter });",
    "            return Some(decoded);",
    "        }",
    "    }",
    "    // Nothing to decode",
    "    None",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 1,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "bytes_iter.any(|&b| b == b'%')",
          "norm": null,
          "value": "true",
          "line": 294,
          "bound": null
        },
        {
          "cond": "let Some(decoded_byte) = after_percent_sign(&mut bytes_iter)",
          "norm": null,
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "bytes_iter.any(|&b| b == b'%')",
          "norm": null,
          "value": "false",
          "line": 294,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        19,
        2,
        3,
        4,
        20,
        22
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "bytes_iter.any(|&b| b == b'%')",
          "norm": null,
          "value": "true",
          "line": 294,
          "bound": null
        },
        {
          "cond": "let Some(decoded_byte) = after_percent_sign(&mut bytes_iter)",
          "norm": null,
          "value": "true",
          "line": 295,
          "bound": null
        }
      ],
      "ret": "Some(decoded)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        21,
        22
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "bytes_iter.any(|&b| b == b'%')",
          "norm": null,
          "value": "false",
          "line": 294,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        20,
        22
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}