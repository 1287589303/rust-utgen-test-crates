bb0
  0: StorageLive(_2)
    SourceInfo(percent_encoding/src/lib.rs:264:9-264:26)
  1: StorageLive(_3)
    SourceInfo(percent_encoding/src/lib.rs:264:9-264:19)
  2: _3 = &mut ((*_1).0: core::slice::Iter<'_, u8>)
    SourceInfo(percent_encoding/src/lib.rs:264:9-264:19)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:264:9-264:26)
      kind: _2 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::next(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(percent_encoding/src/lib.rs:264:25-264:26)
  1: StorageLive(_4)
    SourceInfo(percent_encoding/src/lib.rs:264:31-270:10)
  2: StorageLive(_5)
    SourceInfo(percent_encoding/src/lib.rs:264:31-270:10)
  3: _5 = &mut _1
    SourceInfo(percent_encoding/src/lib.rs:264:31-270:10)
  4: _4 = {closure@percent_encoding/src/lib.rs:264:31: 264:38} { self: move _5 }
    SourceInfo(percent_encoding/src/lib.rs:264:31-270:10)
  5: StorageDead(_5)
    SourceInfo(percent_encoding/src/lib.rs:264:37-264:38)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:264:9-270:11)
      kind: _0 = core::option::Option::<&u8>::map::<u8, {closure@percent_encoding/src/lib.rs:264:31: 264:38}>(move _2, move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(percent_encoding/src/lib.rs:270:10-270:11)
  1: StorageDead(_2)
    SourceInfo(percent_encoding/src/lib.rs:270:10-270:11)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:271:6-271:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:263:5-271:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

