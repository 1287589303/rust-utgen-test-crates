bb0
  0: StorageLive(_2)
    SourceInfo(percent_encoding/src/lib.rs:253:9-253:24)
  1: StorageLive(_3)
    SourceInfo(percent_encoding/src/lib.rs:253:27-253:31)
  2: _3 = &(*_1)
    SourceInfo(percent_encoding/src/lib.rs:253:27-253:31)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:253:27-253:39)
      kind: _2 = <core::slice::Iter<'_, u8> as core::clone::Clone>::clone(move _3) -> [return: bb1, unwind: bb38]
  }
  preds []
  succs [bb1, bb38]

bb1
  0: StorageDead(_3)
    SourceInfo(percent_encoding/src/lib.rs:253:38-253:39)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(percent_encoding/src/lib.rs:253:9-253:24)
  2: StorageLive(_4)
    SourceInfo(percent_encoding/src/lib.rs:254:9-254:10)
  3: StorageLive(_5)
    SourceInfo(percent_encoding/src/lib.rs:254:13-254:59)
  4: StorageLive(_6)
    SourceInfo(percent_encoding/src/lib.rs:254:13-254:58)
  5: StorageLive(_7)
    SourceInfo(percent_encoding/src/lib.rs:254:13-254:45)
  6: StorageLive(_8)
    SourceInfo(percent_encoding/src/lib.rs:254:24-254:44)
  7: StorageLive(_9)
    SourceInfo(percent_encoding/src/lib.rs:254:25-254:44)
  8: StorageLive(_10)
    SourceInfo(percent_encoding/src/lib.rs:254:25-254:44)
  9: StorageLive(_11)
    SourceInfo(percent_encoding/src/lib.rs:254:25-254:43)
  10: StorageLive(_12)
    SourceInfo(percent_encoding/src/lib.rs:254:25-254:36)
  11: _12 = &mut _2
    SourceInfo(percent_encoding/src/lib.rs:254:25-254:36)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:254:25-254:43)
      kind: _11 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::next(move _12) -> [return: bb2, unwind: bb38]
  }
  preds [bb0]
  succs [bb2, bb38]

bb2
  0: StorageDead(_12)
    SourceInfo(percent_encoding/src/lib.rs:254:42-254:43)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:254:25-254:44)
      kind: _10 = <core::option::Option<&u8> as core::ops::Try>::branch(move _11) -> [return: bb3, unwind: bb38]
  }
  preds [bb1]
  succs [bb3, bb38]

bb3
  0: StorageDead(_11)
    SourceInfo(percent_encoding/src/lib.rs:254:43-254:44)
  1: PlaceMention(_10)
    SourceInfo(percent_encoding/src/lib.rs:254:25-254:44)
  2: _13 = discriminant(_10)
    SourceInfo(percent_encoding/src/lib.rs:254:25-254:44)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:254:25-254:44)
      kind: switchInt(move _13) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _10)
    SourceInfo(percent_encoding/src/lib.rs:254:25-254:44)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:254:25-254:44)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:254:43-254:44)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_17)
    SourceInfo(percent_encoding/src/lib.rs:254:25-254:44)
  1: _17 = ((_10 as Continue).0: &u8)
    SourceInfo(percent_encoding/src/lib.rs:254:25-254:44)
  2: _9 = _17
    SourceInfo(percent_encoding/src/lib.rs:254:25-254:44)
  3: StorageDead(_17)
    SourceInfo(percent_encoding/src/lib.rs:254:43-254:44)
  4: _8 = (*_9)
    SourceInfo(percent_encoding/src/lib.rs:254:24-254:44)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:254:13-254:45)
      kind: _7 = <char as core::convert::From<u8>>::from(move _8) -> [return: bb9, unwind: bb38]
  }
  preds [bb3, bb5]
  succs [bb9, bb38]

bb7
  0: StorageLive(_14)
    SourceInfo(percent_encoding/src/lib.rs:254:43-254:44)
  1: _14 = ((_10 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(percent_encoding/src/lib.rs:254:43-254:44)
  2: StorageLive(_16)
    SourceInfo(percent_encoding/src/lib.rs:254:43-254:44)
  3: _16 = _14
    SourceInfo(percent_encoding/src/lib.rs:254:43-254:44)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:254:25-254:44)
      kind: _0 = <core::option::Option<u8> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _16) -> [return: bb8, unwind: bb38]
  }
  preds [bb5]
  succs [bb8, bb38]

bb8
  0: StorageDead(_16)
    SourceInfo(percent_encoding/src/lib.rs:254:43-254:44)
  1: StorageDead(_14)
    SourceInfo(percent_encoding/src/lib.rs:254:43-254:44)
  2: StorageDead(_8)
    SourceInfo(percent_encoding/src/lib.rs:254:44-254:45)
  3: StorageDead(_7)
    SourceInfo(percent_encoding/src/lib.rs:254:57-254:58)
  4: StorageDead(_6)
    SourceInfo(percent_encoding/src/lib.rs:254:58-254:59)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:1:1-1:1)
      kind: goto -> bb35
  }
  preds [bb7]
  succs [bb35]

bb9
  0: StorageDead(_8)
    SourceInfo(percent_encoding/src/lib.rs:254:44-254:45)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:254:13-254:58)
      kind: _6 = core::char::methods::<impl char>::to_digit(move _7, const 16_u32) -> [return: bb10, unwind: bb38]
  }
  preds [bb6]
  succs [bb10, bb38]

bb10
  0: StorageDead(_7)
    SourceInfo(percent_encoding/src/lib.rs:254:57-254:58)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:254:13-254:59)
      kind: _5 = <core::option::Option<u32> as core::ops::Try>::branch(move _6) -> [return: bb11, unwind: bb38]
  }
  preds [bb9]
  succs [bb11, bb38]

bb11
  0: StorageDead(_6)
    SourceInfo(percent_encoding/src/lib.rs:254:58-254:59)
  1: PlaceMention(_5)
    SourceInfo(percent_encoding/src/lib.rs:254:13-254:59)
  2: _18 = discriminant(_5)
    SourceInfo(percent_encoding/src/lib.rs:254:13-254:59)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:254:13-254:59)
      kind: switchInt(move _18) -> [0: bb14, 1: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(percent_encoding/src/lib.rs:254:13-254:59)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:254:13-254:59)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:254:58-254:59)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_22)
    SourceInfo(percent_encoding/src/lib.rs:254:13-254:59)
  1: _22 = ((_5 as Continue).0: u32)
    SourceInfo(percent_encoding/src/lib.rs:254:13-254:59)
  2: _4 = _22
    SourceInfo(percent_encoding/src/lib.rs:254:13-254:59)
  3: StorageDead(_22)
    SourceInfo(percent_encoding/src/lib.rs:254:58-254:59)
  4: FakeRead(ForLet(None), _4)
    SourceInfo(percent_encoding/src/lib.rs:254:9-254:10)
  5: StorageDead(_10)
    SourceInfo(percent_encoding/src/lib.rs:254:59-254:60)
  6: StorageDead(_9)
    SourceInfo(percent_encoding/src/lib.rs:254:59-254:60)
  7: StorageDead(_5)
    SourceInfo(percent_encoding/src/lib.rs:254:59-254:60)
  8: StorageLive(_23)
    SourceInfo(percent_encoding/src/lib.rs:255:9-255:10)
  9: StorageLive(_24)
    SourceInfo(percent_encoding/src/lib.rs:255:13-255:59)
  10: StorageLive(_25)
    SourceInfo(percent_encoding/src/lib.rs:255:13-255:58)
  11: StorageLive(_26)
    SourceInfo(percent_encoding/src/lib.rs:255:13-255:45)
  12: StorageLive(_27)
    SourceInfo(percent_encoding/src/lib.rs:255:24-255:44)
  13: StorageLive(_28)
    SourceInfo(percent_encoding/src/lib.rs:255:25-255:44)
  14: StorageLive(_29)
    SourceInfo(percent_encoding/src/lib.rs:255:25-255:44)
  15: StorageLive(_30)
    SourceInfo(percent_encoding/src/lib.rs:255:25-255:43)
  16: StorageLive(_31)
    SourceInfo(percent_encoding/src/lib.rs:255:25-255:36)
  17: _31 = &mut _2
    SourceInfo(percent_encoding/src/lib.rs:255:25-255:36)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:255:25-255:43)
      kind: _30 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::next(move _31) -> [return: bb17, unwind: bb38]
  }
  preds [bb11, bb13]
  succs [bb17, bb38]

bb15
  0: StorageLive(_19)
    SourceInfo(percent_encoding/src/lib.rs:254:58-254:59)
  1: _19 = ((_5 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(percent_encoding/src/lib.rs:254:58-254:59)
  2: StorageLive(_21)
    SourceInfo(percent_encoding/src/lib.rs:254:58-254:59)
  3: _21 = _19
    SourceInfo(percent_encoding/src/lib.rs:254:58-254:59)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:254:13-254:59)
      kind: _0 = <core::option::Option<u8> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _21) -> [return: bb16, unwind: bb38]
  }
  preds [bb13]
  succs [bb16, bb38]

bb16
  0: StorageDead(_21)
    SourceInfo(percent_encoding/src/lib.rs:254:58-254:59)
  1: StorageDead(_19)
    SourceInfo(percent_encoding/src/lib.rs:254:58-254:59)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:1:1-1:1)
      kind: goto -> bb35
  }
  preds [bb15]
  succs [bb35]

bb17
  0: StorageDead(_31)
    SourceInfo(percent_encoding/src/lib.rs:255:42-255:43)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:255:25-255:44)
      kind: _29 = <core::option::Option<&u8> as core::ops::Try>::branch(move _30) -> [return: bb18, unwind: bb38]
  }
  preds [bb14]
  succs [bb18, bb38]

bb18
  0: StorageDead(_30)
    SourceInfo(percent_encoding/src/lib.rs:255:43-255:44)
  1: PlaceMention(_29)
    SourceInfo(percent_encoding/src/lib.rs:255:25-255:44)
  2: _32 = discriminant(_29)
    SourceInfo(percent_encoding/src/lib.rs:255:25-255:44)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:255:25-255:44)
      kind: switchInt(move _32) -> [0: bb21, 1: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20, bb21]

bb19
  0: FakeRead(ForMatchedPlace(None), _29)
    SourceInfo(percent_encoding/src/lib.rs:255:25-255:44)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:255:25-255:44)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:255:43-255:44)
      kind: falseEdge -> [real: bb22, imaginary: bb21]
  }
  preds [bb18]
  succs [bb21, bb22]

bb21
  0: StorageLive(_36)
    SourceInfo(percent_encoding/src/lib.rs:255:25-255:44)
  1: _36 = ((_29 as Continue).0: &u8)
    SourceInfo(percent_encoding/src/lib.rs:255:25-255:44)
  2: _28 = _36
    SourceInfo(percent_encoding/src/lib.rs:255:25-255:44)
  3: StorageDead(_36)
    SourceInfo(percent_encoding/src/lib.rs:255:43-255:44)
  4: _27 = (*_28)
    SourceInfo(percent_encoding/src/lib.rs:255:24-255:44)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:255:13-255:45)
      kind: _26 = <char as core::convert::From<u8>>::from(move _27) -> [return: bb24, unwind: bb38]
  }
  preds [bb18, bb20]
  succs [bb24, bb38]

bb22
  0: StorageLive(_33)
    SourceInfo(percent_encoding/src/lib.rs:255:43-255:44)
  1: _33 = ((_29 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(percent_encoding/src/lib.rs:255:43-255:44)
  2: StorageLive(_35)
    SourceInfo(percent_encoding/src/lib.rs:255:43-255:44)
  3: _35 = _33
    SourceInfo(percent_encoding/src/lib.rs:255:43-255:44)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:255:25-255:44)
      kind: _0 = <core::option::Option<u8> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _35) -> [return: bb23, unwind: bb38]
  }
  preds [bb20]
  succs [bb23, bb38]

bb23
  0: StorageDead(_35)
    SourceInfo(percent_encoding/src/lib.rs:255:43-255:44)
  1: StorageDead(_33)
    SourceInfo(percent_encoding/src/lib.rs:255:43-255:44)
  2: StorageDead(_27)
    SourceInfo(percent_encoding/src/lib.rs:255:44-255:45)
  3: StorageDead(_26)
    SourceInfo(percent_encoding/src/lib.rs:255:57-255:58)
  4: StorageDead(_25)
    SourceInfo(percent_encoding/src/lib.rs:255:58-255:59)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:1:1-1:1)
      kind: goto -> bb34
  }
  preds [bb22]
  succs [bb34]

bb24
  0: StorageDead(_27)
    SourceInfo(percent_encoding/src/lib.rs:255:44-255:45)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:255:13-255:58)
      kind: _25 = core::char::methods::<impl char>::to_digit(move _26, const 16_u32) -> [return: bb25, unwind: bb38]
  }
  preds [bb21]
  succs [bb25, bb38]

bb25
  0: StorageDead(_26)
    SourceInfo(percent_encoding/src/lib.rs:255:57-255:58)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:255:13-255:59)
      kind: _24 = <core::option::Option<u32> as core::ops::Try>::branch(move _25) -> [return: bb26, unwind: bb38]
  }
  preds [bb24]
  succs [bb26, bb38]

bb26
  0: StorageDead(_25)
    SourceInfo(percent_encoding/src/lib.rs:255:58-255:59)
  1: PlaceMention(_24)
    SourceInfo(percent_encoding/src/lib.rs:255:13-255:59)
  2: _37 = discriminant(_24)
    SourceInfo(percent_encoding/src/lib.rs:255:13-255:59)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:255:13-255:59)
      kind: switchInt(move _37) -> [0: bb29, 1: bb28, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28, bb29]

bb27
  0: FakeRead(ForMatchedPlace(None), _24)
    SourceInfo(percent_encoding/src/lib.rs:255:13-255:59)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:255:13-255:59)
      kind: unreachable
  }
  preds [bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:255:58-255:59)
      kind: falseEdge -> [real: bb30, imaginary: bb29]
  }
  preds [bb26]
  succs [bb29, bb30]

bb29
  0: StorageLive(_41)
    SourceInfo(percent_encoding/src/lib.rs:255:13-255:59)
  1: _41 = ((_24 as Continue).0: u32)
    SourceInfo(percent_encoding/src/lib.rs:255:13-255:59)
  2: _23 = _41
    SourceInfo(percent_encoding/src/lib.rs:255:13-255:59)
  3: StorageDead(_41)
    SourceInfo(percent_encoding/src/lib.rs:255:58-255:59)
  4: FakeRead(ForLet(None), _23)
    SourceInfo(percent_encoding/src/lib.rs:255:9-255:10)
  5: StorageDead(_29)
    SourceInfo(percent_encoding/src/lib.rs:255:59-255:60)
  6: StorageDead(_28)
    SourceInfo(percent_encoding/src/lib.rs:255:59-255:60)
  7: StorageDead(_24)
    SourceInfo(percent_encoding/src/lib.rs:255:59-255:60)
  8: StorageLive(_42)
    SourceInfo(percent_encoding/src/lib.rs:256:13-256:24)
  9: _42 = move _2
    SourceInfo(percent_encoding/src/lib.rs:256:13-256:24)
  10: (*_1) = move _42
    SourceInfo(percent_encoding/src/lib.rs:256:5-256:24)
  11: StorageDead(_42)
    SourceInfo(percent_encoding/src/lib.rs:256:23-256:24)
  12: StorageLive(_43)
    SourceInfo(percent_encoding/src/lib.rs:257:10-257:34)
  13: StorageLive(_44)
    SourceInfo(percent_encoding/src/lib.rs:257:10-257:24)
  14: StorageLive(_45)
    SourceInfo(percent_encoding/src/lib.rs:257:10-257:17)
  15: StorageLive(_46)
    SourceInfo(percent_encoding/src/lib.rs:257:10-257:11)
  16: _46 = _4
    SourceInfo(percent_encoding/src/lib.rs:257:10-257:11)
  17: _45 = move _46 as u8 (IntToInt)
    SourceInfo(percent_encoding/src/lib.rs:257:10-257:17)
  18: StorageDead(_46)
    SourceInfo(percent_encoding/src/lib.rs:257:16-257:17)
  19: _47 = MulWithOverflow(_45, const 16_u8)
    SourceInfo(percent_encoding/src/lib.rs:257:10-257:24)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:257:10-257:24)
      kind: assert(!move (_47.1: bool), "attempt to compute `{} * {}`, which would overflow", move _45, const 16_u8) -> [success: bb32, unwind: bb38]
  }
  preds [bb26, bb28]
  succs [bb32, bb38]

bb30
  0: StorageLive(_38)
    SourceInfo(percent_encoding/src/lib.rs:255:58-255:59)
  1: _38 = ((_24 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(percent_encoding/src/lib.rs:255:58-255:59)
  2: StorageLive(_40)
    SourceInfo(percent_encoding/src/lib.rs:255:58-255:59)
  3: _40 = _38
    SourceInfo(percent_encoding/src/lib.rs:255:58-255:59)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:255:13-255:59)
      kind: _0 = <core::option::Option<u8> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _40) -> [return: bb31, unwind: bb38]
  }
  preds [bb28]
  succs [bb31, bb38]

bb31
  0: StorageDead(_40)
    SourceInfo(percent_encoding/src/lib.rs:255:58-255:59)
  1: StorageDead(_38)
    SourceInfo(percent_encoding/src/lib.rs:255:58-255:59)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:1:1-1:1)
      kind: goto -> bb34
  }
  preds [bb30]
  succs [bb34]

bb32
  0: _44 = move (_47.0: u8)
    SourceInfo(percent_encoding/src/lib.rs:257:10-257:24)
  1: StorageDead(_45)
    SourceInfo(percent_encoding/src/lib.rs:257:23-257:24)
  2: StorageLive(_48)
    SourceInfo(percent_encoding/src/lib.rs:257:27-257:34)
  3: StorageLive(_49)
    SourceInfo(percent_encoding/src/lib.rs:257:27-257:28)
  4: _49 = _23
    SourceInfo(percent_encoding/src/lib.rs:257:27-257:28)
  5: _48 = move _49 as u8 (IntToInt)
    SourceInfo(percent_encoding/src/lib.rs:257:27-257:34)
  6: StorageDead(_49)
    SourceInfo(percent_encoding/src/lib.rs:257:33-257:34)
  7: _50 = AddWithOverflow(_44, _48)
    SourceInfo(percent_encoding/src/lib.rs:257:10-257:34)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:257:10-257:34)
      kind: assert(!move (_50.1: bool), "attempt to compute `{} + {}`, which would overflow", move _44, move _48) -> [success: bb33, unwind: bb38]
  }
  preds [bb29]
  succs [bb33, bb38]

bb33
  0: _43 = move (_50.0: u8)
    SourceInfo(percent_encoding/src/lib.rs:257:10-257:34)
  1: StorageDead(_48)
    SourceInfo(percent_encoding/src/lib.rs:257:33-257:34)
  2: StorageDead(_44)
    SourceInfo(percent_encoding/src/lib.rs:257:33-257:34)
  3: _0 = core::option::Option::<u8>::Some(move _43)
    SourceInfo(percent_encoding/src/lib.rs:257:5-257:35)
  4: StorageDead(_43)
    SourceInfo(percent_encoding/src/lib.rs:257:34-257:35)
  5: StorageDead(_23)
    SourceInfo(percent_encoding/src/lib.rs:258:1-258:2)
  6: StorageDead(_4)
    SourceInfo(percent_encoding/src/lib.rs:258:1-258:2)
  7: StorageDead(_2)
    SourceInfo(percent_encoding/src/lib.rs:258:1-258:2)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:258:2-258:2)
      kind: goto -> bb37
  }
  preds [bb32]
  succs [bb37]

bb34
  0: StorageDead(_29)
    SourceInfo(percent_encoding/src/lib.rs:255:59-255:60)
  1: StorageDead(_28)
    SourceInfo(percent_encoding/src/lib.rs:255:59-255:60)
  2: StorageDead(_24)
    SourceInfo(percent_encoding/src/lib.rs:255:59-255:60)
  3: StorageDead(_23)
    SourceInfo(percent_encoding/src/lib.rs:258:1-258:2)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:1:1-1:1)
      kind: goto -> bb36
  }
  preds [bb23, bb31]
  succs [bb36]

bb35
  0: StorageDead(_10)
    SourceInfo(percent_encoding/src/lib.rs:254:59-254:60)
  1: StorageDead(_9)
    SourceInfo(percent_encoding/src/lib.rs:254:59-254:60)
  2: StorageDead(_5)
    SourceInfo(percent_encoding/src/lib.rs:254:59-254:60)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:1:1-1:1)
      kind: goto -> bb36
  }
  preds [bb8, bb16]
  succs [bb36]

bb36
  0: StorageDead(_4)
    SourceInfo(percent_encoding/src/lib.rs:258:1-258:2)
  1: StorageDead(_2)
    SourceInfo(percent_encoding/src/lib.rs:258:1-258:2)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:258:2-258:2)
      kind: goto -> bb37
  }
  preds [bb34, bb35]
  succs [bb37]

bb37
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:258:2-258:2)
      kind: return
  }
  preds [bb33, bb36]
  succs []

bb38
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:252:1-258:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb6, bb7, bb9, bb10, bb14, bb15, bb17, bb21, bb22, bb24, bb25, bb29, bb30, bb32]
  succs []

