bb0
  0: StorageLive(_2)
    SourceInfo(percent_encoding/src/lib.rs:93:9-93:14)
  1: StorageLive(_3)
    SourceInfo(percent_encoding/src/lib.rs:93:17-93:34)
  2: StorageLive(_4)
    SourceInfo(percent_encoding/src/lib.rs:93:29-93:33)
  3: _4 = _1
    SourceInfo(percent_encoding/src/lib.rs:93:29-93:33)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:93:17-93:34)
      kind: _3 = <usize as core::convert::From<u8>>::from(move _4) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_4)
    SourceInfo(percent_encoding/src/lib.rs:93:33-93:34)
  1: _5 = MulWithOverflow(_3, const 3_usize)
    SourceInfo(percent_encoding/src/lib.rs:93:17-93:38)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:93:17-93:38)
      kind: assert(!move (_5.1: bool), "attempt to compute `{} * {}`, which would overflow", move _3, const 3_usize) -> [success: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: _2 = move (_5.0: usize)
    SourceInfo(percent_encoding/src/lib.rs:93:17-93:38)
  1: StorageDead(_3)
    SourceInfo(percent_encoding/src/lib.rs:93:37-93:38)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(percent_encoding/src/lib.rs:93:9-93:14)
  3: StorageLive(_6)
    SourceInfo(percent_encoding/src/lib.rs:96:14-96:68)
  4: StorageLive(_7)
    SourceInfo(percent_encoding/src/lib.rs:96:39-96:67)
  5: StorageLive(_8)
    SourceInfo(percent_encoding/src/lib.rs:96:39-96:67)
  6: StorageLive(_9)
    SourceInfo(percent_encoding/src/lib.rs:96:49-96:67)
  7: StorageLive(_10)
    SourceInfo(percent_encoding/src/lib.rs:96:40-96:49)
  8: StorageLive(_11)
    SourceInfo(percent_encoding/src/lib.rs:96:40-96:49)
  9: _11 = const {alloc5: &&[u8; 768]}
    SourceInfo(percent_encoding/src/lib.rs:96:40-96:49)
  10: _10 = &(*(*_11))
    SourceInfo(percent_encoding/src/lib.rs:96:40-96:49)
  11: StorageLive(_12)
    SourceInfo(percent_encoding/src/lib.rs:96:50-96:66)
  12: StorageLive(_13)
    SourceInfo(percent_encoding/src/lib.rs:96:50-96:55)
  13: _13 = _2
    SourceInfo(percent_encoding/src/lib.rs:96:50-96:55)
  14: StorageLive(_14)
    SourceInfo(percent_encoding/src/lib.rs:96:57-96:66)
  15: StorageLive(_15)
    SourceInfo(percent_encoding/src/lib.rs:96:57-96:62)
  16: _15 = _2
    SourceInfo(percent_encoding/src/lib.rs:96:57-96:62)
  17: _16 = AddWithOverflow(_15, const 3_usize)
    SourceInfo(percent_encoding/src/lib.rs:96:57-96:66)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:96:57-96:66)
      kind: assert(!move (_16.1: bool), "attempt to compute `{} + {}`, which would overflow", move _15, const 3_usize) -> [success: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: _14 = move (_16.0: usize)
    SourceInfo(percent_encoding/src/lib.rs:96:57-96:66)
  1: StorageDead(_15)
    SourceInfo(percent_encoding/src/lib.rs:96:65-96:66)
  2: _12 = core::ops::Range::<usize> { start: move _13, end: move _14 }
    SourceInfo(percent_encoding/src/lib.rs:96:50-96:66)
  3: StorageDead(_14)
    SourceInfo(percent_encoding/src/lib.rs:96:65-96:66)
  4: StorageDead(_13)
    SourceInfo(percent_encoding/src/lib.rs:96:65-96:66)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:96:49-96:67)
      kind: _9 = <[u8; 768] as core::ops::Index<core::ops::Range<usize>>>::index(move _10, move _12) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_12)
    SourceInfo(percent_encoding/src/lib.rs:96:66-96:67)
  1: StorageDead(_10)
    SourceInfo(percent_encoding/src/lib.rs:96:66-96:67)
  2: _8 = &(*_9)
    SourceInfo(percent_encoding/src/lib.rs:96:39-96:67)
  3: _7 = &(*_8)
    SourceInfo(percent_encoding/src/lib.rs:96:39-96:67)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:96:14-96:68)
      kind: _6 = core::str::from_utf8_unchecked(move _7) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: _0 = &(*_6)
    SourceInfo(percent_encoding/src/lib.rs:96:14-96:68)
  1: StorageDead(_7)
    SourceInfo(percent_encoding/src/lib.rs:96:67-96:68)
  2: StorageDead(_2)
    SourceInfo(percent_encoding/src/lib.rs:97:1-97:2)
  3: StorageDead(_11)
    SourceInfo(percent_encoding/src/lib.rs:97:1-97:2)
  4: StorageDead(_9)
    SourceInfo(percent_encoding/src/lib.rs:97:1-97:2)
  5: StorageDead(_8)
    SourceInfo(percent_encoding/src/lib.rs:97:1-97:2)
  6: StorageDead(_6)
    SourceInfo(percent_encoding/src/lib.rs:97:1-97:2)
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:97:2-97:2)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(percent_encoding/src/lib.rs:73:1-97:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

