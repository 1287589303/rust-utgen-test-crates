[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = b'a';",
          "    let result = byte.digit();",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_some());",
          "    assert_eq!(result, Some(0));"
        ],
        "code": [
          "{",
          "    let byte: u8 = b'a';",
          "    let result = byte.digit();",
          "    assert!(result.is_some());",
          "    assert_eq!(result, Some(0));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = b'b';",
          "    let result = byte.digit();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Some(1));"
        ],
        "code": [
          "{",
          "    let byte: u8 = b'b';",
          "    let result = byte.digit();",
          "    assert_eq!(result, Some(1));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = b'z';",
          "    let result = byte.digit();",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_some());",
          "    assert_eq!(result.unwrap(), 25);"
        ],
        "code": [
          "{",
          "    let byte: u8 = b'z';",
          "    let result = byte.digit();",
          "    assert!(result.is_some());",
          "    assert_eq!(result.unwrap(), 25);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = b'm';",
          "    let result = byte.digit();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Some(12));"
        ],
        "code": [
          "{",
          "    let byte: u8 = b'm';",
          "    let result = byte.digit();",
          "    assert_eq!(result, Some(12));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = b'n';",
          "    let result = byte.digit();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Some(13));"
        ],
        "code": [
          "{",
          "    let byte: u8 = b'n';",
          "    let result = byte.digit();",
          "    assert_eq!(result, Some(13));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = b'y';",
          "    let result = byte.digit();",
          "}"
        ],
        "oracle": [
          "    let byte: u8 = b'y';",
          "    let expected = Some((byte - b'a') as u32);",
          "    assert_eq!(result, expected);"
        ],
        "code": [
          "{",
          "    let byte: u8 = b'y';",
          "    let result = byte.digit();",
          "    let byte: u8 = b'y';",
          "    let expected = Some((byte - b'a') as u32);",
          "    assert_eq!(result, expected);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]