[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let host = Host::Domain(String::new());",
          "    let result = HostInternal::from(host);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, HostInternal::None);"
        ],
        "code": [
          "{",
          "    let host = Host::Domain(String::new());",
          "    let result = HostInternal::from(host);",
          "    assert_eq!(result, HostInternal::None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let host = Host::Domain(String::from(\"example.com\"));",
          "    let result = HostInternal::from(host);",
          "}"
        ],
        "oracle": [
          "    HostInternal::from(Host::Domain(String::from(\"\"))) == HostInternal::None",
          "    HostInternal::from(Host::Domain(String::from(\"non_empty\"))) == HostInternal::Domain",
          "    HostInternal::from(Host::Ipv4(Ipv4Addr::new(192, 168, 1, 1))) == HostInternal::Ipv4(Ipv4Addr::new(192, 168, 1, 1))",
          "    HostInternal::from(Host::Ipv6(Ipv6Addr::new(0x2001, 0x0db8, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001))) == HostInternal::Ipv6(Ipv6Addr::new(0x2001, 0x0db8, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001))"
        ],
        "code": [
          "{",
          "    let host = Host::Domain(String::from(\"example.com\"));",
          "    let result = HostInternal::from(host);",
          "    HostInternal::from(Host::Domain(String::from(\"\"))) == HostInternal::None",
          "    HostInternal::from(Host::Domain(String::from(\"non_empty\"))) == HostInternal::Domain",
          "    HostInternal::from(Host::Ipv4(Ipv4Addr::new(192, 168, 1, 1))) == HostInternal::Ipv4(Ipv4Addr::new(192, 168, 1, 1))",
          "    HostInternal::from(Host::Ipv6(Ipv6Addr::new(0x2001, 0x0db8, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001))) == HostInternal::Ipv6(Ipv6Addr::new(0x2001, 0x0db8, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001))",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]