[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let host = Host::Domain(\"example.com\".to_string());",
          "    let result: HostInternal = host.into();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, HostInternal::Domain);"
        ],
        "code": [
          "{",
          "    let host = Host::Domain(\"example.com\".to_string());",
          "    let result: HostInternal = host.into();",
          "    assert_eq!(result, HostInternal::Domain);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let host = Host::Domain(\"test.host\".to_string());",
          "    let result: HostInternal = host.into();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, HostInternal::Domain);"
        ],
        "code": [
          "{",
          "    let host = Host::Domain(\"test.host\".to_string());",
          "    let result: HostInternal = host.into();",
          "    assert_eq!(result, HostInternal::Domain);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let host = Host::Domain(\"1234\".to_string());",
          "    let result: HostInternal = host.into();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, HostInternal::Domain);"
        ],
        "code": [
          "{",
          "    let host = Host::Domain(\"1234\".to_string());",
          "    let result: HostInternal = host.into();",
          "    assert_eq!(result, HostInternal::Domain);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let host = Host::Domain(\"my-domain.com\".to_string());",
          "    let result: HostInternal = host.into();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, HostInternal::Domain);"
        ],
        "code": [
          "{",
          "    let host = Host::Domain(\"my-domain.com\".to_string());",
          "    let result: HostInternal = host.into();",
          "    assert_eq!(result, HostInternal::Domain);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]