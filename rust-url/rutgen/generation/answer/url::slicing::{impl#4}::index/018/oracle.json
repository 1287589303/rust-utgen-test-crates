[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url {",
          "        serialization: String::from(\"http://user:pass@localhost:8080/path?query#fragment\"),",
          "        scheme_end: 4,",
          "        username_end: 8,",
          "        host_start: 9,",
          "        host_end: 15, // host_end is not ':' character",
          "        host: HostInternal::Domain,",
          "        port: Some(8080),",
          "        path_start: 19,",
          "        query_start: Some(24),",
          "        fragment_start: Some(30),",
          "    };",
          "    let position = Position::BeforePort;",
          "    let result = url.index(position);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 16);"
        ],
        "code": [
          "{",
          "    let url = Url {",
          "        serialization: String::from(\"http://user:pass@localhost:8080/path?query#fragment\"),",
          "        scheme_end: 4,",
          "        username_end: 8,",
          "        host_start: 9,",
          "        host_end: 15, // host_end is not ':' character",
          "        host: HostInternal::Domain,",
          "        port: Some(8080),",
          "        path_start: 19,",
          "        query_start: Some(24),",
          "        fragment_start: Some(30),",
          "    };",
          "    let position = Position::BeforePort;",
          "    let result = url.index(position);",
          "    assert_eq!(result, 16);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url {",
          "        serialization: String::from(\"http://user:pass@localhost:65535/path?query#fragment\"),",
          "        scheme_end: 4,",
          "        username_end: 8,",
          "        host_start: 9,",
          "        host_end: 15, // host_end is not ':' character",
          "        host: HostInternal::Domain,",
          "        port: Some(65535),",
          "        path_start: 19,",
          "        query_start: Some(24),",
          "        fragment_start: Some(30),",
          "    };",
          "    let position = Position::BeforePort;",
          "    let result = url.index(position);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 15 + \":\".len());"
        ],
        "code": [
          "{",
          "    let url = Url {",
          "        serialization: String::from(\"http://user:pass@localhost:65535/path?query#fragment\"),",
          "        scheme_end: 4,",
          "        username_end: 8,",
          "        host_start: 9,",
          "        host_end: 15, // host_end is not ':' character",
          "        host: HostInternal::Domain,",
          "        port: Some(65535),",
          "        path_start: 19,",
          "        query_start: Some(24),",
          "        fragment_start: Some(30),",
          "    };",
          "    let position = Position::BeforePort;",
          "    let result = url.index(position);",
          "    assert_eq!(result, 15 + \":\".len());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]