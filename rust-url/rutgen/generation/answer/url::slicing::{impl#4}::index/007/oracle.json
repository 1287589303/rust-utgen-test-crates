[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url {",
          "        serialization: String::from(\"http://username:password@host:8080/path\"),",
          "        scheme_end: 4,",
          "        username_end: 12,",
          "        host_start: 20,",
          "        host_end: 24,",
          "        host: HostInternal::Domain,",
          "        port: Some(8080),",
          "        path_start: 25,",
          "        query_start: Some(30),",
          "        fragment_start: None,",
          "    };",
          "",
          "    let position = Position::BeforeQuery;",
          "    let result = url.index(position);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 33);"
        ],
        "code": [
          "{",
          "    let url = Url {",
          "        serialization: String::from(\"http://username:password@host:8080/path\"),",
          "        scheme_end: 4,",
          "        username_end: 12,",
          "        host_start: 20,",
          "        host_end: 24,",
          "        host: HostInternal::Domain,",
          "        port: Some(8080),",
          "        path_start: 25,",
          "        query_start: Some(30),",
          "        fragment_start: None,",
          "    };",
          "",
          "    let position = Position::BeforeQuery;",
          "    let result = url.index(position);",
          "    assert_eq!(result, 33);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url {",
          "        serialization: String::from(\"https://user:pass@localhost:8888/index.html\"),",
          "        scheme_end: 5,",
          "        username_end: 12,",
          "        host_start: 13,",
          "        host_end: 21,",
          "        host: HostInternal::Domain,",
          "        port: Some(8888),",
          "        path_start: 22,",
          "        query_start: Some(27),",
          "        fragment_start: None,",
          "    };",
          "",
          "    let position = Position::BeforeQuery;",
          "    let result = url.index(position);",
          "}"
        ],
        "oracle": [
          "    assert!(result == 27 + 1);",
          "    assert!(url.byte_at(url.query_start.unwrap()) != b'?');",
          "    assert!(position == Position::BeforeQuery);",
          "    debug_assert!(url.query_start.is_some());",
          "    debug_assert!(url.fragment_start.is_none());"
        ],
        "code": [
          "{",
          "    let url = Url {",
          "        serialization: String::from(\"https://user:pass@localhost:8888/index.html\"),",
          "        scheme_end: 5,",
          "        username_end: 12,",
          "        host_start: 13,",
          "        host_end: 21,",
          "        host: HostInternal::Domain,",
          "        port: Some(8888),",
          "        path_start: 22,",
          "        query_start: Some(27),",
          "        fragment_start: None,",
          "    };",
          "",
          "    let position = Position::BeforeQuery;",
          "    let result = url.index(position);",
          "    assert!(result == 27 + 1);",
          "    assert!(url.byte_at(url.query_start.unwrap()) != b'?');",
          "    assert!(position == Position::BeforeQuery);",
          "    debug_assert!(url.query_start.is_some());",
          "    debug_assert!(url.fragment_start.is_none());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]