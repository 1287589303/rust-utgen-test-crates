self.cannot_be_a_base() is false, self.scheme() == url.scheme(), self.host() == url.host(), self.port() == url.port(), base_path.peek().is_some() is true, base_path.peek() == url_path.peek() is true, base_path.peek().is_some() is false, base_path_segment in base_path is true, base_path_segment.is_empty() is false, relative.is_empty() is false, base_path_segment in base_path is false, url_path_segment in url_path is true, relative.is_empty() is false, url_path_segment in url_path is false, relative.is_empty() is false, url_filename.is_empty() is false, relative.is_empty() is false, let Some(query) = url.query() is true, let Some(fragment) = url.fragment() is true, expected return value: Some(relative) with baseUrl as "https://example.com/path/to/resource", targetUrl as "https://example.com/path/to/resource/extra?query=param#fragment"
