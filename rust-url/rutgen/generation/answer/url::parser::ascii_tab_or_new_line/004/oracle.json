[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let ch = '\\t';",
          "    ascii_tab_or_new_line(ch);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(ascii_tab_or_new_line('\\t'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\n'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\r'), true);"
        ],
        "code": [
          "{",
          "    let ch = '\\t';",
          "    ascii_tab_or_new_line(ch);",
          "    assert_eq!(ascii_tab_or_new_line('\\t'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\n'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\r'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let ch = '\\n';",
          "    ascii_tab_or_new_line(ch);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(ascii_tab_or_new_line('\\t'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\n'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\r'), true);"
        ],
        "code": [
          "{",
          "    let ch = '\\n';",
          "    ascii_tab_or_new_line(ch);",
          "    assert_eq!(ascii_tab_or_new_line('\\t'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\n'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\r'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let ch = '\\r';",
          "    ascii_tab_or_new_line(ch);",
          "}"
        ],
        "oracle": [
          "    assert!(ascii_tab_or_new_line('\\t') == true);",
          "    assert!(ascii_tab_or_new_line('\\n') == true);",
          "    assert!(ascii_tab_or_new_line('\\r') == true);",
          "    assert!(ascii_tab_or_new_line('\\u{000C}') == false);  // form feed should return false",
          "    assert!(ascii_tab_or_new_line('a') == false);  // any other character should return false"
        ],
        "code": [
          "{",
          "    let ch = '\\r';",
          "    ascii_tab_or_new_line(ch);",
          "    assert!(ascii_tab_or_new_line('\\t') == true);",
          "    assert!(ascii_tab_or_new_line('\\n') == true);",
          "    assert!(ascii_tab_or_new_line('\\r') == true);",
          "    assert!(ascii_tab_or_new_line('\\u{000C}') == false);  // form feed should return false",
          "    assert!(ascii_tab_or_new_line('a') == false);  // any other character should return false",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]