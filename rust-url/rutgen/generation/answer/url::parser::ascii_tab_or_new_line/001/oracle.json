[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let ch = 'a';",
          "    ascii_tab_or_new_line(ch);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(ascii_tab_or_new_line('\\n'), false);",
          "    assert_eq!(ascii_tab_or_new_line('\\r'), false);",
          "    assert_eq!(ascii_tab_or_new_line('\\t'), false);"
        ],
        "code": [
          "{",
          "    let ch = 'a';",
          "    ascii_tab_or_new_line(ch);",
          "    assert_eq!(ascii_tab_or_new_line('\\n'), false);",
          "    assert_eq!(ascii_tab_or_new_line('\\r'), false);",
          "    assert_eq!(ascii_tab_or_new_line('\\t'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let ch = ' ';",
          "    ascii_tab_or_new_line(ch);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(ascii_tab_or_new_line('\\n'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\r'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\t'), true);",
          "    assert_eq!(ascii_tab_or_new_line('a'), false);",
          "    assert_eq!(ascii_tab_or_new_line('&'), false);",
          "    assert_eq!(ascii_tab_or_new_line(' '), false);",
          "    assert_eq!(ascii_tab_or_new_line('\\0'), false);"
        ],
        "code": [
          "{",
          "    let ch = ' ';",
          "    ascii_tab_or_new_line(ch);",
          "    assert_eq!(ascii_tab_or_new_line('\\n'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\r'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\t'), true);",
          "    assert_eq!(ascii_tab_or_new_line('a'), false);",
          "    assert_eq!(ascii_tab_or_new_line('&'), false);",
          "    assert_eq!(ascii_tab_or_new_line(' '), false);",
          "    assert_eq!(ascii_tab_or_new_line('\\0'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let ch = '!';",
          "    ascii_tab_or_new_line(ch);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(ascii_tab_or_new_line('\\n'), false);",
          "    assert_eq!(ascii_tab_or_new_line('\\r'), false);",
          "    assert_eq!(ascii_tab_or_new_line('\\t'), false);",
          "    assert_eq!(ascii_tab_or_new_line('!'), false);"
        ],
        "code": [
          "{",
          "    let ch = '!';",
          "    ascii_tab_or_new_line(ch);",
          "    assert_eq!(ascii_tab_or_new_line('\\n'), false);",
          "    assert_eq!(ascii_tab_or_new_line('\\r'), false);",
          "    assert_eq!(ascii_tab_or_new_line('\\t'), false);",
          "    assert_eq!(ascii_tab_or_new_line('!'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let ch = '1';",
          "    ascii_tab_or_new_line(ch);",
          "}"
        ],
        "oracle": [
          "    ascii_tab_or_new_line('1') == false",
          "    ascii_tab_or_new_line('\\n') == true",
          "    ascii_tab_or_new_line('\\r') == true",
          "    ascii_tab_or_new_line('\\t') == true"
        ],
        "code": [
          "{",
          "    let ch = '1';",
          "    ascii_tab_or_new_line(ch);",
          "    ascii_tab_or_new_line('1') == false",
          "    ascii_tab_or_new_line('\\n') == true",
          "    ascii_tab_or_new_line('\\r') == true",
          "    ascii_tab_or_new_line('\\t') == true",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let ch = 'Z';",
          "    ascii_tab_or_new_line(ch);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(ascii_tab_or_new_line('\\n'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\r'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\t'), true);",
          "    assert_eq!(ascii_tab_or_new_line('Z'), false);"
        ],
        "code": [
          "{",
          "    let ch = 'Z';",
          "    ascii_tab_or_new_line(ch);",
          "    assert_eq!(ascii_tab_or_new_line('\\n'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\r'), true);",
          "    assert_eq!(ascii_tab_or_new_line('\\t'), true);",
          "    assert_eq!(ascii_tab_or_new_line('Z'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]