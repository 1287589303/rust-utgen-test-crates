[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"invalid%type/subtype\";",
          "    let result = parse(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let input = \"invalid%type/subtype\";",
          "    let result = parse(input);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"\";",
          "    let result = parse(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);",
          "    assert!(result.is_none());"
        ],
        "code": [
          "{",
          "    let input = \"\";",
          "    let result = parse(input);",
          "    assert_eq!(result, None);",
          "    assert!(result.is_none());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"   /subtype\";",
          "    let result = parse(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(parse(\"   /subtype\"), None);"
        ],
        "code": [
          "{",
          "    let input = \"   /subtype\";",
          "    let result = parse(input);",
          "    assert_eq!(parse(\"   /subtype\"), None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"type/   \";",
          "    let result = parse(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let input = \"type/   \";",
          "    let result = parse(input);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"type/invalid%subtype\";",
          "    let result = parse(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let input = \"type/invalid%subtype\";",
          "    let result = parse(input);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]