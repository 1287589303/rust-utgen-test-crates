[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = parse(\"\");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let result = parse(\"\");",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = parse(\"   \");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let result = parse(\"   \");",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = parse(\"type!invalid@subtype;\");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(parse(\"type!invalid@subtype;\"), None);"
        ],
        "code": [
          "{",
          "    let result = parse(\"type!invalid@subtype;\");",
          "    assert_eq!(parse(\"type!invalid@subtype;\"), None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = parse(\"\\x00/type/subtype;\");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(parse(\"\\x00/type/subtype;\"), None);"
        ],
        "code": [
          "{",
          "    let result = parse(\"\\x00/type/subtype;\");",
          "    assert_eq!(parse(\"\\x00/type/subtype;\"), None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = parse(\"/\");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let result = parse(\"/\");",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]