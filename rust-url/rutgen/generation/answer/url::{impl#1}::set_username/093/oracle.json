[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut url = Url::parse(\"mailto:rmz@example.com\").unwrap();",
          "    let result = url.set_username(\"user1\");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Err(()));",
          "    assert_eq!(url.as_str(), \"mailto:rmz@example.com\");",
          "    assert!(url.username().is_empty());"
        ],
        "code": [
          "{",
          "    let mut url = Url::parse(\"mailto:rmz@example.com\").unwrap();",
          "    let result = url.set_username(\"user1\");",
          "    assert_eq!(result, Err(()));",
          "    assert_eq!(url.as_str(), \"mailto:rmz@example.com\");",
          "    assert!(url.username().is_empty());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut url = Url::parse(\"file:///path/to/file\").unwrap();",
          "    let result = url.set_username(\"user1\");",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_err());"
        ],
        "code": [
          "{",
          "    let mut url = Url::parse(\"file:///path/to/file\").unwrap();",
          "    let result = url.set_username(\"user1\");",
          "    assert!(result.is_err());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut url = Url::parse(\"ftp://:secre1@example.com/\").unwrap();",
          "    let result = url.set_username(\"\");",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_err());",
          "    assert_eq!(url.as_str(), \"ftp://:secre1@example.com/\");",
          "    assert_eq!(url.username(), \"\");",
          "    assert_eq!(url.host().is_some(), true);",
          "    assert_eq!(url.scheme(), \"ftp\");"
        ],
        "code": [
          "{",
          "    let mut url = Url::parse(\"ftp://:secre1@example.com/\").unwrap();",
          "    let result = url.set_username(\"\");",
          "    assert!(result.is_err());",
          "    assert_eq!(url.as_str(), \"ftp://:secre1@example.com/\");",
          "    assert_eq!(url.username(), \"\");",
          "    assert_eq!(url.host().is_some(), true);",
          "    assert_eq!(url.scheme(), \"ftp\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]