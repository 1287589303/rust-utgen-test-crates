[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = 0;",
          "    let _ = percent_encode_byte(byte);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(percent_encode_byte(0), \"%00\");",
          "    assert_eq!(percent_encode_byte(1), \"%01\");",
          "    assert_eq!(percent_encode_byte(2), \"%02\");",
          "    assert_eq!(percent_encode_byte(3), \"%03\");",
          "    assert_eq!(percent_encode_byte(4), \"%04\");",
          "    assert_eq!(percent_encode_byte(5), \"%05\");",
          "    assert_eq!(percent_encode_byte(6), \"%06\");",
          "    assert_eq!(percent_encode_byte(7), \"%07\");",
          "    assert_eq!(percent_encode_byte(8), \"%08\");",
          "    assert_eq!(percent_encode_byte(9), \"%09\");",
          "    assert_eq!(percent_encode_byte(10), \"%0A\");",
          "    assert_eq!(percent_encode_byte(11), \"%0B\");",
          "    assert_eq!(percent_encode_byte(12), \"%0C\");",
          "    assert_eq!(percent_encode_byte(13), \"%0D\");",
          "    assert_eq!(percent_encode_byte(14), \"%0E\");",
          "    assert_eq!(percent_encode_byte(15), \"%0F\");",
          "    assert_eq!(percent_encode_byte(16), \"%10\");",
          "    assert_eq!(percent_encode_byte(255), \"%FF\");"
        ],
        "code": [
          "{",
          "    let byte: u8 = 0;",
          "    let _ = percent_encode_byte(byte);",
          "    assert_eq!(percent_encode_byte(0), \"%00\");",
          "    assert_eq!(percent_encode_byte(1), \"%01\");",
          "    assert_eq!(percent_encode_byte(2), \"%02\");",
          "    assert_eq!(percent_encode_byte(3), \"%03\");",
          "    assert_eq!(percent_encode_byte(4), \"%04\");",
          "    assert_eq!(percent_encode_byte(5), \"%05\");",
          "    assert_eq!(percent_encode_byte(6), \"%06\");",
          "    assert_eq!(percent_encode_byte(7), \"%07\");",
          "    assert_eq!(percent_encode_byte(8), \"%08\");",
          "    assert_eq!(percent_encode_byte(9), \"%09\");",
          "    assert_eq!(percent_encode_byte(10), \"%0A\");",
          "    assert_eq!(percent_encode_byte(11), \"%0B\");",
          "    assert_eq!(percent_encode_byte(12), \"%0C\");",
          "    assert_eq!(percent_encode_byte(13), \"%0D\");",
          "    assert_eq!(percent_encode_byte(14), \"%0E\");",
          "    assert_eq!(percent_encode_byte(15), \"%0F\");",
          "    assert_eq!(percent_encode_byte(16), \"%10\");",
          "    assert_eq!(percent_encode_byte(255), \"%FF\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = 1;",
          "    let _ = percent_encode_byte(byte);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(percent_encode_byte(0), \"%00\");",
          "    assert_eq!(percent_encode_byte(1), \"%01\");",
          "    assert_eq!(percent_encode_byte(2), \"%02\");",
          "    assert_eq!(percent_encode_byte(3), \"%03\");",
          "    assert_eq!(percent_encode_byte(4), \"%04\");",
          "    assert_eq!(percent_encode_byte(5), \"%05\");",
          "    assert_eq!(percent_encode_byte(6), \"%06\");",
          "    assert_eq!(percent_encode_byte(7), \"%07\");",
          "    assert_eq!(percent_encode_byte(8), \"%08\");",
          "    assert_eq!(percent_encode_byte(9), \"%09\");",
          "    assert_eq!(percent_encode_byte(10), \"%0A\");",
          "    assert_eq!(percent_encode_byte(11), \"%0B\");",
          "    assert_eq!(percent_encode_byte(12), \"%0C\");",
          "    assert_eq!(percent_encode_byte(13), \"%0D\");",
          "    assert_eq!(percent_encode_byte(14), \"%0E\");",
          "    assert_eq!(percent_encode_byte(15), \"%0F\");",
          "    assert_eq!(percent_encode_byte(16), \"%10\");",
          "    assert_eq!(percent_encode_byte(255), \"%FF\");"
        ],
        "code": [
          "{",
          "    let byte: u8 = 1;",
          "    let _ = percent_encode_byte(byte);",
          "    assert_eq!(percent_encode_byte(0), \"%00\");",
          "    assert_eq!(percent_encode_byte(1), \"%01\");",
          "    assert_eq!(percent_encode_byte(2), \"%02\");",
          "    assert_eq!(percent_encode_byte(3), \"%03\");",
          "    assert_eq!(percent_encode_byte(4), \"%04\");",
          "    assert_eq!(percent_encode_byte(5), \"%05\");",
          "    assert_eq!(percent_encode_byte(6), \"%06\");",
          "    assert_eq!(percent_encode_byte(7), \"%07\");",
          "    assert_eq!(percent_encode_byte(8), \"%08\");",
          "    assert_eq!(percent_encode_byte(9), \"%09\");",
          "    assert_eq!(percent_encode_byte(10), \"%0A\");",
          "    assert_eq!(percent_encode_byte(11), \"%0B\");",
          "    assert_eq!(percent_encode_byte(12), \"%0C\");",
          "    assert_eq!(percent_encode_byte(13), \"%0D\");",
          "    assert_eq!(percent_encode_byte(14), \"%0E\");",
          "    assert_eq!(percent_encode_byte(15), \"%0F\");",
          "    assert_eq!(percent_encode_byte(16), \"%10\");",
          "    assert_eq!(percent_encode_byte(255), \"%FF\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = 127;",
          "    let _ = percent_encode_byte(byte);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(percent_encode_byte(0), \"%00\");",
          "    assert_eq!(percent_encode_byte(1), \"%01\");",
          "    assert_eq!(percent_encode_byte(2), \"%02\");",
          "    assert_eq!(percent_encode_byte(3), \"%03\");",
          "    assert_eq!(percent_encode_byte(4), \"%04\");",
          "    assert_eq!(percent_encode_byte(5), \"%05\");",
          "    assert_eq!(percent_encode_byte(6), \"%06\");",
          "    assert_eq!(percent_encode_byte(7), \"%07\");",
          "    assert_eq!(percent_encode_byte(8), \"%08\");",
          "    assert_eq!(percent_encode_byte(9), \"%09\");",
          "    assert_eq!(percent_encode_byte(10), \"%0A\");",
          "    assert_eq!(percent_encode_byte(11), \"%0B\");",
          "    assert_eq!(percent_encode_byte(12), \"%0C\");",
          "    assert_eq!(percent_encode_byte(13), \"%0D\");",
          "    assert_eq!(percent_encode_byte(14), \"%0E\");",
          "    assert_eq!(percent_encode_byte(15), \"%0F\");",
          "    assert_eq!(percent_encode_byte(32), \"%20\");",
          "    assert_eq!(percent_encode_byte(33), \"%21\");",
          "    assert_eq!(percent_encode_byte(34), \"%22\");",
          "    assert_eq!(percent_encode_byte(35), \"%23\");",
          "    assert_eq!(percent_encode_byte(36), \"%24\");",
          "    assert_eq!(percent_encode_byte(37), \"%25\");",
          "    assert_eq!(percent_encode_byte(38), \"%26\");",
          "    assert_eq!(percent_encode_byte(39), \"%27\");",
          "    assert_eq!(percent_encode_byte(40), \"%28\");",
          "    assert_eq!(percent_encode_byte(41), \"%29\");",
          "    assert_eq!(percent_encode_byte(42), \"%2A\");",
          "    assert_eq!(percent_encode_byte(43), \"%2B\");",
          "    assert_eq!(percent_encode_byte(44), \"%2C\");",
          "    assert_eq!(percent_encode_byte(45), \"%2D\");",
          "    assert_eq!(percent_encode_byte(46), \"%2E\");",
          "    assert_eq!(percent_encode_byte(47), \"%2F\");",
          "    assert_eq!(percent_encode_byte(127), \"%7F\");",
          "    assert_eq!(percent_encode_byte(128), \"%80\");",
          "    assert_eq!(percent_encode_byte(255), \"%FF\");"
        ],
        "code": [
          "{",
          "    let byte: u8 = 127;",
          "    let _ = percent_encode_byte(byte);",
          "    assert_eq!(percent_encode_byte(0), \"%00\");",
          "    assert_eq!(percent_encode_byte(1), \"%01\");",
          "    assert_eq!(percent_encode_byte(2), \"%02\");",
          "    assert_eq!(percent_encode_byte(3), \"%03\");",
          "    assert_eq!(percent_encode_byte(4), \"%04\");",
          "    assert_eq!(percent_encode_byte(5), \"%05\");",
          "    assert_eq!(percent_encode_byte(6), \"%06\");",
          "    assert_eq!(percent_encode_byte(7), \"%07\");",
          "    assert_eq!(percent_encode_byte(8), \"%08\");",
          "    assert_eq!(percent_encode_byte(9), \"%09\");",
          "    assert_eq!(percent_encode_byte(10), \"%0A\");",
          "    assert_eq!(percent_encode_byte(11), \"%0B\");",
          "    assert_eq!(percent_encode_byte(12), \"%0C\");",
          "    assert_eq!(percent_encode_byte(13), \"%0D\");",
          "    assert_eq!(percent_encode_byte(14), \"%0E\");",
          "    assert_eq!(percent_encode_byte(15), \"%0F\");",
          "    assert_eq!(percent_encode_byte(32), \"%20\");",
          "    assert_eq!(percent_encode_byte(33), \"%21\");",
          "    assert_eq!(percent_encode_byte(34), \"%22\");",
          "    assert_eq!(percent_encode_byte(35), \"%23\");",
          "    assert_eq!(percent_encode_byte(36), \"%24\");",
          "    assert_eq!(percent_encode_byte(37), \"%25\");",
          "    assert_eq!(percent_encode_byte(38), \"%26\");",
          "    assert_eq!(percent_encode_byte(39), \"%27\");",
          "    assert_eq!(percent_encode_byte(40), \"%28\");",
          "    assert_eq!(percent_encode_byte(41), \"%29\");",
          "    assert_eq!(percent_encode_byte(42), \"%2A\");",
          "    assert_eq!(percent_encode_byte(43), \"%2B\");",
          "    assert_eq!(percent_encode_byte(44), \"%2C\");",
          "    assert_eq!(percent_encode_byte(45), \"%2D\");",
          "    assert_eq!(percent_encode_byte(46), \"%2E\");",
          "    assert_eq!(percent_encode_byte(47), \"%2F\");",
          "    assert_eq!(percent_encode_byte(127), \"%7F\");",
          "    assert_eq!(percent_encode_byte(128), \"%80\");",
          "    assert_eq!(percent_encode_byte(255), \"%FF\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = 128;",
          "    let _ = percent_encode_byte(byte);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(percent_encode_byte(0), \"%00\");",
          "    assert_eq!(percent_encode_byte(1), \"%01\");",
          "    assert_eq!(percent_encode_byte(2), \"%02\");",
          "    assert_eq!(percent_encode_byte(3), \"%03\");",
          "    assert_eq!(percent_encode_byte(4), \"%04\");",
          "    assert_eq!(percent_encode_byte(5), \"%05\");",
          "    assert_eq!(percent_encode_byte(6), \"%06\");",
          "    assert_eq!(percent_encode_byte(7), \"%07\");",
          "    assert_eq!(percent_encode_byte(8), \"%08\");",
          "    assert_eq!(percent_encode_byte(9), \"%09\");",
          "    assert_eq!(percent_encode_byte(10), \"%0A\");",
          "    assert_eq!(percent_encode_byte(11), \"%0B\");",
          "    assert_eq!(percent_encode_byte(12), \"%0C\");",
          "    assert_eq!(percent_encode_byte(13), \"%0D\");",
          "    assert_eq!(percent_encode_byte(14), \"%0E\");",
          "    assert_eq!(percent_encode_byte(15), \"%0F\");",
          "    assert_eq!(percent_encode_byte(32), \"%20\");",
          "    assert_eq!(percent_encode_byte(33), \"%21\");",
          "    assert_eq!(percent_encode_byte(34), \"%22\");",
          "    assert_eq!(percent_encode_byte(35), \"%23\");",
          "    assert_eq!(percent_encode_byte(36), \"%24\");",
          "    assert_eq!(percent_encode_byte(37), \"%25\");",
          "    assert_eq!(percent_encode_byte(38), \"%26\");",
          "    assert_eq!(percent_encode_byte(39), \"%27\");",
          "    assert_eq!(percent_encode_byte(40), \"%28\");",
          "    assert_eq!(percent_encode_byte(41), \"%29\");",
          "    assert_eq!(percent_encode_byte(42), \"%2A\");",
          "    assert_eq!(percent_encode_byte(43), \"%2B\");",
          "    assert_eq!(percent_encode_byte(44), \"%2C\");",
          "    assert_eq!(percent_encode_byte(45), \"%2D\");",
          "    assert_eq!(percent_encode_byte(46), \"%2E\");",
          "    assert_eq!(percent_encode_byte(47), \"%2F\");",
          "    assert_eq!(percent_encode_byte(127), \"%7F\");",
          "    assert_eq!(percent_encode_byte(128), \"%80\");",
          "    assert_eq!(percent_encode_byte(255), \"%FF\");"
        ],
        "code": [
          "{",
          "    let byte: u8 = 128;",
          "    let _ = percent_encode_byte(byte);",
          "    assert_eq!(percent_encode_byte(0), \"%00\");",
          "    assert_eq!(percent_encode_byte(1), \"%01\");",
          "    assert_eq!(percent_encode_byte(2), \"%02\");",
          "    assert_eq!(percent_encode_byte(3), \"%03\");",
          "    assert_eq!(percent_encode_byte(4), \"%04\");",
          "    assert_eq!(percent_encode_byte(5), \"%05\");",
          "    assert_eq!(percent_encode_byte(6), \"%06\");",
          "    assert_eq!(percent_encode_byte(7), \"%07\");",
          "    assert_eq!(percent_encode_byte(8), \"%08\");",
          "    assert_eq!(percent_encode_byte(9), \"%09\");",
          "    assert_eq!(percent_encode_byte(10), \"%0A\");",
          "    assert_eq!(percent_encode_byte(11), \"%0B\");",
          "    assert_eq!(percent_encode_byte(12), \"%0C\");",
          "    assert_eq!(percent_encode_byte(13), \"%0D\");",
          "    assert_eq!(percent_encode_byte(14), \"%0E\");",
          "    assert_eq!(percent_encode_byte(15), \"%0F\");",
          "    assert_eq!(percent_encode_byte(32), \"%20\");",
          "    assert_eq!(percent_encode_byte(33), \"%21\");",
          "    assert_eq!(percent_encode_byte(34), \"%22\");",
          "    assert_eq!(percent_encode_byte(35), \"%23\");",
          "    assert_eq!(percent_encode_byte(36), \"%24\");",
          "    assert_eq!(percent_encode_byte(37), \"%25\");",
          "    assert_eq!(percent_encode_byte(38), \"%26\");",
          "    assert_eq!(percent_encode_byte(39), \"%27\");",
          "    assert_eq!(percent_encode_byte(40), \"%28\");",
          "    assert_eq!(percent_encode_byte(41), \"%29\");",
          "    assert_eq!(percent_encode_byte(42), \"%2A\");",
          "    assert_eq!(percent_encode_byte(43), \"%2B\");",
          "    assert_eq!(percent_encode_byte(44), \"%2C\");",
          "    assert_eq!(percent_encode_byte(45), \"%2D\");",
          "    assert_eq!(percent_encode_byte(46), \"%2E\");",
          "    assert_eq!(percent_encode_byte(47), \"%2F\");",
          "    assert_eq!(percent_encode_byte(127), \"%7F\");",
          "    assert_eq!(percent_encode_byte(128), \"%80\");",
          "    assert_eq!(percent_encode_byte(255), \"%FF\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = 255;",
          "    let _ = percent_encode_byte(byte);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(percent_encode_byte(0), \"%00\");",
          "    assert_eq!(percent_encode_byte(1), \"%01\");",
          "    assert_eq!(percent_encode_byte(2), \"%02\");",
          "    assert_eq!(percent_encode_byte(3), \"%03\");",
          "    assert_eq!(percent_encode_byte(4), \"%04\");",
          "    assert_eq!(percent_encode_byte(5), \"%05\");",
          "    assert_eq!(percent_encode_byte(6), \"%06\");",
          "    assert_eq!(percent_encode_byte(7), \"%07\");",
          "    assert_eq!(percent_encode_byte(8), \"%08\");",
          "    assert_eq!(percent_encode_byte(9), \"%09\");",
          "    assert_eq!(percent_encode_byte(10), \"%0A\");",
          "    assert_eq!(percent_encode_byte(11), \"%0B\");",
          "    assert_eq!(percent_encode_byte(12), \"%0C\");",
          "    assert_eq!(percent_encode_byte(13), \"%0D\");",
          "    assert_eq!(percent_encode_byte(14), \"%0E\");",
          "    assert_eq!(percent_encode_byte(15), \"%0F\");",
          "    assert_eq!(percent_encode_byte(32), \"%20\");",
          "    assert_eq!(percent_encode_byte(33), \"%21\");",
          "    assert_eq!(percent_encode_byte(34), \"%22\");",
          "    assert_eq!(percent_encode_byte(35), \"%23\");",
          "    assert_eq!(percent_encode_byte(36), \"%24\");",
          "    assert_eq!(percent_encode_byte(37), \"%25\");",
          "    assert_eq!(percent_encode_byte(126), \"%7E\");",
          "    assert_eq!(percent_encode_byte(127), \"%7F\");",
          "    assert_eq!(percent_encode_byte(128), \"%80\");",
          "    assert_eq!(percent_encode_byte(255), \"%FF\");"
        ],
        "code": [
          "{",
          "    let byte: u8 = 255;",
          "    let _ = percent_encode_byte(byte);",
          "    assert_eq!(percent_encode_byte(0), \"%00\");",
          "    assert_eq!(percent_encode_byte(1), \"%01\");",
          "    assert_eq!(percent_encode_byte(2), \"%02\");",
          "    assert_eq!(percent_encode_byte(3), \"%03\");",
          "    assert_eq!(percent_encode_byte(4), \"%04\");",
          "    assert_eq!(percent_encode_byte(5), \"%05\");",
          "    assert_eq!(percent_encode_byte(6), \"%06\");",
          "    assert_eq!(percent_encode_byte(7), \"%07\");",
          "    assert_eq!(percent_encode_byte(8), \"%08\");",
          "    assert_eq!(percent_encode_byte(9), \"%09\");",
          "    assert_eq!(percent_encode_byte(10), \"%0A\");",
          "    assert_eq!(percent_encode_byte(11), \"%0B\");",
          "    assert_eq!(percent_encode_byte(12), \"%0C\");",
          "    assert_eq!(percent_encode_byte(13), \"%0D\");",
          "    assert_eq!(percent_encode_byte(14), \"%0E\");",
          "    assert_eq!(percent_encode_byte(15), \"%0F\");",
          "    assert_eq!(percent_encode_byte(32), \"%20\");",
          "    assert_eq!(percent_encode_byte(33), \"%21\");",
          "    assert_eq!(percent_encode_byte(34), \"%22\");",
          "    assert_eq!(percent_encode_byte(35), \"%23\");",
          "    assert_eq!(percent_encode_byte(36), \"%24\");",
          "    assert_eq!(percent_encode_byte(37), \"%25\");",
          "    assert_eq!(percent_encode_byte(126), \"%7E\");",
          "    assert_eq!(percent_encode_byte(127), \"%7F\");",
          "    assert_eq!(percent_encode_byte(128), \"%80\");",
          "    assert_eq!(percent_encode_byte(255), \"%FF\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]