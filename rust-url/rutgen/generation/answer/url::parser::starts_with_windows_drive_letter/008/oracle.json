[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"C:\";",
          "    starts_with_windows_drive_letter(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(starts_with_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C:/\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C:\\\\\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C?\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C#\"), false);"
        ],
        "code": [
          "{",
          "    let input = \"C:\";",
          "    starts_with_windows_drive_letter(input);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C:/\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C:\\\\\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C?\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C#\"), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"D|\";",
          "    starts_with_windows_drive_letter(input);",
          "}"
        ],
        "oracle": [
          "    assert!(starts_with_windows_drive_letter(\"D|\") == false);"
        ],
        "code": [
          "{",
          "    let input = \"D|\";",
          "    starts_with_windows_drive_letter(input);",
          "    assert!(starts_with_windows_drive_letter(\"D|\") == false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"Z:/\";",
          "    starts_with_windows_drive_letter(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(starts_with_windows_drive_letter(\"Z:/\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z:\\\\\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z:?\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z:#\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A:/\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A:\\\\\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A:?\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A:#\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"B:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Y|\"), true);"
        ],
        "code": [
          "{",
          "    let input = \"Z:/\";",
          "    starts_with_windows_drive_letter(input);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z:/\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z:\\\\\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z:?\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z:#\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A:/\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A:\\\\\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A:?\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A:#\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"B:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Y|\"), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"A\\\\\";",
          "    starts_with_windows_drive_letter(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(starts_with_windows_drive_letter(\"A:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A/\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A\\\\\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A?\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A#\"), false);"
        ],
        "code": [
          "{",
          "    let input = \"A\\\\\";",
          "    starts_with_windows_drive_letter(input);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A/\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A\\\\\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A?\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A#\"), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"E?\";",
          "    starts_with_windows_drive_letter(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(starts_with_windows_drive_letter(\"E?\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"D|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z/\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A\\\\\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"M#\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"X:\"), true);"
        ],
        "code": [
          "{",
          "    let input = \"E?\";",
          "    starts_with_windows_drive_letter(input);",
          "    assert_eq!(starts_with_windows_drive_letter(\"E?\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"D|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z/\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A\\\\\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"M#\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"X:\"), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"F#\";",
          "    starts_with_windows_drive_letter(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(starts_with_windows_drive_letter(\"F:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"F|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"F/\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"F\\\\\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"F?\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"F#\"), false);"
        ],
        "code": [
          "{",
          "    let input = \"F#\";",
          "    starts_with_windows_drive_letter(input);",
          "    assert_eq!(starts_with_windows_drive_letter(\"F:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"F|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"F/\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"F\\\\\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"F?\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"F#\"), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"X|\";",
          "    starts_with_windows_drive_letter(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(starts_with_windows_drive_letter(\"X|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"B|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"D|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"E:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"F|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"M:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"R|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"AB:\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"X:\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"X/\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C\\\\\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"T?\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"X#\"), false);"
        ],
        "code": [
          "{",
          "    let input = \"X|\";",
          "    starts_with_windows_drive_letter(input);",
          "    assert_eq!(starts_with_windows_drive_letter(\"X|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"A:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"B|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"D|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"E:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"F|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"Z:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"M:\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"R|\"), true);",
          "    assert_eq!(starts_with_windows_drive_letter(\"AB:\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"X:\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"X/\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"C\\\\\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"T?\"), false);",
          "    assert_eq!(starts_with_windows_drive_letter(\"X#\"), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]