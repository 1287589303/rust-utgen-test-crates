[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url::parse(\"https://example.com/products?page=2\").unwrap();",
          "    let query = url.query();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(query, Some(\"page=2\"));",
          "    ",
          "    let url = Url::parse(\"https://example.com/products\").unwrap();",
          "    let query = url.query();",
          "    assert!(query.is_none());",
          "    ",
          "    let url = Url::parse(\"https://example.com/?country=español\").unwrap();",
          "    let query = url.query();",
          "    assert_eq!(query, Some(\"country=espa%C3%B1ol\"));"
        ],
        "code": [
          "{",
          "    let url = Url::parse(\"https://example.com/products?page=2\").unwrap();",
          "    let query = url.query();",
          "    assert_eq!(query, Some(\"page=2\"));",
          "    ",
          "    let url = Url::parse(\"https://example.com/products\").unwrap();",
          "    let query = url.query();",
          "    assert!(query.is_none());",
          "    ",
          "    let url = Url::parse(\"https://example.com/?country=español\").unwrap();",
          "    let query = url.query();",
          "    assert_eq!(query, Some(\"country=espa%C3%B1ol\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url::parse(\"https://example.com/?country=español\").unwrap();",
          "    let query = url.query();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(query, Some(\"country=espa%C3%B1ol\"));"
        ],
        "code": [
          "{",
          "    let url = Url::parse(\"https://example.com/?country=español\").unwrap();",
          "    let query = url.query();",
          "    assert_eq!(query, Some(\"country=espa%C3%B1ol\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url::parse(\"https://example.com/products\").unwrap();",
          "    let query = url.query();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(query, None);",
          "    let url = Url::parse(\"https://example.com/products?page=2\").unwrap();",
          "    let query = url.query();",
          "    assert_eq!(query, Some(\"page=2\"));",
          "    let url = Url::parse(\"https://example.com/?country=español\").unwrap();",
          "    let query = url.query();",
          "    assert_eq!(query, Some(\"country=espa%C3%B1ol\"));"
        ],
        "code": [
          "{",
          "    let url = Url::parse(\"https://example.com/products\").unwrap();",
          "    let query = url.query();",
          "    assert_eq!(query, None);",
          "    let url = Url::parse(\"https://example.com/products?page=2\").unwrap();",
          "    let query = url.query();",
          "    assert_eq!(query, Some(\"page=2\"));",
          "    let url = Url::parse(\"https://example.com/?country=español\").unwrap();",
          "    let query = url.query();",
          "    assert_eq!(query, Some(\"country=espa%C3%B1ol\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]