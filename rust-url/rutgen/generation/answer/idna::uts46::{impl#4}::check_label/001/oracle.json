[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let mut had_errors = false;",
          "    let mut label: &mut [char] = &mut ['-', 'a', 'b', 'c', '-'];",
          "    ",
          "    let result = uts46.check_label(",
          "        Hyphens::Check,",
          "        label,",
          "        false,",
          "        &mut had_errors,",
          "        false,",
          "        false,",
          "    );",
          "}"
        ],
        "oracle": [
          "    let uts46 = Uts46::new();",
          "    let mut had_errors = false;",
          "    let mut label: &mut [char] = &mut ['-', 'a', 'b', 'c', '-'];",
          "    let result = uts46.check_label(",
          "    Hyphens::Check,",
          "    label,",
          "    false,",
          "    &mut had_errors,",
          "    false,",
          "    false,",
          "    );",
          "    assert_eq!(result, true);",
          "    assert!(had_errors);",
          "    assert_eq!(label, &mut ['\\u{FFFD}', 'a', 'b', 'c', '\\u{FFFD}']);"
        ],
        "code": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let mut had_errors = false;",
          "    let mut label: &mut [char] = &mut ['-', 'a', 'b', 'c', '-'];",
          "    ",
          "    let result = uts46.check_label(",
          "        Hyphens::Check,",
          "        label,",
          "        false,",
          "        &mut had_errors,",
          "        false,",
          "        false,",
          "    );",
          "    let uts46 = Uts46::new();",
          "    let mut had_errors = false;",
          "    let mut label: &mut [char] = &mut ['-', 'a', 'b', 'c', '-'];",
          "    let result = uts46.check_label(",
          "    Hyphens::Check,",
          "    label,",
          "    false,",
          "    &mut had_errors,",
          "    false,",
          "    false,",
          "    );",
          "    assert_eq!(result, true);",
          "    assert!(had_errors);",
          "    assert_eq!(label, &mut ['\\u{FFFD}', 'a', 'b', 'c', '\\u{FFFD}']);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let mut had_errors = false;",
          "    let mut label: &mut [char] = &mut ['-', 'a', 'b', 'c', '-'];",
          "    ",
          "    let result = uts46.check_label(",
          "        Hyphens::CheckFirstLast,",
          "        label,",
          "        false,",
          "        &mut had_errors,",
          "        false,",
          "        false,",
          "    );",
          "}"
        ],
        "oracle": [
          "    let label: &mut [char] = &mut ['-', 'a', 'b', 'c', '-'];",
          "    let result = uts46.check_label(",
          "    Hyphens::CheckFirstLast,",
          "    label,",
          "    false,",
          "    &mut had_errors,",
          "    false,",
          "    false,",
          "    );",
          "    assert_eq!(result, true);"
        ],
        "code": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let mut had_errors = false;",
          "    let mut label: &mut [char] = &mut ['-', 'a', 'b', 'c', '-'];",
          "    ",
          "    let result = uts46.check_label(",
          "        Hyphens::CheckFirstLast,",
          "        label,",
          "        false,",
          "        &mut had_errors,",
          "        false,",
          "        false,",
          "    );",
          "    let label: &mut [char] = &mut ['-', 'a', 'b', 'c', '-'];",
          "    let result = uts46.check_label(",
          "    Hyphens::CheckFirstLast,",
          "    label,",
          "    false,",
          "    &mut had_errors,",
          "    false,",
          "    false,",
          "    );",
          "    assert_eq!(result, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let mut had_errors = false;",
          "    let mut label: &mut [char] = &mut ['-', 'x', 'y', 'z', '-'];",
          "    ",
          "    let result = uts46.check_label(",
          "        Hyphens::CheckFirstLast,",
          "        label,",
          "        true,",
          "        &mut had_errors,",
          "        false,",
          "        false,",
          "    );",
          "}"
        ],
        "oracle": [
          "    let mut had_errors = false;",
          "    let mut label: &mut [char] = &mut ['-', 'x', 'y', 'z', '-'];",
          "    let result = uts46.check_label(",
          "    Hyphens::CheckFirstLast,",
          "    label,",
          "    true,",
          "    &mut had_errors,",
          "    false,",
          "    false,",
          "    );",
          "    assert_eq!(result, true);",
          "    assert!(had_errors);"
        ],
        "code": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let mut had_errors = false;",
          "    let mut label: &mut [char] = &mut ['-', 'x', 'y', 'z', '-'];",
          "    ",
          "    let result = uts46.check_label(",
          "        Hyphens::CheckFirstLast,",
          "        label,",
          "        true,",
          "        &mut had_errors,",
          "        false,",
          "        false,",
          "    );",
          "    let mut had_errors = false;",
          "    let mut label: &mut [char] = &mut ['-', 'x', 'y', 'z', '-'];",
          "    let result = uts46.check_label(",
          "    Hyphens::CheckFirstLast,",
          "    label,",
          "    true,",
          "    &mut had_errors,",
          "    false,",
          "    false,",
          "    );",
          "    assert_eq!(result, true);",
          "    assert!(had_errors);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]