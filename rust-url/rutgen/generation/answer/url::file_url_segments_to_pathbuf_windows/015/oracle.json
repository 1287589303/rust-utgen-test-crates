[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let estimated_capacity = 20;",
          "    let host = Some(\"hostname\");",
          "    let segments = \"p%3a|segment1\".split('|');",
          "    let result = file_url_segments_to_pathbuf_windows(estimated_capacity, host, segments);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_ok());",
          "    assert!(result.as_ref().unwrap().is_absolute());",
          "    assert_eq!(result.unwrap().to_string_lossy(), r\"\\\\hostname\\p:a\\segment1\");",
          "    assert!(result.unwrap().components().count() > 0);",
          "    assert!(result.unwrap().as_os_str().to_string_lossy().len() <= estimated_capacity);"
        ],
        "code": [
          "{",
          "    let estimated_capacity = 20;",
          "    let host = Some(\"hostname\");",
          "    let segments = \"p%3a|segment1\".split('|');",
          "    let result = file_url_segments_to_pathbuf_windows(estimated_capacity, host, segments);",
          "    assert!(result.is_ok());",
          "    assert!(result.as_ref().unwrap().is_absolute());",
          "    assert_eq!(result.unwrap().to_string_lossy(), r\"\\\\hostname\\p:a\\segment1\");",
          "    assert!(result.unwrap().components().count() > 0);",
          "    assert!(result.unwrap().as_os_str().to_string_lossy().len() <= estimated_capacity);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let estimated_capacity = 20;",
          "    let host = Some(\"hostname\");",
          "    let segments = \"p%3a|segment1\".split('|');",
          "    let result = file_url_segments_to_pathbuf_windows(estimated_capacity, host, segments);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_ok());",
          "    let path = result.unwrap();",
          "    assert_eq!(path.to_string_lossy(), r\"\\\\hostname\\p:a\\segment1\");",
          "    assert!(path.is_absolute());"
        ],
        "code": [
          "{",
          "    let estimated_capacity = 20;",
          "    let host = Some(\"hostname\");",
          "    let segments = \"p%3a|segment1\".split('|');",
          "    let result = file_url_segments_to_pathbuf_windows(estimated_capacity, host, segments);",
          "    assert!(result.is_ok());",
          "    let path = result.unwrap();",
          "    assert_eq!(path.to_string_lossy(), r\"\\\\hostname\\p:a\\segment1\");",
          "    assert!(path.is_absolute());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]