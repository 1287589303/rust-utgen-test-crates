[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let uts46_instance = Uts46::new();",
          "}"
        ],
        "oracle": [
          "    let uts46_instance = Uts46::new();",
          "    assert_eq!(uts46_instance.data, idna_adapter::Adapter::new());",
          "    assert!(std::mem::size_of::<Uts46>() > 0);",
          "    assert!(std::mem::size_of::<idna_adapter::Adapter>() > 0);",
          "    assert!(uts46_instance.data.is_initialized());"
        ],
        "code": [
          "{",
          "    let uts46_instance = Uts46::new();",
          "    let uts46_instance = Uts46::new();",
          "    assert_eq!(uts46_instance.data, idna_adapter::Adapter::new());",
          "    assert!(std::mem::size_of::<Uts46>() > 0);",
          "    assert!(std::mem::size_of::<idna_adapter::Adapter>() > 0);",
          "    assert!(uts46_instance.data.is_initialized());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let _instance1 = Uts46::new();",
          "    let _instance2 = Uts46::new();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(_instance1.data, idna_adapter::Adapter::new());",
          "    assert_eq!(_instance2.data, idna_adapter::Adapter::new());"
        ],
        "code": [
          "{",
          "    let _instance1 = Uts46::new();",
          "    let _instance2 = Uts46::new();",
          "    assert_eq!(_instance1.data, idna_adapter::Adapter::new());",
          "    assert_eq!(_instance2.data, idna_adapter::Adapter::new());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let instance: Uts46 = Uts46::new();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(instance.data, idna_adapter::Adapter::new());"
        ],
        "code": [
          "{",
          "    let instance: Uts46 = Uts46::new();",
          "    assert_eq!(instance.data, idna_adapter::Adapter::new());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]