[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url::parse(\"file:///tmp/foo\").unwrap();",
          "    let _ = url.authority();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(url.authority(), \"\");"
        ],
        "code": [
          "{",
          "    let url = Url::parse(\"file:///tmp/foo\").unwrap();",
          "    let _ = url.authority();",
          "    assert_eq!(url.authority(), \"\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url::parse(\"unix:/run/foo.socket\").unwrap();",
          "    let _ = url.authority();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(url.authority(), \"\");",
          "    let url = Url::parse(\"file:///tmp/foo\").unwrap();",
          "    assert_eq!(url.authority(), \"\");"
        ],
        "code": [
          "{",
          "    let url = Url::parse(\"unix:/run/foo.socket\").unwrap();",
          "    let _ = url.authority();",
          "    assert_eq!(url.authority(), \"\");",
          "    let url = Url::parse(\"file:///tmp/foo\").unwrap();",
          "    assert_eq!(url.authority(), \"\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url::parse(\"://invalid\").unwrap();",
          "    let _ = url.authority();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(url.authority(), \"\");"
        ],
        "code": [
          "{",
          "    let url = Url::parse(\"://invalid\").unwrap();",
          "    let _ = url.authority();",
          "    assert_eq!(url.authority(), \"\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url::parse(\"http://path/to/resource\").unwrap();",
          "    let _ = url.authority();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(url.authority(), \"\");"
        ],
        "code": [
          "{",
          "    let url = Url::parse(\"http://path/to/resource\").unwrap();",
          "    let _ = url.authority();",
          "    assert_eq!(url.authority(), \"\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]