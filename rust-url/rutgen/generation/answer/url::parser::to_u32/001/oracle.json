[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input: usize = u32::MAX as usize;",
          "    let result = to_u32(input);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), u32::MAX);"
        ],
        "code": [
          "{",
          "    let input: usize = u32::MAX as usize;",
          "    let result = to_u32(input);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), u32::MAX);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input: usize = 0;",
          "    let result = to_u32(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(0));",
          "    let input: usize = u32::MAX as usize;",
          "    let result = to_u32(input);",
          "    assert_eq!(result, Ok(u32::MAX));",
          "    let input: usize = u32::MAX as usize - 1;",
          "    let result = to_u32(input);",
          "    assert_eq!(result, Ok(u32::MAX - 1));"
        ],
        "code": [
          "{",
          "    let input: usize = 0;",
          "    let result = to_u32(input);",
          "    assert_eq!(result, Ok(0));",
          "    let input: usize = u32::MAX as usize;",
          "    let result = to_u32(input);",
          "    assert_eq!(result, Ok(u32::MAX));",
          "    let input: usize = u32::MAX as usize - 1;",
          "    let result = to_u32(input);",
          "    assert_eq!(result, Ok(u32::MAX - 1));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input: usize = 100;",
          "    let result = to_u32(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(to_u32(u32::MAX as usize), Ok(u32::MAX));"
        ],
        "code": [
          "{",
          "    let input: usize = 100;",
          "    let result = to_u32(input);",
          "    assert_eq!(to_u32(u32::MAX as usize), Ok(u32::MAX));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input: usize = 4294967294; // Just below u32::MAX",
          "    let result = to_u32(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(4294967294));"
        ],
        "code": [
          "{",
          "    let input: usize = 4294967294; // Just below u32::MAX",
          "    let result = to_u32(input);",
          "    assert_eq!(result, Ok(4294967294));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]