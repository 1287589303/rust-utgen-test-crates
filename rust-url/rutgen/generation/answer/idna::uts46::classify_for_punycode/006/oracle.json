[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let label: Vec<char> = vec!['А', 'Б', 'C'];",
          "    let result = classify_for_punycode(&label);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, PunycodeClassification::Unicode);"
        ],
        "code": [
          "{",
          "    let label: Vec<char> = vec!['А', 'Б', 'C'];",
          "    let result = classify_for_punycode(&label);",
          "    assert_eq!(result, PunycodeClassification::Unicode);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let label: Vec<char> = vec!['\\u{FFFD}', 'А', 'Б', 'C'];",
          "    let result = classify_for_punycode(&label);",
          "}"
        ],
        "oracle": [
          "    let label: Vec<char> = vec!['А', 'Б', 'C'];",
          "    let result = classify_for_punycode(&label);",
          "    assert_eq!(result, PunycodeClassification::Unicode);"
        ],
        "code": [
          "{",
          "    let label: Vec<char> = vec!['\\u{FFFD}', 'А', 'Б', 'C'];",
          "    let result = classify_for_punycode(&label);",
          "    let label: Vec<char> = vec!['А', 'Б', 'C'];",
          "    let result = classify_for_punycode(&label);",
          "    assert_eq!(result, PunycodeClassification::Unicode);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]