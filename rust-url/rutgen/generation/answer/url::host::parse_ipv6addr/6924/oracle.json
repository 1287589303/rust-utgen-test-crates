[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"::\";",
          "    let result = parse_ipv6addr(input);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_err());",
          "    assert_eq!(result, Err(ParseError::InvalidIpv6Address));"
        ],
        "code": [
          "{",
          "    let input = \"::\";",
          "    let result = parse_ipv6addr(input);",
          "    assert!(result.is_err());",
          "    assert_eq!(result, Err(ParseError::InvalidIpv6Address));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \":::1\";",
          "    let result = parse_ipv6addr(input);",
          "}"
        ],
        "oracle": [
          "    let input = \":::1\";",
          "    let result = parse_ipv6addr(input);",
          "    assert_eq!(result, Err(ParseError::InvalidIpv6Address));"
        ],
        "code": [
          "{",
          "    let input = \":::1\";",
          "    let result = parse_ipv6addr(input);",
          "    let input = \":::1\";",
          "    let result = parse_ipv6addr(input);",
          "    assert_eq!(result, Err(ParseError::InvalidIpv6Address));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"1:2:3:4:5:6:7:8:9\";",
          "    let result = parse_ipv6addr(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Err(ParseError::InvalidIpv6Address));"
        ],
        "code": [
          "{",
          "    let input = \"1:2:3:4:5:6:7:8:9\";",
          "    let result = parse_ipv6addr(input);",
          "    assert_eq!(result, Err(ParseError::InvalidIpv6Address));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"2001:0db8:85a3:0000:0000:8a2e:0370:1.256.256.256\";",
          "    let result = parse_ipv6addr(input);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_err());",
          "    assert_eq!(result.err(), Some(ParseError::InvalidIpv6Address));"
        ],
        "code": [
          "{",
          "    let input = \"2001:0db8:85a3:0000:0000:8a2e:0370:1.256.256.256\";",
          "    let result = parse_ipv6addr(input);",
          "    assert!(result.is_err());",
          "    assert_eq!(result.err(), Some(ParseError::InvalidIpv6Address));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"2001:0db8:85a3:0000:0000:8a2e:0370:01\";",
          "    let result = parse_ipv6addr(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(parse_ipv6addr(\"::\"), Err(ParseError::InvalidIpv6Address));",
          "    assert_eq!(parse_ipv6addr(\"2001:db8::1234:5678:90ab:cdfe\"), Err(ParseError::InvalidIpv6Address));",
          "    assert_eq!(parse_ipv6addr(\"2001:0db8:85a3:0000:0000:8a2e:0370:01:01\"), Err(ParseError::InvalidIpv6Address));",
          "    assert_eq!(parse_ipv6addr(\"2001:0db8:85a3:0000:0000:8a2e:0370:01:\"), Err(ParseError::InvalidIpv6Address));",
          "    assert_eq!(parse_ipv6addr(\"2001:0db8:85a3:0000:0000:8a2e:0370:#\"), Err(ParseError::InvalidIpv6Address));",
          "    assert_eq!(parse_ipv6addr(\"2001:0db8:85a3:0000:0000:8a2e:0370:01.10.10.10\"), Err(ParseError::InvalidIpv6Address));",
          "    assert_eq!(parse_ipv6addr(\"2001:0db8:85a3:0000:0000:8a2e:0370:01:256\"), Err(ParseError::InvalidIpv6Address));"
        ],
        "code": [
          "{",
          "    let input = \"2001:0db8:85a3:0000:0000:8a2e:0370:01\";",
          "    let result = parse_ipv6addr(input);",
          "    assert_eq!(parse_ipv6addr(\"::\"), Err(ParseError::InvalidIpv6Address));",
          "    assert_eq!(parse_ipv6addr(\"2001:db8::1234:5678:90ab:cdfe\"), Err(ParseError::InvalidIpv6Address));",
          "    assert_eq!(parse_ipv6addr(\"2001:0db8:85a3:0000:0000:8a2e:0370:01:01\"), Err(ParseError::InvalidIpv6Address));",
          "    assert_eq!(parse_ipv6addr(\"2001:0db8:85a3:0000:0000:8a2e:0370:01:\"), Err(ParseError::InvalidIpv6Address));",
          "    assert_eq!(parse_ipv6addr(\"2001:0db8:85a3:0000:0000:8a2e:0370:#\"), Err(ParseError::InvalidIpv6Address));",
          "    assert_eq!(parse_ipv6addr(\"2001:0db8:85a3:0000:0000:8a2e:0370:01.10.10.10\"), Err(ParseError::InvalidIpv6Address));",
          "    assert_eq!(parse_ipv6addr(\"2001:0db8:85a3:0000:0000:8a2e:0370:01:256\"), Err(ParseError::InvalidIpv6Address));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]