[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"[192.168.1.1\"; // input starts with '[' and does not end with ']'",
          "    let _result = Host::parse(input);",
          "}"
        ],
        "oracle": [
          "    assert!(_result.is_err());",
          "    assert_eq!(_result.unwrap_err(), ParseError::InvalidIpv6Address);"
        ],
        "code": [
          "{",
          "    let input = \"[192.168.1.1\"; // input starts with '[' and does not end with ']'",
          "    let _result = Host::parse(input);",
          "    assert!(_result.is_err());",
          "    assert_eq!(_result.unwrap_err(), ParseError::InvalidIpv6Address);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"[::1\"; // input starts with '[' and does not end with ']'",
          "    let _result = Host::parse(input);",
          "}"
        ],
        "oracle": [
          "    let input = \"[::1\"; // input starts with '[' and does not end with ']'",
          "    let expected = Err(ParseError::InvalidIpv6Address);",
          "    assert_eq!(_result, expected);"
        ],
        "code": [
          "{",
          "    let input = \"[::1\"; // input starts with '[' and does not end with ']'",
          "    let _result = Host::parse(input);",
          "    let input = \"[::1\"; // input starts with '[' and does not end with ']'",
          "    let expected = Err(ParseError::InvalidIpv6Address);",
          "    assert_eq!(_result, expected);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"[some:ipv6:address\"; // input starts with '[' and does not end with ']'",
          "    let _result = Host::parse(input);",
          "}"
        ],
        "oracle": [
          "    let input = \"[some:ipv6:address\";",
          "    let expected = Err(ParseError::InvalidIpv6Address);",
          "    assert_eq!(Host::parse(input), expected);"
        ],
        "code": [
          "{",
          "    let input = \"[some:ipv6:address\"; // input starts with '[' and does not end with ']'",
          "    let _result = Host::parse(input);",
          "    let input = \"[some:ipv6:address\";",
          "    let expected = Err(ParseError::InvalidIpv6Address);",
          "    assert_eq!(Host::parse(input), expected);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]