[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut_label: &mut [char] = &mut ['-', 'a', '-', '-', 'b'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let _ = check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    let mut_label: &mut [char] = &mut ['-', 'a', '-', '-', 'b'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let result = check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    assert_eq!(result, false);",
          "    assert_eq!(mut_label, &mut ['\\u{FFFD}', 'a', '\\u{FFFD}', '\\u{FFFD}', 'b']);",
          "    assert!(had_errors);"
        ],
        "code": [
          "{",
          "    let mut_label: &mut [char] = &mut ['-', 'a', '-', '-', 'b'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let _ = check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    let mut_label: &mut [char] = &mut ['-', 'a', '-', '-', 'b'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let result = check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    assert_eq!(result, false);",
          "    assert_eq!(mut_label, &mut ['\\u{FFFD}', 'a', '\\u{FFFD}', '\\u{FFFD}', 'b']);",
          "    assert!(had_errors);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut_label: &mut [char] = &mut ['-', 'x', '-', '-', 'y'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let _ = check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(mut_label, &mut ['-', 'x', '\\u{FFFD}', '\\u{FFFD}', 'y']);",
          "    assert!(!had_errors);",
          "    assert_eq!(_, false);"
        ],
        "code": [
          "{",
          "    let mut_label: &mut [char] = &mut ['-', 'x', '-', '-', 'y'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let _ = check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    assert_eq!(mut_label, &mut ['-', 'x', '\\u{FFFD}', '\\u{FFFD}', 'y']);",
          "    assert!(!had_errors);",
          "    assert_eq!(_, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut_label: &mut [char] = &mut ['-', '1', '-', '-', '2'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let _ = check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    let mut_label: &mut [char] = &mut ['-', '1', '-', '-', '2'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    assert_eq!(check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors), false);",
          "    assert_eq!(had_errors, true);",
          "    assert_eq!(mut_label[0], '\\u{FFFD}');",
          "    assert_eq!(mut_label[1], '1');",
          "    assert_eq!(mut_label[2], '\\u{FFFD}');",
          "    assert_eq!(mut_label[3], '\\u{FFFD}');",
          "    assert_eq!(mut_label[4], '2');"
        ],
        "code": [
          "{",
          "    let mut_label: &mut [char] = &mut ['-', '1', '-', '-', '2'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let _ = check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    let mut_label: &mut [char] = &mut ['-', '1', '-', '-', '2'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    assert_eq!(check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors), false);",
          "    assert_eq!(had_errors, true);",
          "    assert_eq!(mut_label[0], '\\u{FFFD}');",
          "    assert_eq!(mut_label[1], '1');",
          "    assert_eq!(mut_label[2], '\\u{FFFD}');",
          "    assert_eq!(mut_label[3], '\\u{FFFD}');",
          "    assert_eq!(mut_label[4], '2');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut_label: &mut [char] = &mut ['-', '!', '-', '-', 'b'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let _ = check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    let mut_label: &mut [char] = &mut ['-', '!', '-', '-', 'b'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let result = check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let mut_label: &mut [char] = &mut ['-', '!', '-', '-', 'b'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let _ = check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    let mut_label: &mut [char] = &mut ['-', '!', '-', '-', 'b'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let result = check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]