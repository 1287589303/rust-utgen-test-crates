[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut had_errors = false;",
          "    let mut label: [char; 4] = ['a', 'b', 'c', 'd'];",
          "    let result = check_hyphens(&mut label, false, false, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    let mut had_errors = false;",
          "    let mut label: [char; 4] = ['a', 'b', 'c', 'd'];",
          "    let result = check_hyphens(&mut label, false, false, &mut had_errors);",
          "    assert_eq!(result, false);",
          "    assert_eq!(had_errors, false);",
          "    assert_eq!(label, ['a', 'b', 'c', 'd']);"
        ],
        "code": [
          "{",
          "    let mut had_errors = false;",
          "    let mut label: [char; 4] = ['a', 'b', 'c', 'd'];",
          "    let result = check_hyphens(&mut label, false, false, &mut had_errors);",
          "    let mut had_errors = false;",
          "    let mut label: [char; 4] = ['a', 'b', 'c', 'd'];",
          "    let result = check_hyphens(&mut label, false, false, &mut had_errors);",
          "    assert_eq!(result, false);",
          "    assert_eq!(had_errors, false);",
          "    assert_eq!(label, ['a', 'b', 'c', 'd']);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut had_errors = false;",
          "    let mut label: [char; 4] = ['x', 'y', 'z', 'w'];",
          "    let result = check_hyphens(&mut label, false, false, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);",
          "    assert_eq!(label, ['x', 'y', 'z', 'w']);",
          "    assert!(!had_errors);"
        ],
        "code": [
          "{",
          "    let mut had_errors = false;",
          "    let mut label: [char; 4] = ['x', 'y', 'z', 'w'];",
          "    let result = check_hyphens(&mut label, false, false, &mut had_errors);",
          "    assert_eq!(result, false);",
          "    assert_eq!(label, ['x', 'y', 'z', 'w']);",
          "    assert!(!had_errors);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut had_errors = false;",
          "    let mut label: [char; 4] = ['1', '2', '3', '4'];",
          "    let result = check_hyphens(&mut label, false, false, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    let mut had_errors = false;",
          "    let mut label: [char; 4] = ['1', '2', '3', '4'];",
          "    let result = check_hyphens(&mut label, false, false, &mut had_errors);",
          "    assert_eq!(result, false);",
          "    assert_eq!(had_errors, false);",
          "    assert_eq!(label, ['1', '2', '3', '4']);"
        ],
        "code": [
          "{",
          "    let mut had_errors = false;",
          "    let mut label: [char; 4] = ['1', '2', '3', '4'];",
          "    let result = check_hyphens(&mut label, false, false, &mut had_errors);",
          "    let mut had_errors = false;",
          "    let mut label: [char; 4] = ['1', '2', '3', '4'];",
          "    let result = check_hyphens(&mut label, false, false, &mut had_errors);",
          "    assert_eq!(result, false);",
          "    assert_eq!(had_errors, false);",
          "    assert_eq!(label, ['1', '2', '3', '4']);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut had_errors = false;",
          "    let mut label: [char; 4] = ['A', 'b', 'C', '1'];",
          "    let result = check_hyphens(&mut label, false, false, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);",
          "    assert_eq!(had_errors, false);",
          "    assert_eq!(label, ['A', 'b', 'C', '1']);"
        ],
        "code": [
          "{",
          "    let mut had_errors = false;",
          "    let mut label: [char; 4] = ['A', 'b', 'C', '1'];",
          "    let result = check_hyphens(&mut label, false, false, &mut had_errors);",
          "    assert_eq!(result, false);",
          "    assert_eq!(had_errors, false);",
          "    assert_eq!(label, ['A', 'b', 'C', '1']);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]