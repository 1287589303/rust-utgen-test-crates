[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut had_errors = false;",
          "    let mut mut_label: &mut [char] = &mut ['-', 'a', '-', '-'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    let mut had_errors = false;",
          "    let mut mut_label: &mut [char] = &mut ['-', 'a', '-', '-'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    assert_eq!(check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors), false);"
        ],
        "code": [
          "{",
          "    let mut had_errors = false;",
          "    let mut mut_label: &mut [char] = &mut ['-', 'a', '-', '-'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    let mut had_errors = false;",
          "    let mut mut_label: &mut [char] = &mut ['-', 'a', '-', '-'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    assert_eq!(check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut had_errors = false;",
          "    let mut mut_label: &mut [char] = &mut ['-', 'b', '-', '-'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = true;",
          "    check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    mut_label = ['-', 'b', '-', '-'];",
          "    allow_third_fourth = false;",
          "    fail_fast = true;",
          "    had_errors = false;",
          "    assert_eq!(check_hyphens(&mut mut_label, allow_third_fourth, fail_fast, &mut had_errors), false);",
          "    assert!(had_errors);"
        ],
        "code": [
          "{",
          "    let mut had_errors = false;",
          "    let mut mut_label: &mut [char] = &mut ['-', 'b', '-', '-'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = true;",
          "    check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    mut_label = ['-', 'b', '-', '-'];",
          "    allow_third_fourth = false;",
          "    fail_fast = true;",
          "    had_errors = false;",
          "    assert_eq!(check_hyphens(&mut mut_label, allow_third_fourth, fail_fast, &mut had_errors), false);",
          "    assert!(had_errors);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut had_errors = false;",
          "    let mut mut_label: &mut [char] = &mut ['-', 'c', '-', '-'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    assert!(had_errors == true);",
          "    assert!(mut_label[0] == '\\u{FFFD}');",
          "    assert!(mut_label[1] == 'c');",
          "    assert!(mut_label[2] == '-');",
          "    assert!(mut_label[3] == '\\u{FFFD}');",
          "    assert!(check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors) == false);"
        ],
        "code": [
          "{",
          "    let mut had_errors = false;",
          "    let mut mut_label: &mut [char] = &mut ['-', 'c', '-', '-'];",
          "    let allow_third_fourth = false;",
          "    let fail_fast = false;",
          "    check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    assert!(had_errors == true);",
          "    assert!(mut_label[0] == '\\u{FFFD}');",
          "    assert!(mut_label[1] == 'c');",
          "    assert!(mut_label[2] == '-');",
          "    assert!(mut_label[3] == '\\u{FFFD}');",
          "    assert!(check_hyphens(mut_label, allow_third_fourth, fail_fast, &mut had_errors) == false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]