[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut label: &mut [char] = &mut ['-', 'a', 'b', '-', 'c'];",
          "    let allow_third_fourth = true;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    check_hyphens(label, allow_third_fourth, fail_fast, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    let mut label: &mut [char] = &mut ['-', 'a', 'b', '-', 'c'];",
          "    let allow_third_fourth = true;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let result = check_hyphens(label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    assert_eq!(result, false);",
          "    assert_eq!(had_errors, false);",
          "    assert_eq!(label, &mut ['-', 'a', 'b', '-', 'c']);"
        ],
        "code": [
          "{",
          "    let mut label: &mut [char] = &mut ['-', 'a', 'b', '-', 'c'];",
          "    let allow_third_fourth = true;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    check_hyphens(label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    let mut label: &mut [char] = &mut ['-', 'a', 'b', '-', 'c'];",
          "    let allow_third_fourth = true;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    let result = check_hyphens(label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    assert_eq!(result, false);",
          "    assert_eq!(had_errors, false);",
          "    assert_eq!(label, &mut ['-', 'a', 'b', '-', 'c']);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut label: &mut [char] = &mut ['-', '1', '2', '-', '3'];",
          "    let allow_third_fourth = true;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    check_hyphens(label, allow_third_fourth, fail_fast, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(check_hyphens(&mut ['-', '1', '2', '-', '3'], true, false, &mut false), false);",
          "    assert_eq!(had_errors, false);",
          "    assert_eq!(label, &mut ['-', '1', '2', '-', '3']);"
        ],
        "code": [
          "{",
          "    let mut label: &mut [char] = &mut ['-', '1', '2', '-', '3'];",
          "    let allow_third_fourth = true;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    check_hyphens(label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    assert_eq!(check_hyphens(&mut ['-', '1', '2', '-', '3'], true, false, &mut false), false);",
          "    assert_eq!(had_errors, false);",
          "    assert_eq!(label, &mut ['-', '1', '2', '-', '3']);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut label: &mut [char] = &mut ['-', '!', '@', '-', '#'];",
          "    let allow_third_fourth = true;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    check_hyphens(label, allow_third_fourth, fail_fast, &mut had_errors);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(had_errors, false);",
          "    assert_eq!(label, &mut ['-', '!', '@', '-', '#']);",
          "    assert_eq!(check_hyphens(label, true, false, &mut had_errors), false);"
        ],
        "code": [
          "{",
          "    let mut label: &mut [char] = &mut ['-', '!', '@', '-', '#'];",
          "    let allow_third_fourth = true;",
          "    let fail_fast = false;",
          "    let mut had_errors = false;",
          "    check_hyphens(label, allow_third_fourth, fail_fast, &mut had_errors);",
          "    assert_eq!(had_errors, false);",
          "    assert_eq!(label, &mut ['-', '!', '@', '-', '#']);",
          "    assert_eq!(check_hyphens(label, true, false, &mut had_errors), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]