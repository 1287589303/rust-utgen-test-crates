[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url::parse(\"wss://example.com\").unwrap();",
          "    let result = url_origin(&url);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Origin::Tuple(\"wss\".to_owned(), Host::Domain(\"example.com\".to_owned()), Some(443)));"
        ],
        "code": [
          "{",
          "    let url = Url::parse(\"wss://example.com\").unwrap();",
          "    let result = url_origin(&url);",
          "    assert_eq!(result, Origin::Tuple(\"wss\".to_owned(), Host::Domain(\"example.com\".to_owned()), Some(443)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url::parse(\"wss://example.com:443\").unwrap();",
          "    let result = url_origin(&url);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Origin::Tuple(\"wss\".to_owned(), Host::Domain(\"example.com\".to_owned()), Some(443)));"
        ],
        "code": [
          "{",
          "    let url = Url::parse(\"wss://example.com:443\").unwrap();",
          "    let result = url_origin(&url);",
          "    assert_eq!(result, Origin::Tuple(\"wss\".to_owned(), Host::Domain(\"example.com\".to_owned()), Some(443)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let url = Url::parse(\"wss://example.org\").unwrap();",
          "    let result = url_origin(&url);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Origin::Tuple(\"wss\".to_owned(), Host::Domain(\"example.org\".to_owned()), Some(default_port(\"wss\"))));"
        ],
        "code": [
          "{",
          "    let url = Url::parse(\"wss://example.org\").unwrap();",
          "    let result = url_origin(&url);",
          "    assert_eq!(result, Origin::Tuple(\"wss\".to_owned(), Host::Domain(\"example.org\".to_owned()), Some(default_port(\"wss\"))));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]