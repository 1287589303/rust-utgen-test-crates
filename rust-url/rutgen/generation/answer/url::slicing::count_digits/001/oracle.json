[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let n: u16 = 0;",
          "    count_digits(n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(count_digits(0), 1);",
          "    assert_eq!(count_digits(5), 1);",
          "    assert_eq!(count_digits(9), 1);"
        ],
        "code": [
          "{",
          "    let n: u16 = 0;",
          "    count_digits(n);",
          "    assert_eq!(count_digits(0), 1);",
          "    assert_eq!(count_digits(5), 1);",
          "    assert_eq!(count_digits(9), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let n: u16 = 1;",
          "    count_digits(n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(count_digits(1), 1);"
        ],
        "code": [
          "{",
          "    let n: u16 = 1;",
          "    count_digits(n);",
          "    assert_eq!(count_digits(1), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let n: u16 = 2;",
          "    count_digits(n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(count_digits(2), 1);"
        ],
        "code": [
          "{",
          "    let n: u16 = 2;",
          "    count_digits(n);",
          "    assert_eq!(count_digits(2), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let n: u16 = 3;",
          "    count_digits(n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(count_digits(3), 1);"
        ],
        "code": [
          "{",
          "    let n: u16 = 3;",
          "    count_digits(n);",
          "    assert_eq!(count_digits(3), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let n: u16 = 4;",
          "    count_digits(n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(count_digits(4), 1);"
        ],
        "code": [
          "{",
          "    let n: u16 = 4;",
          "    count_digits(n);",
          "    assert_eq!(count_digits(4), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let n: u16 = 5;",
          "    count_digits(n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(count_digits(5), 1);"
        ],
        "code": [
          "{",
          "    let n: u16 = 5;",
          "    count_digits(n);",
          "    assert_eq!(count_digits(5), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let n: u16 = 6;",
          "    count_digits(n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(count_digits(6), 1);"
        ],
        "code": [
          "{",
          "    let n: u16 = 6;",
          "    count_digits(n);",
          "    assert_eq!(count_digits(6), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let n: u16 = 7;",
          "    count_digits(n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(count_digits(7), 1);"
        ],
        "code": [
          "{",
          "    let n: u16 = 7;",
          "    count_digits(n);",
          "    assert_eq!(count_digits(7), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let n: u16 = 8;",
          "    count_digits(n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(count_digits(8), 1);"
        ],
        "code": [
          "{",
          "    let n: u16 = 8;",
          "    count_digits(n);",
          "    assert_eq!(count_digits(8), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let n: u16 = 9;",
          "    count_digits(n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(count_digits(0), 1);",
          "    assert_eq!(count_digits(1), 1);",
          "    assert_eq!(count_digits(2), 1);",
          "    assert_eq!(count_digits(3), 1);",
          "    assert_eq!(count_digits(4), 1);",
          "    assert_eq!(count_digits(5), 1);",
          "    assert_eq!(count_digits(6), 1);",
          "    assert_eq!(count_digits(7), 1);",
          "    assert_eq!(count_digits(8), 1);",
          "    assert_eq!(count_digits(9), 1);"
        ],
        "code": [
          "{",
          "    let n: u16 = 9;",
          "    count_digits(n);",
          "    assert_eq!(count_digits(0), 1);",
          "    assert_eq!(count_digits(1), 1);",
          "    assert_eq!(count_digits(2), 1);",
          "    assert_eq!(count_digits(3), 1);",
          "    assert_eq!(count_digits(4), 1);",
          "    assert_eq!(count_digits(5), 1);",
          "    assert_eq!(count_digits(6), 1);",
          "    assert_eq!(count_digits(7), 1);",
          "    assert_eq!(count_digits(8), 1);",
          "    assert_eq!(count_digits(9), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]