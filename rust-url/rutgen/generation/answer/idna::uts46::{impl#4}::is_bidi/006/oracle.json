[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestWrite;",
          "    impl core::fmt::Write for TestWrite {",
          "        fn write_str(&mut self, _: &str) -> core::fmt::Result {",
          "            Ok(())",
          "        }",
          "    }",
          "",
          "    let uts46 = Uts46::new();",
          "    ",
          "    let buffer: &[char] = &['\\u{0590}', '\\u{10A00}']; // '\\u{10A00}' is in range ['\\u{11000}', '\\u{1E7FF}']",
          "    let result = uts46.is_bidi(buffer);",
          "}"
        ],
        "oracle": [
          "    let buffer: &[char] = &['\\u{0590}', '\\u{10A00}'];",
          "    assert_eq!(uts46.is_bidi(buffer), false);"
        ],
        "code": [
          "{",
          "    struct TestWrite;",
          "    impl core::fmt::Write for TestWrite {",
          "        fn write_str(&mut self, _: &str) -> core::fmt::Result {",
          "            Ok(())",
          "        }",
          "    }",
          "",
          "    let uts46 = Uts46::new();",
          "    ",
          "    let buffer: &[char] = &['\\u{0590}', '\\u{10A00}']; // '\\u{10A00}' is in range ['\\u{11000}', '\\u{1E7FF}']",
          "    let result = uts46.is_bidi(buffer);",
          "    let buffer: &[char] = &['\\u{0590}', '\\u{10A00}'];",
          "    assert_eq!(uts46.is_bidi(buffer), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestWrite;",
          "    impl core::fmt::Write for TestWrite {",
          "        fn write_str(&mut self, _: &str) -> core::fmt::Result {",
          "            Ok(())",
          "        }",
          "    }",
          "",
          "    let uts46 = Uts46::new();",
          "    ",
          "    let buffer: &[char] = &['a', 'b', 'c']; // All characters below '\\u{0590}'",
          "    let result = uts46.is_bidi(buffer);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    struct TestWrite;",
          "    impl core::fmt::Write for TestWrite {",
          "        fn write_str(&mut self, _: &str) -> core::fmt::Result {",
          "            Ok(())",
          "        }",
          "    }",
          "",
          "    let uts46 = Uts46::new();",
          "    ",
          "    let buffer: &[char] = &['a', 'b', 'c']; // All characters below '\\u{0590}'",
          "    let result = uts46.is_bidi(buffer);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]