[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let buffer = vec!['a', 'b', 'c', 'd', 'e', 'f'];",
          "    let result = uts46.is_bidi(&buffer);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let buffer = vec!['a', 'b', 'c', 'd', 'e', 'f'];",
          "    let result = uts46.is_bidi(&buffer);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let buffer = vec!['\\u{0900}', '\\u{0901}', '\\u{0902}'];",
          "    let result = uts46.is_bidi(&buffer);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let buffer = vec!['\\u{0900}', '\\u{0901}', '\\u{0902}'];",
          "    let result = uts46.is_bidi(&buffer);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let buffer = vec!['\\u{1F000}', '\\u{1F001}', '\\u{1F002}'];",
          "    let result = uts46.is_bidi(&buffer);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let buffer = vec!['\\u{1F000}', '\\u{1F001}', '\\u{1F002}'];",
          "    let result = uts46.is_bidi(&buffer);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let buffer = vec!['\\u{FF00}', '\\u{FF01}', '\\u{FF02}'];",
          "    let result = uts46.is_bidi(&buffer);",
          "}"
        ],
        "oracle": [
          "    let uts46 = Uts46::new();",
          "    let buffer = vec!['\\u{FF00}', '\\u{FF01}', '\\u{FF02}'];",
          "    let result = uts46.is_bidi(&buffer);",
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let buffer = vec!['\\u{FF00}', '\\u{FF01}', '\\u{FF02}'];",
          "    let result = uts46.is_bidi(&buffer);",
          "    let uts46 = Uts46::new();",
          "    let buffer = vec!['\\u{FF00}', '\\u{FF01}', '\\u{FF02}'];",
          "    let result = uts46.is_bidi(&buffer);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let buffer = vec!['\\u{11000}', '\\u{11001}', '\\u{11002}'];",
          "    let result = uts46.is_bidi(&buffer);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let uts46 = Uts46::new();",
          "    let buffer = vec!['\\u{11000}', '\\u{11001}', '\\u{11002}'];",
          "    let result = uts46.is_bidi(&buffer);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]