[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut url = Url::parse(\"http://example.com:8080/\").unwrap();",
          "    let result = url.set_port(Some(9090));",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(()));"
        ],
        "code": [
          "{",
          "    let mut url = Url::parse(\"http://example.com:8080/\").unwrap();",
          "    let result = url.set_port(Some(9090));",
          "    assert_eq!(result, Ok(()));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut url = Url::parse(\"https://example.com:8443/\").unwrap();",
          "    let result = url.set_port(Some(2048));",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(()));",
          "    assert_eq!(url.as_str(), \"https://example.com:2048/\");",
          "    assert!(url.port().is_none());",
          "    assert!(url.host().is_some());",
          "    assert_eq!(url.scheme(), \"https\");",
          "    assert!(url.has_host());"
        ],
        "code": [
          "{",
          "    let mut url = Url::parse(\"https://example.com:8443/\").unwrap();",
          "    let result = url.set_port(Some(2048));",
          "    assert_eq!(result, Ok(()));",
          "    assert_eq!(url.as_str(), \"https://example.com:2048/\");",
          "    assert!(url.port().is_none());",
          "    assert!(url.host().is_some());",
          "    assert_eq!(url.scheme(), \"https\");",
          "    assert!(url.has_host());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut url = Url::parse(\"ftp://example.com:21/\").unwrap();",
          "    let result = url.set_port(Some(2121));",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(()))"
        ],
        "code": [
          "{",
          "    let mut url = Url::parse(\"ftp://example.com:21/\").unwrap();",
          "    let result = url.set_port(Some(2121));",
          "    assert_eq!(result, Ok(()))",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]