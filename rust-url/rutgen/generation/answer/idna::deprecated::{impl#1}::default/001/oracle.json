[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::default();",
          "    // This will invoke the function under test",
          "}"
        ],
        "oracle": [
          "    assert_eq!(config.use_std3_ascii_rules, false);",
          "    assert_eq!(config.transitional_processing, false);",
          "    assert_eq!(config.check_hyphens, false);",
          "    assert_eq!(config.verify_dns_length, false);"
        ],
        "code": [
          "{",
          "    let config = Config::default();",
          "    // This will invoke the function under test",
          "    assert_eq!(config.use_std3_ascii_rules, false);",
          "    assert_eq!(config.transitional_processing, false);",
          "    assert_eq!(config.check_hyphens, false);",
          "    assert_eq!(config.verify_dns_length, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::default();",
          "    // This will invoke the function under test",
          "}"
        ],
        "oracle": [
          "    assert_eq!(config.use_std3_ascii_rules, false);",
          "    assert_eq!(config.transitional_processing, false);",
          "    assert_eq!(config.check_hyphens, false);",
          "    assert_eq!(config.verify_dns_length, false);"
        ],
        "code": [
          "{",
          "    let config = Config::default();",
          "    // This will invoke the function under test",
          "    assert_eq!(config.use_std3_ascii_rules, false);",
          "    assert_eq!(config.transitional_processing, false);",
          "    assert_eq!(config.check_hyphens, false);",
          "    assert_eq!(config.verify_dns_length, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]