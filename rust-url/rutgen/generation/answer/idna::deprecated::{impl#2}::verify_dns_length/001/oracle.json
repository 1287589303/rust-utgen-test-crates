[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config {",
          "        use_std3_ascii_rules: false,",
          "        transitional_processing: false,",
          "        verify_dns_length: false,",
          "        check_hyphens: false,",
          "    };",
          "    let updated_config = config.verify_dns_length(true);",
          "}"
        ],
        "oracle": [
          "    let initial_config = Config { use_std3_ascii_rules: false, transitional_processing: false, verify_dns_length: false, check_hyphens: false };",
          "    let updated_config = initial_config.verify_dns_length(true);",
          "    assert_eq!(updated_config.verify_dns_length, true);",
          "    assert_eq!(updated_config.use_std3_ascii_rules, false);",
          "    assert_eq!(updated_config.transitional_processing, false);",
          "    assert_eq!(updated_config.check_hyphens, false);"
        ],
        "code": [
          "{",
          "    let config = Config {",
          "        use_std3_ascii_rules: false,",
          "        transitional_processing: false,",
          "        verify_dns_length: false,",
          "        check_hyphens: false,",
          "    };",
          "    let updated_config = config.verify_dns_length(true);",
          "    let initial_config = Config { use_std3_ascii_rules: false, transitional_processing: false, verify_dns_length: false, check_hyphens: false };",
          "    let updated_config = initial_config.verify_dns_length(true);",
          "    assert_eq!(updated_config.verify_dns_length, true);",
          "    assert_eq!(updated_config.use_std3_ascii_rules, false);",
          "    assert_eq!(updated_config.transitional_processing, false);",
          "    assert_eq!(updated_config.check_hyphens, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config {",
          "        use_std3_ascii_rules: true,",
          "        transitional_processing: true,",
          "        verify_dns_length: true,",
          "        check_hyphens: true,",
          "    };",
          "    let updated_config = config.verify_dns_length(false);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(updated_config.verify_dns_length, false);",
          "    assert_eq!(updated_config.use_std3_ascii_rules, true);",
          "    assert_eq!(updated_config.transitional_processing, true);",
          "    assert_eq!(updated_config.check_hyphens, true);"
        ],
        "code": [
          "{",
          "    let config = Config {",
          "        use_std3_ascii_rules: true,",
          "        transitional_processing: true,",
          "        verify_dns_length: true,",
          "        check_hyphens: true,",
          "    };",
          "    let updated_config = config.verify_dns_length(false);",
          "    assert_eq!(updated_config.verify_dns_length, false);",
          "    assert_eq!(updated_config.use_std3_ascii_rules, true);",
          "    assert_eq!(updated_config.transitional_processing, true);",
          "    assert_eq!(updated_config.check_hyphens, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config {",
          "        use_std3_ascii_rules: false,",
          "        transitional_processing: false,",
          "        verify_dns_length: false,",
          "        check_hyphens: false,",
          "    };",
          "    let updated_config = config.verify_dns_length(true);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(updated_config.verify_dns_length, true);",
          "    assert_eq!(updated_config.use_std3_ascii_rules, false);",
          "    assert_eq!(updated_config.transitional_processing, false);",
          "    assert_eq!(updated_config.check_hyphens, false);",
          "    assert_ne!(config, updated_config);"
        ],
        "code": [
          "{",
          "    let config = Config {",
          "        use_std3_ascii_rules: false,",
          "        transitional_processing: false,",
          "        verify_dns_length: false,",
          "        check_hyphens: false,",
          "    };",
          "    let updated_config = config.verify_dns_length(true);",
          "    assert_eq!(updated_config.verify_dns_length, true);",
          "    assert_eq!(updated_config.use_std3_ascii_rules, false);",
          "    assert_eq!(updated_config.transitional_processing, false);",
          "    assert_eq!(updated_config.check_hyphens, false);",
          "    assert_ne!(config, updated_config);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config {",
          "        use_std3_ascii_rules: true,",
          "        transitional_processing: true,",
          "        verify_dns_length: true,",
          "        check_hyphens: true,",
          "    };",
          "    let updated_config = config.verify_dns_length(false);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(updated_config.verify_dns_length, false);",
          "    assert_eq!(updated_config.use_std3_ascii_rules, true);",
          "    assert_eq!(updated_config.transitional_processing, true);",
          "    assert_eq!(updated_config.check_hyphens, true);",
          "    assert_eq!(config.verify_dns_length, true);"
        ],
        "code": [
          "{",
          "    let config = Config {",
          "        use_std3_ascii_rules: true,",
          "        transitional_processing: true,",
          "        verify_dns_length: true,",
          "        check_hyphens: true,",
          "    };",
          "    let updated_config = config.verify_dns_length(false);",
          "    assert_eq!(updated_config.verify_dns_length, false);",
          "    assert_eq!(updated_config.use_std3_ascii_rules, true);",
          "    assert_eq!(updated_config.transitional_processing, true);",
          "    assert_eq!(updated_config.check_hyphens, true);",
          "    assert_eq!(config.verify_dns_length, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]