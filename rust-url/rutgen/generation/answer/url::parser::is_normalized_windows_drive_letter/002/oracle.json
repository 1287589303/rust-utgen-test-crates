[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let segment = \"A\";",
          "    is_normalized_windows_drive_letter(segment);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_normalized_windows_drive_letter(\"A\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"AA\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"D/B\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C*\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"1:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\":\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"AB:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"A:\"), false);"
        ],
        "code": [
          "{",
          "    let segment = \"A\";",
          "    is_normalized_windows_drive_letter(segment);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"A\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"AA\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"D/B\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C*\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"1:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\":\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"AB:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"A:\"), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let segment = \"C:\";",
          "    is_normalized_windows_drive_letter(segment);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"D:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"E:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:/path\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C\\\\path\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"InvalidSegment\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:\"), false);"
        ],
        "code": [
          "{",
          "    let segment = \"C:\";",
          "    is_normalized_windows_drive_letter(segment);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"D:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"E:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:/path\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C\\\\path\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"InvalidSegment\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:\"), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let segment = \"AB\";",
          "    is_normalized_windows_drive_letter(segment);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_normalized_windows_drive_letter(\"AB\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C1\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"A:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"ZZ\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"A-B\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"1A\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"A/B\"), false);"
        ],
        "code": [
          "{",
          "    let segment = \"AB\";",
          "    is_normalized_windows_drive_letter(segment);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"AB\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C1\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"A:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"ZZ\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"A-B\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"1A\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"A/B\"), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let segment = \"C1\";",
          "    is_normalized_windows_drive_letter(segment);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_normalized_windows_drive_letter(\"C1\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"c:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"D:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C1:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C1/\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"CD\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C2:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C1@\"), false);"
        ],
        "code": [
          "{",
          "    let segment = \"C1\";",
          "    is_normalized_windows_drive_letter(segment);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C1\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"c:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"D:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C1:\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C1/\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"CD\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C2:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C1@\"), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let segment = \"Z1\";",
          "    is_normalized_windows_drive_letter(segment);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_normalized_windows_drive_letter(\"Z1\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"D2\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"A:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"Z:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C1\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"Z!\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C  \"), false);"
        ],
        "code": [
          "{",
          "    let segment = \"Z1\";",
          "    is_normalized_windows_drive_letter(segment);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"Z1\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"D2\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"A:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"Z:\"), true);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C1\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"Z!\"), false);",
          "    assert_eq!(is_normalized_windows_drive_letter(\"C  \"), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let segment = \"X/\";",
          "    is_normalized_windows_drive_letter(segment);",
          "}"
        ],
        "oracle": [
          "    assert!(!is_windows_drive_letter(segment));",
          "    assert_eq!(is_normalized_windows_drive_letter(segment), false);",
          "    assert_eq!(segment.as_bytes().get(1), Some(&b'/'));"
        ],
        "code": [
          "{",
          "    let segment = \"X/\";",
          "    is_normalized_windows_drive_letter(segment);",
          "    assert!(!is_windows_drive_letter(segment));",
          "    assert_eq!(is_normalized_windows_drive_letter(segment), false);",
          "    assert_eq!(segment.as_bytes().get(1), Some(&b'/'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]