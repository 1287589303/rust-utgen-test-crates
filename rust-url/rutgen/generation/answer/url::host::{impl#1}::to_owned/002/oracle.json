[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let ipv4_address = crate::net::Ipv4Addr::new(192, 168, 1, 1);",
          "    let host = Host::Ipv4(ipv4_address);",
          "    let _result = host.to_owned();",
          "}"
        ],
        "oracle": [
          "    _assert_eq!(_result, Host::Ipv4(ipv4_address));"
        ],
        "code": [
          "{",
          "    let ipv4_address = crate::net::Ipv4Addr::new(192, 168, 1, 1);",
          "    let host = Host::Ipv4(ipv4_address);",
          "    let _result = host.to_owned();",
          "    _assert_eq!(_result, Host::Ipv4(ipv4_address));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let ipv4_address = crate::net::Ipv4Addr::new(0, 0, 0, 0);",
          "    let host = Host::Ipv4(ipv4_address);",
          "    let _result = host.to_owned();",
          "}"
        ],
        "oracle": [
          "    _result.should_be(Host::Ipv4(ipv4_address));"
        ],
        "code": [
          "{",
          "    let ipv4_address = crate::net::Ipv4Addr::new(0, 0, 0, 0);",
          "    let host = Host::Ipv4(ipv4_address);",
          "    let _result = host.to_owned();",
          "    _result.should_be(Host::Ipv4(ipv4_address));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let ipv4_address = crate::net::Ipv4Addr::new(255, 255, 255, 255);",
          "    let host = Host::Ipv4(ipv4_address);",
          "    let _result = host.to_owned();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(_result, Host::Ipv4(ipv4_address));"
        ],
        "code": [
          "{",
          "    let ipv4_address = crate::net::Ipv4Addr::new(255, 255, 255, 255);",
          "    let host = Host::Ipv4(ipv4_address);",
          "    let _result = host.to_owned();",
          "    assert_eq!(_result, Host::Ipv4(ipv4_address));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]