[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"test.5\";",
          "    ends_in_a_number(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(ends_in_a_number(\"test.5\"), true);",
          "    assert_eq!(ends_in_a_number(\"example.123\"), true);",
          "    assert_eq!(ends_in_a_number(\"data.0x1A\"), true);",
          "    assert_eq!(ends_in_a_number(\"example.0777\"), true);",
          "    assert_eq!(ends_in_a_number(\"value.\"), false);",
          "    assert_eq!(ends_in_a_number(\"leading.text.\"), false);",
          "    assert_eq!(ends_in_a_number(\"test..\"), false);",
          "    assert_eq!(ends_in_a_number(\"hello.world..321\"), false);"
        ],
        "code": [
          "{",
          "    let input = \"test.5\";",
          "    ends_in_a_number(input);",
          "    assert_eq!(ends_in_a_number(\"test.5\"), true);",
          "    assert_eq!(ends_in_a_number(\"example.123\"), true);",
          "    assert_eq!(ends_in_a_number(\"data.0x1A\"), true);",
          "    assert_eq!(ends_in_a_number(\"example.0777\"), true);",
          "    assert_eq!(ends_in_a_number(\"value.\"), false);",
          "    assert_eq!(ends_in_a_number(\"leading.text.\"), false);",
          "    assert_eq!(ends_in_a_number(\"test..\"), false);",
          "    assert_eq!(ends_in_a_number(\"hello.world..321\"), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"example.com.192\";",
          "    ends_in_a_number(input);",
          "}"
        ],
        "oracle": [
          "    plaintext",
          "    assert_eq!(ends_in_a_number(\"example.com.192\"), true);",
          "    assert_eq!(ends_in_a_number(\"test.4\"), true);",
          "    assert_eq!(ends_in_a_number(\"localhost.0xFF\"), true);",
          "    assert_eq!(ends_in_a_number(\"domain.test.12345\"), true);",
          "    assert_eq!(ends_in_a_number(\"foo.bar.0\"), true);",
          "    assert_eq!(ends_in_a_number(\"test.com.\"), false);"
        ],
        "code": [
          "{",
          "    let input = \"example.com.192\";",
          "    ends_in_a_number(input);",
          "    plaintext",
          "    assert_eq!(ends_in_a_number(\"example.com.192\"), true);",
          "    assert_eq!(ends_in_a_number(\"test.4\"), true);",
          "    assert_eq!(ends_in_a_number(\"localhost.0xFF\"), true);",
          "    assert_eq!(ends_in_a_number(\"domain.test.12345\"), true);",
          "    assert_eq!(ends_in_a_number(\"foo.bar.0\"), true);",
          "    assert_eq!(ends_in_a_number(\"test.com.\"), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"sample.0x1A\";",
          "    ends_in_a_number(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(ends_in_a_number(\"sample.0x1A\"), true);",
          "    assert_eq!(ends_in_a_number(\"sample.1\"), true);",
          "    assert_eq!(ends_in_a_number(\"sample.255\"), true);",
          "    assert_eq!(ends_in_a_number(\"sample.\"), false);",
          "    assert_eq!(ends_in_a_number(\"sample.0\"), true);",
          "    assert_eq!(ends_in_a_number(\"sample.00\"), true);",
          "    assert_eq!(ends_in_a_number(\"sample.007\"), true);",
          "    assert_eq!(ends_in_a_number(\"sample.0xG\"), false);",
          "    assert_eq!(ends_in_a_number(\"sample..\"), false);",
          "    assert_eq!(ends_in_a_number(\"sample.123abc\"), false);"
        ],
        "code": [
          "{",
          "    let input = \"sample.0x1A\";",
          "    ends_in_a_number(input);",
          "    assert_eq!(ends_in_a_number(\"sample.0x1A\"), true);",
          "    assert_eq!(ends_in_a_number(\"sample.1\"), true);",
          "    assert_eq!(ends_in_a_number(\"sample.255\"), true);",
          "    assert_eq!(ends_in_a_number(\"sample.\"), false);",
          "    assert_eq!(ends_in_a_number(\"sample.0\"), true);",
          "    assert_eq!(ends_in_a_number(\"sample.00\"), true);",
          "    assert_eq!(ends_in_a_number(\"sample.007\"), true);",
          "    assert_eq!(ends_in_a_number(\"sample.0xG\"), false);",
          "    assert_eq!(ends_in_a_number(\"sample..\"), false);",
          "    assert_eq!(ends_in_a_number(\"sample.123abc\"), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"hello..123\";",
          "    ends_in_a_number(input);",
          "}"
        ],
        "oracle": [
          "    assert!(ends_in_a_number(\"hello..123\") == true);"
        ],
        "code": [
          "{",
          "    let input = \"hello..123\";",
          "    ends_in_a_number(input);",
          "    assert!(ends_in_a_number(\"hello..123\") == true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"foo.bar.baz\";",
          "    ends_in_a_number(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(ends_in_a_number(\"foo.bar.baz\"), false);"
        ],
        "code": [
          "{",
          "    let input = \"foo.bar.baz\";",
          "    ends_in_a_number(input);",
          "    assert_eq!(ends_in_a_number(\"foo.bar.baz\"), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]