[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = byte_serialized_unchanged(b'.');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'*');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'_');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'-');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'1');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'A');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'a');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'c');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'Z');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'9');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'-');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'_');",
          "    assert_eq!(result, true);"
        ],
        "code": [
          "{",
          "    let result = byte_serialized_unchanged(b'.');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'*');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'_');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'-');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'1');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'A');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'a');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'c');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'Z');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'9');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'-');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'_');",
          "    assert_eq!(result, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = byte_serialized_unchanged(b'*');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'-');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'.');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'a');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'z');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'_');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'0');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'9');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'A');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'Z');",
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = byte_serialized_unchanged(b'*');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'-');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'.');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'a');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'z');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'_');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'0');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'9');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'A');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'Z');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = byte_serialized_unchanged(b'_');",
          "}"
        ],
        "oracle": [
          "    let result = byte_serialized_unchanged(b'.'); assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'*'); assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'_'); assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'-'); assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'0'); assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'Z'); assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'a'); assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'z'); assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'@'); assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = byte_serialized_unchanged(b'_');",
          "    let result = byte_serialized_unchanged(b'.'); assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'*'); assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'_'); assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'-'); assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'0'); assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'Z'); assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'a'); assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'z'); assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'@'); assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = byte_serialized_unchanged(b'-');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(byte_serialized_unchanged(b'.'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'*'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'_'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'-'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'0'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'1'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'Z'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'a'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'z'), true);"
        ],
        "code": [
          "{",
          "    let result = byte_serialized_unchanged(b'-');",
          "    assert_eq!(byte_serialized_unchanged(b'.'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'*'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'_'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'-'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'0'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'1'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'Z'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'a'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'z'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = byte_serialized_unchanged(b'a');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'*');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'.');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'-');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'_');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'0');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'Z');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'9');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'B');",
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = byte_serialized_unchanged(b'a');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'*');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'.');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'-');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'_');",
          "    assert_eq!(result, true);",
          "    let result = byte_serialized_unchanged(b'0');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'Z');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'9');",
          "    assert_eq!(result, false);",
          "    let result = byte_serialized_unchanged(b'B');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = byte_serialized_unchanged(b'z');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(byte_serialized_unchanged(b'.'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'*'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'_'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'-'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'0'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'1'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'A'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'Z'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'a'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'z'), true);"
        ],
        "code": [
          "{",
          "    let result = byte_serialized_unchanged(b'z');",
          "    assert_eq!(byte_serialized_unchanged(b'.'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'*'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'_'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'-'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'0'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'1'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'A'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'Z'), false);",
          "    assert_eq!(byte_serialized_unchanged(b'a'), true);",
          "    assert_eq!(byte_serialized_unchanged(b'z'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]