[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let scheme = \"http\".to_owned();",
          "    let host = Host::Domain(\"example.com\".to_owned());",
          "    let port = 80;",
          "    let origin = Origin::Tuple(scheme, host, port);",
          "    let _result = origin.unicode_serialization();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(origin.unicode_serialization(), \"http://example.com\");"
        ],
        "code": [
          "{",
          "    let scheme = \"http\".to_owned();",
          "    let host = Host::Domain(\"example.com\".to_owned());",
          "    let port = 80;",
          "    let origin = Origin::Tuple(scheme, host, port);",
          "    let _result = origin.unicode_serialization();",
          "    assert_eq!(origin.unicode_serialization(), \"http://example.com\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let scheme = \"https\".to_owned();",
          "    let host = Host::Domain(\"sub.domain.com\".to_owned());",
          "    let port = 443;",
          "    let origin = Origin::Tuple(scheme, host, port);",
          "    let _result = origin.unicode_serialization();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(origin.unicode_serialization(), \"https://sub.domain.com\");"
        ],
        "code": [
          "{",
          "    let scheme = \"https\".to_owned();",
          "    let host = Host::Domain(\"sub.domain.com\".to_owned());",
          "    let port = 443;",
          "    let origin = Origin::Tuple(scheme, host, port);",
          "    let _result = origin.unicode_serialization();",
          "    assert_eq!(origin.unicode_serialization(), \"https://sub.domain.com\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let scheme = \"ftp\".to_owned();",
          "    let host = Host::Domain(\"ftp.example.com\".to_owned());",
          "    let port = 21;",
          "    let origin = Origin::Tuple(scheme, host, port);",
          "    let _result = origin.unicode_serialization();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(_result, \"ftp://ftp.example.com\");"
        ],
        "code": [
          "{",
          "    let scheme = \"ftp\".to_owned();",
          "    let host = Host::Domain(\"ftp.example.com\".to_owned());",
          "    let port = 21;",
          "    let origin = Origin::Tuple(scheme, host, port);",
          "    let _result = origin.unicode_serialization();",
          "    assert_eq!(_result, \"ftp://ftp.example.com\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]