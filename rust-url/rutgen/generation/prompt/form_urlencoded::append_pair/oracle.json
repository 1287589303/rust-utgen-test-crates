{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// form_urlencoded/src/lib.rs\n// crate name is form_urlencoded\npub type EncodingOverride<'a> = Option<&'a dyn Fn(&str) -> Cow<'_, [u8]>>;\nuse alloc::borrow::{Borrow, Cow, ToOwned};\nuse alloc::string::String;\nuse core::str;\nuse percent_encoding::{percent_decode, percent_encode_byte};\nfn append_pair(\n    string: &mut String,\n    start_position: usize,\n    encoding: EncodingOverride<'_>,\n    name: &str,\n    value: &str,\n) {\n    append_separator_if_needed(string, start_position);\n    append_encoded(name, string, encoding);\n    string.push('=');\n    append_encoded(value, string, encoding);\n}\nfn append_separator_if_needed(string: &mut String, start_position: usize) {\n    if string.len() > start_position {\n        string.push('&')\n    }\n}\nfn append_encoded(s: &str, string: &mut String, encoding: EncodingOverride<'_>) {\n    string.extend(byte_serialize(&encode(encoding, s)))\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n365 fn append_pair(\n366     string: &mut String,\n367     start_position: usize,\n368     encoding: EncodingOverride<'_>,\n369     name: &str,\n370     value: &str,\n371 ) {\n372     append_separator_if_needed(string, start_position);\n373     append_encoded(name, string, encoding);\n374     string.push('=');\n375     append_encoded(value, string, encoding);\n376 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}