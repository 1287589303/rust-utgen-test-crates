{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// data-url/src/lib.rs\n// crate name is data_url\nuse alloc::{string::String, vec::Vec};\nuse core::fmt;\nfn percent_encode(byte: u8, string: &mut String) {\n    const HEX_UPPER: [u8; 16] = *b\"0123456789ABCDEF\";\n    string.push('%');\n    string.push(HEX_UPPER[(byte >> 4) as usize] as char);\n    string.push(HEX_UPPER[(byte & 0x0f) as usize] as char);\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n268 fn percent_encode(byte: u8, string: &mut String) {\n269     const HEX_UPPER: [u8; 16] = *b\"0123456789ABCDEF\";\n270     string.push('%');\n271     string.push(HEX_UPPER[(byte >> 4) as usize] as char);\n272     string.push(HEX_UPPER[(byte & 0x0f) as usize] as char);\n273 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}