bb0
  0: StorageLive(_2)
    SourceInfo(url/src/origin.rs:18:9-18:15)
  1: StorageLive(_3)
    SourceInfo(url/src/origin.rs:18:18-18:21)
  2: _3 = &(*_1)
    SourceInfo(url/src/origin.rs:18:18-18:21)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:18:18-18:30)
      kind: _2 = Url::scheme(move _3) -> [return: bb1, unwind: bb43]
  }
  preds []
  succs [bb1, bb43]

bb1
  0: StorageDead(_3)
    SourceInfo(url/src/origin.rs:18:29-18:30)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(url/src/origin.rs:18:9-18:15)
  2: PlaceMention(_2)
    SourceInfo(url/src/origin.rs:19:11-19:17)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:20:9-20:15)
      kind: _10 = <str as core::cmp::PartialEq>::eq(_2, const "blob") -> [return: bb17, unwind: bb43]
  }
  preds [bb0]
  succs [bb17, bb43]

bb2
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:34:14-34:34)
      kind: _0 = origin::Origin::new_opaque() -> [return: bb39, unwind: bb43]
  }
  preds [bb10, bb11]
  succs [bb39, bb43]

bb3
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:20:9-20:15)
      kind: falseEdge -> [real: bb19, imaginary: bb4]
  }
  preds [bb17]
  succs [bb4, bb19]

bb4
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:27:9-27:14)
      kind: _9 = <str as core::cmp::PartialEq>::eq(_2, const "ftp") -> [return: bb16, unwind: bb43]
  }
  preds [bb3, bb17]
  succs [bb16, bb43]

bb5
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:27:17-27:23)
      kind: _8 = <str as core::cmp::PartialEq>::eq(_2, const "http") -> [return: bb15, unwind: bb43]
  }
  preds [bb16]
  succs [bb15, bb43]

bb6
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:27:26-27:33)
      kind: _7 = <str as core::cmp::PartialEq>::eq(_2, const "https") -> [return: bb14, unwind: bb43]
  }
  preds [bb15]
  succs [bb14, bb43]

bb7
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:27:36-27:40)
      kind: _6 = <str as core::cmp::PartialEq>::eq(_2, const "ws") -> [return: bb13, unwind: bb43]
  }
  preds [bb14]
  succs [bb13, bb43]

bb8
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:27:43-27:48)
      kind: _5 = <str as core::cmp::PartialEq>::eq(_2, const "wss") -> [return: bb12, unwind: bb43]
  }
  preds [bb13]
  succs [bb12, bb43]

bb9
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:33:9-33:15)
      kind: _4 = <str as core::cmp::PartialEq>::eq(_2, const "file") -> [return: bb11, unwind: bb43]
  }
  preds [bb12, bb18]
  succs [bb11, bb43]

bb10
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:33:9-33:15)
      kind: falseEdge -> [real: bb38, imaginary: bb2]
  }
  preds [bb11]
  succs [bb2, bb38]

bb11
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:33:9-33:15)
      kind: switchInt(move _4) -> [0: bb2, otherwise: bb10]
  }
  preds [bb9]
  succs [bb2, bb10]

bb12
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:27:43-27:48)
      kind: switchInt(move _5) -> [0: bb9, otherwise: bb18]
  }
  preds [bb8]
  succs [bb9, bb18]

bb13
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:27:36-27:40)
      kind: switchInt(move _6) -> [0: bb8, otherwise: bb18]
  }
  preds [bb7]
  succs [bb8, bb18]

bb14
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:27:26-27:33)
      kind: switchInt(move _7) -> [0: bb7, otherwise: bb18]
  }
  preds [bb6]
  succs [bb7, bb18]

bb15
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:27:17-27:23)
      kind: switchInt(move _8) -> [0: bb6, otherwise: bb18]
  }
  preds [bb5]
  succs [bb6, bb18]

bb16
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:27:9-27:14)
      kind: switchInt(move _9) -> [0: bb5, otherwise: bb18]
  }
  preds [bb4]
  succs [bb5, bb18]

bb17
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:20:9-20:15)
      kind: switchInt(move _10) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb18
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:27:9-27:48)
      kind: falseEdge -> [real: bb29, imaginary: bb9]
  }
  preds [bb12, bb13, bb14, bb15, bb16]
  succs [bb9, bb29]

bb19
  0: StorageLive(_11)
    SourceInfo(url/src/origin.rs:21:17-21:23)
  1: StorageLive(_12)
    SourceInfo(url/src/origin.rs:21:37-21:47)
  2: StorageLive(_13)
    SourceInfo(url/src/origin.rs:21:37-21:47)
  3: StorageLive(_14)
    SourceInfo(url/src/origin.rs:21:37-21:40)
  4: _14 = &(*_1)
    SourceInfo(url/src/origin.rs:21:37-21:40)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:21:37-21:47)
      kind: _13 = Url::path(move _14) -> [return: bb20, unwind: bb43]
  }
  preds [bb3]
  succs [bb20, bb43]

bb20
  0: _12 = &(*_13)
    SourceInfo(url/src/origin.rs:21:37-21:47)
  1: StorageDead(_14)
    SourceInfo(url/src/origin.rs:21:46-21:47)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:21:26-21:48)
      kind: _11 = Url::parse(move _12) -> [return: bb21, unwind: bb43]
  }
  preds [bb19]
  succs [bb21, bb43]

bb21
  0: StorageDead(_12)
    SourceInfo(url/src/origin.rs:21:47-21:48)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(url/src/origin.rs:21:17-21:23)
  2: StorageDead(_13)
    SourceInfo(url/src/origin.rs:21:48-21:49)
  3: PlaceMention(_11)
    SourceInfo(url/src/origin.rs:22:19-22:25)
  4: _15 = discriminant(_11)
    SourceInfo(url/src/origin.rs:22:19-22:25)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:22:13-22:25)
      kind: switchInt(move _15) -> [0: bb23, 1: bb24, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb23, bb24]

bb22
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(url/src/origin.rs:22:19-22:25)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:22:19-22:25)
      kind: unreachable
  }
  preds [bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:23:17-23:28)
      kind: falseEdge -> [real: bb25, imaginary: bb24]
  }
  preds [bb21]
  succs [bb24, bb25]

bb24
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:24:27-24:47)
      kind: _0 = origin::Origin::new_opaque() -> [return: bb27, unwind: bb42]
  }
  preds [bb21, bb23]
  succs [bb27, bb42]

bb25
  0: StorageLive(_16)
    SourceInfo(url/src/origin.rs:23:20-23:27)
  1: _16 = &((_11 as Ok).0: Url)
    SourceInfo(url/src/origin.rs:23:20-23:27)
  2: StorageLive(_17)
    SourceInfo(url/src/origin.rs:23:43-23:46)
  3: _17 = &(*_16)
    SourceInfo(url/src/origin.rs:23:43-23:46)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:23:32-23:47)
      kind: _0 = origin::url_origin(move _17) -> [return: bb26, unwind: bb42]
  }
  preds [bb23]
  succs [bb26, bb42]

bb26
  0: StorageDead(_17)
    SourceInfo(url/src/origin.rs:23:46-23:47)
  1: StorageDead(_16)
    SourceInfo(url/src/origin.rs:23:46-23:47)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:23:46-23:47)
      kind: goto -> bb27
  }
  preds [bb25]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:26:9-26:10)
      kind: drop(_11) -> [return: bb28, unwind: bb43]
  }
  preds [bb24, bb26]
  succs [bb28, bb43]

bb28
  0: StorageDead(_11)
    SourceInfo(url/src/origin.rs:26:9-26:10)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:26:9-26:10)
      kind: goto -> bb39
  }
  preds [bb27]
  succs [bb39]

bb29
  0: StorageLive(_18)
    SourceInfo(url/src/origin.rs:28:13-28:30)
  1: StorageLive(_19)
    SourceInfo(url/src/origin.rs:28:13-28:19)
  2: _19 = &(*_2)
    SourceInfo(url/src/origin.rs:28:13-28:19)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:28:13-28:30)
      kind: _18 = <str as std::borrow::ToOwned>::to_owned(move _19) -> [return: bb30, unwind: bb43]
  }
  preds [bb18]
  succs [bb30, bb43]

bb30
  0: StorageDead(_19)
    SourceInfo(url/src/origin.rs:28:29-28:30)
  1: StorageLive(_20)
    SourceInfo(url/src/origin.rs:29:13-29:43)
  2: StorageLive(_21)
    SourceInfo(url/src/origin.rs:29:13-29:32)
  3: StorageLive(_22)
    SourceInfo(url/src/origin.rs:29:13-29:32)
  4: StorageLive(_23)
    SourceInfo(url/src/origin.rs:29:13-29:23)
  5: StorageLive(_24)
    SourceInfo(url/src/origin.rs:29:13-29:16)
  6: _24 = &(*_1)
    SourceInfo(url/src/origin.rs:29:13-29:16)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:29:13-29:23)
      kind: _23 = Url::host(move _24) -> [return: bb31, unwind: bb41]
  }
  preds [bb29]
  succs [bb31, bb41]

bb31
  0: StorageDead(_24)
    SourceInfo(url/src/origin.rs:29:22-29:23)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:29:13-29:32)
      kind: _22 = core::option::Option::<host::Host<&str>>::unwrap(move _23) -> [return: bb32, unwind: bb41]
  }
  preds [bb30]
  succs [bb32, bb41]

bb32
  0: _21 = &_22
    SourceInfo(url/src/origin.rs:29:13-29:32)
  1: StorageDead(_23)
    SourceInfo(url/src/origin.rs:29:31-29:32)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:29:13-29:43)
      kind: _20 = host::Host::<&str>::to_owned(move _21) -> [return: bb33, unwind: bb41]
  }
  preds [bb31]
  succs [bb33, bb41]

bb33
  0: StorageDead(_21)
    SourceInfo(url/src/origin.rs:29:42-29:43)
  1: StorageLive(_25)
    SourceInfo(url/src/origin.rs:30:13-30:49)
  2: StorageLive(_26)
    SourceInfo(url/src/origin.rs:30:13-30:40)
  3: StorageLive(_27)
    SourceInfo(url/src/origin.rs:30:13-30:16)
  4: _27 = &(*_1)
    SourceInfo(url/src/origin.rs:30:13-30:16)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:30:13-30:40)
      kind: _26 = Url::port_or_known_default(move _27) -> [return: bb34, unwind: bb40]
  }
  preds [bb32]
  succs [bb34, bb40]

bb34
  0: StorageDead(_27)
    SourceInfo(url/src/origin.rs:30:39-30:40)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:30:13-30:49)
      kind: _25 = core::option::Option::<u16>::unwrap(move _26) -> [return: bb35, unwind: bb40]
  }
  preds [bb33]
  succs [bb35, bb40]

bb35
  0: StorageDead(_26)
    SourceInfo(url/src/origin.rs:30:48-30:49)
  1: _0 = origin::Origin::Tuple(move _18, move _20, move _25)
    SourceInfo(url/src/origin.rs:27:52-31:10)
  2: StorageDead(_25)
    SourceInfo(url/src/origin.rs:31:9-31:10)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:31:9-31:10)
      kind: drop(_20) -> [return: bb36, unwind: bb41]
  }
  preds [bb34]
  succs [bb36, bb41]

bb36
  0: StorageDead(_20)
    SourceInfo(url/src/origin.rs:31:9-31:10)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:31:9-31:10)
      kind: drop(_18) -> [return: bb37, unwind: bb43]
  }
  preds [bb35]
  succs [bb37, bb43]

bb37
  0: StorageDead(_18)
    SourceInfo(url/src/origin.rs:31:9-31:10)
  1: StorageDead(_22)
    SourceInfo(url/src/origin.rs:31:9-31:10)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:31:9-31:10)
      kind: goto -> bb39
  }
  preds [bb36]
  succs [bb39]

bb38
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:33:19-33:39)
      kind: _0 = origin::Origin::new_opaque() -> [return: bb39, unwind: bb43]
  }
  preds [bb10]
  succs [bb39, bb43]

bb39
  0: StorageDead(_2)
    SourceInfo(url/src/origin.rs:36:1-36:2)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:36:2-36:2)
      kind: return
  }
  preds [bb2, bb28, bb37, bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:31:9-31:10)
      kind: drop(_20) -> [return: bb41, unwind terminate(cleanup)]
  }
  preds [bb33, bb34]
  succs [bb41]

bb41
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:31:9-31:10)
      kind: drop(_18) -> [return: bb43, unwind terminate(cleanup)]
  }
  preds [bb30, bb31, bb32, bb35, bb40]
  succs [bb43]

bb42
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:26:9-26:10)
      kind: drop(_11) -> [return: bb43, unwind terminate(cleanup)]
  }
  preds [bb24, bb25]
  succs [bb43]

bb43
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:17:1-36:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb5, bb6, bb7, bb8, bb9, bb19, bb20, bb27, bb29, bb36, bb38, bb41, bb42]
  succs []

