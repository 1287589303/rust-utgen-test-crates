bb0
  0: StorageLive(_1)
    SourceInfo(url/src/origin.rs:68:24-68:76)
  1: StorageLive(_2)
    SourceInfo(url/src/origin.rs:68:37-68:75)
  2: StorageLive(_3)
    SourceInfo(url/src/origin.rs:68:37-68:44)
  3: StorageLive(_4)
    SourceInfo(url/src/origin.rs:68:37-68:44)
  4: _4 = const {alloc1: &core::sync::atomic::AtomicUsize}
    SourceInfo(url/src/origin.rs:68:37-68:44)
  5: _3 = &(*_4)
    SourceInfo(url/src/origin.rs:68:37-68:44)
  6: StorageLive(_5)
    SourceInfo(url/src/origin.rs:68:58-68:74)
  7: _5 = core::sync::atomic::Ordering::SeqCst
    SourceInfo(url/src/origin.rs:68:58-68:74)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:68:37-68:75)
      kind: _2 = core::sync::atomic::AtomicUsize::fetch_add(move _3, const 1_usize, move _5) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_5)
    SourceInfo(url/src/origin.rs:68:74-68:75)
  1: StorageDead(_3)
    SourceInfo(url/src/origin.rs:68:74-68:75)
  2: _1 = origin::OpaqueOrigin(move _2)
    SourceInfo(url/src/origin.rs:68:24-68:76)
  3: StorageDead(_2)
    SourceInfo(url/src/origin.rs:68:75-68:76)
  4: _0 = origin::Origin::Opaque(move _1)
    SourceInfo(url/src/origin.rs:68:9-68:77)
  5: StorageDead(_1)
    SourceInfo(url/src/origin.rs:68:76-68:77)
  6: StorageDead(_4)
    SourceInfo(url/src/origin.rs:69:5-69:6)
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:69:6-69:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(url/src/origin.rs:66:5-69:6)
      kind: resume
  }
  preds [bb0]
  succs []

