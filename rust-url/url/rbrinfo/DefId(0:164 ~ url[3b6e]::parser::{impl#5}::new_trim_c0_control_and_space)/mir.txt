bb0
  0: StorageLive(_3)
    SourceInfo(url/src/parser.rs:229:13-229:18)
  1: StorageLive(_4)
    SourceInfo(url/src/parser.rs:229:21-229:35)
  2: _4 = &(*_1)
    SourceInfo(url/src/parser.rs:229:21-229:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:229:21-229:69)
      kind: _3 = core::str::<impl str>::trim_matches::<'_, fn(char) -> bool {parser::c0_control_or_space}>(move _4, parser::c0_control_or_space) -> [return: bb1, unwind: bb19]
  }
  preds []
  succs [bb1, bb19]

bb1
  0: StorageDead(_4)
    SourceInfo(url/src/parser.rs:229:68-229:69)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(url/src/parser.rs:229:13-229:18)
  2: StorageLive(_5)
    SourceInfo(url/src/parser.rs:230:9-237:10)
  3: PlaceMention(_2)
    SourceInfo(url/src/parser.rs:230:28-230:31)
  4: _6 = discriminant(_2)
    SourceInfo(url/src/parser.rs:230:28-230:31)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:230:16-230:25)
      kind: switchInt(move _6) -> [1: bb2, otherwise: bb16]
  }
  preds [bb0]
  succs [bb2, bb16]

bb2
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:230:16-230:25)
      kind: falseEdge -> [real: bb3, imaginary: bb16]
  }
  preds [bb1]
  succs [bb3, bb16]

bb3
  0: StorageLive(_7)
    SourceInfo(url/src/parser.rs:230:21-230:24)
  1: _7 = ((_2 as Some).0: &dyn core::ops::Fn(parser::SyntaxViolation))
    SourceInfo(url/src/parser.rs:230:21-230:24)
  2: StorageLive(_8)
    SourceInfo(url/src/parser.rs:231:13-233:14)
  3: StorageLive(_9)
    SourceInfo(url/src/parser.rs:231:16-231:50)
  4: StorageLive(_10)
    SourceInfo(url/src/parser.rs:231:16-231:27)
  5: StorageLive(_11)
    SourceInfo(url/src/parser.rs:231:16-231:21)
  6: _11 = &(*_3)
    SourceInfo(url/src/parser.rs:231:16-231:21)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:231:16-231:27)
      kind: _10 = core::str::<impl str>::len(move _11) -> [return: bb4, unwind: bb19]
  }
  preds [bb2]
  succs [bb4, bb19]

bb4
  0: StorageDead(_11)
    SourceInfo(url/src/parser.rs:231:26-231:27)
  1: StorageLive(_12)
    SourceInfo(url/src/parser.rs:231:30-231:50)
  2: StorageLive(_13)
    SourceInfo(url/src/parser.rs:231:30-231:44)
  3: _13 = &(*_1)
    SourceInfo(url/src/parser.rs:231:30-231:44)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:231:30-231:50)
      kind: _12 = core::str::<impl str>::len(move _13) -> [return: bb5, unwind: bb19]
  }
  preds [bb3]
  succs [bb5, bb19]

bb5
  0: StorageDead(_13)
    SourceInfo(url/src/parser.rs:231:49-231:50)
  1: _9 = Lt(move _10, move _12)
    SourceInfo(url/src/parser.rs:231:16-231:50)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:231:16-231:50)
      kind: switchInt(move _9) -> [0: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: StorageDead(_12)
    SourceInfo(url/src/parser.rs:231:49-231:50)
  1: StorageDead(_10)
    SourceInfo(url/src/parser.rs:231:49-231:50)
  2: StorageLive(_14)
    SourceInfo(url/src/parser.rs:232:17-232:20)
  3: _14 = &(*_7)
    SourceInfo(url/src/parser.rs:232:17-232:20)
  4: StorageLive(_15)
    SourceInfo(url/src/parser.rs:232:17-232:53)
  5: StorageLive(_16)
    SourceInfo(url/src/parser.rs:232:21-232:52)
  6: _16 = parser::SyntaxViolation::C0SpaceIgnored
    SourceInfo(url/src/parser.rs:232:21-232:52)
  7: _15 = (move _16,)
    SourceInfo(url/src/parser.rs:232:17-232:53)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:232:17-232:53)
      kind: _8 = <dyn core::ops::Fn(parser::SyntaxViolation) as core::ops::Fn<(parser::SyntaxViolation,)>>::call(move _14, move _15) -> [return: bb7, unwind: bb19]
  }
  preds [bb5]
  succs [bb7, bb19]

bb7
  0: StorageDead(_16)
    SourceInfo(url/src/parser.rs:232:52-232:53)
  1: StorageDead(_15)
    SourceInfo(url/src/parser.rs:232:52-232:53)
  2: StorageDead(_14)
    SourceInfo(url/src/parser.rs:232:52-232:53)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:231:13-233:14)
      kind: goto -> bb9
  }
  preds [bb6]
  succs [bb9]

bb8
  0: StorageDead(_12)
    SourceInfo(url/src/parser.rs:231:49-231:50)
  1: StorageDead(_10)
    SourceInfo(url/src/parser.rs:231:49-231:50)
  2: _8 = const ()
    SourceInfo(url/src/parser.rs:233:14-233:14)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:231:13-233:14)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb9
  0: StorageDead(_9)
    SourceInfo(url/src/parser.rs:233:13-233:14)
  1: StorageDead(_8)
    SourceInfo(url/src/parser.rs:233:13-233:14)
  2: StorageLive(_17)
    SourceInfo(url/src/parser.rs:234:16-234:56)
  3: StorageLive(_18)
    SourceInfo(url/src/parser.rs:234:16-234:29)
  4: StorageLive(_19)
    SourceInfo(url/src/parser.rs:234:16-234:29)
  5: StorageLive(_20)
    SourceInfo(url/src/parser.rs:234:16-234:21)
  6: _20 = &(*_3)
    SourceInfo(url/src/parser.rs:234:16-234:21)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:234:16-234:29)
      kind: _19 = core::str::<impl str>::chars(move _20) -> [return: bb10, unwind: bb19]
  }
  preds [bb7, bb8]
  succs [bb10, bb19]

bb10
  0: _18 = &mut _19
    SourceInfo(url/src/parser.rs:234:16-234:29)
  1: StorageDead(_20)
    SourceInfo(url/src/parser.rs:234:28-234:29)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:234:16-234:56)
      kind: _17 = <core::str::Chars<'_> as core::iter::Iterator>::any::<fn(char) -> bool {parser::ascii_tab_or_new_line}>(move _18, parser::ascii_tab_or_new_line) -> [return: bb11, unwind: bb19]
  }
  preds [bb9]
  succs [bb11, bb19]

bb11
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:234:16-234:56)
      kind: switchInt(move _17) -> [0: bb14, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb14]

bb12
  0: StorageDead(_19)
    SourceInfo(url/src/parser.rs:234:55-234:56)
  1: StorageDead(_18)
    SourceInfo(url/src/parser.rs:234:55-234:56)
  2: StorageLive(_21)
    SourceInfo(url/src/parser.rs:235:17-235:20)
  3: _21 = &(*_7)
    SourceInfo(url/src/parser.rs:235:17-235:20)
  4: StorageLive(_22)
    SourceInfo(url/src/parser.rs:235:17-235:58)
  5: StorageLive(_23)
    SourceInfo(url/src/parser.rs:235:21-235:57)
  6: _23 = parser::SyntaxViolation::TabOrNewlineIgnored
    SourceInfo(url/src/parser.rs:235:21-235:57)
  7: _22 = (move _23,)
    SourceInfo(url/src/parser.rs:235:17-235:58)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:235:17-235:58)
      kind: _5 = <dyn core::ops::Fn(parser::SyntaxViolation) as core::ops::Fn<(parser::SyntaxViolation,)>>::call(move _21, move _22) -> [return: bb13, unwind: bb19]
  }
  preds [bb11]
  succs [bb13, bb19]

bb13
  0: StorageDead(_23)
    SourceInfo(url/src/parser.rs:235:57-235:58)
  1: StorageDead(_22)
    SourceInfo(url/src/parser.rs:235:57-235:58)
  2: StorageDead(_21)
    SourceInfo(url/src/parser.rs:235:57-235:58)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:234:13-236:14)
      kind: goto -> bb15
  }
  preds [bb12]
  succs [bb15]

bb14
  0: StorageDead(_19)
    SourceInfo(url/src/parser.rs:234:55-234:56)
  1: StorageDead(_18)
    SourceInfo(url/src/parser.rs:234:55-234:56)
  2: _5 = const ()
    SourceInfo(url/src/parser.rs:236:14-236:14)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:234:13-236:14)
      kind: goto -> bb15
  }
  preds [bb11]
  succs [bb15]

bb15
  0: StorageDead(_17)
    SourceInfo(url/src/parser.rs:236:13-236:14)
  1: StorageDead(_7)
    SourceInfo(url/src/parser.rs:237:9-237:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:230:9-237:10)
      kind: goto -> bb17
  }
  preds [bb13, bb14]
  succs [bb17]

bb16
  0: _5 = const ()
    SourceInfo(url/src/parser.rs:237:10-237:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:230:9-237:10)
      kind: goto -> bb17
  }
  preds [bb1, bb2]
  succs [bb17]

bb17
  0: StorageDead(_5)
    SourceInfo(url/src/parser.rs:237:9-237:10)
  1: StorageLive(_24)
    SourceInfo(url/src/parser.rs:239:20-239:33)
  2: StorageLive(_25)
    SourceInfo(url/src/parser.rs:239:20-239:25)
  3: _25 = &(*_3)
    SourceInfo(url/src/parser.rs:239:20-239:25)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:239:20-239:33)
      kind: _24 = core::str::<impl str>::chars(move _25) -> [return: bb18, unwind: bb19]
  }
  preds [bb15, bb16]
  succs [bb18, bb19]

bb18
  0: StorageDead(_25)
    SourceInfo(url/src/parser.rs:239:32-239:33)
  1: _0 = parser::Input::<'_> { chars: move _24 }
    SourceInfo(url/src/parser.rs:238:9-240:10)
  2: StorageDead(_24)
    SourceInfo(url/src/parser.rs:240:9-240:10)
  3: StorageDead(_3)
    SourceInfo(url/src/parser.rs:241:5-241:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:241:6-241:6)
      kind: return
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:225:5-241:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb6, bb9, bb10, bb12, bb17]
  succs []

