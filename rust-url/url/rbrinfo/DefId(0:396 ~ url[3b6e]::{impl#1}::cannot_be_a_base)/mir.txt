bb0
  0: StorageLive(_2)
    SourceInfo(url/src/lib.rs:1023:10-1023:60)
  1: StorageLive(_3)
    SourceInfo(url/src/lib.rs:1023:10-1023:43)
  2: StorageLive(_4)
    SourceInfo(url/src/lib.rs:1023:10-1023:43)
  3: StorageLive(_5)
    SourceInfo(url/src/lib.rs:1023:10-1023:14)
  4: _5 = &(*_1)
    SourceInfo(url/src/lib.rs:1023:10-1023:14)
  5: StorageLive(_6)
    SourceInfo(url/src/lib.rs:1023:21-1023:42)
  6: StorageLive(_7)
    SourceInfo(url/src/lib.rs:1023:21-1023:40)
  7: StorageLive(_8)
    SourceInfo(url/src/lib.rs:1023:21-1023:36)
  8: _8 = ((*_1).1: u32)
    SourceInfo(url/src/lib.rs:1023:21-1023:36)
  9: _9 = AddWithOverflow(_8, const 1_u32)
    SourceInfo(url/src/lib.rs:1023:21-1023:40)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1023:21-1023:40)
      kind: assert(!move (_9.1: bool), "attempt to compute `{} + {}`, which would overflow", move _8, const 1_u32) -> [success: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _7 = move (_9.0: u32)
    SourceInfo(url/src/lib.rs:1023:21-1023:40)
  1: StorageDead(_8)
    SourceInfo(url/src/lib.rs:1023:39-1023:40)
  2: _6 = core::ops::RangeFrom::<u32> { start: move _7 }
    SourceInfo(url/src/lib.rs:1023:21-1023:42)
  3: StorageDead(_7)
    SourceInfo(url/src/lib.rs:1023:41-1023:42)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1023:10-1023:43)
      kind: _4 = Url::slice::<core::ops::RangeFrom<u32>>(move _5, move _6) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: _3 = &(*_4)
    SourceInfo(url/src/lib.rs:1023:10-1023:43)
  1: StorageDead(_6)
    SourceInfo(url/src/lib.rs:1023:42-1023:43)
  2: StorageDead(_5)
    SourceInfo(url/src/lib.rs:1023:42-1023:43)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1023:10-1023:60)
      kind: _2 = core::str::<impl str>::starts_with::<'_, char>(move _3, const '/') -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_3)
    SourceInfo(url/src/lib.rs:1023:59-1023:60)
  1: _0 = Not(move _2)
    SourceInfo(url/src/lib.rs:1023:9-1023:60)
  2: StorageDead(_2)
    SourceInfo(url/src/lib.rs:1023:59-1023:60)
  3: StorageDead(_4)
    SourceInfo(url/src/lib.rs:1024:5-1024:6)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1024:6-1024:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1022:5-1024:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

