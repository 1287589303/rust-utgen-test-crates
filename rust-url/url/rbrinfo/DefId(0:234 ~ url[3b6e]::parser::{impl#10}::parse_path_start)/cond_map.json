{
  "url/src/parser.rs:1180:12:1180:29": [
    {
      "Bool": {
        "Other": "maybe_c.is_some()"
      }
    }
  ],
  "url/src/parser.rs:1180:33:1180:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "maybe_c != Some('/')",
          "lhs": "maybe_c",
          "rhs": "Some('/')",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:1166:20:1166:40": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "maybe_c == Some('/')",
          "lhs": "maybe_c",
          "rhs": "Some('/')",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:1157:12:1157:36": [
    {
      "Bool": {
        "Other": "scheme_type.is_special()"
      }
    }
  ],
  "url/src/parser.rs:1163:17:1163:50": [
    {
      "Bool": {
        "Other": "self.serialization.ends_with('/')"
      }
    }
  ],
  "url/src/parser.rs:1171:43:1171:63": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "maybe_c == Some('#')",
          "lhs": "maybe_c",
          "rhs": "Some('#')",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:1166:44:1166:65": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "maybe_c == Some('\\\\')",
          "lhs": "maybe_c",
          "rhs": "Some('\\\\')",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:1171:19:1171:39": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "maybe_c == Some('?')",
          "lhs": "maybe_c",
          "rhs": "Some('?')",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:1158:16:1158:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "maybe_c == Some('\\\\')",
          "lhs": "maybe_c",
          "rhs": "Some('\\\\')",
          "cmp_with_int": false
        }
      }
    }
  ]
}