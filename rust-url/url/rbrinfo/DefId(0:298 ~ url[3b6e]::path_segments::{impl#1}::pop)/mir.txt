bb0
  0: StorageLive(_2)
    SourceInfo(url/src/path_segments.rs:154:9-156:10)
  1: StorageLive(_3)
    SourceInfo(url/src/path_segments.rs:154:12-154:66)
  2: StorageLive(_4)
    SourceInfo(url/src/path_segments.rs:154:12-154:34)
  3: _4 = ((*_1).1: usize)
    SourceInfo(url/src/path_segments.rs:154:12-154:34)
  4: StorageLive(_5)
    SourceInfo(url/src/path_segments.rs:154:38-154:66)
  5: StorageLive(_6)
    SourceInfo(url/src/path_segments.rs:154:38-154:60)
  6: _6 = &((*((*_1).0: &mut Url)).0: std::string::String)
    SourceInfo(url/src/path_segments.rs:154:38-154:60)
  Terminator {
      source_info: SourceInfo(url/src/path_segments.rs:154:38-154:66)
      kind: _5 = std::string::String::len(move _6) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: StorageDead(_6)
    SourceInfo(url/src/path_segments.rs:154:65-154:66)
  1: _3 = Ge(move _4, move _5)
    SourceInfo(url/src/path_segments.rs:154:12-154:66)
  Terminator {
      source_info: SourceInfo(url/src/path_segments.rs:154:12-154:66)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(url/src/path_segments.rs:154:65-154:66)
  1: StorageDead(_4)
    SourceInfo(url/src/path_segments.rs:154:65-154:66)
  2: _0 = &mut (*_1)
    SourceInfo(url/src/path_segments.rs:155:20-155:24)
  3: StorageDead(_3)
    SourceInfo(url/src/path_segments.rs:156:9-156:10)
  4: StorageDead(_2)
    SourceInfo(url/src/path_segments.rs:156:9-156:10)
  Terminator {
      source_info: SourceInfo(url/src/path_segments.rs:164:6-164:6)
      kind: goto -> bb9
  }
  preds [bb1]
  succs [bb9]

bb3
  0: StorageDead(_5)
    SourceInfo(url/src/path_segments.rs:154:65-154:66)
  1: StorageDead(_4)
    SourceInfo(url/src/path_segments.rs:154:65-154:66)
  2: _2 = const ()
    SourceInfo(url/src/path_segments.rs:156:10-156:10)
  3: StorageDead(_3)
    SourceInfo(url/src/path_segments.rs:156:9-156:10)
  4: StorageDead(_2)
    SourceInfo(url/src/path_segments.rs:156:9-156:10)
  5: StorageLive(_8)
    SourceInfo(url/src/path_segments.rs:157:13-157:23)
  6: StorageLive(_9)
    SourceInfo(url/src/path_segments.rs:157:26-158:24)
  7: StorageLive(_10)
    SourceInfo(url/src/path_segments.rs:157:26-157:74)
  8: StorageLive(_11)
    SourceInfo(url/src/path_segments.rs:157:48-157:74)
  9: StorageLive(_12)
    SourceInfo(url/src/path_segments.rs:157:26-157:48)
  10: _12 = &((*((*_1).0: &mut Url)).0: std::string::String)
    SourceInfo(url/src/path_segments.rs:157:26-157:48)
  11: StorageLive(_13)
    SourceInfo(url/src/path_segments.rs:157:49-157:73)
  12: StorageLive(_14)
    SourceInfo(url/src/path_segments.rs:157:49-157:71)
  13: _14 = ((*_1).1: usize)
    SourceInfo(url/src/path_segments.rs:157:49-157:71)
  14: _13 = core::ops::RangeFrom::<usize> { start: move _14 }
    SourceInfo(url/src/path_segments.rs:157:49-157:73)
  15: StorageDead(_14)
    SourceInfo(url/src/path_segments.rs:157:72-157:73)
  Terminator {
      source_info: SourceInfo(url/src/path_segments.rs:157:48-157:74)
      kind: _11 = <std::string::String as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _12, move _13) -> [return: bb4, unwind: bb10]
  }
  preds [bb1]
  succs [bb4, bb10]

bb4
  0: _10 = &(*_11)
    SourceInfo(url/src/path_segments.rs:157:26-157:74)
  1: StorageDead(_13)
    SourceInfo(url/src/path_segments.rs:157:73-157:74)
  2: StorageDead(_12)
    SourceInfo(url/src/path_segments.rs:157:73-157:74)
  Terminator {
      source_info: SourceInfo(url/src/path_segments.rs:157:26-158:24)
      kind: _9 = core::str::<impl str>::rfind::<'_, char>(move _10, const '/') -> [return: bb5, unwind: bb10]
  }
  preds [bb3]
  succs [bb5, bb10]

bb5
  0: StorageDead(_10)
    SourceInfo(url/src/path_segments.rs:158:23-158:24)
  Terminator {
      source_info: SourceInfo(url/src/path_segments.rs:157:26-159:26)
      kind: _8 = core::option::Option::<usize>::unwrap_or(move _9, const 0_usize) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_9)
    SourceInfo(url/src/path_segments.rs:159:25-159:26)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(url/src/path_segments.rs:157:13-157:23)
  2: StorageDead(_11)
    SourceInfo(url/src/path_segments.rs:159:26-159:27)
  3: StorageLive(_15)
    SourceInfo(url/src/path_segments.rs:160:9-162:59)
  4: StorageLive(_16)
    SourceInfo(url/src/path_segments.rs:160:9-161:27)
  5: _16 = &mut ((*((*_1).0: &mut Url)).0: std::string::String)
    SourceInfo(url/src/path_segments.rs:160:9-161:27)
  6: StorageLive(_17)
    SourceInfo(url/src/path_segments.rs:162:23-162:58)
  7: StorageLive(_18)
    SourceInfo(url/src/path_segments.rs:162:23-162:45)
  8: _18 = ((*_1).1: usize)
    SourceInfo(url/src/path_segments.rs:162:23-162:45)
  9: StorageLive(_19)
    SourceInfo(url/src/path_segments.rs:162:48-162:58)
  10: _19 = _8
    SourceInfo(url/src/path_segments.rs:162:48-162:58)
  11: _20 = AddWithOverflow(_18, _19)
    SourceInfo(url/src/path_segments.rs:162:23-162:58)
  Terminator {
      source_info: SourceInfo(url/src/path_segments.rs:162:23-162:58)
      kind: assert(!move (_20.1: bool), "attempt to compute `{} + {}`, which would overflow", move _18, move _19) -> [success: bb7, unwind: bb10]
  }
  preds [bb5]
  succs [bb7, bb10]

bb7
  0: _17 = move (_20.0: usize)
    SourceInfo(url/src/path_segments.rs:162:23-162:58)
  1: StorageDead(_19)
    SourceInfo(url/src/path_segments.rs:162:57-162:58)
  2: StorageDead(_18)
    SourceInfo(url/src/path_segments.rs:162:57-162:58)
  Terminator {
      source_info: SourceInfo(url/src/path_segments.rs:160:9-162:59)
      kind: _15 = std::string::String::truncate(move _16, move _17) -> [return: bb8, unwind: bb10]
  }
  preds [bb6]
  succs [bb8, bb10]

bb8
  0: StorageDead(_17)
    SourceInfo(url/src/path_segments.rs:162:58-162:59)
  1: StorageDead(_16)
    SourceInfo(url/src/path_segments.rs:162:58-162:59)
  2: StorageDead(_15)
    SourceInfo(url/src/path_segments.rs:162:59-162:60)
  3: _0 = &mut (*_1)
    SourceInfo(url/src/path_segments.rs:163:9-163:13)
  4: StorageDead(_8)
    SourceInfo(url/src/path_segments.rs:164:5-164:6)
  Terminator {
      source_info: SourceInfo(url/src/path_segments.rs:164:6-164:6)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(url/src/path_segments.rs:164:6-164:6)
      kind: return
  }
  preds [bb2, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(url/src/path_segments.rs:153:5-164:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb5, bb6, bb7]
  succs []

