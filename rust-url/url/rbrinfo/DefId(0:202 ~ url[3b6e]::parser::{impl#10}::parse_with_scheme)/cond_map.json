{
  "url/src/parser.rs:431:15:431:26": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:431:15:431:26",
        "match_str": "scheme_type",
        "match_kind": {
          "Enum": [
            "File",
            "SpecialNotFile",
            "NotSpecial"
          ]
        },
        "arms": {
          "url/src/parser.rs:432:13:432:29": {
            "pat": {
              "pat_str": "SchemeType::File",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:432:33:443:14"
          },
          "url/src/parser.rs:444:13:444:39": {
            "pat": {
              "pat_str": "SchemeType::SpecialNotFile",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:444:43:466:14"
          },
          "url/src/parser.rs:467:13:467:35": {
            "pat": {
              "pat_str": "SchemeType::NotSpecial",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:467:39:467:93"
          }
        }
      }
    }
  ],
  "url/src/parser.rs:448:24:448:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "slashes_count < 2",
          "lhs": "slashes_count",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/parser.rs:452:40:452:67": [
    {
      "Bool": {
        "Other": "base_url.cannot_be_a_base()"
      }
    }
  ],
  "url/src/parser.rs:449:28:449:91": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "base_url.scheme() == &self.serialization[..scheme_end as usize]",
          "lhs": "base_url.scheme()",
          "rhs": "&self.serialization[..scheme_end as usize]",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:428:26:428:59": [
    {
      "Try": "to_u32(self.serialization.len())?"
    }
  ],
  "url/src/parser.rs:447:20:447:54": [
    {
      "Bool": {
        "Other": "let Some(base_url) = self.base_url"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ]
}