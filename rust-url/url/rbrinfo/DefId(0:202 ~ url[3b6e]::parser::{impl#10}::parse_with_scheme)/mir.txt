bb0
  0: StorageLive(_3)
    SourceInfo(url/src/parser.rs:428:13-428:23)
  1: StorageLive(_4)
    SourceInfo(url/src/parser.rs:428:26-428:59)
  2: StorageLive(_5)
    SourceInfo(url/src/parser.rs:428:26-428:58)
  3: StorageLive(_6)
    SourceInfo(url/src/parser.rs:428:33-428:57)
  4: StorageLive(_7)
    SourceInfo(url/src/parser.rs:428:33-428:51)
  5: _7 = &(_1.0: std::string::String)
    SourceInfo(url/src/parser.rs:428:33-428:51)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:428:33-428:57)
      kind: _6 = std::string::String::len(move _7) -> [return: bb1, unwind: bb52]
  }
  preds []
  succs [bb1, bb52]

bb1
  0: StorageDead(_7)
    SourceInfo(url/src/parser.rs:428:56-428:57)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:428:26-428:58)
      kind: _5 = parser::to_u32(move _6) -> [return: bb2, unwind: bb52]
  }
  preds [bb0]
  succs [bb2, bb52]

bb2
  0: StorageDead(_6)
    SourceInfo(url/src/parser.rs:428:57-428:58)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:428:26-428:59)
      kind: _4 = <core::result::Result<u32, parser::ParseError> as core::ops::Try>::branch(move _5) -> [return: bb3, unwind: bb52]
  }
  preds [bb1]
  succs [bb3, bb52]

bb3
  0: StorageDead(_5)
    SourceInfo(url/src/parser.rs:428:58-428:59)
  1: PlaceMention(_4)
    SourceInfo(url/src/parser.rs:428:26-428:59)
  2: _8 = discriminant(_4)
    SourceInfo(url/src/parser.rs:428:26-428:59)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:428:26-428:59)
      kind: switchInt(move _8) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(url/src/parser.rs:428:26-428:59)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:428:26-428:59)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:428:58-428:59)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_12)
    SourceInfo(url/src/parser.rs:428:26-428:59)
  1: _12 = ((_4 as Continue).0: u32)
    SourceInfo(url/src/parser.rs:428:26-428:59)
  2: _3 = _12
    SourceInfo(url/src/parser.rs:428:26-428:59)
  3: StorageDead(_12)
    SourceInfo(url/src/parser.rs:428:58-428:59)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(url/src/parser.rs:428:13-428:23)
  5: StorageDead(_4)
    SourceInfo(url/src/parser.rs:428:59-428:60)
  6: StorageLive(_13)
    SourceInfo(url/src/parser.rs:429:13-429:24)
  7: StorageLive(_14)
    SourceInfo(url/src/parser.rs:429:44-429:63)
  8: _14 = &(_1.0: std::string::String)
    SourceInfo(url/src/parser.rs:429:44-429:63)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:429:27-429:64)
      kind: _13 = <parser::SchemeType as core::convert::From<&std::string::String>>::from(move _14) -> [return: bb9, unwind: bb52]
  }
  preds [bb3, bb5]
  succs [bb9, bb52]

bb7
  0: StorageLive(_9)
    SourceInfo(url/src/parser.rs:428:58-428:59)
  1: _9 = ((_4 as Break).0: core::result::Result<core::convert::Infallible, parser::ParseError>)
    SourceInfo(url/src/parser.rs:428:58-428:59)
  2: StorageLive(_11)
    SourceInfo(url/src/parser.rs:428:58-428:59)
  3: _11 = _9
    SourceInfo(url/src/parser.rs:428:58-428:59)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:428:26-428:59)
      kind: _0 = <core::result::Result<Url, parser::ParseError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, parser::ParseError>>>::from_residual(move _11) -> [return: bb8, unwind: bb52]
  }
  preds [bb5]
  succs [bb8, bb52]

bb8
  0: StorageDead(_11)
    SourceInfo(url/src/parser.rs:428:58-428:59)
  1: StorageDead(_9)
    SourceInfo(url/src/parser.rs:428:58-428:59)
  2: StorageDead(_4)
    SourceInfo(url/src/parser.rs:428:59-428:60)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb7]
  succs [bb46]

bb9
  0: StorageDead(_14)
    SourceInfo(url/src/parser.rs:429:63-429:64)
  1: FakeRead(ForLet(None), _13)
    SourceInfo(url/src/parser.rs:429:13-429:24)
  2: StorageLive(_15)
    SourceInfo(url/src/parser.rs:430:9-430:37)
  3: StorageLive(_16)
    SourceInfo(url/src/parser.rs:430:9-430:27)
  4: _16 = &mut (_1.0: std::string::String)
    SourceInfo(url/src/parser.rs:430:9-430:27)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:430:9-430:37)
      kind: _15 = std::string::String::push(move _16, const ':') -> [return: bb10, unwind: bb52]
  }
  preds [bb6]
  succs [bb10, bb52]

bb10
  0: StorageDead(_16)
    SourceInfo(url/src/parser.rs:430:36-430:37)
  1: StorageDead(_15)
    SourceInfo(url/src/parser.rs:430:37-430:38)
  2: PlaceMention(_13)
    SourceInfo(url/src/parser.rs:431:15-431:26)
  3: _17 = discriminant(_13)
    SourceInfo(url/src/parser.rs:431:15-431:26)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:431:9-431:26)
      kind: switchInt(move _17) -> [0: bb12, 1: bb13, 2: bb14, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13, bb14]

bb11
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(url/src/parser.rs:431:15-431:26)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:431:15-431:26)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:432:13-432:29)
      kind: falseEdge -> [real: bb15, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb15]

bb13
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:444:13-444:39)
      kind: falseEdge -> [real: bb20, imaginary: bb14]
  }
  preds [bb10, bb12]
  succs [bb14, bb20]

bb14
  0: StorageLive(_75)
    SourceInfo(url/src/parser.rs:467:39-467:43)
  1: _75 = move _1
    SourceInfo(url/src/parser.rs:467:39-467:43)
  2: StorageLive(_76)
    SourceInfo(url/src/parser.rs:467:62-467:67)
  3: _76 = move _2
    SourceInfo(url/src/parser.rs:467:62-467:67)
  4: StorageLive(_77)
    SourceInfo(url/src/parser.rs:467:69-467:80)
  5: _77 = _13
    SourceInfo(url/src/parser.rs:467:69-467:80)
  6: StorageLive(_78)
    SourceInfo(url/src/parser.rs:467:82-467:92)
  7: _78 = _3
    SourceInfo(url/src/parser.rs:467:82-467:92)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:467:39-467:93)
      kind: _0 = parser::Parser::<'_>::parse_non_special(move _75, move _76, move _77, move _78) -> [return: bb44, unwind: bb48]
  }
  preds [bb10, bb13]
  succs [bb44, bb48]

bb15
  0: StorageLive(_18)
    SourceInfo(url/src/parser.rs:433:17-433:92)
  1: StorageLive(_19)
    SourceInfo(url/src/parser.rs:433:17-433:21)
  2: _19 = &_1
    SourceInfo(url/src/parser.rs:433:17-433:21)
  3: StorageLive(_20)
    SourceInfo(url/src/parser.rs:433:39-433:62)
  4: _20 = parser::SyntaxViolation::ExpectedFileDoubleSlash
    SourceInfo(url/src/parser.rs:433:39-433:62)
  5: StorageLive(_21)
    SourceInfo(url/src/parser.rs:433:64-433:91)
  6: StorageLive(_22)
    SourceInfo(url/src/parser.rs:433:64-433:91)
  7: _22 = &_2
    SourceInfo(url/src/parser.rs:433:64-433:91)
  8: _21 = {closure@url/src/parser.rs:433:64: 433:66} { input: move _22 }
    SourceInfo(url/src/parser.rs:433:64-433:91)
  9: StorageDead(_22)
    SourceInfo(url/src/parser.rs:433:65-433:66)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:433:17-433:92)
      kind: _18 = parser::Parser::<'_>::log_violation_if::<{closure@url/src/parser.rs:433:64: 433:66}>(move _19, move _20, move _21) -> [return: bb16, unwind: bb52]
  }
  preds [bb12]
  succs [bb16, bb52]

bb16
  0: StorageDead(_21)
    SourceInfo(url/src/parser.rs:433:91-433:92)
  1: StorageDead(_20)
    SourceInfo(url/src/parser.rs:433:91-433:92)
  2: StorageDead(_19)
    SourceInfo(url/src/parser.rs:433:91-433:92)
  3: StorageDead(_18)
    SourceInfo(url/src/parser.rs:433:92-433:93)
  4: StorageLive(_23)
    SourceInfo(url/src/parser.rs:434:21-434:34)
  5: StorageLive(_24)
    SourceInfo(url/src/parser.rs:434:37-434:50)
  6: _24 = (_1.1: core::option::Option<&Url>)
    SourceInfo(url/src/parser.rs:434:37-434:50)
  7: StorageLive(_25)
    SourceInfo(url/src/parser.rs:434:60-440:18)
  8: _25 = {closure@url/src/parser.rs:434:60: 434:66}
    SourceInfo(url/src/parser.rs:434:60-440:18)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:434:37-440:19)
      kind: _23 = core::option::Option::<&Url>::and_then::<&Url, {closure@url/src/parser.rs:434:60: 434:66}>(move _24, move _25) -> [return: bb17, unwind: bb52]
  }
  preds [bb15]
  succs [bb17, bb52]

bb17
  0: StorageDead(_25)
    SourceInfo(url/src/parser.rs:440:18-440:19)
  1: StorageDead(_24)
    SourceInfo(url/src/parser.rs:440:18-440:19)
  2: FakeRead(ForLet(None), _23)
    SourceInfo(url/src/parser.rs:434:21-434:34)
  3: StorageLive(_26)
    SourceInfo(url/src/parser.rs:441:17-441:43)
  4: StorageLive(_27)
    SourceInfo(url/src/parser.rs:441:17-441:35)
  5: _27 = &mut (_1.0: std::string::String)
    SourceInfo(url/src/parser.rs:441:17-441:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:441:17-441:43)
      kind: _26 = std::string::String::clear(move _27) -> [return: bb18, unwind: bb52]
  }
  preds [bb16]
  succs [bb18, bb52]

bb18
  0: StorageDead(_27)
    SourceInfo(url/src/parser.rs:441:42-441:43)
  1: StorageDead(_26)
    SourceInfo(url/src/parser.rs:441:43-441:44)
  2: StorageLive(_28)
    SourceInfo(url/src/parser.rs:442:17-442:21)
  3: _28 = move _1
    SourceInfo(url/src/parser.rs:442:17-442:21)
  4: StorageLive(_29)
    SourceInfo(url/src/parser.rs:442:33-442:38)
  5: _29 = move _2
    SourceInfo(url/src/parser.rs:442:33-442:38)
  6: StorageLive(_30)
    SourceInfo(url/src/parser.rs:442:40-442:51)
  7: _30 = _13
    SourceInfo(url/src/parser.rs:442:40-442:51)
  8: StorageLive(_31)
    SourceInfo(url/src/parser.rs:442:53-442:66)
  9: _31 = _23
    SourceInfo(url/src/parser.rs:442:53-442:66)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:442:17-442:67)
      kind: _0 = parser::Parser::<'_>::parse_file(move _28, move _29, move _30, move _31) -> [return: bb19, unwind: bb51]
  }
  preds [bb17]
  succs [bb19, bb51]

bb19
  0: StorageDead(_31)
    SourceInfo(url/src/parser.rs:442:66-442:67)
  1: StorageDead(_30)
    SourceInfo(url/src/parser.rs:442:66-442:67)
  2: StorageDead(_29)
    SourceInfo(url/src/parser.rs:442:66-442:67)
  3: StorageDead(_28)
    SourceInfo(url/src/parser.rs:442:66-442:67)
  4: StorageDead(_23)
    SourceInfo(url/src/parser.rs:443:13-443:14)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:443:13-443:14)
      kind: goto -> bb45
  }
  preds [bb18]
  succs [bb45]

bb20
  0: StorageLive(_34)
    SourceInfo(url/src/parser.rs:446:50-446:99)
  1: StorageLive(_35)
    SourceInfo(url/src/parser.rs:446:50-446:55)
  2: _35 = &_2
    SourceInfo(url/src/parser.rs:446:50-446:55)
  3: StorageLive(_36)
    SourceInfo(url/src/parser.rs:446:71-446:98)
  4: _36 = {closure@url/src/parser.rs:446:71: 446:74}
    SourceInfo(url/src/parser.rs:446:71-446:98)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:446:50-446:99)
      kind: _34 = parser::Input::<'_>::count_matching::<{closure@url/src/parser.rs:446:71: 446:74}>(move _35, move _36) -> [return: bb21, unwind: bb52]
  }
  preds [bb13]
  succs [bb21, bb52]

bb21
  0: StorageDead(_36)
    SourceInfo(url/src/parser.rs:446:98-446:99)
  1: StorageDead(_35)
    SourceInfo(url/src/parser.rs:446:98-446:99)
  2: PlaceMention(_34)
    SourceInfo(url/src/parser.rs:446:50-446:99)
  3: StorageLive(_32)
    SourceInfo(url/src/parser.rs:446:22-446:35)
  4: _32 = (_34.0: u32)
    SourceInfo(url/src/parser.rs:446:22-446:35)
  5: StorageLive(_33)
    SourceInfo(url/src/parser.rs:446:37-446:46)
  6: _33 = move (_34.1: parser::Input<'_>)
    SourceInfo(url/src/parser.rs:446:37-446:46)
  7: StorageDead(_34)
    SourceInfo(url/src/parser.rs:446:99-446:100)
  8: StorageLive(_37)
    SourceInfo(url/src/parser.rs:447:17-456:18)
  9: PlaceMention((_1.1: core::option::Option<&Url>))
    SourceInfo(url/src/parser.rs:447:41-447:54)
  10: _38 = discriminant((_1.1: core::option::Option<&Url>))
    SourceInfo(url/src/parser.rs:447:41-447:54)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:447:24-447:38)
      kind: switchInt(move _38) -> [1: bb22, otherwise: bb40]
  }
  preds [bb20]
  succs [bb22, bb40]

bb22
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:447:24-447:38)
      kind: falseEdge -> [real: bb23, imaginary: bb40]
  }
  preds [bb21]
  succs [bb23, bb40]

bb23
  0: StorageLive(_39)
    SourceInfo(url/src/parser.rs:447:29-447:37)
  1: _39 = (((_1.1: core::option::Option<&Url>) as Some).0: &Url)
    SourceInfo(url/src/parser.rs:447:29-447:37)
  2: StorageLive(_40)
    SourceInfo(url/src/parser.rs:448:24-448:41)
  3: StorageLive(_41)
    SourceInfo(url/src/parser.rs:448:24-448:37)
  4: _41 = _32
    SourceInfo(url/src/parser.rs:448:24-448:37)
  5: _40 = Lt(move _41, const 2_u32)
    SourceInfo(url/src/parser.rs:448:24-448:41)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:448:24-448:41)
      kind: switchInt(move _40) -> [0: bb38, otherwise: bb24]
  }
  preds [bb22]
  succs [bb24, bb38]

bb24
  0: StorageDead(_41)
    SourceInfo(url/src/parser.rs:448:40-448:41)
  1: StorageLive(_42)
    SourceInfo(url/src/parser.rs:449:28-449:91)
  2: StorageLive(_43)
    SourceInfo(url/src/parser.rs:449:28-449:45)
  3: StorageLive(_44)
    SourceInfo(url/src/parser.rs:449:28-449:45)
  4: StorageLive(_45)
    SourceInfo(url/src/parser.rs:449:28-449:36)
  5: _45 = &(*_39)
    SourceInfo(url/src/parser.rs:449:28-449:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:449:28-449:45)
      kind: _44 = Url::scheme(move _45) -> [return: bb25, unwind: bb52]
  }
  preds [bb23]
  succs [bb25, bb52]

bb25
  0: _43 = &_44
    SourceInfo(url/src/parser.rs:449:28-449:45)
  1: StorageDead(_45)
    SourceInfo(url/src/parser.rs:449:44-449:45)
  2: StorageLive(_46)
    SourceInfo(url/src/parser.rs:449:49-449:91)
  3: StorageLive(_47)
    SourceInfo(url/src/parser.rs:449:49-449:91)
  4: StorageLive(_48)
    SourceInfo(url/src/parser.rs:449:68-449:91)
  5: StorageLive(_49)
    SourceInfo(url/src/parser.rs:449:50-449:68)
  6: _49 = &(_1.0: std::string::String)
    SourceInfo(url/src/parser.rs:449:50-449:68)
  7: StorageLive(_50)
    SourceInfo(url/src/parser.rs:449:69-449:90)
  8: StorageLive(_51)
    SourceInfo(url/src/parser.rs:449:71-449:90)
  9: StorageLive(_52)
    SourceInfo(url/src/parser.rs:449:71-449:81)
  10: _52 = _3
    SourceInfo(url/src/parser.rs:449:71-449:81)
  11: _51 = move _52 as usize (IntToInt)
    SourceInfo(url/src/parser.rs:449:71-449:90)
  12: StorageDead(_52)
    SourceInfo(url/src/parser.rs:449:89-449:90)
  13: _50 = core::ops::RangeTo::<usize> { end: move _51 }
    SourceInfo(url/src/parser.rs:449:69-449:90)
  14: StorageDead(_51)
    SourceInfo(url/src/parser.rs:449:89-449:90)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:449:68-449:91)
      kind: _48 = <std::string::String as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _49, move _50) -> [return: bb26, unwind: bb52]
  }
  preds [bb24]
  succs [bb26, bb52]

bb26
  0: StorageDead(_50)
    SourceInfo(url/src/parser.rs:449:90-449:91)
  1: StorageDead(_49)
    SourceInfo(url/src/parser.rs:449:90-449:91)
  2: _47 = &(*_48)
    SourceInfo(url/src/parser.rs:449:49-449:91)
  3: _46 = &_47
    SourceInfo(url/src/parser.rs:449:49-449:91)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:449:28-449:91)
      kind: _42 = <&str as core::cmp::PartialEq>::eq(move _43, move _46) -> [return: bb27, unwind: bb52]
  }
  preds [bb25]
  succs [bb27, bb52]

bb27
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:449:28-449:91)
      kind: switchInt(move _42) -> [0: bb37, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb37]

bb28
  0: StorageDead(_48)
    SourceInfo(url/src/parser.rs:449:90-449:91)
  1: StorageDead(_47)
    SourceInfo(url/src/parser.rs:449:90-449:91)
  2: StorageDead(_46)
    SourceInfo(url/src/parser.rs:449:90-449:91)
  3: StorageDead(_44)
    SourceInfo(url/src/parser.rs:449:90-449:91)
  4: StorageDead(_43)
    SourceInfo(url/src/parser.rs:449:90-449:91)
  5: StorageLive(_54)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  6: StorageLive(_55)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  7: _55 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _55) -> [0: bb33, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb33]

bb29
  0: StorageLive(_56)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_57)
    SourceInfo(url/src/parser.rs:452:40-452:67)
  2: StorageLive(_58)
    SourceInfo(url/src/parser.rs:452:40-452:48)
  3: _58 = &(*_39)
    SourceInfo(url/src/parser.rs:452:40-452:48)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:452:40-452:67)
      kind: _57 = Url::cannot_be_a_base(move _58) -> [return: bb30, unwind: bb52]
  }
  preds [bb28]
  succs [bb30, bb52]

bb30
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:452:40-452:67)
      kind: switchInt(move _57) -> [0: bb32, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb32]

bb31
  0: StorageDead(_58)
    SourceInfo(url/src/parser.rs:452:66-452:67)
  1: StorageLive(_59)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _59 = core::panicking::panic(const "assertion failed: !base_url.cannot_be_a_base()") -> bb52
  }
  preds [bb30]
  succs [bb52]

bb32
  0: StorageDead(_58)
    SourceInfo(url/src/parser.rs:452:66-452:67)
  1: _56 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_57)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_56)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _54 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb34
  }
  preds [bb30]
  succs [bb34]

bb33
  0: _54 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb34
  }
  preds [bb28]
  succs [bb34]

bb34
  0: StorageDead(_55)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_54)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_60)
    SourceInfo(url/src/parser.rs:453:25-453:51)
  3: StorageLive(_61)
    SourceInfo(url/src/parser.rs:453:25-453:43)
  4: _61 = &mut (_1.0: std::string::String)
    SourceInfo(url/src/parser.rs:453:25-453:43)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:453:25-453:51)
      kind: _60 = std::string::String::clear(move _61) -> [return: bb35, unwind: bb52]
  }
  preds [bb32, bb33]
  succs [bb35, bb52]

bb35
  0: StorageDead(_61)
    SourceInfo(url/src/parser.rs:453:50-453:51)
  1: StorageDead(_60)
    SourceInfo(url/src/parser.rs:453:51-453:52)
  2: StorageLive(_62)
    SourceInfo(url/src/parser.rs:454:32-454:36)
  3: _62 = move _1
    SourceInfo(url/src/parser.rs:454:32-454:36)
  4: StorageLive(_63)
    SourceInfo(url/src/parser.rs:454:52-454:57)
  5: _63 = move _2
    SourceInfo(url/src/parser.rs:454:52-454:57)
  6: StorageLive(_64)
    SourceInfo(url/src/parser.rs:454:59-454:70)
  7: _64 = _13
    SourceInfo(url/src/parser.rs:454:59-454:70)
  8: StorageLive(_65)
    SourceInfo(url/src/parser.rs:454:72-454:80)
  9: _65 = &(*_39)
    SourceInfo(url/src/parser.rs:454:72-454:80)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:454:32-454:81)
      kind: _0 = parser::Parser::<'_>::parse_relative(move _62, move _63, move _64, move _65) -> [return: bb36, unwind: bb50]
  }
  preds [bb34]
  succs [bb36, bb50]

bb36
  0: StorageDead(_65)
    SourceInfo(url/src/parser.rs:454:80-454:81)
  1: StorageDead(_64)
    SourceInfo(url/src/parser.rs:454:80-454:81)
  2: StorageDead(_63)
    SourceInfo(url/src/parser.rs:454:80-454:81)
  3: StorageDead(_62)
    SourceInfo(url/src/parser.rs:454:80-454:81)
  4: StorageDead(_42)
    SourceInfo(url/src/parser.rs:455:21-455:22)
  5: StorageDead(_40)
    SourceInfo(url/src/parser.rs:455:21-455:22)
  6: StorageDead(_39)
    SourceInfo(url/src/parser.rs:456:17-456:18)
  7: StorageDead(_37)
    SourceInfo(url/src/parser.rs:456:17-456:18)
  8: StorageDead(_33)
    SourceInfo(url/src/parser.rs:466:13-466:14)
  9: StorageDead(_32)
    SourceInfo(url/src/parser.rs:466:13-466:14)
  10: StorageDead(_13)
    SourceInfo(url/src/parser.rs:469:5-469:6)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb35]
  succs [bb46]

bb37
  0: StorageDead(_48)
    SourceInfo(url/src/parser.rs:449:90-449:91)
  1: StorageDead(_47)
    SourceInfo(url/src/parser.rs:449:90-449:91)
  2: StorageDead(_46)
    SourceInfo(url/src/parser.rs:449:90-449:91)
  3: StorageDead(_44)
    SourceInfo(url/src/parser.rs:449:90-449:91)
  4: StorageDead(_43)
    SourceInfo(url/src/parser.rs:449:90-449:91)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb39
  }
  preds [bb27]
  succs [bb39]

bb38
  0: StorageDead(_41)
    SourceInfo(url/src/parser.rs:448:40-448:41)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb39
  }
  preds [bb23]
  succs [bb39]

bb39
  0: _37 = const ()
    SourceInfo(url/src/parser.rs:455:22-455:22)
  1: StorageDead(_42)
    SourceInfo(url/src/parser.rs:455:21-455:22)
  2: StorageDead(_40)
    SourceInfo(url/src/parser.rs:455:21-455:22)
  3: StorageDead(_39)
    SourceInfo(url/src/parser.rs:456:17-456:18)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:447:17-456:18)
      kind: goto -> bb41
  }
  preds [bb37, bb38]
  succs [bb41]

bb40
  0: _37 = const ()
    SourceInfo(url/src/parser.rs:456:18-456:18)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:447:17-456:18)
      kind: goto -> bb41
  }
  preds [bb21, bb22]
  succs [bb41]

bb41
  0: StorageDead(_37)
    SourceInfo(url/src/parser.rs:456:17-456:18)
  1: StorageLive(_66)
    SourceInfo(url/src/parser.rs:458:17-464:19)
  2: StorageLive(_67)
    SourceInfo(url/src/parser.rs:458:17-458:21)
  3: _67 = &_1
    SourceInfo(url/src/parser.rs:458:17-458:21)
  4: StorageLive(_68)
    SourceInfo(url/src/parser.rs:458:39-458:58)
  5: _68 = parser::SyntaxViolation::ExpectedDoubleSlash
    SourceInfo(url/src/parser.rs:458:39-458:58)
  6: StorageLive(_69)
    SourceInfo(url/src/parser.rs:458:60-464:18)
  7: StorageLive(_70)
    SourceInfo(url/src/parser.rs:458:60-464:18)
  8: _70 = &_2
    SourceInfo(url/src/parser.rs:458:60-464:18)
  9: _69 = {closure@url/src/parser.rs:458:60: 458:62} { input: move _70 }
    SourceInfo(url/src/parser.rs:458:60-464:18)
  10: StorageDead(_70)
    SourceInfo(url/src/parser.rs:458:61-458:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:458:17-464:19)
      kind: _66 = parser::Parser::<'_>::log_violation_if::<{closure@url/src/parser.rs:458:60: 458:62}>(move _67, move _68, move _69) -> [return: bb42, unwind: bb52]
  }
  preds [bb39, bb40]
  succs [bb42, bb52]

bb42
  0: StorageDead(_69)
    SourceInfo(url/src/parser.rs:464:18-464:19)
  1: StorageDead(_68)
    SourceInfo(url/src/parser.rs:464:18-464:19)
  2: StorageDead(_67)
    SourceInfo(url/src/parser.rs:464:18-464:19)
  3: StorageDead(_66)
    SourceInfo(url/src/parser.rs:464:19-464:20)
  4: StorageLive(_71)
    SourceInfo(url/src/parser.rs:465:17-465:21)
  5: _71 = move _1
    SourceInfo(url/src/parser.rs:465:17-465:21)
  6: StorageLive(_72)
    SourceInfo(url/src/parser.rs:465:41-465:50)
  7: _72 = move _33
    SourceInfo(url/src/parser.rs:465:41-465:50)
  8: StorageLive(_73)
    SourceInfo(url/src/parser.rs:465:52-465:63)
  9: _73 = _13
    SourceInfo(url/src/parser.rs:465:52-465:63)
  10: StorageLive(_74)
    SourceInfo(url/src/parser.rs:465:65-465:75)
  11: _74 = _3
    SourceInfo(url/src/parser.rs:465:65-465:75)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:465:17-465:76)
      kind: _0 = parser::Parser::<'_>::after_double_slash(move _71, move _72, move _73, move _74) -> [return: bb43, unwind: bb49]
  }
  preds [bb41]
  succs [bb43, bb49]

bb43
  0: StorageDead(_74)
    SourceInfo(url/src/parser.rs:465:75-465:76)
  1: StorageDead(_73)
    SourceInfo(url/src/parser.rs:465:75-465:76)
  2: StorageDead(_72)
    SourceInfo(url/src/parser.rs:465:75-465:76)
  3: StorageDead(_71)
    SourceInfo(url/src/parser.rs:465:75-465:76)
  4: StorageDead(_33)
    SourceInfo(url/src/parser.rs:466:13-466:14)
  5: StorageDead(_32)
    SourceInfo(url/src/parser.rs:466:13-466:14)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:466:13-466:14)
      kind: goto -> bb45
  }
  preds [bb42]
  succs [bb45]

bb44
  0: StorageDead(_78)
    SourceInfo(url/src/parser.rs:467:92-467:93)
  1: StorageDead(_77)
    SourceInfo(url/src/parser.rs:467:92-467:93)
  2: StorageDead(_76)
    SourceInfo(url/src/parser.rs:467:92-467:93)
  3: StorageDead(_75)
    SourceInfo(url/src/parser.rs:467:92-467:93)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:467:92-467:93)
      kind: goto -> bb45
  }
  preds [bb14]
  succs [bb45]

bb45
  0: StorageDead(_13)
    SourceInfo(url/src/parser.rs:469:5-469:6)
  1: StorageDead(_3)
    SourceInfo(url/src/parser.rs:469:5-469:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:469:5-469:6)
      kind: drop(_1) -> [return: bb47, unwind: bb53]
  }
  preds [bb19, bb43, bb44]
  succs [bb47, bb53]

bb46
  0: StorageDead(_3)
    SourceInfo(url/src/parser.rs:469:5-469:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:469:5-469:6)
      kind: drop(_1) -> [return: bb47, unwind: bb53]
  }
  preds [bb8, bb36]
  succs [bb47, bb53]

bb47
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:469:6-469:6)
      kind: return
  }
  preds [bb45, bb46]
  succs []

bb48
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:467:92-467:93)
      kind: drop(_75) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb52]

bb49
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:465:75-465:76)
      kind: drop(_71) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb42]
  succs [bb52]

bb50
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:454:80-454:81)
      kind: drop(_62) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb35]
  succs [bb52]

bb51
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:442:66-442:67)
      kind: drop(_28) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb18]
  succs [bb52]

bb52
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:469:5-469:6)
      kind: drop(_1) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb6, bb7, bb9, bb15, bb16, bb17, bb20, bb24, bb25, bb26, bb29, bb31, bb34, bb41, bb48, bb49, bb50, bb51]
  succs [bb53]

bb53
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:426:5-469:6)
      kind: resume
  }
  preds [bb45, bb46, bb52]
  succs []

