bb0
  0: StorageLive(_3)
    SourceInfo(url/src/quirks.rs:108:5-110:6)
  1: StorageLive(_4)
    SourceInfo(url/src/quirks.rs:108:29-108:51)
  2: StorageLive(_5)
    SourceInfo(url/src/quirks.rs:108:29-108:41)
  3: _5 = &(*_2)
    SourceInfo(url/src/quirks.rs:108:29-108:41)
  Terminator {
      source_info: SourceInfo(url/src/quirks.rs:108:29-108:51)
      kind: _4 = core::str::<impl str>::find::<'_, char>(move _5, const ':') -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_5)
    SourceInfo(url/src/quirks.rs:108:50-108:51)
  1: PlaceMention(_4)
    SourceInfo(url/src/quirks.rs:108:29-108:51)
  2: _6 = discriminant(_4)
    SourceInfo(url/src/quirks.rs:108:29-108:51)
  Terminator {
      source_info: SourceInfo(url/src/quirks.rs:108:12-108:26)
      kind: switchInt(move _6) -> [1: bb2, otherwise: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(url/src/quirks.rs:108:12-108:26)
      kind: falseEdge -> [real: bb3, imaginary: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageLive(_7)
    SourceInfo(url/src/quirks.rs:108:17-108:25)
  1: _7 = ((_4 as Some).0: usize)
    SourceInfo(url/src/quirks.rs:108:17-108:25)
  2: StorageLive(_8)
    SourceInfo(url/src/quirks.rs:109:24-109:49)
  3: StorageLive(_9)
    SourceInfo(url/src/quirks.rs:109:24-109:49)
  4: StorageLive(_10)
    SourceInfo(url/src/quirks.rs:109:37-109:49)
  5: StorageLive(_11)
    SourceInfo(url/src/quirks.rs:109:25-109:37)
  6: _11 = &(*_2)
    SourceInfo(url/src/quirks.rs:109:25-109:37)
  7: StorageLive(_12)
    SourceInfo(url/src/quirks.rs:109:38-109:48)
  8: StorageLive(_13)
    SourceInfo(url/src/quirks.rs:109:40-109:48)
  9: _13 = _7
    SourceInfo(url/src/quirks.rs:109:40-109:48)
  10: _12 = core::ops::RangeTo::<usize> { end: move _13 }
    SourceInfo(url/src/quirks.rs:109:38-109:48)
  11: StorageDead(_13)
    SourceInfo(url/src/quirks.rs:109:47-109:48)
  Terminator {
      source_info: SourceInfo(url/src/quirks.rs:109:37-109:49)
      kind: _10 = <str as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _11, move _12) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_12)
    SourceInfo(url/src/quirks.rs:109:48-109:49)
  1: StorageDead(_11)
    SourceInfo(url/src/quirks.rs:109:48-109:49)
  2: _9 = &(*_10)
    SourceInfo(url/src/quirks.rs:109:24-109:49)
  3: _8 = &(*_9)
    SourceInfo(url/src/quirks.rs:109:24-109:49)
  4: _2 = move _8
    SourceInfo(url/src/quirks.rs:109:9-109:49)
  5: StorageDead(_8)
    SourceInfo(url/src/quirks.rs:109:48-109:49)
  6: StorageDead(_10)
    SourceInfo(url/src/quirks.rs:109:49-109:50)
  7: StorageDead(_9)
    SourceInfo(url/src/quirks.rs:109:49-109:50)
  8: _3 = const ()
    SourceInfo(url/src/quirks.rs:108:52-110:6)
  9: StorageDead(_7)
    SourceInfo(url/src/quirks.rs:110:5-110:6)
  Terminator {
      source_info: SourceInfo(url/src/quirks.rs:108:5-110:6)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb5
  0: _3 = const ()
    SourceInfo(url/src/quirks.rs:110:6-110:6)
  Terminator {
      source_info: SourceInfo(url/src/quirks.rs:108:5-110:6)
      kind: goto -> bb6
  }
  preds [bb1, bb2]
  succs [bb6]

bb6
  0: StorageDead(_4)
    SourceInfo(url/src/quirks.rs:110:5-110:6)
  1: StorageDead(_3)
    SourceInfo(url/src/quirks.rs:110:5-110:6)
  2: StorageLive(_14)
    SourceInfo(url/src/quirks.rs:111:5-111:8)
  3: _14 = &mut (*_1)
    SourceInfo(url/src/quirks.rs:111:5-111:8)
  4: StorageLive(_15)
    SourceInfo(url/src/quirks.rs:111:20-111:32)
  5: _15 = &(*_2)
    SourceInfo(url/src/quirks.rs:111:20-111:32)
  Terminator {
      source_info: SourceInfo(url/src/quirks.rs:111:5-111:33)
      kind: _0 = Url::set_scheme(move _14, move _15) -> [return: bb7, unwind: bb8]
  }
  preds [bb4, bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_15)
    SourceInfo(url/src/quirks.rs:111:32-111:33)
  1: StorageDead(_14)
    SourceInfo(url/src/quirks.rs:111:32-111:33)
  Terminator {
      source_info: SourceInfo(url/src/quirks.rs:112:2-112:2)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(url/src/quirks.rs:105:1-112:2)
      kind: resume
  }
  preds [bb0, bb3, bb6]
  succs []

