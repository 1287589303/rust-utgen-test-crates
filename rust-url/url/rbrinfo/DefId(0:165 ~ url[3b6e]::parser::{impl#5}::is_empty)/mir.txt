bb0
  0: StorageLive(_2)
    SourceInfo(url/src/parser.rs:245:9-245:28)
  1: StorageLive(_3)
    SourceInfo(url/src/parser.rs:245:9-245:28)
  2: StorageLive(_4)
    SourceInfo(url/src/parser.rs:245:9-245:21)
  3: StorageLive(_5)
    SourceInfo(url/src/parser.rs:245:9-245:21)
  4: StorageLive(_6)
    SourceInfo(url/src/parser.rs:245:9-245:13)
  5: _6 = &(*_1)
    SourceInfo(url/src/parser.rs:245:9-245:13)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:245:9-245:21)
      kind: _5 = <parser::Input<'_> as core::clone::Clone>::clone(move _6) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _4 = &mut _5
    SourceInfo(url/src/parser.rs:245:9-245:21)
  1: StorageDead(_6)
    SourceInfo(url/src/parser.rs:245:20-245:21)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:245:9-245:28)
      kind: _3 = <parser::Input<'_> as core::iter::Iterator>::next(move _4) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: _2 = &_3
    SourceInfo(url/src/parser.rs:245:9-245:28)
  1: StorageDead(_4)
    SourceInfo(url/src/parser.rs:245:27-245:28)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:245:9-245:38)
      kind: _0 = core::option::Option::<char>::is_none(move _2) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_2)
    SourceInfo(url/src/parser.rs:245:37-245:38)
  1: StorageDead(_5)
    SourceInfo(url/src/parser.rs:246:5-246:6)
  2: StorageDead(_3)
    SourceInfo(url/src/parser.rs:246:5-246:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:246:6-246:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:244:5-246:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

