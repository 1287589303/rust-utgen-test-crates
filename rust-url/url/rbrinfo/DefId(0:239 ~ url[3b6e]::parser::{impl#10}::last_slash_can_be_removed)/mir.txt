bb0
  0: StorageLive(_3)
    SourceInfo(url/src/parser.rs:1383:13-1383:31)
  1: StorageLive(_4)
    SourceInfo(url/src/parser.rs:1383:48-1383:75)
  2: StorageLive(_5)
    SourceInfo(url/src/parser.rs:1383:35-1383:48)
  3: _5 = &(*_1)
    SourceInfo(url/src/parser.rs:1383:35-1383:48)
  4: StorageLive(_6)
    SourceInfo(url/src/parser.rs:1383:49-1383:74)
  5: StorageLive(_7)
    SourceInfo(url/src/parser.rs:1383:51-1383:74)
  6: StorageLive(_8)
    SourceInfo(url/src/parser.rs:1383:51-1383:70)
  7: StorageLive(_9)
    SourceInfo(url/src/parser.rs:1383:51-1383:64)
  8: _9 = &(*_1)
    SourceInfo(url/src/parser.rs:1383:51-1383:64)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1383:51-1383:70)
      kind: _8 = core::str::<impl str>::len(move _9) -> [return: bb1, unwind: bb14]
  }
  preds []
  succs [bb1, bb14]

bb1
  0: StorageDead(_9)
    SourceInfo(url/src/parser.rs:1383:69-1383:70)
  1: _10 = SubWithOverflow(_8, const 1_usize)
    SourceInfo(url/src/parser.rs:1383:51-1383:74)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1383:51-1383:74)
      kind: assert(!move (_10.1: bool), "attempt to compute `{} - {}`, which would overflow", move _8, const 1_usize) -> [success: bb2, unwind: bb14]
  }
  preds [bb0]
  succs [bb2, bb14]

bb2
  0: _7 = move (_10.0: usize)
    SourceInfo(url/src/parser.rs:1383:51-1383:74)
  1: StorageDead(_8)
    SourceInfo(url/src/parser.rs:1383:73-1383:74)
  2: _6 = core::ops::RangeTo::<usize> { end: move _7 }
    SourceInfo(url/src/parser.rs:1383:49-1383:74)
  3: StorageDead(_7)
    SourceInfo(url/src/parser.rs:1383:73-1383:74)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1383:48-1383:75)
      kind: _4 = <str as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _5, move _6) -> [return: bb3, unwind: bb14]
  }
  preds [bb1]
  succs [bb3, bb14]

bb3
  0: StorageDead(_6)
    SourceInfo(url/src/parser.rs:1383:74-1383:75)
  1: StorageDead(_5)
    SourceInfo(url/src/parser.rs:1383:74-1383:75)
  2: _3 = &(*_4)
    SourceInfo(url/src/parser.rs:1383:34-1383:75)
  3: FakeRead(ForLet(None), _3)
    SourceInfo(url/src/parser.rs:1383:13-1383:31)
  4: StorageLive(_11)
    SourceInfo(url/src/parser.rs:1384:45-1384:74)
  5: StorageLive(_12)
    SourceInfo(url/src/parser.rs:1384:45-1384:63)
  6: _12 = &(*_3)
    SourceInfo(url/src/parser.rs:1384:45-1384:63)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1384:45-1384:74)
      kind: _11 = core::str::<impl str>::rfind::<'_, char>(move _12, const '/') -> [return: bb4, unwind: bb14]
  }
  preds [bb2]
  succs [bb4, bb14]

bb4
  0: StorageDead(_12)
    SourceInfo(url/src/parser.rs:1384:73-1384:74)
  1: PlaceMention(_11)
    SourceInfo(url/src/parser.rs:1384:45-1384:74)
  2: _13 = discriminant(_11)
    SourceInfo(url/src/parser.rs:1384:45-1384:74)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1384:16-1384:42)
      kind: switchInt(move _13) -> [1: bb5, otherwise: bb12]
  }
  preds [bb3]
  succs [bb5, bb12]

bb5
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1384:16-1384:42)
      kind: falseEdge -> [real: bb6, imaginary: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  0: StorageLive(_14)
    SourceInfo(url/src/parser.rs:1384:21-1384:41)
  1: _14 = ((_11 as Some).0: usize)
    SourceInfo(url/src/parser.rs:1384:21-1384:41)
  2: StorageLive(_15)
    SourceInfo(url/src/parser.rs:1386:13-1386:47)
  3: StorageLive(_16)
    SourceInfo(url/src/parser.rs:1386:13-1386:33)
  4: _16 = _14
    SourceInfo(url/src/parser.rs:1386:13-1386:33)
  5: StorageLive(_17)
    SourceInfo(url/src/parser.rs:1386:37-1386:47)
  6: _17 = _2
    SourceInfo(url/src/parser.rs:1386:37-1386:47)
  7: _15 = Ge(move _16, move _17)
    SourceInfo(url/src/parser.rs:1386:13-1386:47)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1386:13-1386:47)
      kind: switchInt(move _15) -> [0: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_17)
    SourceInfo(url/src/parser.rs:1386:46-1386:47)
  1: StorageDead(_16)
    SourceInfo(url/src/parser.rs:1386:46-1386:47)
  2: StorageLive(_18)
    SourceInfo(url/src/parser.rs:1388:21-1388:98)
  3: StorageLive(_19)
    SourceInfo(url/src/parser.rs:1388:59-1388:97)
  4: StorageLive(_20)
    SourceInfo(url/src/parser.rs:1388:59-1388:97)
  5: StorageLive(_21)
    SourceInfo(url/src/parser.rs:1388:73-1388:97)
  6: StorageLive(_22)
    SourceInfo(url/src/parser.rs:1388:60-1388:73)
  7: _22 = &(*_1)
    SourceInfo(url/src/parser.rs:1388:60-1388:73)
  8: StorageLive(_23)
    SourceInfo(url/src/parser.rs:1388:74-1388:96)
  9: StorageLive(_24)
    SourceInfo(url/src/parser.rs:1388:74-1388:94)
  10: _24 = _14
    SourceInfo(url/src/parser.rs:1388:74-1388:94)
  11: _23 = core::ops::RangeFrom::<usize> { start: move _24 }
    SourceInfo(url/src/parser.rs:1388:74-1388:96)
  12: StorageDead(_24)
    SourceInfo(url/src/parser.rs:1388:95-1388:96)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1388:73-1388:97)
      kind: _21 = <str as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _22, move _23) -> [return: bb9, unwind: bb14]
  }
  preds [bb6]
  succs [bb9, bb14]

bb8
  0: StorageDead(_17)
    SourceInfo(url/src/parser.rs:1386:46-1386:47)
  1: StorageDead(_16)
    SourceInfo(url/src/parser.rs:1386:46-1386:47)
  2: _0 = const false
    SourceInfo(url/src/parser.rs:1386:13-1388:98)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1386:13-1388:98)
      kind: goto -> bb11
  }
  preds [bb6]
  succs [bb11]

bb9
  0: StorageDead(_23)
    SourceInfo(url/src/parser.rs:1388:96-1388:97)
  1: StorageDead(_22)
    SourceInfo(url/src/parser.rs:1388:96-1388:97)
  2: _20 = &(*_21)
    SourceInfo(url/src/parser.rs:1388:59-1388:97)
  3: _19 = &(*_20)
    SourceInfo(url/src/parser.rs:1388:59-1388:97)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1388:21-1388:98)
      kind: _18 = parser::path_starts_with_windows_drive_letter(move _19) -> [return: bb10, unwind: bb14]
  }
  preds [bb7]
  succs [bb10, bb14]

bb10
  0: StorageDead(_19)
    SourceInfo(url/src/parser.rs:1388:97-1388:98)
  1: _0 = Not(move _18)
    SourceInfo(url/src/parser.rs:1388:20-1388:98)
  2: StorageDead(_21)
    SourceInfo(url/src/parser.rs:1388:97-1388:98)
  3: StorageDead(_20)
    SourceInfo(url/src/parser.rs:1388:97-1388:98)
  4: StorageDead(_18)
    SourceInfo(url/src/parser.rs:1388:97-1388:98)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1386:13-1388:98)
      kind: goto -> bb11
  }
  preds [bb9]
  succs [bb11]

bb11
  0: StorageDead(_15)
    SourceInfo(url/src/parser.rs:1388:97-1388:98)
  1: StorageDead(_14)
    SourceInfo(url/src/parser.rs:1389:9-1389:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1384:9-1391:10)
      kind: goto -> bb13
  }
  preds [bb8, bb10]
  succs [bb13]

bb12
  0: _0 = const false
    SourceInfo(url/src/parser.rs:1390:13-1390:18)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1384:9-1391:10)
      kind: goto -> bb13
  }
  preds [bb4, bb5]
  succs [bb13]

bb13
  0: StorageDead(_4)
    SourceInfo(url/src/parser.rs:1392:5-1392:6)
  1: StorageDead(_3)
    SourceInfo(url/src/parser.rs:1392:5-1392:6)
  2: StorageDead(_11)
    SourceInfo(url/src/parser.rs:1392:5-1392:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1392:6-1392:6)
      kind: return
  }
  preds [bb11, bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1382:5-1392:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb7, bb9]
  succs []

