bb0
  0: StorageLive(_2)
    SourceInfo(url/src/host.rs:83:9-88:10)
  1: StorageLive(_3)
    SourceInfo(url/src/host.rs:83:12-83:34)
  2: StorageLive(_4)
    SourceInfo(url/src/host.rs:83:12-83:17)
  3: _4 = &(*_1)
    SourceInfo(url/src/host.rs:83:12-83:17)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:83:12-83:34)
      kind: _3 = core::str::<impl str>::starts_with::<'_, char>(move _4, const '[') -> [return: bb1, unwind: bb59]
  }
  preds []
  succs [bb1, bb59]

bb1
  Terminator {
      source_info: SourceInfo(url/src/host.rs:83:12-83:34)
      kind: switchInt(move _3) -> [0: bb11, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb11]

bb2
  0: StorageDead(_4)
    SourceInfo(url/src/host.rs:83:33-83:34)
  1: StorageLive(_6)
    SourceInfo(url/src/host.rs:84:13-86:14)
  2: StorageLive(_7)
    SourceInfo(url/src/host.rs:84:17-84:37)
  3: StorageLive(_8)
    SourceInfo(url/src/host.rs:84:17-84:22)
  4: _8 = &(*_1)
    SourceInfo(url/src/host.rs:84:17-84:22)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:84:17-84:37)
      kind: _7 = core::str::<impl str>::ends_with::<'_, char>(move _8, const ']') -> [return: bb3, unwind: bb59]
  }
  preds [bb1]
  succs [bb3, bb59]

bb3
  Terminator {
      source_info: SourceInfo(url/src/host.rs:84:17-84:37)
      kind: switchInt(move _7) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_8)
    SourceInfo(url/src/host.rs:84:36-84:37)
  1: _6 = const ()
    SourceInfo(url/src/host.rs:86:14-86:14)
  2: StorageDead(_7)
    SourceInfo(url/src/host.rs:86:13-86:14)
  3: StorageDead(_6)
    SourceInfo(url/src/host.rs:86:13-86:14)
  4: StorageLive(_11)
    SourceInfo(url/src/host.rs:87:20-87:62)
  5: StorageLive(_12)
    SourceInfo(url/src/host.rs:87:35-87:61)
  6: StorageLive(_13)
    SourceInfo(url/src/host.rs:87:35-87:61)
  7: StorageLive(_14)
    SourceInfo(url/src/host.rs:87:41-87:61)
  8: StorageLive(_15)
    SourceInfo(url/src/host.rs:87:36-87:41)
  9: _15 = &(*_1)
    SourceInfo(url/src/host.rs:87:36-87:41)
  10: StorageLive(_16)
    SourceInfo(url/src/host.rs:87:42-87:60)
  11: StorageLive(_17)
    SourceInfo(url/src/host.rs:87:45-87:60)
  12: StorageLive(_18)
    SourceInfo(url/src/host.rs:87:45-87:56)
  13: StorageLive(_19)
    SourceInfo(url/src/host.rs:87:45-87:50)
  14: _19 = &(*_1)
    SourceInfo(url/src/host.rs:87:45-87:50)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:87:45-87:56)
      kind: _18 = core::str::<impl str>::len(move _19) -> [return: bb6, unwind: bb59]
  }
  preds [bb3]
  succs [bb6, bb59]

bb5
  0: StorageDead(_8)
    SourceInfo(url/src/host.rs:84:36-84:37)
  1: StorageLive(_10)
    SourceInfo(url/src/host.rs:85:28-85:58)
  2: _10 = parser::ParseError::InvalidIpv6Address
    SourceInfo(url/src/host.rs:85:28-85:58)
  3: _0 = core::result::Result::<host::Host, parser::ParseError>::Err(move _10)
    SourceInfo(url/src/host.rs:85:24-85:59)
  4: StorageDead(_10)
    SourceInfo(url/src/host.rs:85:58-85:59)
  5: StorageDead(_7)
    SourceInfo(url/src/host.rs:86:13-86:14)
  6: StorageDead(_6)
    SourceInfo(url/src/host.rs:86:13-86:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb52
  }
  preds [bb3]
  succs [bb52]

bb6
  0: StorageDead(_19)
    SourceInfo(url/src/host.rs:87:55-87:56)
  1: _20 = SubWithOverflow(_18, const 1_usize)
    SourceInfo(url/src/host.rs:87:45-87:60)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:87:45-87:60)
      kind: assert(!move (_20.1: bool), "attempt to compute `{} - {}`, which would overflow", move _18, const 1_usize) -> [success: bb7, unwind: bb59]
  }
  preds [bb4]
  succs [bb7, bb59]

bb7
  0: _17 = move (_20.0: usize)
    SourceInfo(url/src/host.rs:87:45-87:60)
  1: StorageDead(_18)
    SourceInfo(url/src/host.rs:87:59-87:60)
  2: _16 = core::ops::Range::<usize> { start: const 1_usize, end: move _17 }
    SourceInfo(url/src/host.rs:87:42-87:60)
  3: StorageDead(_17)
    SourceInfo(url/src/host.rs:87:59-87:60)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:87:41-87:61)
      kind: _14 = <str as core::ops::Index<core::ops::Range<usize>>>::index(move _15, move _16) -> [return: bb8, unwind: bb59]
  }
  preds [bb6]
  succs [bb8, bb59]

bb8
  0: StorageDead(_16)
    SourceInfo(url/src/host.rs:87:60-87:61)
  1: StorageDead(_15)
    SourceInfo(url/src/host.rs:87:60-87:61)
  2: _13 = &(*_14)
    SourceInfo(url/src/host.rs:87:35-87:61)
  3: _12 = &(*_13)
    SourceInfo(url/src/host.rs:87:35-87:61)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:87:20-87:62)
      kind: _11 = host::parse_ipv6addr(move _12) -> [return: bb9, unwind: bb59]
  }
  preds [bb7]
  succs [bb9, bb59]

bb9
  0: StorageDead(_12)
    SourceInfo(url/src/host.rs:87:61-87:62)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:87:20-87:78)
      kind: _0 = core::result::Result::<core::net::Ipv6Addr, parser::ParseError>::map::<host::Host, fn(core::net::Ipv6Addr) -> host::Host {host::Host::Ipv6}>(move _11, host::Host::Ipv6) -> [return: bb10, unwind: bb59]
  }
  preds [bb8]
  succs [bb10, bb59]

bb10
  0: StorageDead(_11)
    SourceInfo(url/src/host.rs:87:77-87:78)
  1: StorageDead(_14)
    SourceInfo(url/src/host.rs:87:78-87:79)
  2: StorageDead(_13)
    SourceInfo(url/src/host.rs:87:78-87:79)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb52
  }
  preds [bb9]
  succs [bb52]

bb11
  0: StorageDead(_4)
    SourceInfo(url/src/host.rs:83:33-83:34)
  1: _2 = const ()
    SourceInfo(url/src/host.rs:88:10-88:10)
  2: StorageDead(_3)
    SourceInfo(url/src/host.rs:88:9-88:10)
  3: StorageDead(_2)
    SourceInfo(url/src/host.rs:88:9-88:10)
  4: StorageLive(_21)
    SourceInfo(url/src/host.rs:89:13-89:19)
  5: StorageLive(_22)
    SourceInfo(url/src/host.rs:89:37-89:69)
  6: StorageLive(_23)
    SourceInfo(url/src/host.rs:89:52-89:68)
  7: StorageLive(_24)
    SourceInfo(url/src/host.rs:89:52-89:68)
  8: StorageLive(_25)
    SourceInfo(url/src/host.rs:89:52-89:57)
  9: _25 = &(*_1)
    SourceInfo(url/src/host.rs:89:52-89:57)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:89:52-89:68)
      kind: _24 = core::str::<impl str>::as_bytes(move _25) -> [return: bb12, unwind: bb59]
  }
  preds [bb1]
  succs [bb12, bb59]

bb12
  0: _23 = &(*_24)
    SourceInfo(url/src/host.rs:89:52-89:68)
  1: StorageDead(_25)
    SourceInfo(url/src/host.rs:89:67-89:68)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:89:37-89:69)
      kind: _22 = percent_encoding::percent_decode(move _23) -> [return: bb13, unwind: bb59]
  }
  preds [bb11]
  succs [bb13, bb59]

bb13
  0: StorageDead(_23)
    SourceInfo(url/src/host.rs:89:68-89:69)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:89:37-89:76)
      kind: _21 = <percent_encoding::PercentDecode<'_> as core::convert::Into<std::borrow::Cow<'_, [u8]>>>::into(move _22) -> [return: bb14, unwind: bb59]
  }
  preds [bb12]
  succs [bb14, bb59]

bb14
  0: StorageDead(_22)
    SourceInfo(url/src/host.rs:89:75-89:76)
  1: FakeRead(ForLet(None), _21)
    SourceInfo(url/src/host.rs:89:13-89:19)
  2: AscribeUserType(_21, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(url/src/host.rs:89:21-89:34)
  3: StorageDead(_24)
    SourceInfo(url/src/host.rs:89:76-89:77)
  4: StorageLive(_26)
    SourceInfo(url/src/host.rs:91:13-91:19)
  5: StorageLive(_27)
    SourceInfo(url/src/host.rs:91:22-91:53)
  6: StorageLive(_28)
    SourceInfo(url/src/host.rs:91:22-91:52)
  7: StorageLive(_29)
    SourceInfo(url/src/host.rs:91:44-91:51)
  8: StorageLive(_30)
    SourceInfo(url/src/host.rs:91:44-91:51)
  9: StorageLive(_31)
    SourceInfo(url/src/host.rs:91:44-91:51)
  10: StorageLive(_32)
    SourceInfo(url/src/host.rs:91:44-91:51)
  11: _32 = &_21
    SourceInfo(url/src/host.rs:91:44-91:51)
  12: _31 = &(*_32)
    SourceInfo(url/src/host.rs:91:44-91:51)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:91:44-91:51)
      kind: _30 = <std::borrow::Cow<'_, [u8]> as core::ops::Deref>::deref(move _31) -> [return: bb15, unwind: bb58]
  }
  preds [bb13]
  succs [bb15, bb58]

bb15
  0: _29 = &(*_30)
    SourceInfo(url/src/host.rs:91:44-91:51)
  1: StorageDead(_31)
    SourceInfo(url/src/host.rs:91:50-91:51)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:91:22-91:52)
      kind: _28 = host::Host::domain_to_ascii(move _29) -> [return: bb16, unwind: bb58]
  }
  preds [bb14]
  succs [bb16, bb58]

bb16
  0: StorageDead(_29)
    SourceInfo(url/src/host.rs:91:51-91:52)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:91:22-91:53)
      kind: _27 = <core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError> as core::ops::Try>::branch(move _28) -> [return: bb17, unwind: bb57]
  }
  preds [bb15]
  succs [bb17, bb57]

bb17
  0: StorageDead(_28)
    SourceInfo(url/src/host.rs:91:52-91:53)
  1: PlaceMention(_27)
    SourceInfo(url/src/host.rs:91:22-91:53)
  2: _33 = discriminant(_27)
    SourceInfo(url/src/host.rs:91:22-91:53)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:91:22-91:53)
      kind: switchInt(move _33) -> [0: bb20, 1: bb19, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _27)
    SourceInfo(url/src/host.rs:91:22-91:53)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:91:22-91:53)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(url/src/host.rs:91:52-91:53)
      kind: falseEdge -> [real: bb21, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb21]

bb20
  0: StorageLive(_37)
    SourceInfo(url/src/host.rs:91:22-91:53)
  1: _37 = move ((_27 as Continue).0: std::borrow::Cow<'_, str>)
    SourceInfo(url/src/host.rs:91:22-91:53)
  2: _26 = move _37
    SourceInfo(url/src/host.rs:91:22-91:53)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:91:52-91:53)
      kind: drop(_37) -> [return: bb23, unwind: bb56]
  }
  preds [bb17, bb19]
  succs [bb23, bb56]

bb21
  0: StorageLive(_34)
    SourceInfo(url/src/host.rs:91:52-91:53)
  1: _34 = ((_27 as Break).0: core::result::Result<core::convert::Infallible, parser::ParseError>)
    SourceInfo(url/src/host.rs:91:52-91:53)
  2: StorageLive(_36)
    SourceInfo(url/src/host.rs:91:52-91:53)
  3: _36 = _34
    SourceInfo(url/src/host.rs:91:52-91:53)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:91:22-91:53)
      kind: _0 = <core::result::Result<host::Host, parser::ParseError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, parser::ParseError>>>::from_residual(move _36) -> [return: bb22, unwind: bb56]
  }
  preds [bb19]
  succs [bb22, bb56]

bb22
  0: StorageDead(_36)
    SourceInfo(url/src/host.rs:91:52-91:53)
  1: StorageDead(_34)
    SourceInfo(url/src/host.rs:91:52-91:53)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:91:53-91:54)
      kind: drop(_27) -> [return: bb49, unwind: bb58]
  }
  preds [bb21]
  succs [bb49, bb58]

bb23
  0: StorageDead(_37)
    SourceInfo(url/src/host.rs:91:52-91:53)
  1: FakeRead(ForLet(None), _26)
    SourceInfo(url/src/host.rs:91:13-91:19)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:91:53-91:54)
      kind: drop(_27) -> [return: bb24, unwind: bb55]
  }
  preds [bb20]
  succs [bb24, bb55]

bb24
  0: StorageDead(_32)
    SourceInfo(url/src/host.rs:91:53-91:54)
  1: StorageDead(_30)
    SourceInfo(url/src/host.rs:91:53-91:54)
  2: StorageDead(_27)
    SourceInfo(url/src/host.rs:91:53-91:54)
  3: StorageLive(_38)
    SourceInfo(url/src/host.rs:93:9-95:10)
  4: StorageLive(_39)
    SourceInfo(url/src/host.rs:93:12-93:29)
  5: StorageLive(_40)
    SourceInfo(url/src/host.rs:93:12-93:18)
  6: StorageLive(_41)
    SourceInfo(url/src/host.rs:93:12-93:29)
  7: StorageLive(_42)
    SourceInfo(url/src/host.rs:93:12-93:18)
  8: _42 = &_26
    SourceInfo(url/src/host.rs:93:12-93:18)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:93:12-93:29)
      kind: _41 = <std::borrow::Cow<'_, str> as core::ops::Deref>::deref(move _42) -> [return: bb25, unwind: bb55]
  }
  preds [bb23]
  succs [bb25, bb55]

bb25
  0: _40 = &(*_41)
    SourceInfo(url/src/host.rs:93:12-93:18)
  1: StorageDead(_42)
    SourceInfo(url/src/host.rs:93:17-93:18)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:93:12-93:29)
      kind: _39 = core::str::<impl str>::is_empty(move _40) -> [return: bb26, unwind: bb55]
  }
  preds [bb24]
  succs [bb26, bb55]

bb26
  Terminator {
      source_info: SourceInfo(url/src/host.rs:93:12-93:29)
      kind: switchInt(move _39) -> [0: bb28, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28]

bb27
  0: StorageDead(_41)
    SourceInfo(url/src/host.rs:93:28-93:29)
  1: StorageDead(_40)
    SourceInfo(url/src/host.rs:93:28-93:29)
  2: StorageLive(_44)
    SourceInfo(url/src/host.rs:94:24-94:45)
  3: _44 = parser::ParseError::EmptyHost
    SourceInfo(url/src/host.rs:94:24-94:45)
  4: _0 = core::result::Result::<host::Host, parser::ParseError>::Err(move _44)
    SourceInfo(url/src/host.rs:94:20-94:46)
  5: StorageDead(_44)
    SourceInfo(url/src/host.rs:94:45-94:46)
  6: StorageDead(_39)
    SourceInfo(url/src/host.rs:95:9-95:10)
  7: StorageDead(_38)
    SourceInfo(url/src/host.rs:95:9-95:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb48
  }
  preds [bb26]
  succs [bb48]

bb28
  0: StorageDead(_41)
    SourceInfo(url/src/host.rs:93:28-93:29)
  1: StorageDead(_40)
    SourceInfo(url/src/host.rs:93:28-93:29)
  2: _38 = const ()
    SourceInfo(url/src/host.rs:95:10-95:10)
  3: StorageDead(_39)
    SourceInfo(url/src/host.rs:95:9-95:10)
  4: StorageDead(_38)
    SourceInfo(url/src/host.rs:95:9-95:10)
  5: StorageLive(_45)
    SourceInfo(url/src/host.rs:97:12-97:37)
  6: StorageLive(_46)
    SourceInfo(url/src/host.rs:97:29-97:36)
  7: StorageLive(_47)
    SourceInfo(url/src/host.rs:97:29-97:36)
  8: StorageLive(_48)
    SourceInfo(url/src/host.rs:97:29-97:36)
  9: StorageLive(_49)
    SourceInfo(url/src/host.rs:97:29-97:36)
  10: _49 = &_26
    SourceInfo(url/src/host.rs:97:29-97:36)
  11: _48 = &(*_49)
    SourceInfo(url/src/host.rs:97:29-97:36)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:97:29-97:36)
      kind: _47 = <std::borrow::Cow<'_, str> as core::ops::Deref>::deref(move _48) -> [return: bb29, unwind: bb55]
  }
  preds [bb26]
  succs [bb29, bb55]

bb29
  0: _46 = &(*_47)
    SourceInfo(url/src/host.rs:97:29-97:36)
  1: StorageDead(_48)
    SourceInfo(url/src/host.rs:97:35-97:36)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:97:12-97:37)
      kind: _45 = host::ends_in_a_number(move _46) -> [return: bb30, unwind: bb55]
  }
  preds [bb28]
  succs [bb30, bb55]

bb30
  Terminator {
      source_info: SourceInfo(url/src/host.rs:97:12-97:37)
      kind: switchInt(move _45) -> [0: bb41, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb41]

bb31
  0: StorageDead(_49)
    SourceInfo(url/src/host.rs:97:36-97:37)
  1: StorageDead(_47)
    SourceInfo(url/src/host.rs:97:36-97:37)
  2: StorageDead(_46)
    SourceInfo(url/src/host.rs:97:36-97:37)
  3: StorageLive(_50)
    SourceInfo(url/src/host.rs:98:17-98:24)
  4: StorageLive(_51)
    SourceInfo(url/src/host.rs:98:27-98:51)
  5: StorageLive(_52)
    SourceInfo(url/src/host.rs:98:27-98:50)
  6: StorageLive(_53)
    SourceInfo(url/src/host.rs:98:42-98:49)
  7: StorageLive(_54)
    SourceInfo(url/src/host.rs:98:42-98:49)
  8: StorageLive(_55)
    SourceInfo(url/src/host.rs:98:42-98:49)
  9: StorageLive(_56)
    SourceInfo(url/src/host.rs:98:42-98:49)
  10: _56 = &_26
    SourceInfo(url/src/host.rs:98:42-98:49)
  11: _55 = &(*_56)
    SourceInfo(url/src/host.rs:98:42-98:49)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:98:42-98:49)
      kind: _54 = <std::borrow::Cow<'_, str> as core::ops::Deref>::deref(move _55) -> [return: bb32, unwind: bb55]
  }
  preds [bb30]
  succs [bb32, bb55]

bb32
  0: _53 = &(*_54)
    SourceInfo(url/src/host.rs:98:42-98:49)
  1: StorageDead(_55)
    SourceInfo(url/src/host.rs:98:48-98:49)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:98:27-98:50)
      kind: _52 = host::parse_ipv4addr(move _53) -> [return: bb33, unwind: bb55]
  }
  preds [bb31]
  succs [bb33, bb55]

bb33
  0: StorageDead(_53)
    SourceInfo(url/src/host.rs:98:49-98:50)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:98:27-98:51)
      kind: _51 = <core::result::Result<core::net::Ipv4Addr, parser::ParseError> as core::ops::Try>::branch(move _52) -> [return: bb34, unwind: bb55]
  }
  preds [bb32]
  succs [bb34, bb55]

bb34
  0: StorageDead(_52)
    SourceInfo(url/src/host.rs:98:50-98:51)
  1: PlaceMention(_51)
    SourceInfo(url/src/host.rs:98:27-98:51)
  2: _57 = discriminant(_51)
    SourceInfo(url/src/host.rs:98:27-98:51)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:98:27-98:51)
      kind: switchInt(move _57) -> [0: bb37, 1: bb36, otherwise: bb35]
  }
  preds [bb33]
  succs [bb35, bb36, bb37]

bb35
  0: FakeRead(ForMatchedPlace(None), _51)
    SourceInfo(url/src/host.rs:98:27-98:51)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:98:27-98:51)
      kind: unreachable
  }
  preds [bb34]
  succs []

bb36
  Terminator {
      source_info: SourceInfo(url/src/host.rs:98:50-98:51)
      kind: falseEdge -> [real: bb38, imaginary: bb37]
  }
  preds [bb34]
  succs [bb37, bb38]

bb37
  0: StorageLive(_61)
    SourceInfo(url/src/host.rs:98:27-98:51)
  1: _61 = ((_51 as Continue).0: core::net::Ipv4Addr)
    SourceInfo(url/src/host.rs:98:27-98:51)
  2: _50 = _61
    SourceInfo(url/src/host.rs:98:27-98:51)
  3: StorageDead(_61)
    SourceInfo(url/src/host.rs:98:50-98:51)
  4: FakeRead(ForLet(None), _50)
    SourceInfo(url/src/host.rs:98:17-98:24)
  5: StorageDead(_56)
    SourceInfo(url/src/host.rs:98:51-98:52)
  6: StorageDead(_54)
    SourceInfo(url/src/host.rs:98:51-98:52)
  7: StorageDead(_51)
    SourceInfo(url/src/host.rs:98:51-98:52)
  8: StorageLive(_62)
    SourceInfo(url/src/host.rs:99:16-99:35)
  9: StorageLive(_63)
    SourceInfo(url/src/host.rs:99:27-99:34)
  10: _63 = _50
    SourceInfo(url/src/host.rs:99:27-99:34)
  11: _62 = host::Host::Ipv4(move _63)
    SourceInfo(url/src/host.rs:99:16-99:35)
  12: StorageDead(_63)
    SourceInfo(url/src/host.rs:99:34-99:35)
  13: _0 = core::result::Result::<host::Host, parser::ParseError>::Ok(move _62)
    SourceInfo(url/src/host.rs:99:13-99:36)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:99:35-99:36)
      kind: drop(_62) -> [return: bb40, unwind: bb55]
  }
  preds [bb34, bb36]
  succs [bb40, bb55]

bb38
  0: StorageLive(_58)
    SourceInfo(url/src/host.rs:98:50-98:51)
  1: _58 = ((_51 as Break).0: core::result::Result<core::convert::Infallible, parser::ParseError>)
    SourceInfo(url/src/host.rs:98:50-98:51)
  2: StorageLive(_60)
    SourceInfo(url/src/host.rs:98:50-98:51)
  3: _60 = _58
    SourceInfo(url/src/host.rs:98:50-98:51)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:98:27-98:51)
      kind: _0 = <core::result::Result<host::Host, parser::ParseError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, parser::ParseError>>>::from_residual(move _60) -> [return: bb39, unwind: bb55]
  }
  preds [bb36]
  succs [bb39, bb55]

bb39
  0: StorageDead(_60)
    SourceInfo(url/src/host.rs:98:50-98:51)
  1: StorageDead(_58)
    SourceInfo(url/src/host.rs:98:50-98:51)
  2: StorageDead(_56)
    SourceInfo(url/src/host.rs:98:51-98:52)
  3: StorageDead(_54)
    SourceInfo(url/src/host.rs:98:51-98:52)
  4: StorageDead(_51)
    SourceInfo(url/src/host.rs:98:51-98:52)
  5: StorageDead(_50)
    SourceInfo(url/src/host.rs:100:9-100:10)
  6: StorageDead(_45)
    SourceInfo(url/src/host.rs:102:9-102:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb48
  }
  preds [bb38]
  succs [bb48]

bb40
  0: StorageDead(_62)
    SourceInfo(url/src/host.rs:99:35-99:36)
  1: StorageDead(_50)
    SourceInfo(url/src/host.rs:100:9-100:10)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:97:9-102:10)
      kind: goto -> bb45
  }
  preds [bb37]
  succs [bb45]

bb41
  0: StorageDead(_49)
    SourceInfo(url/src/host.rs:97:36-97:37)
  1: StorageDead(_47)
    SourceInfo(url/src/host.rs:97:36-97:37)
  2: StorageDead(_46)
    SourceInfo(url/src/host.rs:97:36-97:37)
  3: StorageLive(_64)
    SourceInfo(url/src/host.rs:101:16-101:48)
  4: StorageLive(_65)
    SourceInfo(url/src/host.rs:101:29-101:47)
  5: StorageLive(_66)
    SourceInfo(url/src/host.rs:101:29-101:35)
  6: _66 = &_26
    SourceInfo(url/src/host.rs:101:29-101:35)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:101:29-101:47)
      kind: _65 = <std::borrow::Cow<'_, str> as std::string::ToString>::to_string(move _66) -> [return: bb42, unwind: bb55]
  }
  preds [bb30]
  succs [bb42, bb55]

bb42
  0: StorageDead(_66)
    SourceInfo(url/src/host.rs:101:46-101:47)
  1: _64 = host::Host::Domain(move _65)
    SourceInfo(url/src/host.rs:101:16-101:48)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:101:47-101:48)
      kind: drop(_65) -> [return: bb43, unwind: bb54]
  }
  preds [bb41]
  succs [bb43, bb54]

bb43
  0: StorageDead(_65)
    SourceInfo(url/src/host.rs:101:47-101:48)
  1: _0 = core::result::Result::<host::Host, parser::ParseError>::Ok(move _64)
    SourceInfo(url/src/host.rs:101:13-101:49)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:101:48-101:49)
      kind: drop(_64) -> [return: bb44, unwind: bb55]
  }
  preds [bb42]
  succs [bb44, bb55]

bb44
  0: StorageDead(_64)
    SourceInfo(url/src/host.rs:101:48-101:49)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:97:9-102:10)
      kind: goto -> bb45
  }
  preds [bb43]
  succs [bb45]

bb45
  0: StorageDead(_45)
    SourceInfo(url/src/host.rs:102:9-102:10)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:103:5-103:6)
      kind: drop(_26) -> [return: bb46, unwind: bb58]
  }
  preds [bb40, bb44]
  succs [bb46, bb58]

bb46
  0: StorageDead(_26)
    SourceInfo(url/src/host.rs:103:5-103:6)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:103:5-103:6)
      kind: drop(_21) -> [return: bb47, unwind: bb59]
  }
  preds [bb45]
  succs [bb47, bb59]

bb47
  0: StorageDead(_21)
    SourceInfo(url/src/host.rs:103:5-103:6)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:103:6-103:6)
      kind: goto -> bb53
  }
  preds [bb46]
  succs [bb53]

bb48
  Terminator {
      source_info: SourceInfo(url/src/host.rs:103:5-103:6)
      kind: drop(_26) -> [return: bb50, unwind: bb58]
  }
  preds [bb27, bb39]
  succs [bb50, bb58]

bb49
  0: StorageDead(_32)
    SourceInfo(url/src/host.rs:91:53-91:54)
  1: StorageDead(_30)
    SourceInfo(url/src/host.rs:91:53-91:54)
  2: StorageDead(_27)
    SourceInfo(url/src/host.rs:91:53-91:54)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb50
  }
  preds [bb22]
  succs [bb50]

bb50
  0: StorageDead(_26)
    SourceInfo(url/src/host.rs:103:5-103:6)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:103:5-103:6)
      kind: drop(_21) -> [return: bb51, unwind: bb59]
  }
  preds [bb48, bb49]
  succs [bb51, bb59]

bb51
  0: StorageDead(_21)
    SourceInfo(url/src/host.rs:103:5-103:6)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb53
  }
  preds [bb50]
  succs [bb53]

bb52
  0: StorageDead(_3)
    SourceInfo(url/src/host.rs:88:9-88:10)
  1: StorageDead(_2)
    SourceInfo(url/src/host.rs:88:9-88:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb53
  }
  preds [bb5, bb10]
  succs [bb53]

bb53
  Terminator {
      source_info: SourceInfo(url/src/host.rs:103:6-103:6)
      kind: return
  }
  preds [bb47, bb51, bb52]
  succs []

bb54
  Terminator {
      source_info: SourceInfo(url/src/host.rs:101:48-101:49)
      kind: drop(_64) -> [return: bb55, unwind terminate(cleanup)]
  }
  preds [bb42]
  succs [bb55]

bb55
  Terminator {
      source_info: SourceInfo(url/src/host.rs:103:5-103:6)
      kind: drop(_26) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb23, bb24, bb25, bb28, bb29, bb31, bb32, bb33, bb37, bb38, bb41, bb43, bb54]
  succs [bb58]

bb56
  Terminator {
      source_info: SourceInfo(url/src/host.rs:91:53-91:54)
      kind: drop(_27) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb20, bb21]
  succs [bb58]

bb57
  Terminator {
      source_info: SourceInfo(url/src/host.rs:91:52-91:53)
      kind: drop(_28) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb16]
  succs [bb58]

bb58
  Terminator {
      source_info: SourceInfo(url/src/host.rs:103:5-103:6)
      kind: drop(_21) -> [return: bb59, unwind terminate(cleanup)]
  }
  preds [bb14, bb15, bb22, bb45, bb48, bb55, bb56, bb57]
  succs [bb59]

bb59
  Terminator {
      source_info: SourceInfo(url/src/host.rs:82:5-103:6)
      kind: resume
  }
  preds [bb0, bb2, bb4, bb6, bb7, bb8, bb9, bb11, bb12, bb13, bb46, bb50, bb58]
  succs []

