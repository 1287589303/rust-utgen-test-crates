bb0
  0: StorageLive(_3)
    SourceInfo(url/src/parser.rs:991:9-993:10)
  1: StorageLive(_4)
    SourceInfo(url/src/parser.rs:991:12-991:33)
  2: StorageLive(_5)
    SourceInfo(url/src/parser.rs:991:12-991:23)
  3: _5 = &_2
    SourceInfo(url/src/parser.rs:991:12-991:23)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:991:12-991:33)
      kind: _4 = parser::SchemeType::is_file(move _5) -> [return: bb1, unwind: bb109]
  }
  preds []
  succs [bb1, bb109]

bb1
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:991:12-991:33)
      kind: switchInt(move _4) -> [0: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_5)
    SourceInfo(url/src/parser.rs:991:32-991:33)
  1: StorageLive(_7)
    SourceInfo(url/src/parser.rs:992:42-992:47)
  2: _7 = move _1
    SourceInfo(url/src/parser.rs:992:42-992:47)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:992:20-992:48)
      kind: _0 = parser::Parser::<'_>::get_file_host(move _7) -> [return: bb3, unwind: bb109]
  }
  preds [bb1]
  succs [bb3, bb109]

bb3
  0: StorageDead(_7)
    SourceInfo(url/src/parser.rs:992:47-992:48)
  1: StorageDead(_4)
    SourceInfo(url/src/parser.rs:993:9-993:10)
  2: StorageDead(_3)
    SourceInfo(url/src/parser.rs:993:9-993:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb99
  }
  preds [bb2]
  succs [bb99]

bb4
  0: StorageDead(_5)
    SourceInfo(url/src/parser.rs:991:32-991:33)
  1: _3 = const ()
    SourceInfo(url/src/parser.rs:993:10-993:10)
  2: StorageDead(_4)
    SourceInfo(url/src/parser.rs:993:9-993:10)
  3: StorageDead(_3)
    SourceInfo(url/src/parser.rs:993:9-993:10)
  4: StorageLive(_8)
    SourceInfo(url/src/parser.rs:996:13-996:22)
  5: StorageLive(_9)
    SourceInfo(url/src/parser.rs:996:25-996:36)
  6: _9 = &(_1.0: core::str::Chars<'_>)
    SourceInfo(url/src/parser.rs:996:25-996:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:996:25-996:45)
      kind: _8 = core::str::Chars::<'_>::as_str(move _9) -> [return: bb5, unwind: bb109]
  }
  preds [bb1]
  succs [bb5, bb109]

bb5
  0: StorageDead(_9)
    SourceInfo(url/src/parser.rs:996:44-996:45)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(url/src/parser.rs:996:13-996:22)
  2: StorageLive(_10)
    SourceInfo(url/src/parser.rs:997:13-997:39)
  3: _10 = const false
    SourceInfo(url/src/parser.rs:997:42-997:47)
  4: FakeRead(ForLet(None), _10)
    SourceInfo(url/src/parser.rs:997:13-997:39)
  5: StorageLive(_11)
    SourceInfo(url/src/parser.rs:998:13-998:34)
  6: _11 = const false
    SourceInfo(url/src/parser.rs:998:37-998:42)
  7: FakeRead(ForLet(None), _11)
    SourceInfo(url/src/parser.rs:998:13-998:34)
  8: StorageLive(_12)
    SourceInfo(url/src/parser.rs:999:13-999:34)
  9: _12 = const 0_usize
    SourceInfo(url/src/parser.rs:999:37-999:38)
  10: FakeRead(ForLet(None), _12)
    SourceInfo(url/src/parser.rs:999:13-999:34)
  11: StorageLive(_13)
    SourceInfo(url/src/parser.rs:1000:13-1000:22)
  12: _13 = const 0_usize
    SourceInfo(url/src/parser.rs:1000:25-1000:26)
  13: FakeRead(ForLet(None), _13)
    SourceInfo(url/src/parser.rs:1000:13-1000:22)
  14: StorageLive(_14)
    SourceInfo(url/src/parser.rs:1001:9-1020:10)
  15: StorageLive(_15)
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  16: StorageLive(_16)
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  17: StorageLive(_17)
    SourceInfo(url/src/parser.rs:1001:18-1001:27)
  18: _17 = &(*_8)
    SourceInfo(url/src/parser.rs:1001:18-1001:27)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1001:18-1001:35)
      kind: _16 = core::str::<impl str>::chars(move _17) -> [return: bb6, unwind: bb109]
  }
  preds [bb4]
  succs [bb6, bb109]

bb6
  0: StorageDead(_17)
    SourceInfo(url/src/parser.rs:1001:34-1001:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1001:18-1001:35)
      kind: _15 = <core::str::Chars<'_> as core::iter::IntoIterator>::into_iter(move _16) -> [return: bb7, unwind: bb109]
  }
  preds [bb5]
  succs [bb7, bb109]

bb7
  0: StorageDead(_16)
    SourceInfo(url/src/parser.rs:1001:34-1001:35)
  1: PlaceMention(_15)
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  2: StorageLive(_18)
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  3: _18 = move _15
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1001:9-1020:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1001:9-1020:10)
      kind: falseUnwind -> [real: bb9, unwind: bb109]
  }
  preds [bb7, bb38]
  succs [bb9, bb109]

bb9
  0: StorageLive(_20)
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  1: StorageLive(_21)
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  2: StorageLive(_22)
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  3: StorageLive(_23)
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  4: _23 = &mut _18
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  5: _22 = &mut (*_23)
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1001:18-1001:35)
      kind: _21 = <core::str::Chars<'_> as core::iter::Iterator>::next(move _22) -> [return: bb10, unwind: bb109]
  }
  preds [bb8]
  succs [bb10, bb109]

bb10
  0: StorageDead(_22)
    SourceInfo(url/src/parser.rs:1001:34-1001:35)
  1: PlaceMention(_21)
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  2: _24 = discriminant(_21)
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1001:18-1001:35)
      kind: switchInt(move _24) -> [0: bb12, 1: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _21)
    SourceInfo(url/src/parser.rs:1001:18-1001:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1001:18-1001:35)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1001:9-1020:10)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageLive(_26)
    SourceInfo(url/src/parser.rs:1001:13-1001:14)
  1: _26 = ((_21 as Some).0: char)
    SourceInfo(url/src/parser.rs:1001:13-1001:14)
  2: StorageLive(_27)
    SourceInfo(url/src/parser.rs:1002:13-1018:14)
  3: PlaceMention(_26)
    SourceInfo(url/src/parser.rs:1002:19-1002:20)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1002:13-1002:20)
      kind: switchInt(_26) -> [58: bb16, 92: bb17, 47: bb20, 63: bb20, 35: bb20, 9: bb21, 10: bb21, 13: bb21, 91: bb18, 93: bb19, otherwise: bb15]
  }
  preds [bb10, bb12]
  succs [bb15, bb16, bb17, bb18, bb19, bb20, bb20, bb20, bb21, bb21, bb21]

bb14
  0: _14 = const ()
    SourceInfo(url/src/parser.rs:1001:9-1020:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1001:9-1020:10)
      kind: goto -> bb40
  }
  preds [bb12]
  succs [bb40]

bb15
  0: _37 = AddWithOverflow(_12, const 1_usize)
    SourceInfo(url/src/parser.rs:1017:22-1017:44)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1017:22-1017:44)
      kind: assert(!move (_37.1: bool), "attempt to compute `{} + {}`, which would overflow", _12, const 1_usize) -> [success: bb35, unwind: bb109]
  }
  preds [bb13, bb19, bb23, bb28]
  succs [bb35, bb109]

bb16
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1003:17-1003:20)
      kind: falseEdge -> [real: bb22, imaginary: bb17]
  }
  preds [bb13]
  succs [bb17, bb22]

bb17
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1004:17-1004:21)
      kind: falseEdge -> [real: bb25, imaginary: bb20]
  }
  preds [bb13, bb16, bb23]
  succs [bb20, bb25]

bb18
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1009:17-1009:20)
      kind: falseEdge -> [real: bb31, imaginary: bb19]
  }
  preds [bb13, bb21]
  succs [bb19, bb31]

bb19
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1013:17-1013:20)
      kind: falseEdge -> [real: bb33, imaginary: bb15]
  }
  preds [bb13, bb18]
  succs [bb15, bb33]

bb20
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1005:17-1005:32)
      kind: falseEdge -> [real: bb29, imaginary: bb21]
  }
  preds [bb13, bb13, bb13, bb17, bb28]
  succs [bb21, bb29]

bb21
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:78:9-78:27)
      kind: falseEdge -> [real: bb30, imaginary: bb18]
  }
  preds [bb13, bb13, bb13, bb20]
  succs [bb18, bb30]

bb22
  0: _28 = &fake shallow _26
    SourceInfo(url/src/parser.rs:1002:19-1002:20)
  1: StorageLive(_29)
    SourceInfo(url/src/parser.rs:1003:25-1003:47)
  2: _29 = _10
    SourceInfo(url/src/parser.rs:1003:25-1003:47)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1003:25-1003:47)
      kind: switchInt(move _29) -> [0: bb24, otherwise: bb23]
  }
  preds [bb16]
  succs [bb23, bb24]

bb23
  0: StorageDead(_29)
    SourceInfo(url/src/parser.rs:1003:46-1003:47)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1003:24-1003:47)
      kind: falseEdge -> [real: bb15, imaginary: bb17]
  }
  preds [bb22]
  succs [bb15, bb17]

bb24
  0: StorageDead(_29)
    SourceInfo(url/src/parser.rs:1003:46-1003:47)
  1: FakeRead(ForMatchGuard, _28)
    SourceInfo(url/src/parser.rs:1003:46-1003:47)
  2: _14 = const ()
    SourceInfo(url/src/parser.rs:1003:51-1003:56)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1003:51-1003:56)
      kind: goto -> bb39
  }
  preds [bb22]
  succs [bb39]

bb25
  0: _28 = &fake shallow _26
    SourceInfo(url/src/parser.rs:1002:19-1002:20)
  1: StorageLive(_31)
    SourceInfo(url/src/parser.rs:1004:25-1004:49)
  2: StorageLive(_32)
    SourceInfo(url/src/parser.rs:1004:25-1004:36)
  3: _32 = &_2
    SourceInfo(url/src/parser.rs:1004:25-1004:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1004:25-1004:49)
      kind: _31 = parser::SchemeType::is_special(move _32) -> [return: bb26, unwind: bb109]
  }
  preds [bb17]
  succs [bb26, bb109]

bb26
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1004:25-1004:49)
      kind: switchInt(move _31) -> [0: bb28, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28]

bb27
  0: StorageDead(_32)
    SourceInfo(url/src/parser.rs:1004:48-1004:49)
  1: StorageDead(_31)
    SourceInfo(url/src/parser.rs:1004:48-1004:49)
  2: FakeRead(ForMatchGuard, _28)
    SourceInfo(url/src/parser.rs:1004:48-1004:49)
  3: _14 = const ()
    SourceInfo(url/src/parser.rs:1004:53-1004:58)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1004:53-1004:58)
      kind: goto -> bb39
  }
  preds [bb26]
  succs [bb39]

bb28
  0: StorageDead(_32)
    SourceInfo(url/src/parser.rs:1004:48-1004:49)
  1: StorageDead(_31)
    SourceInfo(url/src/parser.rs:1004:48-1004:49)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1004:25-1004:49)
      kind: falseEdge -> [real: bb15, imaginary: bb20]
  }
  preds [bb26]
  succs [bb15, bb20]

bb29
  0: _14 = const ()
    SourceInfo(url/src/parser.rs:1005:36-1005:41)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1005:36-1005:41)
      kind: goto -> bb39
  }
  preds [bb20]
  succs [bb39]

bb30
  0: _11 = const true
    SourceInfo(url/src/parser.rs:1007:21-1007:45)
  1: _27 = const ()
    SourceInfo(url/src/parser.rs:1006:53-1008:18)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1006:53-1008:18)
      kind: goto -> bb36
  }
  preds [bb21]
  succs [bb36]

bb31
  0: _10 = const true
    SourceInfo(url/src/parser.rs:1010:21-1010:50)
  1: _35 = AddWithOverflow(_12, const 1_usize)
    SourceInfo(url/src/parser.rs:1011:21-1011:43)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1011:21-1011:43)
      kind: assert(!move (_35.1: bool), "attempt to compute `{} + {}`, which would overflow", _12, const 1_usize) -> [success: bb32, unwind: bb109]
  }
  preds [bb18]
  succs [bb32, bb109]

bb32
  0: _12 = move (_35.0: usize)
    SourceInfo(url/src/parser.rs:1011:21-1011:43)
  1: _27 = const ()
    SourceInfo(url/src/parser.rs:1011:21-1011:43)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1011:21-1011:43)
      kind: goto -> bb36
  }
  preds [bb31]
  succs [bb36]

bb33
  0: _10 = const false
    SourceInfo(url/src/parser.rs:1014:21-1014:51)
  1: _36 = AddWithOverflow(_12, const 1_usize)
    SourceInfo(url/src/parser.rs:1015:21-1015:43)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1015:21-1015:43)
      kind: assert(!move (_36.1: bool), "attempt to compute `{} + {}`, which would overflow", _12, const 1_usize) -> [success: bb34, unwind: bb109]
  }
  preds [bb19]
  succs [bb34, bb109]

bb34
  0: _12 = move (_36.0: usize)
    SourceInfo(url/src/parser.rs:1015:21-1015:43)
  1: _27 = const ()
    SourceInfo(url/src/parser.rs:1015:21-1015:43)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1015:21-1015:43)
      kind: goto -> bb36
  }
  preds [bb33]
  succs [bb36]

bb35
  0: _12 = move (_37.0: usize)
    SourceInfo(url/src/parser.rs:1017:22-1017:44)
  1: _27 = const ()
    SourceInfo(url/src/parser.rs:1017:22-1017:44)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1017:22-1017:44)
      kind: goto -> bb36
  }
  preds [bb15]
  succs [bb36]

bb36
  0: StorageDead(_27)
    SourceInfo(url/src/parser.rs:1018:13-1018:14)
  1: StorageLive(_38)
    SourceInfo(url/src/parser.rs:1019:22-1019:34)
  2: StorageLive(_39)
    SourceInfo(url/src/parser.rs:1019:22-1019:23)
  3: _39 = _26
    SourceInfo(url/src/parser.rs:1019:22-1019:23)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1019:22-1019:34)
      kind: _38 = core::char::methods::<impl char>::len_utf8(move _39) -> [return: bb37, unwind: bb109]
  }
  preds [bb30, bb32, bb34, bb35]
  succs [bb37, bb109]

bb37
  0: StorageDead(_39)
    SourceInfo(url/src/parser.rs:1019:33-1019:34)
  1: _40 = AddWithOverflow(_13, _38)
    SourceInfo(url/src/parser.rs:1019:13-1019:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1019:13-1019:34)
      kind: assert(!move (_40.1: bool), "attempt to compute `{} + {}`, which would overflow", _13, move _38) -> [success: bb38, unwind: bb109]
  }
  preds [bb36]
  succs [bb38, bb109]

bb38
  0: _13 = move (_40.0: usize)
    SourceInfo(url/src/parser.rs:1019:13-1019:34)
  1: StorageDead(_38)
    SourceInfo(url/src/parser.rs:1019:33-1019:34)
  2: _20 = const ()
    SourceInfo(url/src/parser.rs:1001:36-1020:10)
  3: StorageDead(_26)
    SourceInfo(url/src/parser.rs:1020:9-1020:10)
  4: StorageDead(_23)
    SourceInfo(url/src/parser.rs:1020:9-1020:10)
  5: StorageDead(_21)
    SourceInfo(url/src/parser.rs:1020:9-1020:10)
  6: StorageDead(_20)
    SourceInfo(url/src/parser.rs:1020:9-1020:10)
  7: _19 = const ()
    SourceInfo(url/src/parser.rs:1001:9-1020:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1001:9-1020:10)
      kind: goto -> bb8
  }
  preds [bb37]
  succs [bb8]

bb39
  0: StorageDead(_27)
    SourceInfo(url/src/parser.rs:1018:13-1018:14)
  1: StorageDead(_26)
    SourceInfo(url/src/parser.rs:1020:9-1020:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb40
  }
  preds [bb24, bb27, bb29]
  succs [bb40]

bb40
  0: StorageDead(_23)
    SourceInfo(url/src/parser.rs:1020:9-1020:10)
  1: StorageDead(_21)
    SourceInfo(url/src/parser.rs:1020:9-1020:10)
  2: StorageDead(_20)
    SourceInfo(url/src/parser.rs:1020:9-1020:10)
  3: StorageDead(_18)
    SourceInfo(url/src/parser.rs:1020:9-1020:10)
  4: StorageDead(_15)
    SourceInfo(url/src/parser.rs:1020:9-1020:10)
  5: StorageDead(_14)
    SourceInfo(url/src/parser.rs:1020:9-1020:10)
  6: StorageLive(_41)
    SourceInfo(url/src/parser.rs:1021:13-1021:21)
  7: StorageLive(_42)
    SourceInfo(url/src/parser.rs:1022:13-1022:21)
  8: StorageLive(_43)
    SourceInfo(url/src/parser.rs:1023:9-1032:10)
  9: StorageLive(_44)
    SourceInfo(url/src/parser.rs:1024:17-1024:27)
  10: StorageLive(_45)
    SourceInfo(url/src/parser.rs:1024:30-1024:44)
  11: StorageLive(_46)
    SourceInfo(url/src/parser.rs:1024:30-1024:44)
  12: StorageLive(_47)
    SourceInfo(url/src/parser.rs:1024:30-1024:35)
  13: _47 = &mut _1
    SourceInfo(url/src/parser.rs:1024:30-1024:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1024:30-1024:44)
      kind: _46 = <parser::Input<'_> as core::iter::Iterator>::by_ref(move _47) -> [return: bb41, unwind: bb108]
  }
  preds [bb14, bb39]
  succs [bb41, bb108]

bb41
  0: _45 = &mut (*_46)
    SourceInfo(url/src/parser.rs:1024:30-1024:44)
  1: StorageDead(_47)
    SourceInfo(url/src/parser.rs:1024:43-1024:44)
  2: StorageLive(_48)
    SourceInfo(url/src/parser.rs:1024:50-1024:67)
  3: _48 = _12
    SourceInfo(url/src/parser.rs:1024:50-1024:67)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1024:30-1024:68)
      kind: _44 = <&mut parser::Input<'_> as core::iter::Iterator>::take(move _45, move _48) -> [return: bb42, unwind: bb108]
  }
  preds [bb40]
  succs [bb42, bb108]

bb42
  0: StorageDead(_48)
    SourceInfo(url/src/parser.rs:1024:67-1024:68)
  1: StorageDead(_45)
    SourceInfo(url/src/parser.rs:1024:67-1024:68)
  2: FakeRead(ForLet(None), _44)
    SourceInfo(url/src/parser.rs:1024:17-1024:27)
  3: StorageDead(_46)
    SourceInfo(url/src/parser.rs:1024:68-1024:69)
  4: StorageLive(_49)
    SourceInfo(url/src/parser.rs:1025:16-1025:33)
  5: _49 = _11
    SourceInfo(url/src/parser.rs:1025:16-1025:33)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1025:16-1025:33)
      kind: switchInt(move _49) -> [0: bb49, otherwise: bb43]
  }
  preds [bb41]
  succs [bb43, bb49]

bb43
  0: StorageLive(_50)
    SourceInfo(url/src/parser.rs:1026:28-1026:48)
  1: StorageLive(_51)
    SourceInfo(url/src/parser.rs:1026:28-1026:38)
  2: _51 = move _44
    SourceInfo(url/src/parser.rs:1026:28-1026:38)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1026:28-1026:48)
      kind: _50 = <core::iter::Take<&mut parser::Input<'_>> as core::iter::Iterator>::collect::<std::string::String>(move _51) -> [return: bb44, unwind: bb108]
  }
  preds [bb42]
  succs [bb44, bb108]

bb44
  0: StorageDead(_51)
    SourceInfo(url/src/parser.rs:1026:47-1026:48)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1026:17-1026:25)
      kind: drop(_41) -> [return: bb45, unwind: bb46]
  }
  preds [bb43]
  succs [bb45, bb46]

bb45
  0: _41 = move _50
    SourceInfo(url/src/parser.rs:1026:17-1026:25)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1026:47-1026:48)
      kind: drop(_50) -> [return: bb47, unwind: bb108]
  }
  preds [bb44]
  succs [bb47, bb108]

bb46
  0: _41 = move _50
    SourceInfo(url/src/parser.rs:1026:17-1026:25)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1026:47-1026:48)
      kind: drop(_50) -> [return: bb108, unwind terminate(cleanup)]
  }
  preds [bb44]
  succs [bb108]

bb47
  0: StorageDead(_50)
    SourceInfo(url/src/parser.rs:1026:47-1026:48)
  1: StorageLive(_52)
    SourceInfo(url/src/parser.rs:1027:28-1027:38)
  2: StorageLive(_53)
    SourceInfo(url/src/parser.rs:1027:29-1027:38)
  3: StorageLive(_54)
    SourceInfo(url/src/parser.rs:1027:30-1027:38)
  4: _54 = &_41
    SourceInfo(url/src/parser.rs:1027:30-1027:38)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1027:29-1027:38)
      kind: _53 = <std::string::String as core::ops::Deref>::deref(move _54) -> [return: bb48, unwind: bb108]
  }
  preds [bb45]
  succs [bb48, bb108]

bb48
  0: StorageDead(_54)
    SourceInfo(url/src/parser.rs:1027:37-1027:38)
  1: _52 = &(*_53)
    SourceInfo(url/src/parser.rs:1027:28-1027:38)
  2: _42 = move _52
    SourceInfo(url/src/parser.rs:1027:17-1027:38)
  3: _43 = const ()
    SourceInfo(url/src/parser.rs:1027:17-1027:38)
  4: StorageDead(_52)
    SourceInfo(url/src/parser.rs:1027:37-1027:38)
  5: StorageDead(_53)
    SourceInfo(url/src/parser.rs:1028:13-1028:14)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1025:13-1031:14)
      kind: goto -> bb59
  }
  preds [bb47]
  succs [bb59]

bb49
  0: StorageLive(_55)
    SourceInfo(url/src/parser.rs:1029:17-1029:39)
  1: StorageLive(_56)
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  2: StorageLive(_57)
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  3: _57 = move _44
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1029:26-1029:36)
      kind: _56 = <core::iter::Take<&mut parser::Input<'_>> as core::iter::IntoIterator>::into_iter(move _57) -> [return: bb50, unwind: bb108]
  }
  preds [bb42]
  succs [bb50, bb108]

bb50
  0: StorageDead(_57)
    SourceInfo(url/src/parser.rs:1029:35-1029:36)
  1: PlaceMention(_56)
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  2: StorageLive(_58)
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  3: _58 = move _56
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1029:17-1029:39)
      kind: goto -> bb51
  }
  preds [bb49]
  succs [bb51]

bb51
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1029:17-1029:39)
      kind: falseUnwind -> [real: bb52, unwind: bb108]
  }
  preds [bb50, bb56]
  succs [bb52, bb108]

bb52
  0: StorageLive(_59)
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  1: StorageLive(_60)
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  2: StorageLive(_61)
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  3: StorageLive(_62)
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  4: _62 = &mut _58
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  5: _61 = &mut (*_62)
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1029:26-1029:36)
      kind: _60 = <core::iter::Take<&mut parser::Input<'_>> as core::iter::Iterator>::next(move _61) -> [return: bb53, unwind: bb108]
  }
  preds [bb51]
  succs [bb53, bb108]

bb53
  0: StorageDead(_61)
    SourceInfo(url/src/parser.rs:1029:35-1029:36)
  1: PlaceMention(_60)
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  2: _63 = discriminant(_60)
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1029:26-1029:36)
      kind: switchInt(move _63) -> [0: bb55, 1: bb56, otherwise: bb54]
  }
  preds [bb52]
  succs [bb54, bb55, bb56]

bb54
  0: FakeRead(ForMatchedPlace(None), _60)
    SourceInfo(url/src/parser.rs:1029:26-1029:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1029:26-1029:36)
      kind: unreachable
  }
  preds [bb53]
  succs []

bb55
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1029:17-1029:39)
      kind: falseEdge -> [real: bb57, imaginary: bb56]
  }
  preds [bb53]
  succs [bb56, bb57]

bb56
  0: _59 = const ()
    SourceInfo(url/src/parser.rs:1029:37-1029:39)
  1: StorageDead(_62)
    SourceInfo(url/src/parser.rs:1029:38-1029:39)
  2: StorageDead(_60)
    SourceInfo(url/src/parser.rs:1029:38-1029:39)
  3: StorageDead(_59)
    SourceInfo(url/src/parser.rs:1029:38-1029:39)
  4: _19 = const ()
    SourceInfo(url/src/parser.rs:1029:17-1029:39)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1029:17-1029:39)
      kind: goto -> bb51
  }
  preds [bb53, bb55]
  succs [bb51]

bb57
  0: _55 = const ()
    SourceInfo(url/src/parser.rs:1029:17-1029:39)
  1: StorageDead(_62)
    SourceInfo(url/src/parser.rs:1029:38-1029:39)
  2: StorageDead(_60)
    SourceInfo(url/src/parser.rs:1029:38-1029:39)
  3: StorageDead(_59)
    SourceInfo(url/src/parser.rs:1029:38-1029:39)
  4: StorageDead(_58)
    SourceInfo(url/src/parser.rs:1029:38-1029:39)
  5: StorageDead(_56)
    SourceInfo(url/src/parser.rs:1029:38-1029:39)
  6: StorageDead(_55)
    SourceInfo(url/src/parser.rs:1029:38-1029:39)
  7: StorageLive(_65)
    SourceInfo(url/src/parser.rs:1030:28-1030:47)
  8: StorageLive(_66)
    SourceInfo(url/src/parser.rs:1030:28-1030:47)
  9: StorageLive(_67)
    SourceInfo(url/src/parser.rs:1030:38-1030:47)
  10: StorageLive(_68)
    SourceInfo(url/src/parser.rs:1030:29-1030:38)
  11: _68 = &(*_8)
    SourceInfo(url/src/parser.rs:1030:29-1030:38)
  12: StorageLive(_69)
    SourceInfo(url/src/parser.rs:1030:39-1030:46)
  13: StorageLive(_70)
    SourceInfo(url/src/parser.rs:1030:41-1030:46)
  14: _70 = _13
    SourceInfo(url/src/parser.rs:1030:41-1030:46)
  15: _69 = core::ops::RangeTo::<usize> { end: move _70 }
    SourceInfo(url/src/parser.rs:1030:39-1030:46)
  16: StorageDead(_70)
    SourceInfo(url/src/parser.rs:1030:45-1030:46)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1030:38-1030:47)
      kind: _67 = <str as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _68, move _69) -> [return: bb58, unwind: bb108]
  }
  preds [bb55]
  succs [bb58, bb108]

bb58
  0: StorageDead(_69)
    SourceInfo(url/src/parser.rs:1030:46-1030:47)
  1: StorageDead(_68)
    SourceInfo(url/src/parser.rs:1030:46-1030:47)
  2: _66 = &(*_67)
    SourceInfo(url/src/parser.rs:1030:28-1030:47)
  3: _65 = &(*_66)
    SourceInfo(url/src/parser.rs:1030:28-1030:47)
  4: _42 = move _65
    SourceInfo(url/src/parser.rs:1030:17-1030:47)
  5: _43 = const ()
    SourceInfo(url/src/parser.rs:1030:17-1030:47)
  6: StorageDead(_65)
    SourceInfo(url/src/parser.rs:1030:46-1030:47)
  7: StorageDead(_67)
    SourceInfo(url/src/parser.rs:1031:13-1031:14)
  8: StorageDead(_66)
    SourceInfo(url/src/parser.rs:1031:13-1031:14)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1025:13-1031:14)
      kind: goto -> bb59
  }
  preds [bb57]
  succs [bb59]

bb59
  0: StorageDead(_49)
    SourceInfo(url/src/parser.rs:1031:13-1031:14)
  1: StorageDead(_44)
    SourceInfo(url/src/parser.rs:1032:9-1032:10)
  2: StorageDead(_43)
    SourceInfo(url/src/parser.rs:1032:9-1032:10)
  3: StorageLive(_71)
    SourceInfo(url/src/parser.rs:1033:9-1035:10)
  4: StorageLive(_72)
    SourceInfo(url/src/parser.rs:1033:12-1033:53)
  5: StorageLive(_73)
    SourceInfo(url/src/parser.rs:1033:12-1033:23)
  6: _73 = &_2
    SourceInfo(url/src/parser.rs:1033:12-1033:23)
  7: StorageLive(_74)
    SourceInfo(url/src/parser.rs:1033:27-1033:53)
  8: StorageLive(_75)
    SourceInfo(url/src/parser.rs:1033:27-1033:53)
  9: _75 = parser::SchemeType::SpecialNotFile
    SourceInfo(url/src/parser.rs:1033:27-1033:53)
  10: _74 = &_75
    SourceInfo(url/src/parser.rs:1033:27-1033:53)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1033:12-1033:53)
      kind: _72 = <parser::SchemeType as core::cmp::PartialEq>::eq(move _73, move _74) -> [return: bb60, unwind: bb108]
  }
  preds [bb48, bb58]
  succs [bb60, bb108]

bb60
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1033:12-1033:53)
      kind: switchInt(move _72) -> [0: bb65, otherwise: bb61]
  }
  preds [bb59]
  succs [bb61, bb65]

bb61
  0: StorageDead(_75)
    SourceInfo(url/src/parser.rs:1033:52-1033:53)
  1: StorageDead(_74)
    SourceInfo(url/src/parser.rs:1033:52-1033:53)
  2: StorageDead(_73)
    SourceInfo(url/src/parser.rs:1033:52-1033:53)
  3: StorageLive(_76)
    SourceInfo(url/src/parser.rs:1033:57-1033:76)
  4: StorageLive(_77)
    SourceInfo(url/src/parser.rs:1033:57-1033:65)
  5: _77 = &(*_42)
    SourceInfo(url/src/parser.rs:1033:57-1033:65)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1033:57-1033:76)
      kind: _76 = core::str::<impl str>::is_empty(move _77) -> [return: bb62, unwind: bb108]
  }
  preds [bb60]
  succs [bb62, bb108]

bb62
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1033:57-1033:76)
      kind: switchInt(move _76) -> [0: bb64, otherwise: bb63]
  }
  preds [bb61]
  succs [bb63, bb64]

bb63
  0: StorageDead(_77)
    SourceInfo(url/src/parser.rs:1033:75-1033:76)
  1: StorageLive(_79)
    SourceInfo(url/src/parser.rs:1034:24-1034:45)
  2: _79 = parser::ParseError::EmptyHost
    SourceInfo(url/src/parser.rs:1034:24-1034:45)
  3: _0 = core::result::Result::<(host::Host, parser::Input<'_>), parser::ParseError>::Err(move _79)
    SourceInfo(url/src/parser.rs:1034:20-1034:46)
  4: StorageDead(_79)
    SourceInfo(url/src/parser.rs:1034:45-1034:46)
  5: StorageDead(_76)
    SourceInfo(url/src/parser.rs:1035:9-1035:10)
  6: StorageDead(_72)
    SourceInfo(url/src/parser.rs:1035:9-1035:10)
  7: StorageDead(_71)
    SourceInfo(url/src/parser.rs:1035:9-1035:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb97
  }
  preds [bb62]
  succs [bb97]

bb64
  0: StorageDead(_77)
    SourceInfo(url/src/parser.rs:1033:75-1033:76)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb66
  }
  preds [bb62]
  succs [bb66]

bb65
  0: StorageDead(_75)
    SourceInfo(url/src/parser.rs:1033:52-1033:53)
  1: StorageDead(_74)
    SourceInfo(url/src/parser.rs:1033:52-1033:53)
  2: StorageDead(_73)
    SourceInfo(url/src/parser.rs:1033:52-1033:53)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb66
  }
  preds [bb60]
  succs [bb66]

bb66
  0: _71 = const ()
    SourceInfo(url/src/parser.rs:1035:10-1035:10)
  1: StorageDead(_76)
    SourceInfo(url/src/parser.rs:1035:9-1035:10)
  2: StorageDead(_72)
    SourceInfo(url/src/parser.rs:1035:9-1035:10)
  3: StorageDead(_71)
    SourceInfo(url/src/parser.rs:1035:9-1035:10)
  4: StorageLive(_80)
    SourceInfo(url/src/parser.rs:1036:9-1039:10)
  5: StorageLive(_81)
    SourceInfo(url/src/parser.rs:1036:13-1036:37)
  6: StorageLive(_82)
    SourceInfo(url/src/parser.rs:1036:13-1036:24)
  7: _82 = &_2
    SourceInfo(url/src/parser.rs:1036:13-1036:24)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1036:13-1036:37)
      kind: _81 = parser::SchemeType::is_special(move _82) -> [return: bb67, unwind: bb108]
  }
  preds [bb64, bb65]
  succs [bb67, bb108]

bb67
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1036:13-1036:37)
      kind: switchInt(move _81) -> [0: bb69, otherwise: bb68]
  }
  preds [bb66]
  succs [bb68, bb69]

bb68
  0: StorageDead(_82)
    SourceInfo(url/src/parser.rs:1036:36-1036:37)
  1: _80 = const ()
    SourceInfo(url/src/parser.rs:1039:10-1039:10)
  2: StorageDead(_81)
    SourceInfo(url/src/parser.rs:1039:9-1039:10)
  3: StorageDead(_80)
    SourceInfo(url/src/parser.rs:1039:9-1039:10)
  4: StorageLive(_96)
    SourceInfo(url/src/parser.rs:1040:13-1040:17)
  5: StorageLive(_97)
    SourceInfo(url/src/parser.rs:1040:20-1040:42)
  6: StorageLive(_98)
    SourceInfo(url/src/parser.rs:1040:20-1040:41)
  7: StorageLive(_99)
    SourceInfo(url/src/parser.rs:1040:32-1040:40)
  8: _99 = &(*_42)
    SourceInfo(url/src/parser.rs:1040:32-1040:40)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1040:20-1040:41)
      kind: _98 = host::Host::parse(move _99) -> [return: bb81, unwind: bb108]
  }
  preds [bb67]
  succs [bb81, bb108]

bb69
  0: StorageDead(_82)
    SourceInfo(url/src/parser.rs:1036:36-1036:37)
  1: StorageLive(_84)
    SourceInfo(url/src/parser.rs:1037:17-1037:21)
  2: StorageLive(_85)
    SourceInfo(url/src/parser.rs:1037:24-1037:53)
  3: StorageLive(_86)
    SourceInfo(url/src/parser.rs:1037:24-1037:52)
  4: StorageLive(_87)
    SourceInfo(url/src/parser.rs:1037:43-1037:51)
  5: _87 = &(*_42)
    SourceInfo(url/src/parser.rs:1037:43-1037:51)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1037:24-1037:52)
      kind: _86 = host::Host::parse_opaque(move _87) -> [return: bb70, unwind: bb108]
  }
  preds [bb67]
  succs [bb70, bb108]

bb70
  0: StorageDead(_87)
    SourceInfo(url/src/parser.rs:1037:51-1037:52)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1037:24-1037:53)
      kind: _85 = <core::result::Result<host::Host, parser::ParseError> as core::ops::Try>::branch(move _86) -> [return: bb71, unwind: bb107]
  }
  preds [bb69]
  succs [bb71, bb107]

bb71
  0: StorageDead(_86)
    SourceInfo(url/src/parser.rs:1037:52-1037:53)
  1: PlaceMention(_85)
    SourceInfo(url/src/parser.rs:1037:24-1037:53)
  2: _88 = discriminant(_85)
    SourceInfo(url/src/parser.rs:1037:24-1037:53)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1037:24-1037:53)
      kind: switchInt(move _88) -> [0: bb74, 1: bb73, otherwise: bb72]
  }
  preds [bb70]
  succs [bb72, bb73, bb74]

bb72
  0: FakeRead(ForMatchedPlace(None), _85)
    SourceInfo(url/src/parser.rs:1037:24-1037:53)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1037:24-1037:53)
      kind: unreachable
  }
  preds [bb71]
  succs []

bb73
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1037:52-1037:53)
      kind: falseEdge -> [real: bb75, imaginary: bb74]
  }
  preds [bb71]
  succs [bb74, bb75]

bb74
  0: StorageLive(_92)
    SourceInfo(url/src/parser.rs:1037:24-1037:53)
  1: _92 = move ((_85 as Continue).0: host::Host)
    SourceInfo(url/src/parser.rs:1037:24-1037:53)
  2: _84 = move _92
    SourceInfo(url/src/parser.rs:1037:24-1037:53)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1037:52-1037:53)
      kind: drop(_92) -> [return: bb77, unwind: bb106]
  }
  preds [bb71, bb73]
  succs [bb77, bb106]

bb75
  0: StorageLive(_89)
    SourceInfo(url/src/parser.rs:1037:52-1037:53)
  1: _89 = ((_85 as Break).0: core::result::Result<core::convert::Infallible, parser::ParseError>)
    SourceInfo(url/src/parser.rs:1037:52-1037:53)
  2: StorageLive(_91)
    SourceInfo(url/src/parser.rs:1037:52-1037:53)
  3: _91 = _89
    SourceInfo(url/src/parser.rs:1037:52-1037:53)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1037:24-1037:53)
      kind: _0 = <core::result::Result<(host::Host, parser::Input<'_>), parser::ParseError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, parser::ParseError>>>::from_residual(move _91) -> [return: bb76, unwind: bb106]
  }
  preds [bb73]
  succs [bb76, bb106]

bb76
  0: StorageDead(_91)
    SourceInfo(url/src/parser.rs:1037:52-1037:53)
  1: StorageDead(_89)
    SourceInfo(url/src/parser.rs:1037:52-1037:53)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1037:53-1037:54)
      kind: drop(_85) -> [return: bb95, unwind: bb108]
  }
  preds [bb75]
  succs [bb95, bb108]

bb77
  0: StorageDead(_92)
    SourceInfo(url/src/parser.rs:1037:52-1037:53)
  1: FakeRead(ForLet(None), _84)
    SourceInfo(url/src/parser.rs:1037:17-1037:21)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1037:53-1037:54)
      kind: drop(_85) -> [return: bb78, unwind: bb105]
  }
  preds [bb74]
  succs [bb78, bb105]

bb78
  0: StorageDead(_85)
    SourceInfo(url/src/parser.rs:1037:53-1037:54)
  1: StorageLive(_93)
    SourceInfo(url/src/parser.rs:1038:23-1038:36)
  2: StorageLive(_94)
    SourceInfo(url/src/parser.rs:1038:24-1038:28)
  3: _94 = move _84
    SourceInfo(url/src/parser.rs:1038:24-1038:28)
  4: StorageLive(_95)
    SourceInfo(url/src/parser.rs:1038:30-1038:35)
  5: _95 = move _1
    SourceInfo(url/src/parser.rs:1038:30-1038:35)
  6: _93 = (move _94, move _95)
    SourceInfo(url/src/parser.rs:1038:23-1038:36)
  7: StorageDead(_95)
    SourceInfo(url/src/parser.rs:1038:35-1038:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1038:35-1038:36)
      kind: drop(_94) -> [return: bb79, unwind: bb104]
  }
  preds [bb77]
  succs [bb79, bb104]

bb79
  0: StorageDead(_94)
    SourceInfo(url/src/parser.rs:1038:35-1038:36)
  1: _0 = core::result::Result::<(host::Host, parser::Input<'_>), parser::ParseError>::Ok(move _93)
    SourceInfo(url/src/parser.rs:1038:20-1038:37)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1038:36-1038:37)
      kind: drop(_93) -> [return: bb80, unwind: bb105]
  }
  preds [bb78]
  succs [bb80, bb105]

bb80
  0: StorageDead(_93)
    SourceInfo(url/src/parser.rs:1038:36-1038:37)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1039:9-1039:10)
      kind: drop(_84) -> [return: bb96, unwind: bb108]
  }
  preds [bb79]
  succs [bb96, bb108]

bb81
  0: StorageDead(_99)
    SourceInfo(url/src/parser.rs:1040:40-1040:41)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1040:20-1040:42)
      kind: _97 = <core::result::Result<host::Host, parser::ParseError> as core::ops::Try>::branch(move _98) -> [return: bb82, unwind: bb103]
  }
  preds [bb68]
  succs [bb82, bb103]

bb82
  0: StorageDead(_98)
    SourceInfo(url/src/parser.rs:1040:41-1040:42)
  1: PlaceMention(_97)
    SourceInfo(url/src/parser.rs:1040:20-1040:42)
  2: _100 = discriminant(_97)
    SourceInfo(url/src/parser.rs:1040:20-1040:42)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1040:20-1040:42)
      kind: switchInt(move _100) -> [0: bb85, 1: bb84, otherwise: bb83]
  }
  preds [bb81]
  succs [bb83, bb84, bb85]

bb83
  0: FakeRead(ForMatchedPlace(None), _97)
    SourceInfo(url/src/parser.rs:1040:20-1040:42)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1040:20-1040:42)
      kind: unreachable
  }
  preds [bb82]
  succs []

bb84
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1040:41-1040:42)
      kind: falseEdge -> [real: bb86, imaginary: bb85]
  }
  preds [bb82]
  succs [bb85, bb86]

bb85
  0: StorageLive(_104)
    SourceInfo(url/src/parser.rs:1040:20-1040:42)
  1: _104 = move ((_97 as Continue).0: host::Host)
    SourceInfo(url/src/parser.rs:1040:20-1040:42)
  2: _96 = move _104
    SourceInfo(url/src/parser.rs:1040:20-1040:42)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1040:41-1040:42)
      kind: drop(_104) -> [return: bb88, unwind: bb102]
  }
  preds [bb82, bb84]
  succs [bb88, bb102]

bb86
  0: StorageLive(_101)
    SourceInfo(url/src/parser.rs:1040:41-1040:42)
  1: _101 = ((_97 as Break).0: core::result::Result<core::convert::Infallible, parser::ParseError>)
    SourceInfo(url/src/parser.rs:1040:41-1040:42)
  2: StorageLive(_103)
    SourceInfo(url/src/parser.rs:1040:41-1040:42)
  3: _103 = _101
    SourceInfo(url/src/parser.rs:1040:41-1040:42)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1040:20-1040:42)
      kind: _0 = <core::result::Result<(host::Host, parser::Input<'_>), parser::ParseError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, parser::ParseError>>>::from_residual(move _103) -> [return: bb87, unwind: bb102]
  }
  preds [bb84]
  succs [bb87, bb102]

bb87
  0: StorageDead(_103)
    SourceInfo(url/src/parser.rs:1040:41-1040:42)
  1: StorageDead(_101)
    SourceInfo(url/src/parser.rs:1040:41-1040:42)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1040:42-1040:43)
      kind: drop(_97) -> [return: bb94, unwind: bb108]
  }
  preds [bb86]
  succs [bb94, bb108]

bb88
  0: StorageDead(_104)
    SourceInfo(url/src/parser.rs:1040:41-1040:42)
  1: FakeRead(ForLet(None), _96)
    SourceInfo(url/src/parser.rs:1040:13-1040:17)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1040:42-1040:43)
      kind: drop(_97) -> [return: bb89, unwind: bb101]
  }
  preds [bb85]
  succs [bb89, bb101]

bb89
  0: StorageDead(_97)
    SourceInfo(url/src/parser.rs:1040:42-1040:43)
  1: StorageLive(_105)
    SourceInfo(url/src/parser.rs:1041:12-1041:25)
  2: StorageLive(_106)
    SourceInfo(url/src/parser.rs:1041:13-1041:17)
  3: _106 = move _96
    SourceInfo(url/src/parser.rs:1041:13-1041:17)
  4: StorageLive(_107)
    SourceInfo(url/src/parser.rs:1041:19-1041:24)
  5: _107 = move _1
    SourceInfo(url/src/parser.rs:1041:19-1041:24)
  6: _105 = (move _106, move _107)
    SourceInfo(url/src/parser.rs:1041:12-1041:25)
  7: StorageDead(_107)
    SourceInfo(url/src/parser.rs:1041:24-1041:25)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1041:24-1041:25)
      kind: drop(_106) -> [return: bb90, unwind: bb100]
  }
  preds [bb88]
  succs [bb90, bb100]

bb90
  0: StorageDead(_106)
    SourceInfo(url/src/parser.rs:1041:24-1041:25)
  1: _0 = core::result::Result::<(host::Host, parser::Input<'_>), parser::ParseError>::Ok(move _105)
    SourceInfo(url/src/parser.rs:1041:9-1041:26)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1041:25-1041:26)
      kind: drop(_105) -> [return: bb91, unwind: bb101]
  }
  preds [bb89]
  succs [bb91, bb101]

bb91
  0: StorageDead(_105)
    SourceInfo(url/src/parser.rs:1041:25-1041:26)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1042:5-1042:6)
      kind: drop(_96) -> [return: bb92, unwind: bb108]
  }
  preds [bb90]
  succs [bb92, bb108]

bb92
  0: StorageDead(_96)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  1: StorageDead(_42)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1042:5-1042:6)
      kind: drop(_41) -> [return: bb93, unwind: bb109]
  }
  preds [bb91]
  succs [bb93, bb109]

bb93
  0: StorageDead(_41)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  1: StorageDead(_13)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  2: StorageDead(_12)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  3: StorageDead(_11)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  4: StorageDead(_10)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  5: StorageDead(_8)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1042:6-1042:6)
      kind: goto -> bb99
  }
  preds [bb92]
  succs [bb99]

bb94
  0: StorageDead(_97)
    SourceInfo(url/src/parser.rs:1040:42-1040:43)
  1: StorageDead(_96)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb97
  }
  preds [bb87]
  succs [bb97]

bb95
  0: StorageDead(_85)
    SourceInfo(url/src/parser.rs:1037:53-1037:54)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb96
  }
  preds [bb76]
  succs [bb96]

bb96
  0: StorageDead(_84)
    SourceInfo(url/src/parser.rs:1039:9-1039:10)
  1: StorageDead(_81)
    SourceInfo(url/src/parser.rs:1039:9-1039:10)
  2: StorageDead(_80)
    SourceInfo(url/src/parser.rs:1039:9-1039:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb97
  }
  preds [bb80, bb95]
  succs [bb97]

bb97
  0: StorageDead(_42)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1042:5-1042:6)
      kind: drop(_41) -> [return: bb98, unwind: bb109]
  }
  preds [bb63, bb94, bb96]
  succs [bb98, bb109]

bb98
  0: StorageDead(_41)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  1: StorageDead(_13)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  2: StorageDead(_12)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  3: StorageDead(_11)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  4: StorageDead(_10)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  5: StorageDead(_8)
    SourceInfo(url/src/parser.rs:1042:5-1042:6)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb99
  }
  preds [bb97]
  succs [bb99]

bb99
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1042:6-1042:6)
      kind: return
  }
  preds [bb3, bb93, bb98]
  succs []

bb100
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1041:25-1041:26)
      kind: drop(_105) -> [return: bb101, unwind terminate(cleanup)]
  }
  preds [bb89]
  succs [bb101]

bb101
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1042:5-1042:6)
      kind: drop(_96) -> [return: bb108, unwind terminate(cleanup)]
  }
  preds [bb88, bb90, bb100]
  succs [bb108]

bb102
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1040:42-1040:43)
      kind: drop(_97) -> [return: bb108, unwind terminate(cleanup)]
  }
  preds [bb85, bb86]
  succs [bb108]

bb103
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1040:41-1040:42)
      kind: drop(_98) -> [return: bb108, unwind terminate(cleanup)]
  }
  preds [bb81]
  succs [bb108]

bb104
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1038:36-1038:37)
      kind: drop(_93) -> [return: bb105, unwind terminate(cleanup)]
  }
  preds [bb78]
  succs [bb105]

bb105
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1039:9-1039:10)
      kind: drop(_84) -> [return: bb108, unwind terminate(cleanup)]
  }
  preds [bb77, bb79, bb104]
  succs [bb108]

bb106
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1037:53-1037:54)
      kind: drop(_85) -> [return: bb108, unwind terminate(cleanup)]
  }
  preds [bb74, bb75]
  succs [bb108]

bb107
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1037:52-1037:53)
      kind: drop(_86) -> [return: bb108, unwind terminate(cleanup)]
  }
  preds [bb70]
  succs [bb108]

bb108
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1042:5-1042:6)
      kind: drop(_41) -> [return: bb109, unwind terminate(cleanup)]
  }
  preds [bb40, bb41, bb43, bb45, bb46, bb47, bb49, bb51, bb52, bb57, bb59, bb61, bb66, bb68, bb69, bb76, bb80, bb87, bb91, bb101, bb102, bb103, bb105, bb106, bb107]
  succs [bb109]

bb109
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:987:5-1042:6)
      kind: resume
  }
  preds [bb0, bb2, bb4, bb5, bb6, bb8, bb9, bb15, bb25, bb31, bb33, bb36, bb37, bb92, bb97, bb108]
  succs []

