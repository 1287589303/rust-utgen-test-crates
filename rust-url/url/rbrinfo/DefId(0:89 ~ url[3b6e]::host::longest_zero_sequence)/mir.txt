bb0
  0: StorageLive(_2)
    SourceInfo(url/src/host.rs:206:9-206:20)
  1: _2 = const -1_isize
    SourceInfo(url/src/host.rs:206:23-206:25)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(url/src/host.rs:206:9-206:20)
  3: StorageLive(_3)
    SourceInfo(url/src/host.rs:207:9-207:27)
  4: _3 = const -1_isize
    SourceInfo(url/src/host.rs:207:30-207:32)
  5: FakeRead(ForLet(None), _3)
    SourceInfo(url/src/host.rs:207:9-207:27)
  6: StorageLive(_4)
    SourceInfo(url/src/host.rs:208:9-208:18)
  7: _4 = const -1_isize
    SourceInfo(url/src/host.rs:208:21-208:23)
  8: FakeRead(ForLet(None), _4)
    SourceInfo(url/src/host.rs:208:9-208:18)
  9: StorageLive(_5)
    SourceInfo(url/src/host.rs:220:5-229:6)
  10: StorageLive(_6)
    SourceInfo(url/src/host.rs:220:14-220:18)
  11: StorageLive(_7)
    SourceInfo(url/src/host.rs:220:14-220:18)
  12: _7 = core::ops::Range::<isize> { start: const 0_isize, end: const 8_isize }
    SourceInfo(url/src/host.rs:220:14-220:18)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:220:14-220:18)
      kind: _6 = <core::ops::Range<isize> as core::iter::IntoIterator>::into_iter(move _7) -> [return: bb1, unwind: bb34]
  }
  preds []
  succs [bb1, bb34]

bb1
  0: StorageDead(_7)
    SourceInfo(url/src/host.rs:220:17-220:18)
  1: PlaceMention(_6)
    SourceInfo(url/src/host.rs:220:14-220:18)
  2: StorageLive(_8)
    SourceInfo(url/src/host.rs:220:14-220:18)
  3: _8 = move _6
    SourceInfo(url/src/host.rs:220:14-220:18)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:220:5-229:6)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(url/src/host.rs:220:5-229:6)
      kind: falseUnwind -> [real: bb3, unwind: bb34]
  }
  preds [bb1, bb22]
  succs [bb3, bb34]

bb3
  0: StorageLive(_10)
    SourceInfo(url/src/host.rs:220:14-220:18)
  1: StorageLive(_11)
    SourceInfo(url/src/host.rs:220:14-220:18)
  2: StorageLive(_12)
    SourceInfo(url/src/host.rs:220:14-220:18)
  3: StorageLive(_13)
    SourceInfo(url/src/host.rs:220:14-220:18)
  4: _13 = &mut _8
    SourceInfo(url/src/host.rs:220:14-220:18)
  5: _12 = &mut (*_13)
    SourceInfo(url/src/host.rs:220:14-220:18)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:220:14-220:18)
      kind: _11 = <core::ops::Range<isize> as core::iter::Iterator>::next(move _12) -> [return: bb4, unwind: bb34]
  }
  preds [bb2]
  succs [bb4, bb34]

bb4
  0: StorageDead(_12)
    SourceInfo(url/src/host.rs:220:17-220:18)
  1: PlaceMention(_11)
    SourceInfo(url/src/host.rs:220:14-220:18)
  2: _14 = discriminant(_11)
    SourceInfo(url/src/host.rs:220:14-220:18)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:220:14-220:18)
      kind: switchInt(move _14) -> [0: bb6, 1: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(url/src/host.rs:220:14-220:18)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:220:14-220:18)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(url/src/host.rs:220:5-229:6)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_16)
    SourceInfo(url/src/host.rs:220:9-220:10)
  1: _16 = ((_11 as Some).0: isize)
    SourceInfo(url/src/host.rs:220:9-220:10)
  2: StorageLive(_17)
    SourceInfo(url/src/host.rs:221:12-221:35)
  3: StorageLive(_18)
    SourceInfo(url/src/host.rs:221:12-221:30)
  4: StorageLive(_19)
    SourceInfo(url/src/host.rs:221:19-221:29)
  5: StorageLive(_20)
    SourceInfo(url/src/host.rs:221:19-221:20)
  6: _20 = _16
    SourceInfo(url/src/host.rs:221:19-221:20)
  7: _19 = move _20 as usize (IntToInt)
    SourceInfo(url/src/host.rs:221:19-221:29)
  8: StorageDead(_20)
    SourceInfo(url/src/host.rs:221:28-221:29)
  9: _21 = Len((*_1))
    SourceInfo(url/src/host.rs:221:12-221:30)
  10: _22 = Lt(_19, _21)
    SourceInfo(url/src/host.rs:221:12-221:30)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:221:12-221:30)
      kind: assert(move _22, "index out of bounds: the length is {} but the index is {}", move _21, _19) -> [success: bb9, unwind: bb34]
  }
  preds [bb4, bb6]
  succs [bb9, bb34]

bb8
  0: _5 = const ()
    SourceInfo(url/src/host.rs:220:5-229:6)
  1: StorageDead(_13)
    SourceInfo(url/src/host.rs:229:5-229:6)
  2: StorageDead(_11)
    SourceInfo(url/src/host.rs:229:5-229:6)
  3: StorageDead(_10)
    SourceInfo(url/src/host.rs:229:5-229:6)
  4: StorageDead(_8)
    SourceInfo(url/src/host.rs:229:5-229:6)
  5: StorageDead(_6)
    SourceInfo(url/src/host.rs:229:5-229:6)
  6: StorageDead(_5)
    SourceInfo(url/src/host.rs:229:5-229:6)
  7: StorageLive(_38)
    SourceInfo(url/src/host.rs:211:13-217:14)
  8: StorageLive(_39)
    SourceInfo(url/src/host.rs:211:16-211:26)
  9: StorageLive(_40)
    SourceInfo(url/src/host.rs:211:16-211:21)
  10: _40 = _4
    SourceInfo(url/src/host.rs:211:16-211:21)
  11: _39 = Ge(move _40, const 0_isize)
    SourceInfo(url/src/host.rs:211:16-211:26)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:211:16-211:26)
      kind: switchInt(move _39) -> [0: bb24, otherwise: bb23]
  }
  preds [bb6]
  succs [bb23, bb24]

bb9
  0: _18 = (*_1)[_19]
    SourceInfo(url/src/host.rs:221:12-221:30)
  1: _17 = Eq(move _18, const 0_u16)
    SourceInfo(url/src/host.rs:221:12-221:35)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:221:12-221:35)
      kind: switchInt(move _17) -> [0: bb14, otherwise: bb10]
  }
  preds [bb7]
  succs [bb10, bb14]

bb10
  0: StorageDead(_19)
    SourceInfo(url/src/host.rs:221:34-221:35)
  1: StorageDead(_18)
    SourceInfo(url/src/host.rs:221:34-221:35)
  2: StorageLive(_23)
    SourceInfo(url/src/host.rs:222:16-222:25)
  3: StorageLive(_24)
    SourceInfo(url/src/host.rs:222:16-222:21)
  4: _24 = _4
    SourceInfo(url/src/host.rs:222:16-222:21)
  5: _23 = Lt(move _24, const 0_isize)
    SourceInfo(url/src/host.rs:222:16-222:25)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:222:16-222:25)
      kind: switchInt(move _23) -> [0: bb12, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12]

bb11
  0: StorageDead(_24)
    SourceInfo(url/src/host.rs:222:24-222:25)
  1: StorageLive(_25)
    SourceInfo(url/src/host.rs:223:25-223:26)
  2: _25 = _16
    SourceInfo(url/src/host.rs:223:25-223:26)
  3: _4 = move _25
    SourceInfo(url/src/host.rs:223:17-223:26)
  4: StorageDead(_25)
    SourceInfo(url/src/host.rs:223:25-223:26)
  5: _10 = const ()
    SourceInfo(url/src/host.rs:222:26-224:14)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:222:13-224:14)
      kind: goto -> bb13
  }
  preds [bb10]
  succs [bb13]

bb12
  0: StorageDead(_24)
    SourceInfo(url/src/host.rs:222:24-222:25)
  1: _10 = const ()
    SourceInfo(url/src/host.rs:224:14-224:14)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:222:13-224:14)
      kind: goto -> bb13
  }
  preds [bb10]
  succs [bb13]

bb13
  0: StorageDead(_23)
    SourceInfo(url/src/host.rs:224:13-224:14)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:221:9-228:10)
      kind: goto -> bb22
  }
  preds [bb11, bb12]
  succs [bb22]

bb14
  0: StorageDead(_19)
    SourceInfo(url/src/host.rs:221:34-221:35)
  1: StorageDead(_18)
    SourceInfo(url/src/host.rs:221:34-221:35)
  2: StorageLive(_26)
    SourceInfo(url/src/host.rs:211:13-217:14)
  3: StorageLive(_27)
    SourceInfo(url/src/host.rs:211:16-211:26)
  4: StorageLive(_28)
    SourceInfo(url/src/host.rs:211:16-211:21)
  5: _28 = _4
    SourceInfo(url/src/host.rs:211:16-211:21)
  6: _27 = Ge(move _28, const 0_isize)
    SourceInfo(url/src/host.rs:211:16-211:26)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:211:16-211:26)
      kind: switchInt(move _27) -> [0: bb20, otherwise: bb15]
  }
  preds [bb9]
  succs [bb15, bb20]

bb15
  0: StorageDead(_28)
    SourceInfo(url/src/host.rs:211:25-211:26)
  1: StorageLive(_29)
    SourceInfo(url/src/host.rs:212:21-212:27)
  2: StorageLive(_30)
    SourceInfo(url/src/host.rs:226:30-226:31)
  3: _30 = _16
    SourceInfo(url/src/host.rs:226:30-226:31)
  4: StorageLive(_31)
    SourceInfo(url/src/host.rs:212:37-212:42)
  5: _31 = _4
    SourceInfo(url/src/host.rs:212:37-212:42)
  6: _32 = SubWithOverflow(_30, _31)
    SourceInfo(url/src/host.rs:212:30-212:42)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:212:30-212:42)
      kind: assert(!move (_32.1: bool), "attempt to compute `{} - {}`, which would overflow", move _30, move _31) -> [success: bb16, unwind: bb34]
  }
  preds [bb14]
  succs [bb16, bb34]

bb16
  0: _29 = move (_32.0: isize)
    SourceInfo(url/src/host.rs:212:30-212:42)
  1: StorageDead(_31)
    SourceInfo(url/src/host.rs:212:41-212:42)
  2: StorageDead(_30)
    SourceInfo(url/src/host.rs:212:41-212:42)
  3: FakeRead(ForLet(None), _29)
    SourceInfo(url/src/host.rs:212:21-212:27)
  4: StorageLive(_33)
    SourceInfo(url/src/host.rs:213:20-213:43)
  5: StorageLive(_34)
    SourceInfo(url/src/host.rs:213:20-213:26)
  6: _34 = _29
    SourceInfo(url/src/host.rs:213:20-213:26)
  7: StorageLive(_35)
    SourceInfo(url/src/host.rs:213:29-213:43)
  8: _35 = _3
    SourceInfo(url/src/host.rs:213:29-213:43)
  9: _33 = Gt(move _34, move _35)
    SourceInfo(url/src/host.rs:213:20-213:43)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:213:20-213:43)
      kind: switchInt(move _33) -> [0: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18]

bb17
  0: StorageDead(_35)
    SourceInfo(url/src/host.rs:213:42-213:43)
  1: StorageDead(_34)
    SourceInfo(url/src/host.rs:213:42-213:43)
  2: StorageLive(_36)
    SourceInfo(url/src/host.rs:214:31-214:36)
  3: _36 = _4
    SourceInfo(url/src/host.rs:214:31-214:36)
  4: _2 = move _36
    SourceInfo(url/src/host.rs:214:21-214:36)
  5: StorageDead(_36)
    SourceInfo(url/src/host.rs:214:35-214:36)
  6: StorageLive(_37)
    SourceInfo(url/src/host.rs:215:38-215:44)
  7: _37 = _29
    SourceInfo(url/src/host.rs:215:38-215:44)
  8: _3 = move _37
    SourceInfo(url/src/host.rs:215:21-215:44)
  9: StorageDead(_37)
    SourceInfo(url/src/host.rs:215:43-215:44)
  10: _26 = const ()
    SourceInfo(url/src/host.rs:213:44-216:18)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:213:17-216:18)
      kind: goto -> bb19
  }
  preds [bb16]
  succs [bb19]

bb18
  0: StorageDead(_35)
    SourceInfo(url/src/host.rs:213:42-213:43)
  1: StorageDead(_34)
    SourceInfo(url/src/host.rs:213:42-213:43)
  2: _26 = const ()
    SourceInfo(url/src/host.rs:216:18-216:18)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:213:17-216:18)
      kind: goto -> bb19
  }
  preds [bb16]
  succs [bb19]

bb19
  0: StorageDead(_33)
    SourceInfo(url/src/host.rs:216:17-216:18)
  1: StorageDead(_29)
    SourceInfo(url/src/host.rs:217:13-217:14)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:211:13-217:14)
      kind: goto -> bb21
  }
  preds [bb17, bb18]
  succs [bb21]

bb20
  0: StorageDead(_28)
    SourceInfo(url/src/host.rs:211:25-211:26)
  1: _26 = const ()
    SourceInfo(url/src/host.rs:217:14-217:14)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:211:13-217:14)
      kind: goto -> bb21
  }
  preds [bb14]
  succs [bb21]

bb21
  0: StorageDead(_27)
    SourceInfo(url/src/host.rs:217:13-217:14)
  1: StorageDead(_26)
    SourceInfo(url/src/host.rs:217:13-217:14)
  2: _4 = const -1_isize
    SourceInfo(url/src/host.rs:227:13-227:23)
  3: _10 = const ()
    SourceInfo(url/src/host.rs:225:16-228:10)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:221:9-228:10)
      kind: goto -> bb22
  }
  preds [bb19, bb20]
  succs [bb22]

bb22
  0: StorageDead(_17)
    SourceInfo(url/src/host.rs:228:9-228:10)
  1: StorageDead(_16)
    SourceInfo(url/src/host.rs:229:5-229:6)
  2: StorageDead(_13)
    SourceInfo(url/src/host.rs:229:5-229:6)
  3: StorageDead(_11)
    SourceInfo(url/src/host.rs:229:5-229:6)
  4: StorageDead(_10)
    SourceInfo(url/src/host.rs:229:5-229:6)
  5: _9 = const ()
    SourceInfo(url/src/host.rs:220:5-229:6)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:220:5-229:6)
      kind: goto -> bb2
  }
  preds [bb13, bb21]
  succs [bb2]

bb23
  0: StorageDead(_40)
    SourceInfo(url/src/host.rs:211:25-211:26)
  1: StorageLive(_41)
    SourceInfo(url/src/host.rs:212:21-212:27)
  2: StorageLive(_42)
    SourceInfo(url/src/host.rs:212:37-212:42)
  3: _42 = _4
    SourceInfo(url/src/host.rs:212:37-212:42)
  4: _43 = SubWithOverflow(const 8_isize, _42)
    SourceInfo(url/src/host.rs:212:30-212:42)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:212:30-212:42)
      kind: assert(!move (_43.1: bool), "attempt to compute `{} - {}`, which would overflow", const 8_isize, move _42) -> [success: bb25, unwind: bb34]
  }
  preds [bb8]
  succs [bb25, bb34]

bb24
  0: StorageDead(_40)
    SourceInfo(url/src/host.rs:211:25-211:26)
  1: _38 = const ()
    SourceInfo(url/src/host.rs:217:14-217:14)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:211:13-217:14)
      kind: goto -> bb29
  }
  preds [bb8]
  succs [bb29]

bb25
  0: _41 = move (_43.0: isize)
    SourceInfo(url/src/host.rs:212:30-212:42)
  1: StorageDead(_42)
    SourceInfo(url/src/host.rs:212:41-212:42)
  2: FakeRead(ForLet(None), _41)
    SourceInfo(url/src/host.rs:212:21-212:27)
  3: StorageLive(_44)
    SourceInfo(url/src/host.rs:213:20-213:43)
  4: StorageLive(_45)
    SourceInfo(url/src/host.rs:213:20-213:26)
  5: _45 = _41
    SourceInfo(url/src/host.rs:213:20-213:26)
  6: StorageLive(_46)
    SourceInfo(url/src/host.rs:213:29-213:43)
  7: _46 = _3
    SourceInfo(url/src/host.rs:213:29-213:43)
  8: _44 = Gt(move _45, move _46)
    SourceInfo(url/src/host.rs:213:20-213:43)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:213:20-213:43)
      kind: switchInt(move _44) -> [0: bb27, otherwise: bb26]
  }
  preds [bb23]
  succs [bb26, bb27]

bb26
  0: StorageDead(_46)
    SourceInfo(url/src/host.rs:213:42-213:43)
  1: StorageDead(_45)
    SourceInfo(url/src/host.rs:213:42-213:43)
  2: StorageLive(_47)
    SourceInfo(url/src/host.rs:214:31-214:36)
  3: _47 = _4
    SourceInfo(url/src/host.rs:214:31-214:36)
  4: _2 = move _47
    SourceInfo(url/src/host.rs:214:21-214:36)
  5: StorageDead(_47)
    SourceInfo(url/src/host.rs:214:35-214:36)
  6: StorageLive(_48)
    SourceInfo(url/src/host.rs:215:38-215:44)
  7: _48 = _41
    SourceInfo(url/src/host.rs:215:38-215:44)
  8: _3 = move _48
    SourceInfo(url/src/host.rs:215:21-215:44)
  9: StorageDead(_48)
    SourceInfo(url/src/host.rs:215:43-215:44)
  10: _38 = const ()
    SourceInfo(url/src/host.rs:213:44-216:18)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:213:17-216:18)
      kind: goto -> bb28
  }
  preds [bb25]
  succs [bb28]

bb27
  0: StorageDead(_46)
    SourceInfo(url/src/host.rs:213:42-213:43)
  1: StorageDead(_45)
    SourceInfo(url/src/host.rs:213:42-213:43)
  2: _38 = const ()
    SourceInfo(url/src/host.rs:216:18-216:18)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:213:17-216:18)
      kind: goto -> bb28
  }
  preds [bb25]
  succs [bb28]

bb28
  0: StorageDead(_44)
    SourceInfo(url/src/host.rs:216:17-216:18)
  1: StorageDead(_41)
    SourceInfo(url/src/host.rs:217:13-217:14)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:211:13-217:14)
      kind: goto -> bb29
  }
  preds [bb26, bb27]
  succs [bb29]

bb29
  0: StorageDead(_39)
    SourceInfo(url/src/host.rs:217:13-217:14)
  1: StorageDead(_38)
    SourceInfo(url/src/host.rs:217:13-217:14)
  2: StorageLive(_49)
    SourceInfo(url/src/host.rs:233:8-233:26)
  3: StorageLive(_50)
    SourceInfo(url/src/host.rs:233:8-233:22)
  4: _50 = _3
    SourceInfo(url/src/host.rs:233:8-233:22)
  5: _49 = Lt(move _50, const 2_isize)
    SourceInfo(url/src/host.rs:233:8-233:26)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:233:8-233:26)
      kind: switchInt(move _49) -> [0: bb31, otherwise: bb30]
  }
  preds [bb24, bb28]
  succs [bb30, bb31]

bb30
  0: StorageDead(_50)
    SourceInfo(url/src/host.rs:233:25-233:26)
  1: _0 = (const -1_isize, const -2_isize)
    SourceInfo(url/src/host.rs:234:9-234:17)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:233:5-237:6)
      kind: goto -> bb33
  }
  preds [bb29]
  succs [bb33]

bb31
  0: StorageDead(_50)
    SourceInfo(url/src/host.rs:233:25-233:26)
  1: StorageLive(_51)
    SourceInfo(url/src/host.rs:236:10-236:17)
  2: _51 = _2
    SourceInfo(url/src/host.rs:236:10-236:17)
  3: StorageLive(_52)
    SourceInfo(url/src/host.rs:236:19-236:43)
  4: StorageLive(_53)
    SourceInfo(url/src/host.rs:236:19-236:26)
  5: _53 = _2
    SourceInfo(url/src/host.rs:236:19-236:26)
  6: StorageLive(_54)
    SourceInfo(url/src/host.rs:236:29-236:43)
  7: _54 = _3
    SourceInfo(url/src/host.rs:236:29-236:43)
  8: _55 = AddWithOverflow(_53, _54)
    SourceInfo(url/src/host.rs:236:19-236:43)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:236:19-236:43)
      kind: assert(!move (_55.1: bool), "attempt to compute `{} + {}`, which would overflow", move _53, move _54) -> [success: bb32, unwind: bb34]
  }
  preds [bb29]
  succs [bb32, bb34]

bb32
  0: _52 = move (_55.0: isize)
    SourceInfo(url/src/host.rs:236:19-236:43)
  1: StorageDead(_54)
    SourceInfo(url/src/host.rs:236:42-236:43)
  2: StorageDead(_53)
    SourceInfo(url/src/host.rs:236:42-236:43)
  3: _0 = (move _51, move _52)
    SourceInfo(url/src/host.rs:236:9-236:44)
  4: StorageDead(_52)
    SourceInfo(url/src/host.rs:236:43-236:44)
  5: StorageDead(_51)
    SourceInfo(url/src/host.rs:236:43-236:44)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:233:5-237:6)
      kind: goto -> bb33
  }
  preds [bb31]
  succs [bb33]

bb33
  0: StorageDead(_49)
    SourceInfo(url/src/host.rs:237:5-237:6)
  1: StorageDead(_4)
    SourceInfo(url/src/host.rs:238:1-238:2)
  2: StorageDead(_3)
    SourceInfo(url/src/host.rs:238:1-238:2)
  3: StorageDead(_2)
    SourceInfo(url/src/host.rs:238:1-238:2)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:238:2-238:2)
      kind: return
  }
  preds [bb30, bb32]
  succs []

bb34
  Terminator {
      source_info: SourceInfo(url/src/host.rs:205:1-238:2)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb7, bb15, bb23, bb31]
  succs []

