bb0
  0: StorageLive(_2)
    SourceInfo(url/src/host.rs:242:9-242:18)
  1: StorageLive(_3)
    SourceInfo(url/src/host.rs:242:21-242:26)
  2: _3 = &(*_1)
    SourceInfo(url/src/host.rs:242:21-242:26)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:242:21-242:38)
      kind: _2 = core::str::<impl str>::rsplit::<'_, char>(move _3, const '.') -> [return: bb1, unwind: bb25]
  }
  preds []
  succs [bb1, bb25]

bb1
  0: StorageDead(_3)
    SourceInfo(url/src/host.rs:242:37-242:38)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(url/src/host.rs:242:9-242:18)
  2: StorageLive(_4)
    SourceInfo(url/src/host.rs:243:9-243:13)
  3: StorageLive(_5)
    SourceInfo(url/src/host.rs:243:16-243:28)
  4: StorageLive(_6)
    SourceInfo(url/src/host.rs:243:16-243:21)
  5: _6 = &mut _2
    SourceInfo(url/src/host.rs:243:16-243:21)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:243:16-243:28)
      kind: _5 = <core::str::RSplit<'_, char> as core::iter::Iterator>::next(move _6) -> [return: bb2, unwind: bb25]
  }
  preds [bb0]
  succs [bb2, bb25]

bb2
  0: StorageDead(_6)
    SourceInfo(url/src/host.rs:243:27-243:28)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:243:16-243:37)
      kind: _4 = core::option::Option::<&str>::unwrap(move _5) -> [return: bb3, unwind: bb25]
  }
  preds [bb1]
  succs [bb3, bb25]

bb3
  0: StorageDead(_5)
    SourceInfo(url/src/host.rs:243:36-243:37)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(url/src/host.rs:243:9-243:13)
  2: StorageLive(_7)
    SourceInfo(url/src/host.rs:244:9-244:13)
  3: StorageLive(_8)
    SourceInfo(url/src/host.rs:244:19-244:34)
  4: StorageLive(_9)
    SourceInfo(url/src/host.rs:244:19-244:23)
  5: _9 = &(*_4)
    SourceInfo(url/src/host.rs:244:19-244:23)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:244:19-244:34)
      kind: _8 = core::str::<impl str>::is_empty(move _9) -> [return: bb4, unwind: bb25]
  }
  preds [bb2]
  succs [bb4, bb25]

bb4
  Terminator {
      source_info: SourceInfo(url/src/host.rs:244:19-244:34)
      kind: switchInt(move _8) -> [0: bb10, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb10]

bb5
  0: StorageDead(_9)
    SourceInfo(url/src/host.rs:244:33-244:34)
  1: StorageLive(_10)
    SourceInfo(url/src/host.rs:245:29-245:41)
  2: StorageLive(_11)
    SourceInfo(url/src/host.rs:245:29-245:34)
  3: _11 = &mut _2
    SourceInfo(url/src/host.rs:245:29-245:34)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:245:29-245:41)
      kind: _10 = <core::str::RSplit<'_, char> as core::iter::Iterator>::next(move _11) -> [return: bb6, unwind: bb25]
  }
  preds [bb4]
  succs [bb6, bb25]

bb6
  0: StorageDead(_11)
    SourceInfo(url/src/host.rs:245:40-245:41)
  1: PlaceMention(_10)
    SourceInfo(url/src/host.rs:245:29-245:41)
  2: _12 = discriminant(_10)
    SourceInfo(url/src/host.rs:245:29-245:41)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:245:16-245:26)
      kind: switchInt(move _12) -> [1: bb7, otherwise: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  Terminator {
      source_info: SourceInfo(url/src/host.rs:245:16-245:26)
      kind: falseEdge -> [real: bb8, imaginary: bb9]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: StorageLive(_13)
    SourceInfo(url/src/host.rs:245:21-245:25)
  1: _13 = ((_10 as Some).0: &str)
    SourceInfo(url/src/host.rs:245:21-245:25)
  2: _7 = _13
    SourceInfo(url/src/host.rs:246:13-246:17)
  3: StorageDead(_13)
    SourceInfo(url/src/host.rs:247:9-247:10)
  4: StorageDead(_10)
    SourceInfo(url/src/host.rs:250:5-250:6)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:244:16-252:6)
      kind: goto -> bb11
  }
  preds [bb7]
  succs [bb11]

bb9
  0: _0 = const false
    SourceInfo(url/src/host.rs:248:20-248:25)
  1: StorageDead(_10)
    SourceInfo(url/src/host.rs:250:5-250:6)
  2: StorageDead(_8)
    SourceInfo(url/src/host.rs:252:5-252:6)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb6, bb7]
  succs [bb23]

bb10
  0: StorageDead(_9)
    SourceInfo(url/src/host.rs:244:33-244:34)
  1: StorageLive(_15)
    SourceInfo(url/src/host.rs:251:9-251:13)
  2: _15 = _4
    SourceInfo(url/src/host.rs:251:9-251:13)
  3: _7 = &(*_15)
    SourceInfo(url/src/host.rs:251:9-251:13)
  4: StorageDead(_15)
    SourceInfo(url/src/host.rs:252:5-252:6)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:244:16-252:6)
      kind: goto -> bb11
  }
  preds [bb4]
  succs [bb11]

bb11
  0: StorageDead(_8)
    SourceInfo(url/src/host.rs:252:5-252:6)
  1: FakeRead(ForLet(None), _7)
    SourceInfo(url/src/host.rs:244:9-244:13)
  2: StorageLive(_16)
    SourceInfo(url/src/host.rs:253:5-255:6)
  3: StorageLive(_17)
    SourceInfo(url/src/host.rs:253:9-253:24)
  4: StorageLive(_18)
    SourceInfo(url/src/host.rs:253:9-253:13)
  5: _18 = &(*_7)
    SourceInfo(url/src/host.rs:253:9-253:13)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:253:9-253:24)
      kind: _17 = core::str::<impl str>::is_empty(move _18) -> [return: bb12, unwind: bb25]
  }
  preds [bb8, bb10]
  succs [bb12, bb25]

bb12
  Terminator {
      source_info: SourceInfo(url/src/host.rs:253:9-253:24)
      kind: switchInt(move _17) -> [0: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14]

bb13
  0: StorageDead(_18)
    SourceInfo(url/src/host.rs:253:23-253:24)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:253:79-255:6)
      kind: goto -> bb20
  }
  preds [bb12]
  succs [bb20]

bb14
  0: StorageDead(_18)
    SourceInfo(url/src/host.rs:253:23-253:24)
  1: StorageLive(_19)
    SourceInfo(url/src/host.rs:253:28-253:78)
  2: StorageLive(_20)
    SourceInfo(url/src/host.rs:253:28-253:50)
  3: StorageLive(_21)
    SourceInfo(url/src/host.rs:253:28-253:50)
  4: StorageLive(_22)
    SourceInfo(url/src/host.rs:253:28-253:43)
  5: StorageLive(_23)
    SourceInfo(url/src/host.rs:253:28-253:43)
  6: StorageLive(_24)
    SourceInfo(url/src/host.rs:253:28-253:32)
  7: _24 = &(*_7)
    SourceInfo(url/src/host.rs:253:28-253:32)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:253:28-253:43)
      kind: _23 = core::str::<impl str>::as_bytes(move _24) -> [return: bb15, unwind: bb25]
  }
  preds [bb12]
  succs [bb15, bb25]

bb15
  0: _22 = &(*_23)
    SourceInfo(url/src/host.rs:253:28-253:43)
  1: StorageDead(_24)
    SourceInfo(url/src/host.rs:253:42-253:43)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:253:28-253:50)
      kind: _21 = core::slice::<impl [u8]>::iter(move _22) -> [return: bb16, unwind: bb25]
  }
  preds [bb14]
  succs [bb16, bb25]

bb16
  0: _20 = &mut _21
    SourceInfo(url/src/host.rs:253:28-253:50)
  1: StorageDead(_22)
    SourceInfo(url/src/host.rs:253:49-253:50)
  2: StorageLive(_25)
    SourceInfo(url/src/host.rs:253:55-253:77)
  3: _25 = {closure@url/src/host.rs:253:55: 253:58}
    SourceInfo(url/src/host.rs:253:55-253:77)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:253:28-253:78)
      kind: _19 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::all::<{closure@url/src/host.rs:253:55: 253:58}>(move _20, move _25) -> [return: bb17, unwind: bb25]
  }
  preds [bb15]
  succs [bb17, bb25]

bb17
  Terminator {
      source_info: SourceInfo(url/src/host.rs:253:28-253:78)
      kind: switchInt(move _19) -> [0: bb19, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19]

bb18
  0: StorageDead(_25)
    SourceInfo(url/src/host.rs:253:77-253:78)
  1: StorageDead(_23)
    SourceInfo(url/src/host.rs:253:77-253:78)
  2: StorageDead(_21)
    SourceInfo(url/src/host.rs:253:77-253:78)
  3: StorageDead(_20)
    SourceInfo(url/src/host.rs:253:77-253:78)
  4: _0 = const true
    SourceInfo(url/src/host.rs:254:16-254:20)
  5: StorageDead(_19)
    SourceInfo(url/src/host.rs:255:5-255:6)
  6: StorageDead(_17)
    SourceInfo(url/src/host.rs:255:5-255:6)
  7: StorageDead(_16)
    SourceInfo(url/src/host.rs:255:5-255:6)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb17]
  succs [bb23]

bb19
  0: StorageDead(_25)
    SourceInfo(url/src/host.rs:253:77-253:78)
  1: StorageDead(_23)
    SourceInfo(url/src/host.rs:253:77-253:78)
  2: StorageDead(_21)
    SourceInfo(url/src/host.rs:253:77-253:78)
  3: StorageDead(_20)
    SourceInfo(url/src/host.rs:253:77-253:78)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb17]
  succs [bb20]

bb20
  0: _16 = const ()
    SourceInfo(url/src/host.rs:255:6-255:6)
  1: StorageDead(_19)
    SourceInfo(url/src/host.rs:255:5-255:6)
  2: StorageDead(_17)
    SourceInfo(url/src/host.rs:255:5-255:6)
  3: StorageDead(_16)
    SourceInfo(url/src/host.rs:255:5-255:6)
  4: StorageLive(_27)
    SourceInfo(url/src/host.rs:257:5-257:27)
  5: StorageLive(_28)
    SourceInfo(url/src/host.rs:257:5-257:27)
  6: StorageLive(_29)
    SourceInfo(url/src/host.rs:257:22-257:26)
  7: _29 = &(*_7)
    SourceInfo(url/src/host.rs:257:22-257:26)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:257:5-257:27)
      kind: _28 = host::parse_ipv4number(move _29) -> [return: bb21, unwind: bb25]
  }
  preds [bb13, bb19]
  succs [bb21, bb25]

bb21
  0: _27 = &_28
    SourceInfo(url/src/host.rs:257:5-257:27)
  1: StorageDead(_29)
    SourceInfo(url/src/host.rs:257:26-257:27)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:257:5-257:35)
      kind: _0 = core::result::Result::<core::option::Option<u32>, ()>::is_ok(move _27) -> [return: bb22, unwind: bb25]
  }
  preds [bb20]
  succs [bb22, bb25]

bb22
  0: StorageDead(_27)
    SourceInfo(url/src/host.rs:257:34-257:35)
  1: StorageDead(_7)
    SourceInfo(url/src/host.rs:258:1-258:2)
  2: StorageDead(_4)
    SourceInfo(url/src/host.rs:258:1-258:2)
  3: StorageDead(_2)
    SourceInfo(url/src/host.rs:258:1-258:2)
  4: StorageDead(_28)
    SourceInfo(url/src/host.rs:258:1-258:2)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:258:2-258:2)
      kind: goto -> bb24
  }
  preds [bb21]
  succs [bb24]

bb23
  0: StorageDead(_7)
    SourceInfo(url/src/host.rs:258:1-258:2)
  1: StorageDead(_4)
    SourceInfo(url/src/host.rs:258:1-258:2)
  2: StorageDead(_2)
    SourceInfo(url/src/host.rs:258:1-258:2)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:258:2-258:2)
      kind: goto -> bb24
  }
  preds [bb9, bb18]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(url/src/host.rs:258:2-258:2)
      kind: return
  }
  preds [bb22, bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(url/src/host.rs:241:1-258:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb11, bb14, bb15, bb16, bb20, bb21]
  succs []

