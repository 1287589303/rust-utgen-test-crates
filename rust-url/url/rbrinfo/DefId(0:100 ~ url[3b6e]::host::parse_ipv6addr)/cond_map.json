{
  "url/src/host.rs:454:8:454:15": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "i < len",
          "lhs": "i",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:420:35:420:43": [
    {
      "Match": {
        "match_source": "url/src/host.rs:420:35:420:43",
        "match_str": "input[i]",
        "match_kind": "Other",
        "arms": {
          "url/src/host.rs:421:21:421:36": {
            "pat": {
              "pat_str": "c @ b'0'..=b'9'",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/host.rs:421:40:421:48"
          },
          "url/src/host.rs:422:21:422:22": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "url/src/host.rs:422:26:422:31"
          }
        }
      }
    }
  ],
  "url/src/host.rs:469:16:469:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "piece_pointer != 8",
          "lhs": "piece_pointer",
          "rhs": "8",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:338:8:338:15": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "len < 2",
          "lhs": "len",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:462:19:462:28": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "swaps > 0",
          "lhs": "swaps",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:438:17:438:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "pieces[piece_pointer] * 0x100",
          "lhs": "pieces[piece_pointer]",
          "rhs": "0x100",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:411:52:411:68": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "input[i] == b'.'",
          "lhs": "input[i]",
          "rhs": "b'.'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:421:40:421:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "c - b'0'",
          "lhs": "c",
          "rhs": "b'0'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:405:12:405:29": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "piece_pointer > 6",
          "lhs": "piece_pointer",
          "rhs": "6",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:444:16:444:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "numbers_seen == 2",
          "lhs": "numbers_seen",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:377:19:377:27": [
    {
      "Match": {
        "match_source": "url/src/host.rs:377:19:377:27",
        "match_str": "input[i]",
        "match_kind": "Other",
        "arms": {
          "url/src/host.rs:378:17:378:21": {
            "pat": {
              "pat_str": "b'.'",
              "kind": {
                "Other": 46
              }
            },
            "guard": null,
            "body_source": "url/src/host.rs:378:25:387:18"
          },
          "url/src/host.rs:394:17:394:18": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "url/src/host.rs:394:22:394:64"
          },
          "url/src/host.rs:388:17:388:21": {
            "pat": {
              "pat_str": "b':'",
              "kind": {
                "Other": 58
              }
            },
            "guard": null,
            "body_source": "url/src/host.rs:388:25:393:18"
          }
        }
      }
    }
  ],
  "url/src/host.rs:463:44:463:72": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "compress_pointer + swaps - 1",
          "lhs": "compress_pointer + swaps",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:352:12:352:30": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "piece_pointer == 8",
          "lhs": "piece_pointer",
          "rhs": "8",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:409:15:409:22": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "i < len",
          "lhs": "i",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:410:16:410:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "numbers_seen > 0",
          "lhs": "numbers_seen",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:458:11:458:27": [
    {
      "Match": {
        "match_source": "url/src/host.rs:458:11:458:27",
        "match_str": "compress_pointer",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "url/src/host.rs:459:9:459:31": {
            "pat": {
              "pat_str": "Some(compress_pointer)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/host.rs:459:35:467:10"
          },
          "url/src/host.rs:468:9:468:10": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "url/src/host.rs:468:14:472:10"
          }
        }
      }
    }
  ],
  "url/src/host.rs:411:20:411:36": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "numbers_seen < 4",
          "lhs": "numbers_seen",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:460:29:460:61": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "piece_pointer - compress_pointer",
          "lhs": "piece_pointer",
          "rhs": "compress_pointer",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:390:24:390:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "i == len",
          "lhs": "i",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:397:12:397:20": [
    {
      "Bool": {
        "Other": "is_ip_v4"
      }
    }
  ],
  "url/src/host.rs:383:24:383:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "piece_pointer > 6",
          "lhs": "piece_pointer",
          "rhs": "6",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:404:8:404:16": [
    {
      "Bool": {
        "Other": "is_ip_v4"
      }
    }
  ],
  "url/src/host.rs:368:19:368:50": [
    {
      "Match": {
        "match_source": "url/src/host.rs:368:19:368:50",
        "match_str": "(input[i] as char).to_digit(16)",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "url/src/host.rs:369:17:369:28": {
            "pat": {
              "pat_str": "Some(digit)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/host.rs:369:32:372:18"
          },
          "url/src/host.rs:373:17:373:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "url/src/host.rs:373:25:373:30"
          }
        }
      }
    }
  ],
  "url/src/host.rs:365:33:365:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "start + 4",
          "lhs": "start",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:342:8:342:24": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "input[0] == b':'",
          "lhs": "input[0]",
          "rhs": "b':'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:379:24:379:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "i == start",
          "lhs": "i",
          "rhs": "start",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:376:12:376:19": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "i < len",
          "lhs": "i",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:438:17:438:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "pieces[piece_pointer] * 0x100 + v",
          "lhs": "pieces[piece_pointer] * 0x100",
          "rhs": "v",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:428:30:428:52": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "*v * 10 + digit as u16",
          "lhs": "*v * 10",
          "rhs": "digit as u16",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:367:15:367:22": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "i < end",
          "lhs": "i",
          "rhs": "end",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:355:12:355:28": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "input[i] == b':'",
          "lhs": "input[i]",
          "rhs": "b':'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:411:41:411:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "i < len",
          "lhs": "i",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:370:29:370:56": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "value * 0x10 + digit as u16",
          "lhs": "value * 0x10",
          "rhs": "digit as u16",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:444:37:444:54": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "numbers_seen == 4",
          "lhs": "numbers_seen",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:437:40:437:64": [
    {
      "Bool": {
        "Other": "let Some(v) = ipv4_piece"
      }
    }
  ],
  "url/src/host.rs:343:12:343:28": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "input[1] != b':'",
          "lhs": "input[1]",
          "rhs": "b':'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:463:44:463:68": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "compress_pointer + swaps",
          "lhs": "compress_pointer",
          "rhs": "swaps",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:449:12:449:29": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "numbers_seen != 4",
          "lhs": "numbers_seen",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:419:19:419:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "i < len",
          "lhs": "i",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:429:28:429:36": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "*v > 255",
          "lhs": "*v",
          "rhs": "255",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:424:23:424:33": [
    {
      "Match": {
        "match_source": "url/src/host.rs:424:23:424:33",
        "match_str": "ipv4_piece",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "url/src/host.rs:427:21:427:36": {
            "pat": {
              "pat_str": "Some(ref mut v)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/host.rs:427:40:432:22"
          },
          "url/src/host.rs:425:21:425:25": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "url/src/host.rs:425:29:425:60"
          },
          "url/src/host.rs:426:21:426:28": {
            "pat": {
              "pat_str": "Some(0)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/host.rs:426:32:426:74"
          }
        }
      }
    }
  ],
  "url/src/host.rs:351:11:351:18": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "i < len",
          "lhs": "i",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:356:16:356:42": [
    {
      "Bool": {
        "Other": "compress_pointer.is_some()"
      }
    }
  ],
  "url/src/host.rs:370:29:370:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "value * 0x10",
          "lhs": "value",
          "rhs": "0x10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:428:30:428:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "*v * 10",
          "lhs": "*v",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ]
}