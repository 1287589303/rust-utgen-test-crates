{
  "url/src/parser.rs:1624:37:1624:60": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:1624:37:1624:60",
        "match_str": "base_url.fragment_start",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "url/src/parser.rs:1626:13:1626:17": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1626:21:1626:45"
          },
          "url/src/parser.rs:1625:13:1625:20": {
            "pat": {
              "pat_str": "Some(i)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1625:24:1625:43"
          }
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "url/src/parser.rs:1630:22:1630:72": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "before_fragment.len() + input.chars.as_str().len()",
          "lhs": "before_fragment.len()",
          "rhs": "input.chars.as_str().len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:1634:23:1634:40": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "next == Some('#')",
          "lhs": "next",
          "rhs": "Some('#')",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:1628:23:1628:52": [
    {
      "Bool": {
        "Other": "self.serialization.is_empty()"
      }
    }
  ],
  "url/src/parser.rs:1638:34:1638:64": [
    {
      "Try": "to_u32(before_fragment.len())?"
    }
  ]
}