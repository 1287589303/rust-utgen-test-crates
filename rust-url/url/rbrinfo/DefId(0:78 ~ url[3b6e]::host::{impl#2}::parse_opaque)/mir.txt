bb0
  0: StorageLive(_2)
    SourceInfo(url/src/host.rs:107:9-112:10)
  1: StorageLive(_3)
    SourceInfo(url/src/host.rs:107:12-107:34)
  2: StorageLive(_4)
    SourceInfo(url/src/host.rs:107:12-107:17)
  3: _4 = &(*_1)
    SourceInfo(url/src/host.rs:107:12-107:17)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:107:12-107:34)
      kind: _3 = core::str::<impl str>::starts_with::<'_, char>(move _4, const '[') -> [return: bb1, unwind: bb24]
  }
  preds []
  succs [bb1, bb24]

bb1
  Terminator {
      source_info: SourceInfo(url/src/host.rs:107:12-107:34)
      kind: switchInt(move _3) -> [0: bb11, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb11]

bb2
  0: StorageDead(_4)
    SourceInfo(url/src/host.rs:107:33-107:34)
  1: StorageLive(_6)
    SourceInfo(url/src/host.rs:108:13-110:14)
  2: StorageLive(_7)
    SourceInfo(url/src/host.rs:108:17-108:37)
  3: StorageLive(_8)
    SourceInfo(url/src/host.rs:108:17-108:22)
  4: _8 = &(*_1)
    SourceInfo(url/src/host.rs:108:17-108:22)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:108:17-108:37)
      kind: _7 = core::str::<impl str>::ends_with::<'_, char>(move _8, const ']') -> [return: bb3, unwind: bb24]
  }
  preds [bb1]
  succs [bb3, bb24]

bb3
  Terminator {
      source_info: SourceInfo(url/src/host.rs:108:17-108:37)
      kind: switchInt(move _7) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_8)
    SourceInfo(url/src/host.rs:108:36-108:37)
  1: _6 = const ()
    SourceInfo(url/src/host.rs:110:14-110:14)
  2: StorageDead(_7)
    SourceInfo(url/src/host.rs:110:13-110:14)
  3: StorageDead(_6)
    SourceInfo(url/src/host.rs:110:13-110:14)
  4: StorageLive(_11)
    SourceInfo(url/src/host.rs:111:20-111:62)
  5: StorageLive(_12)
    SourceInfo(url/src/host.rs:111:35-111:61)
  6: StorageLive(_13)
    SourceInfo(url/src/host.rs:111:35-111:61)
  7: StorageLive(_14)
    SourceInfo(url/src/host.rs:111:41-111:61)
  8: StorageLive(_15)
    SourceInfo(url/src/host.rs:111:36-111:41)
  9: _15 = &(*_1)
    SourceInfo(url/src/host.rs:111:36-111:41)
  10: StorageLive(_16)
    SourceInfo(url/src/host.rs:111:42-111:60)
  11: StorageLive(_17)
    SourceInfo(url/src/host.rs:111:45-111:60)
  12: StorageLive(_18)
    SourceInfo(url/src/host.rs:111:45-111:56)
  13: StorageLive(_19)
    SourceInfo(url/src/host.rs:111:45-111:50)
  14: _19 = &(*_1)
    SourceInfo(url/src/host.rs:111:45-111:50)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:111:45-111:56)
      kind: _18 = core::str::<impl str>::len(move _19) -> [return: bb6, unwind: bb24]
  }
  preds [bb3]
  succs [bb6, bb24]

bb5
  0: StorageDead(_8)
    SourceInfo(url/src/host.rs:108:36-108:37)
  1: StorageLive(_10)
    SourceInfo(url/src/host.rs:109:28-109:58)
  2: _10 = parser::ParseError::InvalidIpv6Address
    SourceInfo(url/src/host.rs:109:28-109:58)
  3: _0 = core::result::Result::<host::Host, parser::ParseError>::Err(move _10)
    SourceInfo(url/src/host.rs:109:24-109:59)
  4: StorageDead(_10)
    SourceInfo(url/src/host.rs:109:58-109:59)
  5: StorageDead(_7)
    SourceInfo(url/src/host.rs:110:13-110:14)
  6: StorageDead(_6)
    SourceInfo(url/src/host.rs:110:13-110:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb21
  }
  preds [bb3]
  succs [bb21]

bb6
  0: StorageDead(_19)
    SourceInfo(url/src/host.rs:111:55-111:56)
  1: _20 = SubWithOverflow(_18, const 1_usize)
    SourceInfo(url/src/host.rs:111:45-111:60)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:111:45-111:60)
      kind: assert(!move (_20.1: bool), "attempt to compute `{} - {}`, which would overflow", move _18, const 1_usize) -> [success: bb7, unwind: bb24]
  }
  preds [bb4]
  succs [bb7, bb24]

bb7
  0: _17 = move (_20.0: usize)
    SourceInfo(url/src/host.rs:111:45-111:60)
  1: StorageDead(_18)
    SourceInfo(url/src/host.rs:111:59-111:60)
  2: _16 = core::ops::Range::<usize> { start: const 1_usize, end: move _17 }
    SourceInfo(url/src/host.rs:111:42-111:60)
  3: StorageDead(_17)
    SourceInfo(url/src/host.rs:111:59-111:60)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:111:41-111:61)
      kind: _14 = <str as core::ops::Index<core::ops::Range<usize>>>::index(move _15, move _16) -> [return: bb8, unwind: bb24]
  }
  preds [bb6]
  succs [bb8, bb24]

bb8
  0: StorageDead(_16)
    SourceInfo(url/src/host.rs:111:60-111:61)
  1: StorageDead(_15)
    SourceInfo(url/src/host.rs:111:60-111:61)
  2: _13 = &(*_14)
    SourceInfo(url/src/host.rs:111:35-111:61)
  3: _12 = &(*_13)
    SourceInfo(url/src/host.rs:111:35-111:61)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:111:20-111:62)
      kind: _11 = host::parse_ipv6addr(move _12) -> [return: bb9, unwind: bb24]
  }
  preds [bb7]
  succs [bb9, bb24]

bb9
  0: StorageDead(_12)
    SourceInfo(url/src/host.rs:111:61-111:62)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:111:20-111:78)
      kind: _0 = core::result::Result::<core::net::Ipv6Addr, parser::ParseError>::map::<host::Host, fn(core::net::Ipv6Addr) -> host::Host {host::Host::Ipv6}>(move _11, host::Host::Ipv6) -> [return: bb10, unwind: bb24]
  }
  preds [bb8]
  succs [bb10, bb24]

bb10
  0: StorageDead(_11)
    SourceInfo(url/src/host.rs:111:77-111:78)
  1: StorageDead(_14)
    SourceInfo(url/src/host.rs:111:78-111:79)
  2: StorageDead(_13)
    SourceInfo(url/src/host.rs:111:78-111:79)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb21
  }
  preds [bb9]
  succs [bb21]

bb11
  0: StorageDead(_4)
    SourceInfo(url/src/host.rs:107:33-107:34)
  1: _2 = const ()
    SourceInfo(url/src/host.rs:112:10-112:10)
  2: StorageDead(_3)
    SourceInfo(url/src/host.rs:112:9-112:10)
  3: StorageDead(_2)
    SourceInfo(url/src/host.rs:112:9-112:10)
  4: StorageLive(_21)
    SourceInfo(url/src/host.rs:114:13-114:33)
  5: _21 = {closure@url/src/host.rs:114:36: 114:39}
    SourceInfo(url/src/host.rs:114:36-134:10)
  6: FakeRead(ForLet(None), _21)
    SourceInfo(url/src/host.rs:114:13-114:33)
  7: StorageLive(_22)
    SourceInfo(url/src/host.rs:136:12-136:54)
  8: StorageLive(_23)
    SourceInfo(url/src/host.rs:136:12-136:44)
  9: StorageLive(_24)
    SourceInfo(url/src/host.rs:136:12-136:44)
  10: StorageLive(_25)
    SourceInfo(url/src/host.rs:136:12-136:17)
  11: _25 = &(*_1)
    SourceInfo(url/src/host.rs:136:12-136:17)
  12: StorageLive(_26)
    SourceInfo(url/src/host.rs:136:23-136:43)
  13: _26 = _21
    SourceInfo(url/src/host.rs:136:23-136:43)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:136:12-136:44)
      kind: _24 = core::str::<impl str>::find::<'_, {closure@url/src/host.rs:114:36: 114:39}>(move _25, move _26) -> [return: bb12, unwind: bb24]
  }
  preds [bb1]
  succs [bb12, bb24]

bb12
  0: _23 = &_24
    SourceInfo(url/src/host.rs:136:12-136:44)
  1: StorageDead(_26)
    SourceInfo(url/src/host.rs:136:43-136:44)
  2: StorageDead(_25)
    SourceInfo(url/src/host.rs:136:43-136:44)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:136:12-136:54)
      kind: _22 = core::option::Option::<usize>::is_some(move _23) -> [return: bb13, unwind: bb24]
  }
  preds [bb11]
  succs [bb13, bb24]

bb13
  Terminator {
      source_info: SourceInfo(url/src/host.rs:136:12-136:54)
      kind: switchInt(move _22) -> [0: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15]

bb14
  0: StorageDead(_24)
    SourceInfo(url/src/host.rs:136:53-136:54)
  1: StorageDead(_23)
    SourceInfo(url/src/host.rs:136:53-136:54)
  2: StorageLive(_27)
    SourceInfo(url/src/host.rs:137:17-137:51)
  3: _27 = parser::ParseError::InvalidDomainCharacter
    SourceInfo(url/src/host.rs:137:17-137:51)
  4: _0 = core::result::Result::<host::Host, parser::ParseError>::Err(move _27)
    SourceInfo(url/src/host.rs:137:13-137:52)
  5: StorageDead(_27)
    SourceInfo(url/src/host.rs:137:51-137:52)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:136:9-142:10)
      kind: goto -> bb20
  }
  preds [bb13]
  succs [bb20]

bb15
  0: StorageDead(_24)
    SourceInfo(url/src/host.rs:136:53-136:54)
  1: StorageDead(_23)
    SourceInfo(url/src/host.rs:136:53-136:54)
  2: StorageLive(_28)
    SourceInfo(url/src/host.rs:139:16-141:14)
  3: StorageLive(_29)
    SourceInfo(url/src/host.rs:140:17-140:65)
  4: StorageLive(_30)
    SourceInfo(url/src/host.rs:140:17-140:53)
  5: StorageLive(_31)
    SourceInfo(url/src/host.rs:140:17-140:53)
  6: StorageLive(_32)
    SourceInfo(url/src/host.rs:140:37-140:42)
  7: _32 = &(*_1)
    SourceInfo(url/src/host.rs:140:37-140:42)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:140:17-140:53)
      kind: _31 = percent_encoding::utf8_percent_encode(move _32, const percent_encoding::CONTROLS) -> [return: bb16, unwind: bb24]
  }
  preds [bb13]
  succs [bb16, bb24]

bb16
  0: _30 = &_31
    SourceInfo(url/src/host.rs:140:17-140:53)
  1: StorageDead(_32)
    SourceInfo(url/src/host.rs:140:52-140:53)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:140:17-140:65)
      kind: _29 = <percent_encoding::PercentEncode<'_> as std::string::ToString>::to_string(move _30) -> [return: bb17, unwind: bb24]
  }
  preds [bb15]
  succs [bb17, bb24]

bb17
  0: StorageDead(_30)
    SourceInfo(url/src/host.rs:140:64-140:65)
  1: _28 = host::Host::Domain(move _29)
    SourceInfo(url/src/host.rs:139:16-141:14)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:141:13-141:14)
      kind: drop(_29) -> [return: bb18, unwind: bb23]
  }
  preds [bb16]
  succs [bb18, bb23]

bb18
  0: StorageDead(_29)
    SourceInfo(url/src/host.rs:141:13-141:14)
  1: _0 = core::result::Result::<host::Host, parser::ParseError>::Ok(move _28)
    SourceInfo(url/src/host.rs:139:13-141:15)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:141:14-141:15)
      kind: drop(_28) -> [return: bb19, unwind: bb24]
  }
  preds [bb17]
  succs [bb19, bb24]

bb19
  0: StorageDead(_28)
    SourceInfo(url/src/host.rs:141:14-141:15)
  1: StorageDead(_31)
    SourceInfo(url/src/host.rs:142:9-142:10)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:136:9-142:10)
      kind: goto -> bb20
  }
  preds [bb18]
  succs [bb20]

bb20
  0: StorageDead(_22)
    SourceInfo(url/src/host.rs:142:9-142:10)
  1: StorageDead(_21)
    SourceInfo(url/src/host.rs:143:5-143:6)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:143:6-143:6)
      kind: goto -> bb22
  }
  preds [bb14, bb19]
  succs [bb22]

bb21
  0: StorageDead(_3)
    SourceInfo(url/src/host.rs:112:9-112:10)
  1: StorageDead(_2)
    SourceInfo(url/src/host.rs:112:9-112:10)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:143:6-143:6)
      kind: goto -> bb22
  }
  preds [bb5, bb10]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(url/src/host.rs:143:6-143:6)
      kind: return
  }
  preds [bb20, bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(url/src/host.rs:141:14-141:15)
      kind: drop(_28) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(url/src/host.rs:106:5-143:6)
      kind: resume
  }
  preds [bb0, bb2, bb4, bb6, bb7, bb8, bb9, bb11, bb12, bb15, bb16, bb18, bb23]
  succs []

