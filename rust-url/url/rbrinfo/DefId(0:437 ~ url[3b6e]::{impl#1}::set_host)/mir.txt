bb0
  0: StorageLive(_3)
    SourceInfo(url/src/lib.rs:2009:9-2011:10)
  1: StorageLive(_4)
    SourceInfo(url/src/lib.rs:2009:12-2009:35)
  2: StorageLive(_5)
    SourceInfo(url/src/lib.rs:2009:12-2009:16)
  3: _5 = &(*_1)
    SourceInfo(url/src/lib.rs:2009:12-2009:16)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2009:12-2009:35)
      kind: _4 = Url::cannot_be_a_base(move _5) -> [return: bb1, unwind: bb124]
  }
  preds []
  succs [bb1, bb124]

bb1
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2009:12-2009:35)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(url/src/lib.rs:2009:34-2009:35)
  1: StorageLive(_7)
    SourceInfo(url/src/lib.rs:2010:24-2010:61)
  2: _7 = parser::ParseError::SetHostOnCannotBeABaseUrl
    SourceInfo(url/src/lib.rs:2010:24-2010:61)
  3: _0 = core::result::Result::<(), parser::ParseError>::Err(move _7)
    SourceInfo(url/src/lib.rs:2010:20-2010:62)
  4: StorageDead(_7)
    SourceInfo(url/src/lib.rs:2010:61-2010:62)
  5: StorageDead(_4)
    SourceInfo(url/src/lib.rs:2011:9-2011:10)
  6: StorageDead(_3)
    SourceInfo(url/src/lib.rs:2011:9-2011:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb117
  }
  preds [bb1]
  succs [bb117]

bb3
  0: StorageDead(_5)
    SourceInfo(url/src/lib.rs:2009:34-2009:35)
  1: _3 = const ()
    SourceInfo(url/src/lib.rs:2011:10-2011:10)
  2: StorageDead(_4)
    SourceInfo(url/src/lib.rs:2011:9-2011:10)
  3: StorageDead(_3)
    SourceInfo(url/src/lib.rs:2011:9-2011:10)
  4: StorageLive(_8)
    SourceInfo(url/src/lib.rs:2013:13-2013:24)
  5: StorageLive(_9)
    SourceInfo(url/src/lib.rs:2013:44-2013:57)
  6: StorageLive(_10)
    SourceInfo(url/src/lib.rs:2013:44-2013:48)
  7: _10 = &(*_1)
    SourceInfo(url/src/lib.rs:2013:44-2013:48)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2013:44-2013:57)
      kind: _9 = Url::scheme(move _10) -> [return: bb4, unwind: bb124]
  }
  preds [bb1]
  succs [bb4, bb124]

bb4
  0: StorageDead(_10)
    SourceInfo(url/src/lib.rs:2013:56-2013:57)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2013:27-2013:58)
      kind: _8 = <parser::SchemeType as core::convert::From<&str>>::from(move _9) -> [return: bb5, unwind: bb124]
  }
  preds [bb3]
  succs [bb5, bb124]

bb5
  0: StorageDead(_9)
    SourceInfo(url/src/lib.rs:2013:57-2013:58)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(url/src/lib.rs:2013:13-2013:24)
  2: StorageLive(_11)
    SourceInfo(url/src/lib.rs:2015:9-2068:10)
  3: PlaceMention(_2)
    SourceInfo(url/src/lib.rs:2015:29-2015:33)
  4: _12 = discriminant(_2)
    SourceInfo(url/src/lib.rs:2015:29-2015:33)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2015:16-2015:26)
      kind: switchInt(move _12) -> [1: bb6, otherwise: bb62]
  }
  preds [bb4]
  succs [bb6, bb62]

bb6
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2015:16-2015:26)
      kind: falseEdge -> [real: bb7, imaginary: bb62]
  }
  preds [bb5]
  succs [bb7, bb62]

bb7
  0: StorageLive(_13)
    SourceInfo(url/src/lib.rs:2015:21-2015:25)
  1: _13 = ((_2 as Some).0: &str)
    SourceInfo(url/src/lib.rs:2015:21-2015:25)
  2: StorageLive(_14)
    SourceInfo(url/src/lib.rs:2016:13-2018:14)
  3: StorageLive(_15)
    SourceInfo(url/src/lib.rs:2016:16-2016:31)
  4: StorageLive(_16)
    SourceInfo(url/src/lib.rs:2016:16-2016:20)
  5: _16 = &(*_13)
    SourceInfo(url/src/lib.rs:2016:16-2016:20)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2016:16-2016:31)
      kind: _15 = core::str::<impl str>::is_empty(move _16) -> [return: bb8, unwind: bb124]
  }
  preds [bb6]
  succs [bb8, bb124]

bb8
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2016:16-2016:31)
      kind: switchInt(move _15) -> [0: bb16, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb16]

bb9
  0: StorageDead(_16)
    SourceInfo(url/src/lib.rs:2016:30-2016:31)
  1: StorageLive(_17)
    SourceInfo(url/src/lib.rs:2016:35-2016:59)
  2: StorageLive(_18)
    SourceInfo(url/src/lib.rs:2016:35-2016:46)
  3: _18 = &_8
    SourceInfo(url/src/lib.rs:2016:35-2016:46)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2016:35-2016:59)
      kind: _17 = parser::SchemeType::is_special(move _18) -> [return: bb10, unwind: bb124]
  }
  preds [bb8]
  succs [bb10, bb124]

bb10
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2016:35-2016:59)
      kind: switchInt(move _17) -> [0: bb15, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb15]

bb11
  0: StorageDead(_18)
    SourceInfo(url/src/lib.rs:2016:58-2016:59)
  1: StorageLive(_19)
    SourceInfo(url/src/lib.rs:2016:64-2016:85)
  2: StorageLive(_20)
    SourceInfo(url/src/lib.rs:2016:64-2016:75)
  3: _20 = &_8
    SourceInfo(url/src/lib.rs:2016:64-2016:75)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2016:64-2016:85)
      kind: _19 = parser::SchemeType::is_file(move _20) -> [return: bb12, unwind: bb124]
  }
  preds [bb10]
  succs [bb12, bb124]

bb12
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2016:64-2016:85)
      kind: switchInt(move _19) -> [0: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14]

bb13
  0: StorageDead(_20)
    SourceInfo(url/src/lib.rs:2016:84-2016:85)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2016:86-2018:14)
      kind: goto -> bb17
  }
  preds [bb12]
  succs [bb17]

bb14
  0: StorageDead(_20)
    SourceInfo(url/src/lib.rs:2016:84-2016:85)
  1: StorageLive(_22)
    SourceInfo(url/src/lib.rs:2017:28-2017:49)
  2: _22 = parser::ParseError::EmptyHost
    SourceInfo(url/src/lib.rs:2017:28-2017:49)
  3: _0 = core::result::Result::<(), parser::ParseError>::Err(move _22)
    SourceInfo(url/src/lib.rs:2017:24-2017:50)
  4: StorageDead(_22)
    SourceInfo(url/src/lib.rs:2017:49-2017:50)
  5: StorageDead(_19)
    SourceInfo(url/src/lib.rs:2018:13-2018:14)
  6: StorageDead(_17)
    SourceInfo(url/src/lib.rs:2018:13-2018:14)
  7: StorageDead(_15)
    SourceInfo(url/src/lib.rs:2018:13-2018:14)
  8: StorageDead(_14)
    SourceInfo(url/src/lib.rs:2018:13-2018:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb115
  }
  preds [bb12]
  succs [bb115]

bb15
  0: StorageDead(_18)
    SourceInfo(url/src/lib.rs:2016:58-2016:59)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb17
  }
  preds [bb10]
  succs [bb17]

bb16
  0: StorageDead(_16)
    SourceInfo(url/src/lib.rs:2016:30-2016:31)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb17
  }
  preds [bb8]
  succs [bb17]

bb17
  0: _14 = const ()
    SourceInfo(url/src/lib.rs:2018:14-2018:14)
  1: StorageDead(_19)
    SourceInfo(url/src/lib.rs:2018:13-2018:14)
  2: StorageDead(_17)
    SourceInfo(url/src/lib.rs:2018:13-2018:14)
  3: StorageDead(_15)
    SourceInfo(url/src/lib.rs:2018:13-2018:14)
  4: StorageDead(_14)
    SourceInfo(url/src/lib.rs:2018:13-2018:14)
  5: StorageLive(_23)
    SourceInfo(url/src/lib.rs:2019:17-2019:32)
  6: _23 = _13
    SourceInfo(url/src/lib.rs:2019:35-2019:39)
  7: FakeRead(ForLet(None), _23)
    SourceInfo(url/src/lib.rs:2019:17-2019:32)
  8: StorageLive(_24)
    SourceInfo(url/src/lib.rs:2021:13-2033:14)
  9: StorageLive(_25)
    SourceInfo(url/src/lib.rs:2021:17-2021:38)
  10: StorageLive(_26)
    SourceInfo(url/src/lib.rs:2021:17-2021:21)
  11: _26 = &(*_13)
    SourceInfo(url/src/lib.rs:2021:17-2021:21)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2021:17-2021:38)
      kind: _25 = core::str::<impl str>::starts_with::<'_, char>(move _26, const '[') -> [return: bb18, unwind: bb124]
  }
  preds [bb13, bb15, bb16]
  succs [bb18, bb124]

bb18
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2021:17-2021:38)
      kind: switchInt(move _25) -> [0: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20]

bb19
  0: StorageDead(_26)
    SourceInfo(url/src/lib.rs:2021:37-2021:38)
  1: StorageLive(_27)
    SourceInfo(url/src/lib.rs:2021:43-2021:62)
  2: StorageLive(_28)
    SourceInfo(url/src/lib.rs:2021:43-2021:47)
  3: _28 = &(*_13)
    SourceInfo(url/src/lib.rs:2021:43-2021:47)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2021:43-2021:62)
      kind: _27 = core::str::<impl str>::ends_with::<'_, char>(move _28, const ']') -> [return: bb21, unwind: bb124]
  }
  preds [bb18]
  succs [bb21, bb124]

bb20
  0: StorageDead(_26)
    SourceInfo(url/src/lib.rs:2021:37-2021:38)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2021:63-2033:14)
      kind: goto -> bb24
  }
  preds [bb18]
  succs [bb24]

bb21
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2021:43-2021:62)
      kind: switchInt(move _27) -> [0: bb23, otherwise: bb22]
  }
  preds [bb19]
  succs [bb22, bb23]

bb22
  0: StorageDead(_28)
    SourceInfo(url/src/lib.rs:2021:61-2021:62)
  1: _24 = const ()
    SourceInfo(url/src/lib.rs:2033:14-2033:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2021:13-2033:14)
      kind: goto -> bb35
  }
  preds [bb21]
  succs [bb35]

bb23
  0: StorageDead(_28)
    SourceInfo(url/src/lib.rs:2021:61-2021:62)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2021:63-2033:14)
      kind: goto -> bb24
  }
  preds [bb21]
  succs [bb24]

bb24
  0: StorageLive(_29)
    SourceInfo(url/src/lib.rs:2022:23-2022:37)
  1: StorageLive(_30)
    SourceInfo(url/src/lib.rs:2022:23-2022:27)
  2: _30 = &(*_13)
    SourceInfo(url/src/lib.rs:2022:23-2022:27)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2022:23-2022:37)
      kind: _29 = core::str::<impl str>::find::<'_, char>(move _30, const ':') -> [return: bb25, unwind: bb124]
  }
  preds [bb20, bb23]
  succs [bb25, bb124]

bb25
  0: StorageDead(_30)
    SourceInfo(url/src/lib.rs:2022:36-2022:37)
  1: PlaceMention(_29)
    SourceInfo(url/src/lib.rs:2022:23-2022:37)
  2: _31 = discriminant(_29)
    SourceInfo(url/src/lib.rs:2022:23-2022:37)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2022:17-2022:37)
      kind: switchInt(move _31) -> [0: bb30, 1: bb27, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27, bb30]

bb26
  0: FakeRead(ForMatchedPlace(None), _29)
    SourceInfo(url/src/lib.rs:2022:23-2022:37)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2022:23-2022:37)
      kind: unreachable
  }
  preds [bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2022:17-2022:37)
      kind: switchInt(((_29 as Some).0: usize)) -> [0: bb29, otherwise: bb28]
  }
  preds [bb25]
  succs [bb28, bb29]

bb28
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2028:21-2028:38)
      kind: falseEdge -> [real: bb32, imaginary: bb30]
  }
  preds [bb27, bb29]
  succs [bb30, bb32]

bb29
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2023:21-2023:28)
      kind: falseEdge -> [real: bb31, imaginary: bb28]
  }
  preds [bb27]
  succs [bb28, bb31]

bb30
  0: _24 = const ()
    SourceInfo(url/src/lib.rs:2031:29-2031:31)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2031:29-2031:31)
      kind: goto -> bb34
  }
  preds [bb25, bb28]
  succs [bb34]

bb31
  0: StorageLive(_33)
    SourceInfo(url/src/lib.rs:2025:36-2025:70)
  1: _33 = parser::ParseError::InvalidDomainCharacter
    SourceInfo(url/src/lib.rs:2025:36-2025:70)
  2: _0 = core::result::Result::<(), parser::ParseError>::Err(move _33)
    SourceInfo(url/src/lib.rs:2025:32-2025:71)
  3: StorageDead(_33)
    SourceInfo(url/src/lib.rs:2025:70-2025:71)
  4: StorageDead(_29)
    SourceInfo(url/src/lib.rs:2033:13-2033:14)
  5: StorageDead(_27)
    SourceInfo(url/src/lib.rs:2033:13-2033:14)
  6: StorageDead(_25)
    SourceInfo(url/src/lib.rs:2033:13-2033:14)
  7: StorageDead(_24)
    SourceInfo(url/src/lib.rs:2033:13-2033:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb114
  }
  preds [bb29]
  succs [bb114]

bb32
  0: StorageLive(_34)
    SourceInfo(url/src/lib.rs:2028:26-2028:37)
  1: _34 = ((_29 as Some).0: usize)
    SourceInfo(url/src/lib.rs:2028:26-2028:37)
  2: StorageLive(_35)
    SourceInfo(url/src/lib.rs:2029:39-2029:59)
  3: StorageLive(_36)
    SourceInfo(url/src/lib.rs:2029:39-2029:59)
  4: StorageLive(_37)
    SourceInfo(url/src/lib.rs:2029:44-2029:59)
  5: StorageLive(_38)
    SourceInfo(url/src/lib.rs:2029:40-2029:44)
  6: _38 = &(*_13)
    SourceInfo(url/src/lib.rs:2029:40-2029:44)
  7: StorageLive(_39)
    SourceInfo(url/src/lib.rs:2029:45-2029:58)
  8: StorageLive(_40)
    SourceInfo(url/src/lib.rs:2029:47-2029:58)
  9: _40 = _34
    SourceInfo(url/src/lib.rs:2029:47-2029:58)
  10: _39 = core::ops::RangeTo::<usize> { end: move _40 }
    SourceInfo(url/src/lib.rs:2029:45-2029:58)
  11: StorageDead(_40)
    SourceInfo(url/src/lib.rs:2029:57-2029:58)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2029:44-2029:59)
      kind: _37 = <str as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _38, move _39) -> [return: bb33, unwind: bb124]
  }
  preds [bb28]
  succs [bb33, bb124]

bb33
  0: StorageDead(_39)
    SourceInfo(url/src/lib.rs:2029:58-2029:59)
  1: StorageDead(_38)
    SourceInfo(url/src/lib.rs:2029:58-2029:59)
  2: _36 = &(*_37)
    SourceInfo(url/src/lib.rs:2029:39-2029:59)
  3: _35 = &(*_36)
    SourceInfo(url/src/lib.rs:2029:39-2029:59)
  4: _23 = move _35
    SourceInfo(url/src/lib.rs:2029:25-2029:59)
  5: StorageDead(_35)
    SourceInfo(url/src/lib.rs:2029:58-2029:59)
  6: StorageDead(_37)
    SourceInfo(url/src/lib.rs:2029:59-2029:60)
  7: StorageDead(_36)
    SourceInfo(url/src/lib.rs:2029:59-2029:60)
  8: _24 = const ()
    SourceInfo(url/src/lib.rs:2028:42-2030:22)
  9: StorageDead(_34)
    SourceInfo(url/src/lib.rs:2030:21-2030:22)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2030:21-2030:22)
      kind: goto -> bb34
  }
  preds [bb32]
  succs [bb34]

bb34
  0: StorageDead(_29)
    SourceInfo(url/src/lib.rs:2033:13-2033:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2021:13-2033:14)
      kind: goto -> bb35
  }
  preds [bb30, bb33]
  succs [bb35]

bb35
  0: StorageDead(_27)
    SourceInfo(url/src/lib.rs:2033:13-2033:14)
  1: StorageDead(_25)
    SourceInfo(url/src/lib.rs:2033:13-2033:14)
  2: StorageDead(_24)
    SourceInfo(url/src/lib.rs:2033:13-2033:14)
  3: StorageLive(_41)
    SourceInfo(url/src/lib.rs:2034:16-2034:60)
  4: StorageLive(_42)
    SourceInfo(url/src/lib.rs:2034:16-2034:47)
  5: StorageLive(_43)
    SourceInfo(url/src/lib.rs:2034:16-2034:47)
  6: StorageLive(_44)
    SourceInfo(url/src/lib.rs:2034:33-2034:46)
  7: StorageLive(_45)
    SourceInfo(url/src/lib.rs:2034:33-2034:37)
  8: _45 = &(*_1)
    SourceInfo(url/src/lib.rs:2034:33-2034:37)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2034:33-2034:46)
      kind: _44 = Url::scheme(move _45) -> [return: bb36, unwind: bb124]
  }
  preds [bb22, bb34]
  succs [bb36, bb124]

bb36
  0: StorageDead(_45)
    SourceInfo(url/src/lib.rs:2034:45-2034:46)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2034:16-2034:47)
      kind: _43 = <parser::SchemeType as core::convert::From<&str>>::from(move _44) -> [return: bb37, unwind: bb124]
  }
  preds [bb35]
  succs [bb37, bb124]

bb37
  0: _42 = &_43
    SourceInfo(url/src/lib.rs:2034:16-2034:47)
  1: StorageDead(_44)
    SourceInfo(url/src/lib.rs:2034:46-2034:47)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2034:16-2034:60)
      kind: _41 = parser::SchemeType::is_special(move _42) -> [return: bb38, unwind: bb124]
  }
  preds [bb36]
  succs [bb38, bb124]

bb38
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2034:16-2034:60)
      kind: switchInt(move _41) -> [0: bb50, otherwise: bb39]
  }
  preds [bb37]
  succs [bb39, bb50]

bb39
  0: StorageDead(_43)
    SourceInfo(url/src/lib.rs:2034:59-2034:60)
  1: StorageDead(_42)
    SourceInfo(url/src/lib.rs:2034:59-2034:60)
  2: StorageLive(_46)
    SourceInfo(url/src/lib.rs:2035:17-2035:72)
  3: StorageLive(_47)
    SourceInfo(url/src/lib.rs:2035:17-2035:21)
  4: _47 = &mut (*_1)
    SourceInfo(url/src/lib.rs:2035:17-2035:21)
  5: StorageLive(_48)
    SourceInfo(url/src/lib.rs:2035:40-2035:65)
  6: StorageLive(_49)
    SourceInfo(url/src/lib.rs:2035:40-2035:65)
  7: StorageLive(_50)
    SourceInfo(url/src/lib.rs:2035:40-2035:64)
  8: StorageLive(_51)
    SourceInfo(url/src/lib.rs:2035:52-2035:63)
  9: _51 = &(*_23)
    SourceInfo(url/src/lib.rs:2035:52-2035:63)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2035:40-2035:64)
      kind: _50 = host::Host::parse(move _51) -> [return: bb40, unwind: bb124]
  }
  preds [bb38]
  succs [bb40, bb124]

bb40
  0: StorageDead(_51)
    SourceInfo(url/src/lib.rs:2035:63-2035:64)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2035:40-2035:65)
      kind: _49 = <core::result::Result<host::Host, parser::ParseError> as core::ops::Try>::branch(move _50) -> [return: bb41, unwind: bb123]
  }
  preds [bb39]
  succs [bb41, bb123]

bb41
  0: StorageDead(_50)
    SourceInfo(url/src/lib.rs:2035:64-2035:65)
  1: PlaceMention(_49)
    SourceInfo(url/src/lib.rs:2035:40-2035:65)
  2: _52 = discriminant(_49)
    SourceInfo(url/src/lib.rs:2035:40-2035:65)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2035:40-2035:65)
      kind: switchInt(move _52) -> [0: bb44, 1: bb43, otherwise: bb42]
  }
  preds [bb40]
  succs [bb42, bb43, bb44]

bb42
  0: FakeRead(ForMatchedPlace(None), _49)
    SourceInfo(url/src/lib.rs:2035:40-2035:65)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2035:40-2035:65)
      kind: unreachable
  }
  preds [bb41]
  succs []

bb43
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2035:64-2035:65)
      kind: falseEdge -> [real: bb45, imaginary: bb44]
  }
  preds [bb41]
  succs [bb44, bb45]

bb44
  0: StorageLive(_56)
    SourceInfo(url/src/lib.rs:2035:40-2035:65)
  1: _56 = move ((_49 as Continue).0: host::Host)
    SourceInfo(url/src/lib.rs:2035:40-2035:65)
  2: _48 = move _56
    SourceInfo(url/src/lib.rs:2035:40-2035:65)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2035:64-2035:65)
      kind: drop(_56) -> [return: bb47, unwind: bb122]
  }
  preds [bb41, bb43]
  succs [bb47, bb122]

bb45
  0: StorageLive(_53)
    SourceInfo(url/src/lib.rs:2035:64-2035:65)
  1: _53 = ((_49 as Break).0: core::result::Result<core::convert::Infallible, parser::ParseError>)
    SourceInfo(url/src/lib.rs:2035:64-2035:65)
  2: StorageLive(_55)
    SourceInfo(url/src/lib.rs:2035:64-2035:65)
  3: _55 = _53
    SourceInfo(url/src/lib.rs:2035:64-2035:65)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2035:40-2035:65)
      kind: _0 = <core::result::Result<(), parser::ParseError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, parser::ParseError>>>::from_residual(move _55) -> [return: bb46, unwind: bb122]
  }
  preds [bb43]
  succs [bb46, bb122]

bb46
  0: StorageDead(_55)
    SourceInfo(url/src/lib.rs:2035:64-2035:65)
  1: StorageDead(_53)
    SourceInfo(url/src/lib.rs:2035:64-2035:65)
  2: StorageDead(_48)
    SourceInfo(url/src/lib.rs:2035:71-2035:72)
  3: StorageDead(_47)
    SourceInfo(url/src/lib.rs:2035:71-2035:72)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2035:72-2035:73)
      kind: drop(_49) -> [return: bb112, unwind: bb124]
  }
  preds [bb45]
  succs [bb112, bb124]

bb47
  0: StorageDead(_56)
    SourceInfo(url/src/lib.rs:2035:64-2035:65)
  1: StorageLive(_57)
    SourceInfo(url/src/lib.rs:2035:67-2035:71)
  2: _57 = core::option::Option::<core::option::Option<u16>>::None
    SourceInfo(url/src/lib.rs:2035:67-2035:71)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2035:17-2035:72)
      kind: _46 = Url::set_host_internal(move _47, move _48, move _57) -> [return: bb48, unwind: bb121]
  }
  preds [bb44]
  succs [bb48, bb121]

bb48
  0: StorageDead(_57)
    SourceInfo(url/src/lib.rs:2035:71-2035:72)
  1: StorageDead(_48)
    SourceInfo(url/src/lib.rs:2035:71-2035:72)
  2: StorageDead(_47)
    SourceInfo(url/src/lib.rs:2035:71-2035:72)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2035:72-2035:73)
      kind: drop(_49) -> [return: bb49, unwind: bb124]
  }
  preds [bb47]
  succs [bb49, bb124]

bb49
  0: StorageDead(_49)
    SourceInfo(url/src/lib.rs:2035:72-2035:73)
  1: StorageDead(_46)
    SourceInfo(url/src/lib.rs:2035:72-2035:73)
  2: _11 = const ()
    SourceInfo(url/src/lib.rs:2034:61-2036:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2034:13-2038:14)
      kind: goto -> bb61
  }
  preds [bb48]
  succs [bb61]

bb50
  0: StorageDead(_43)
    SourceInfo(url/src/lib.rs:2034:59-2034:60)
  1: StorageDead(_42)
    SourceInfo(url/src/lib.rs:2034:59-2034:60)
  2: StorageLive(_58)
    SourceInfo(url/src/lib.rs:2037:17-2037:79)
  3: StorageLive(_59)
    SourceInfo(url/src/lib.rs:2037:17-2037:21)
  4: _59 = &mut (*_1)
    SourceInfo(url/src/lib.rs:2037:17-2037:21)
  5: StorageLive(_60)
    SourceInfo(url/src/lib.rs:2037:40-2037:72)
  6: StorageLive(_61)
    SourceInfo(url/src/lib.rs:2037:40-2037:72)
  7: StorageLive(_62)
    SourceInfo(url/src/lib.rs:2037:40-2037:71)
  8: StorageLive(_63)
    SourceInfo(url/src/lib.rs:2037:59-2037:70)
  9: _63 = &(*_23)
    SourceInfo(url/src/lib.rs:2037:59-2037:70)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2037:40-2037:71)
      kind: _62 = host::Host::parse_opaque(move _63) -> [return: bb51, unwind: bb124]
  }
  preds [bb38]
  succs [bb51, bb124]

bb51
  0: StorageDead(_63)
    SourceInfo(url/src/lib.rs:2037:70-2037:71)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2037:40-2037:72)
      kind: _61 = <core::result::Result<host::Host, parser::ParseError> as core::ops::Try>::branch(move _62) -> [return: bb52, unwind: bb120]
  }
  preds [bb50]
  succs [bb52, bb120]

bb52
  0: StorageDead(_62)
    SourceInfo(url/src/lib.rs:2037:71-2037:72)
  1: PlaceMention(_61)
    SourceInfo(url/src/lib.rs:2037:40-2037:72)
  2: _64 = discriminant(_61)
    SourceInfo(url/src/lib.rs:2037:40-2037:72)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2037:40-2037:72)
      kind: switchInt(move _64) -> [0: bb55, 1: bb54, otherwise: bb53]
  }
  preds [bb51]
  succs [bb53, bb54, bb55]

bb53
  0: FakeRead(ForMatchedPlace(None), _61)
    SourceInfo(url/src/lib.rs:2037:40-2037:72)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2037:40-2037:72)
      kind: unreachable
  }
  preds [bb52]
  succs []

bb54
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2037:71-2037:72)
      kind: falseEdge -> [real: bb56, imaginary: bb55]
  }
  preds [bb52]
  succs [bb55, bb56]

bb55
  0: StorageLive(_68)
    SourceInfo(url/src/lib.rs:2037:40-2037:72)
  1: _68 = move ((_61 as Continue).0: host::Host)
    SourceInfo(url/src/lib.rs:2037:40-2037:72)
  2: _60 = move _68
    SourceInfo(url/src/lib.rs:2037:40-2037:72)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2037:71-2037:72)
      kind: drop(_68) -> [return: bb58, unwind: bb119]
  }
  preds [bb52, bb54]
  succs [bb58, bb119]

bb56
  0: StorageLive(_65)
    SourceInfo(url/src/lib.rs:2037:71-2037:72)
  1: _65 = ((_61 as Break).0: core::result::Result<core::convert::Infallible, parser::ParseError>)
    SourceInfo(url/src/lib.rs:2037:71-2037:72)
  2: StorageLive(_67)
    SourceInfo(url/src/lib.rs:2037:71-2037:72)
  3: _67 = _65
    SourceInfo(url/src/lib.rs:2037:71-2037:72)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2037:40-2037:72)
      kind: _0 = <core::result::Result<(), parser::ParseError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, parser::ParseError>>>::from_residual(move _67) -> [return: bb57, unwind: bb119]
  }
  preds [bb54]
  succs [bb57, bb119]

bb57
  0: StorageDead(_67)
    SourceInfo(url/src/lib.rs:2037:71-2037:72)
  1: StorageDead(_65)
    SourceInfo(url/src/lib.rs:2037:71-2037:72)
  2: StorageDead(_60)
    SourceInfo(url/src/lib.rs:2037:78-2037:79)
  3: StorageDead(_59)
    SourceInfo(url/src/lib.rs:2037:78-2037:79)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2037:79-2037:80)
      kind: drop(_61) -> [return: bb111, unwind: bb124]
  }
  preds [bb56]
  succs [bb111, bb124]

bb58
  0: StorageDead(_68)
    SourceInfo(url/src/lib.rs:2037:71-2037:72)
  1: StorageLive(_69)
    SourceInfo(url/src/lib.rs:2037:74-2037:78)
  2: _69 = core::option::Option::<core::option::Option<u16>>::None
    SourceInfo(url/src/lib.rs:2037:74-2037:78)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2037:17-2037:79)
      kind: _58 = Url::set_host_internal(move _59, move _60, move _69) -> [return: bb59, unwind: bb118]
  }
  preds [bb55]
  succs [bb59, bb118]

bb59
  0: StorageDead(_69)
    SourceInfo(url/src/lib.rs:2037:78-2037:79)
  1: StorageDead(_60)
    SourceInfo(url/src/lib.rs:2037:78-2037:79)
  2: StorageDead(_59)
    SourceInfo(url/src/lib.rs:2037:78-2037:79)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2037:79-2037:80)
      kind: drop(_61) -> [return: bb60, unwind: bb124]
  }
  preds [bb58]
  succs [bb60, bb124]

bb60
  0: StorageDead(_61)
    SourceInfo(url/src/lib.rs:2037:79-2037:80)
  1: StorageDead(_58)
    SourceInfo(url/src/lib.rs:2037:79-2037:80)
  2: _11 = const ()
    SourceInfo(url/src/lib.rs:2036:20-2038:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2034:13-2038:14)
      kind: goto -> bb61
  }
  preds [bb59]
  succs [bb61]

bb61
  0: StorageDead(_41)
    SourceInfo(url/src/lib.rs:2038:13-2038:14)
  1: StorageDead(_23)
    SourceInfo(url/src/lib.rs:2039:9-2039:10)
  2: StorageDead(_13)
    SourceInfo(url/src/lib.rs:2039:9-2039:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2015:9-2068:10)
      kind: goto -> bb110
  }
  preds [bb49, bb60]
  succs [bb110]

bb62
  0: StorageLive(_70)
    SourceInfo(url/src/lib.rs:2039:19-2039:34)
  1: StorageLive(_71)
    SourceInfo(url/src/lib.rs:2039:19-2039:23)
  2: _71 = &(*_1)
    SourceInfo(url/src/lib.rs:2039:19-2039:23)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2039:19-2039:34)
      kind: _70 = Url::has_host(move _71) -> [return: bb63, unwind: bb124]
  }
  preds [bb5, bb6]
  succs [bb63, bb124]

bb63
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2039:19-2039:34)
      kind: switchInt(move _70) -> [0: bb108, otherwise: bb64]
  }
  preds [bb62]
  succs [bb64, bb108]

bb64
  0: StorageDead(_71)
    SourceInfo(url/src/lib.rs:2039:33-2039:34)
  1: StorageLive(_72)
    SourceInfo(url/src/lib.rs:2040:13-2044:14)
  2: StorageLive(_73)
    SourceInfo(url/src/lib.rs:2040:16-2040:40)
  3: StorageLive(_74)
    SourceInfo(url/src/lib.rs:2040:16-2040:27)
  4: _74 = &_8
    SourceInfo(url/src/lib.rs:2040:16-2040:27)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2040:16-2040:40)
      kind: _73 = parser::SchemeType::is_special(move _74) -> [return: bb65, unwind: bb124]
  }
  preds [bb63]
  succs [bb65, bb124]

bb65
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2040:16-2040:40)
      kind: switchInt(move _73) -> [0: bb70, otherwise: bb66]
  }
  preds [bb64]
  succs [bb66, bb70]

bb66
  0: StorageDead(_74)
    SourceInfo(url/src/lib.rs:2040:39-2040:40)
  1: StorageLive(_75)
    SourceInfo(url/src/lib.rs:2040:45-2040:66)
  2: StorageLive(_76)
    SourceInfo(url/src/lib.rs:2040:45-2040:56)
  3: _76 = &_8
    SourceInfo(url/src/lib.rs:2040:45-2040:56)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2040:45-2040:66)
      kind: _75 = parser::SchemeType::is_file(move _76) -> [return: bb67, unwind: bb124]
  }
  preds [bb65]
  succs [bb67, bb124]

bb67
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2040:45-2040:66)
      kind: switchInt(move _75) -> [0: bb69, otherwise: bb68]
  }
  preds [bb66]
  succs [bb68, bb69]

bb68
  0: StorageDead(_76)
    SourceInfo(url/src/lib.rs:2040:65-2040:66)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2040:67-2042:14)
      kind: goto -> bb71
  }
  preds [bb67]
  succs [bb71]

bb69
  0: StorageDead(_76)
    SourceInfo(url/src/lib.rs:2040:65-2040:66)
  1: StorageLive(_78)
    SourceInfo(url/src/lib.rs:2041:28-2041:49)
  2: _78 = parser::ParseError::EmptyHost
    SourceInfo(url/src/lib.rs:2041:28-2041:49)
  3: _0 = core::result::Result::<(), parser::ParseError>::Err(move _78)
    SourceInfo(url/src/lib.rs:2041:24-2041:50)
  4: StorageDead(_78)
    SourceInfo(url/src/lib.rs:2041:49-2041:50)
  5: StorageDead(_75)
    SourceInfo(url/src/lib.rs:2044:13-2044:14)
  6: StorageDead(_73)
    SourceInfo(url/src/lib.rs:2044:13-2044:14)
  7: StorageDead(_72)
    SourceInfo(url/src/lib.rs:2044:13-2044:14)
  8: StorageDead(_70)
    SourceInfo(url/src/lib.rs:2068:9-2068:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb116
  }
  preds [bb67]
  succs [bb116]

bb70
  0: StorageDead(_74)
    SourceInfo(url/src/lib.rs:2040:39-2040:40)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb71
  }
  preds [bb65]
  succs [bb71]

bb71
  0: StorageLive(_79)
    SourceInfo(url/src/lib.rs:2042:23-2042:75)
  1: StorageLive(_80)
    SourceInfo(url/src/lib.rs:2042:23-2042:47)
  2: StorageLive(_81)
    SourceInfo(url/src/lib.rs:2042:23-2042:41)
  3: _81 = &((*_1).0: std::string::String)
    SourceInfo(url/src/lib.rs:2042:23-2042:41)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2042:23-2042:47)
      kind: _80 = std::string::String::len(move _81) -> [return: bb72, unwind: bb124]
  }
  preds [bb68, bb70]
  succs [bb72, bb124]

bb72
  0: StorageDead(_81)
    SourceInfo(url/src/lib.rs:2042:46-2042:47)
  1: StorageLive(_82)
    SourceInfo(url/src/lib.rs:2042:51-2042:75)
  2: StorageLive(_83)
    SourceInfo(url/src/lib.rs:2042:51-2042:66)
  3: _83 = ((*_1).7: u32)
    SourceInfo(url/src/lib.rs:2042:51-2042:66)
  4: _82 = move _83 as usize (IntToInt)
    SourceInfo(url/src/lib.rs:2042:51-2042:75)
  5: StorageDead(_83)
    SourceInfo(url/src/lib.rs:2042:74-2042:75)
  6: _79 = Eq(move _80, move _82)
    SourceInfo(url/src/lib.rs:2042:23-2042:75)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2042:23-2042:75)
      kind: switchInt(move _79) -> [0: bb75, otherwise: bb73]
  }
  preds [bb71]
  succs [bb73, bb75]

bb73
  0: StorageDead(_82)
    SourceInfo(url/src/lib.rs:2042:74-2042:75)
  1: StorageDead(_80)
    SourceInfo(url/src/lib.rs:2042:74-2042:75)
  2: StorageLive(_84)
    SourceInfo(url/src/lib.rs:2043:17-2043:45)
  3: StorageLive(_85)
    SourceInfo(url/src/lib.rs:2043:17-2043:35)
  4: _85 = &mut ((*_1).0: std::string::String)
    SourceInfo(url/src/lib.rs:2043:17-2043:35)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2043:17-2043:45)
      kind: _84 = std::string::String::push(move _85, const '/') -> [return: bb74, unwind: bb124]
  }
  preds [bb72]
  succs [bb74, bb124]

bb74
  0: StorageDead(_85)
    SourceInfo(url/src/lib.rs:2043:44-2043:45)
  1: StorageDead(_84)
    SourceInfo(url/src/lib.rs:2043:45-2043:46)
  2: _72 = const ()
    SourceInfo(url/src/lib.rs:2042:76-2044:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2042:20-2044:14)
      kind: goto -> bb76
  }
  preds [bb73]
  succs [bb76]

bb75
  0: StorageDead(_82)
    SourceInfo(url/src/lib.rs:2042:74-2042:75)
  1: StorageDead(_80)
    SourceInfo(url/src/lib.rs:2042:74-2042:75)
  2: _72 = const ()
    SourceInfo(url/src/lib.rs:2044:14-2044:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2042:20-2044:14)
      kind: goto -> bb76
  }
  preds [bb72]
  succs [bb76]

bb76
  0: StorageDead(_79)
    SourceInfo(url/src/lib.rs:2044:13-2044:14)
  1: StorageDead(_75)
    SourceInfo(url/src/lib.rs:2044:13-2044:14)
  2: StorageDead(_73)
    SourceInfo(url/src/lib.rs:2044:13-2044:14)
  3: StorageDead(_72)
    SourceInfo(url/src/lib.rs:2044:13-2044:14)
  4: StorageLive(_86)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  5: StorageLive(_87)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  6: _87 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _87) -> [0: bb78, otherwise: bb77]
  }
  preds [bb74, bb75]
  succs [bb77, bb78]

bb77
  0: StorageLive(_88)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_89)
    SourceInfo(url/src/lib.rs:2045:27-2045:64)
  2: StorageLive(_90)
    SourceInfo(url/src/lib.rs:2045:27-2045:56)
  3: StorageLive(_91)
    SourceInfo(url/src/lib.rs:2045:27-2045:31)
  4: _91 = &(*_1)
    SourceInfo(url/src/lib.rs:2045:27-2045:31)
  5: StorageLive(_92)
    SourceInfo(url/src/lib.rs:2045:40-2045:55)
  6: _92 = ((*_1).1: u32)
    SourceInfo(url/src/lib.rs:2045:40-2045:55)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2045:27-2045:56)
      kind: _90 = Url::byte_at(move _91, move _92) -> [return: bb79, unwind: bb124]
  }
  preds [bb76]
  succs [bb79, bb124]

bb78
  0: _86 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb82
  }
  preds [bb76]
  succs [bb82]

bb79
  0: StorageDead(_92)
    SourceInfo(url/src/lib.rs:2045:55-2045:56)
  1: StorageDead(_91)
    SourceInfo(url/src/lib.rs:2045:55-2045:56)
  2: _89 = Eq(move _90, const 58_u8)
    SourceInfo(url/src/lib.rs:2045:27-2045:64)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2045:27-2045:64)
      kind: switchInt(move _89) -> [0: bb81, otherwise: bb80]
  }
  preds [bb77]
  succs [bb80, bb81]

bb80
  0: StorageDead(_90)
    SourceInfo(url/src/lib.rs:2045:63-2045:64)
  1: _88 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_88)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _86 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb82
  }
  preds [bb79]
  succs [bb82]

bb81
  0: StorageDead(_90)
    SourceInfo(url/src/lib.rs:2045:63-2045:64)
  1: StorageLive(_93)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _93 = core::panicking::panic(const "assertion failed: self.byte_at(self.scheme_end) == b':'") -> bb124
  }
  preds [bb79]
  succs [bb124]

bb82
  0: StorageDead(_87)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_86)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_94)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  3: StorageLive(_95)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  4: _95 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _95) -> [0: bb87, otherwise: bb83]
  }
  preds [bb78, bb80]
  succs [bb83, bb87]

bb83
  0: StorageLive(_96)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_97)
    SourceInfo(url/src/lib.rs:2046:27-2046:64)
  2: StorageLive(_98)
    SourceInfo(url/src/lib.rs:2046:27-2046:56)
  3: StorageLive(_99)
    SourceInfo(url/src/lib.rs:2046:27-2046:31)
  4: _99 = &(*_1)
    SourceInfo(url/src/lib.rs:2046:27-2046:31)
  5: StorageLive(_100)
    SourceInfo(url/src/lib.rs:2046:40-2046:55)
  6: _100 = ((*_1).7: u32)
    SourceInfo(url/src/lib.rs:2046:40-2046:55)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2046:27-2046:56)
      kind: _98 = Url::byte_at(move _99, move _100) -> [return: bb84, unwind: bb124]
  }
  preds [bb82]
  succs [bb84, bb124]

bb84
  0: StorageDead(_100)
    SourceInfo(url/src/lib.rs:2046:55-2046:56)
  1: StorageDead(_99)
    SourceInfo(url/src/lib.rs:2046:55-2046:56)
  2: _97 = Eq(move _98, const 47_u8)
    SourceInfo(url/src/lib.rs:2046:27-2046:64)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2046:27-2046:64)
      kind: switchInt(move _97) -> [0: bb86, otherwise: bb85]
  }
  preds [bb83]
  succs [bb85, bb86]

bb85
  0: StorageDead(_98)
    SourceInfo(url/src/lib.rs:2046:63-2046:64)
  1: _96 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_97)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_96)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _94 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb88
  }
  preds [bb84]
  succs [bb88]

bb86
  0: StorageDead(_98)
    SourceInfo(url/src/lib.rs:2046:63-2046:64)
  1: StorageLive(_101)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _101 = core::panicking::panic(const "assertion failed: self.byte_at(self.path_start) == b'/'") -> bb124
  }
  preds [bb84]
  succs [bb124]

bb87
  0: _94 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb88
  }
  preds [bb82]
  succs [bb88]

bb88
  0: StorageDead(_95)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_94)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_102)
    SourceInfo(url/src/lib.rs:2048:17-2048:31)
  3: StorageLive(_103)
    SourceInfo(url/src/lib.rs:2048:37-2048:58)
  4: StorageLive(_104)
    SourceInfo(url/src/lib.rs:2048:37-2048:48)
  5: _104 = &_8
    SourceInfo(url/src/lib.rs:2048:37-2048:48)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2048:37-2048:58)
      kind: _103 = parser::SchemeType::is_file(move _104) -> [return: bb89, unwind: bb124]
  }
  preds [bb85, bb87]
  succs [bb89, bb124]

bb89
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2048:37-2048:58)
      kind: switchInt(move _103) -> [0: bb92, otherwise: bb90]
  }
  preds [bb88]
  succs [bb90, bb92]

bb90
  0: StorageDead(_104)
    SourceInfo(url/src/lib.rs:2048:57-2048:58)
  1: StorageLive(_105)
    SourceInfo(url/src/lib.rs:2049:17-2049:32)
  2: _105 = ((*_1).1: u32)
    SourceInfo(url/src/lib.rs:2049:17-2049:32)
  3: _106 = AddWithOverflow(_105, const 3_u32)
    SourceInfo(url/src/lib.rs:2049:17-2049:36)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2049:17-2049:36)
      kind: assert(!move (_106.1: bool), "attempt to compute `{} + {}`, which would overflow", move _105, const 3_u32) -> [success: bb91, unwind: bb124]
  }
  preds [bb89]
  succs [bb91, bb124]

bb91
  0: _102 = move (_106.0: u32)
    SourceInfo(url/src/lib.rs:2049:17-2049:36)
  1: StorageDead(_105)
    SourceInfo(url/src/lib.rs:2049:35-2049:36)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2048:34-2052:14)
      kind: goto -> bb94
  }
  preds [bb90]
  succs [bb94]

bb92
  0: StorageDead(_104)
    SourceInfo(url/src/lib.rs:2048:57-2048:58)
  1: StorageLive(_107)
    SourceInfo(url/src/lib.rs:2051:17-2051:32)
  2: _107 = ((*_1).1: u32)
    SourceInfo(url/src/lib.rs:2051:17-2051:32)
  3: _108 = AddWithOverflow(_107, const 1_u32)
    SourceInfo(url/src/lib.rs:2051:17-2051:36)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2051:17-2051:36)
      kind: assert(!move (_108.1: bool), "attempt to compute `{} + {}`, which would overflow", move _107, const 1_u32) -> [success: bb93, unwind: bb124]
  }
  preds [bb89]
  succs [bb93, bb124]

bb93
  0: _102 = move (_108.0: u32)
    SourceInfo(url/src/lib.rs:2051:17-2051:36)
  1: StorageDead(_107)
    SourceInfo(url/src/lib.rs:2051:35-2051:36)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2048:34-2052:14)
      kind: goto -> bb94
  }
  preds [bb92]
  succs [bb94]

bb94
  0: StorageDead(_103)
    SourceInfo(url/src/lib.rs:2052:13-2052:14)
  1: FakeRead(ForLet(None), _102)
    SourceInfo(url/src/lib.rs:2048:17-2048:31)
  2: StorageLive(_109)
    SourceInfo(url/src/lib.rs:2054:13-2055:74)
  3: StorageLive(_110)
    SourceInfo(url/src/lib.rs:2054:13-2054:31)
  4: _110 = &mut ((*_1).0: std::string::String)
    SourceInfo(url/src/lib.rs:2054:13-2054:31)
  5: StorageLive(_111)
    SourceInfo(url/src/lib.rs:2055:24-2055:73)
  6: StorageLive(_112)
    SourceInfo(url/src/lib.rs:2055:24-2055:47)
  7: StorageLive(_113)
    SourceInfo(url/src/lib.rs:2055:24-2055:38)
  8: _113 = _102
    SourceInfo(url/src/lib.rs:2055:24-2055:38)
  9: _112 = move _113 as usize (IntToInt)
    SourceInfo(url/src/lib.rs:2055:24-2055:47)
  10: StorageDead(_113)
    SourceInfo(url/src/lib.rs:2055:46-2055:47)
  11: StorageLive(_114)
    SourceInfo(url/src/lib.rs:2055:49-2055:73)
  12: StorageLive(_115)
    SourceInfo(url/src/lib.rs:2055:49-2055:64)
  13: _115 = ((*_1).7: u32)
    SourceInfo(url/src/lib.rs:2055:49-2055:64)
  14: _114 = move _115 as usize (IntToInt)
    SourceInfo(url/src/lib.rs:2055:49-2055:73)
  15: StorageDead(_115)
    SourceInfo(url/src/lib.rs:2055:72-2055:73)
  16: _111 = core::ops::Range::<usize> { start: move _112, end: move _114 }
    SourceInfo(url/src/lib.rs:2055:24-2055:73)
  17: StorageDead(_114)
    SourceInfo(url/src/lib.rs:2055:72-2055:73)
  18: StorageDead(_112)
    SourceInfo(url/src/lib.rs:2055:72-2055:73)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2054:13-2055:74)
      kind: _109 = std::string::String::drain::<core::ops::Range<usize>>(move _110, move _111) -> [return: bb95, unwind: bb124]
  }
  preds [bb91, bb93]
  succs [bb95, bb124]

bb95
  0: StorageDead(_111)
    SourceInfo(url/src/lib.rs:2055:73-2055:74)
  1: StorageDead(_110)
    SourceInfo(url/src/lib.rs:2055:73-2055:74)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2055:74-2055:75)
      kind: drop(_109) -> [return: bb96, unwind: bb124]
  }
  preds [bb94]
  succs [bb96, bb124]

bb96
  0: StorageDead(_109)
    SourceInfo(url/src/lib.rs:2055:74-2055:75)
  1: StorageLive(_116)
    SourceInfo(url/src/lib.rs:2056:17-2056:23)
  2: StorageLive(_117)
    SourceInfo(url/src/lib.rs:2056:26-2056:41)
  3: _117 = ((*_1).7: u32)
    SourceInfo(url/src/lib.rs:2056:26-2056:41)
  4: StorageLive(_118)
    SourceInfo(url/src/lib.rs:2056:44-2056:58)
  5: _118 = _102
    SourceInfo(url/src/lib.rs:2056:44-2056:58)
  6: _119 = SubWithOverflow(_117, _118)
    SourceInfo(url/src/lib.rs:2056:26-2056:58)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2056:26-2056:58)
      kind: assert(!move (_119.1: bool), "attempt to compute `{} - {}`, which would overflow", move _117, move _118) -> [success: bb97, unwind: bb124]
  }
  preds [bb95]
  succs [bb97, bb124]

bb97
  0: _116 = move (_119.0: u32)
    SourceInfo(url/src/lib.rs:2056:26-2056:58)
  1: StorageDead(_118)
    SourceInfo(url/src/lib.rs:2056:57-2056:58)
  2: StorageDead(_117)
    SourceInfo(url/src/lib.rs:2056:57-2056:58)
  3: FakeRead(ForLet(None), _116)
    SourceInfo(url/src/lib.rs:2056:17-2056:23)
  4: StorageLive(_120)
    SourceInfo(url/src/lib.rs:2057:31-2057:45)
  5: _120 = _102
    SourceInfo(url/src/lib.rs:2057:31-2057:45)
  6: ((*_1).7: u32) = move _120
    SourceInfo(url/src/lib.rs:2057:13-2057:45)
  7: StorageDead(_120)
    SourceInfo(url/src/lib.rs:2057:44-2057:45)
  8: StorageLive(_121)
    SourceInfo(url/src/lib.rs:2058:33-2058:47)
  9: _121 = _102
    SourceInfo(url/src/lib.rs:2058:33-2058:47)
  10: ((*_1).2: u32) = move _121
    SourceInfo(url/src/lib.rs:2058:13-2058:47)
  11: StorageDead(_121)
    SourceInfo(url/src/lib.rs:2058:46-2058:47)
  12: StorageLive(_122)
    SourceInfo(url/src/lib.rs:2059:31-2059:45)
  13: _122 = _102
    SourceInfo(url/src/lib.rs:2059:31-2059:45)
  14: ((*_1).3: u32) = move _122
    SourceInfo(url/src/lib.rs:2059:13-2059:45)
  15: StorageDead(_122)
    SourceInfo(url/src/lib.rs:2059:44-2059:45)
  16: StorageLive(_123)
    SourceInfo(url/src/lib.rs:2060:29-2060:43)
  17: _123 = _102
    SourceInfo(url/src/lib.rs:2060:29-2060:43)
  18: ((*_1).4: u32) = move _123
    SourceInfo(url/src/lib.rs:2060:13-2060:43)
  19: StorageDead(_123)
    SourceInfo(url/src/lib.rs:2060:42-2060:43)
  20: StorageLive(_124)
    SourceInfo(url/src/lib.rs:2061:25-2061:29)
  21: _124 = core::option::Option::<u16>::None
    SourceInfo(url/src/lib.rs:2061:25-2061:29)
  22: ((*_1).6: core::option::Option<u16>) = move _124
    SourceInfo(url/src/lib.rs:2061:13-2061:29)
  23: StorageDead(_124)
    SourceInfo(url/src/lib.rs:2061:28-2061:29)
  24: StorageLive(_125)
    SourceInfo(url/src/lib.rs:2062:13-2064:14)
  25: PlaceMention(((*_1).8: core::option::Option<u32>))
    SourceInfo(url/src/lib.rs:2062:42-2062:58)
  26: _126 = discriminant(((*_1).8: core::option::Option<u32>))
    SourceInfo(url/src/lib.rs:2062:42-2062:58)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2062:20-2062:39)
      kind: switchInt(move _126) -> [1: bb98, otherwise: bb101]
  }
  preds [bb96]
  succs [bb98, bb101]

bb98
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2062:20-2062:39)
      kind: falseEdge -> [real: bb99, imaginary: bb101]
  }
  preds [bb97]
  succs [bb99, bb101]

bb99
  0: StorageLive(_127)
    SourceInfo(url/src/lib.rs:2062:25-2062:38)
  1: _127 = &mut ((((*_1).8: core::option::Option<u32>) as Some).0: u32)
    SourceInfo(url/src/lib.rs:2062:25-2062:38)
  2: StorageLive(_128)
    SourceInfo(url/src/lib.rs:2063:27-2063:33)
  3: _128 = _116
    SourceInfo(url/src/lib.rs:2063:27-2063:33)
  4: _129 = SubWithOverflow((*_127), _128)
    SourceInfo(url/src/lib.rs:2063:17-2063:33)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2063:17-2063:33)
      kind: assert(!move (_129.1: bool), "attempt to compute `{} - {}`, which would overflow", (*_127), move _128) -> [success: bb100, unwind: bb124]
  }
  preds [bb98]
  succs [bb100, bb124]

bb100
  0: (*_127) = move (_129.0: u32)
    SourceInfo(url/src/lib.rs:2063:17-2063:33)
  1: _125 = const ()
    SourceInfo(url/src/lib.rs:2063:17-2063:33)
  2: StorageDead(_128)
    SourceInfo(url/src/lib.rs:2063:32-2063:33)
  3: StorageDead(_127)
    SourceInfo(url/src/lib.rs:2064:13-2064:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2062:13-2064:14)
      kind: goto -> bb102
  }
  preds [bb99]
  succs [bb102]

bb101
  0: _125 = const ()
    SourceInfo(url/src/lib.rs:2064:14-2064:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2062:13-2064:14)
      kind: goto -> bb102
  }
  preds [bb97, bb98]
  succs [bb102]

bb102
  0: StorageDead(_125)
    SourceInfo(url/src/lib.rs:2064:13-2064:14)
  1: PlaceMention(((*_1).9: core::option::Option<u32>))
    SourceInfo(url/src/lib.rs:2065:42-2065:61)
  2: _130 = discriminant(((*_1).9: core::option::Option<u32>))
    SourceInfo(url/src/lib.rs:2065:42-2065:61)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2065:20-2065:39)
      kind: switchInt(move _130) -> [1: bb103, otherwise: bb106]
  }
  preds [bb100, bb101]
  succs [bb103, bb106]

bb103
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2065:20-2065:39)
      kind: falseEdge -> [real: bb104, imaginary: bb106]
  }
  preds [bb102]
  succs [bb104, bb106]

bb104
  0: StorageLive(_131)
    SourceInfo(url/src/lib.rs:2065:25-2065:38)
  1: _131 = &mut ((((*_1).9: core::option::Option<u32>) as Some).0: u32)
    SourceInfo(url/src/lib.rs:2065:25-2065:38)
  2: StorageLive(_132)
    SourceInfo(url/src/lib.rs:2066:27-2066:33)
  3: _132 = _116
    SourceInfo(url/src/lib.rs:2066:27-2066:33)
  4: _133 = SubWithOverflow((*_131), _132)
    SourceInfo(url/src/lib.rs:2066:17-2066:33)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2066:17-2066:33)
      kind: assert(!move (_133.1: bool), "attempt to compute `{} - {}`, which would overflow", (*_131), move _132) -> [success: bb105, unwind: bb124]
  }
  preds [bb103]
  succs [bb105, bb124]

bb105
  0: (*_131) = move (_133.0: u32)
    SourceInfo(url/src/lib.rs:2066:17-2066:33)
  1: _11 = const ()
    SourceInfo(url/src/lib.rs:2066:17-2066:33)
  2: StorageDead(_132)
    SourceInfo(url/src/lib.rs:2066:32-2066:33)
  3: StorageDead(_131)
    SourceInfo(url/src/lib.rs:2067:13-2067:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2065:13-2067:14)
      kind: goto -> bb107
  }
  preds [bb104]
  succs [bb107]

bb106
  0: _11 = const ()
    SourceInfo(url/src/lib.rs:2067:14-2067:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2065:13-2067:14)
      kind: goto -> bb107
  }
  preds [bb102, bb103]
  succs [bb107]

bb107
  0: StorageDead(_116)
    SourceInfo(url/src/lib.rs:2068:9-2068:10)
  1: StorageDead(_102)
    SourceInfo(url/src/lib.rs:2068:9-2068:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2039:16-2068:10)
      kind: goto -> bb109
  }
  preds [bb105, bb106]
  succs [bb109]

bb108
  0: StorageDead(_71)
    SourceInfo(url/src/lib.rs:2039:33-2039:34)
  1: _11 = const ()
    SourceInfo(url/src/lib.rs:2068:10-2068:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2039:16-2068:10)
      kind: goto -> bb109
  }
  preds [bb63]
  succs [bb109]

bb109
  0: StorageDead(_70)
    SourceInfo(url/src/lib.rs:2068:9-2068:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2015:9-2068:10)
      kind: goto -> bb110
  }
  preds [bb107, bb108]
  succs [bb110]

bb110
  0: StorageDead(_11)
    SourceInfo(url/src/lib.rs:2068:9-2068:10)
  1: StorageLive(_134)
    SourceInfo(url/src/lib.rs:2069:12-2069:14)
  2: _134 = ()
    SourceInfo(url/src/lib.rs:2069:12-2069:14)
  3: _0 = core::result::Result::<(), parser::ParseError>::Ok(move _134)
    SourceInfo(url/src/lib.rs:2069:9-2069:15)
  4: StorageDead(_134)
    SourceInfo(url/src/lib.rs:2069:14-2069:15)
  5: StorageDead(_8)
    SourceInfo(url/src/lib.rs:2070:5-2070:6)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2070:6-2070:6)
      kind: goto -> bb117
  }
  preds [bb61, bb109]
  succs [bb117]

bb111
  0: StorageDead(_61)
    SourceInfo(url/src/lib.rs:2037:79-2037:80)
  1: StorageDead(_58)
    SourceInfo(url/src/lib.rs:2037:79-2037:80)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb113
  }
  preds [bb57]
  succs [bb113]

bb112
  0: StorageDead(_49)
    SourceInfo(url/src/lib.rs:2035:72-2035:73)
  1: StorageDead(_46)
    SourceInfo(url/src/lib.rs:2035:72-2035:73)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb113
  }
  preds [bb46]
  succs [bb113]

bb113
  0: StorageDead(_41)
    SourceInfo(url/src/lib.rs:2038:13-2038:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb114
  }
  preds [bb111, bb112]
  succs [bb114]

bb114
  0: StorageDead(_23)
    SourceInfo(url/src/lib.rs:2039:9-2039:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb115
  }
  preds [bb31, bb113]
  succs [bb115]

bb115
  0: StorageDead(_13)
    SourceInfo(url/src/lib.rs:2039:9-2039:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb116
  }
  preds [bb14, bb114]
  succs [bb116]

bb116
  0: StorageDead(_11)
    SourceInfo(url/src/lib.rs:2068:9-2068:10)
  1: StorageDead(_8)
    SourceInfo(url/src/lib.rs:2070:5-2070:6)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb117
  }
  preds [bb69, bb115]
  succs [bb117]

bb117
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2070:6-2070:6)
      kind: return
  }
  preds [bb2, bb110, bb116]
  succs []

bb118
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2037:78-2037:79)
      kind: drop(_60) -> [return: bb119, unwind terminate(cleanup)]
  }
  preds [bb58]
  succs [bb119]

bb119
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2037:79-2037:80)
      kind: drop(_61) -> [return: bb124, unwind terminate(cleanup)]
  }
  preds [bb55, bb56, bb118]
  succs [bb124]

bb120
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2037:71-2037:72)
      kind: drop(_62) -> [return: bb124, unwind terminate(cleanup)]
  }
  preds [bb51]
  succs [bb124]

bb121
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2035:71-2035:72)
      kind: drop(_48) -> [return: bb122, unwind terminate(cleanup)]
  }
  preds [bb47]
  succs [bb122]

bb122
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2035:72-2035:73)
      kind: drop(_49) -> [return: bb124, unwind terminate(cleanup)]
  }
  preds [bb44, bb45, bb121]
  succs [bb124]

bb123
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2035:64-2035:65)
      kind: drop(_50) -> [return: bb124, unwind terminate(cleanup)]
  }
  preds [bb40]
  succs [bb124]

bb124
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:2008:5-2070:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb7, bb9, bb11, bb17, bb19, bb24, bb32, bb35, bb36, bb37, bb39, bb46, bb48, bb50, bb57, bb59, bb62, bb64, bb66, bb71, bb73, bb77, bb81, bb83, bb86, bb88, bb90, bb92, bb94, bb95, bb96, bb99, bb104, bb119, bb120, bb122, bb123]
  succs []

