bb0
  0: StorageLive(_3)
    SourceInfo(url/src/parser.rs:1426:9-1439:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1426:9-1439:10)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1426:9-1439:10)
      kind: falseUnwind -> [real: bb2, unwind: bb25]
  }
  preds [bb0, bb23]
  succs [bb2, bb25]

bb2
  0: StorageLive(_5)
    SourceInfo(url/src/parser.rs:1427:17-1427:31)
  1: StorageLive(_6)
    SourceInfo(url/src/parser.rs:1427:34-1427:39)
  2: _6 = &_2
    SourceInfo(url/src/parser.rs:1427:34-1427:39)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1427:34-1427:47)
      kind: _5 = <parser::Input<'_> as core::clone::Clone>::clone(move _6) -> [return: bb3, unwind: bb25]
  }
  preds [bb1]
  succs [bb3, bb25]

bb3
  0: StorageDead(_6)
    SourceInfo(url/src/parser.rs:1427:46-1427:47)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(url/src/parser.rs:1427:17-1427:31)
  2: StorageLive(_7)
    SourceInfo(url/src/parser.rs:1428:19-1428:36)
  3: StorageLive(_8)
    SourceInfo(url/src/parser.rs:1428:19-1428:24)
  4: _8 = &mut _2
    SourceInfo(url/src/parser.rs:1428:19-1428:24)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1428:19-1428:36)
      kind: _7 = parser::Input::<'_>::next_utf8(move _8) -> [return: bb4, unwind: bb25]
  }
  preds [bb2]
  succs [bb4, bb25]

bb4
  0: StorageDead(_8)
    SourceInfo(url/src/parser.rs:1428:35-1428:36)
  1: PlaceMention(_7)
    SourceInfo(url/src/parser.rs:1428:19-1428:36)
  2: _11 = discriminant(_7)
    SourceInfo(url/src/parser.rs:1428:19-1428:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1428:13-1428:36)
      kind: switchInt(move _11) -> [0: bb10, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb10]

bb5
  0: FakeRead(ForMatchedPlace(None), _7)
    SourceInfo(url/src/parser.rs:1428:19-1428:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1428:19-1428:36)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1428:13-1428:36)
      kind: switchInt((((_7 as Some).0: (char, &str)).0: char)) -> [63: bb8, 35: bb9, otherwise: bb7]
  }
  preds [bb4]
  succs [bb7, bb8, bb9]

bb7
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1432:17-1432:34)
      kind: falseEdge -> [real: bb20, imaginary: bb10]
  }
  preds [bb6, bb9, bb15, bb19, bb19]
  succs [bb10, bb20]

bb8
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1429:17-1429:31)
      kind: falseEdge -> [real: bb12, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb12]

bb9
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1429:34-1429:48)
      kind: falseEdge -> [real: bb16, imaginary: bb7]
  }
  preds [bb6, bb8, bb15]
  succs [bb7, bb16]

bb10
  0: _0 = move _2
    SourceInfo(url/src/parser.rs:1437:32-1437:37)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1437:25-1437:37)
      kind: goto -> bb24
  }
  preds [bb4, bb7]
  succs [bb24]

bb11
  0: _0 = move _5
    SourceInfo(url/src/parser.rs:1430:28-1430:42)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1430:21-1430:42)
      kind: goto -> bb24
  }
  preds [bb14, bb18]
  succs [bb24]

bb12
  0: _9 = &fake shallow _7
    SourceInfo(url/src/parser.rs:1428:19-1428:36)
  1: _10 = &fake shallow (((_7 as Some).0: (char, &str)).0: char)
    SourceInfo(url/src/parser.rs:1428:19-1428:36)
  2: StorageLive(_12)
    SourceInfo(url/src/parser.rs:1429:52-1429:86)
  3: StorageLive(_13)
    SourceInfo(url/src/parser.rs:1429:52-1429:64)
  4: _13 = &((*_1).4: parser::Context)
    SourceInfo(url/src/parser.rs:1429:52-1429:64)
  5: StorageLive(_14)
    SourceInfo(url/src/parser.rs:1429:68-1429:86)
  6: StorageLive(_15)
    SourceInfo(url/src/parser.rs:1429:68-1429:86)
  7: _15 = parser::Context::UrlParser
    SourceInfo(url/src/parser.rs:1429:68-1429:86)
  8: _14 = &_15
    SourceInfo(url/src/parser.rs:1429:68-1429:86)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1429:52-1429:86)
      kind: _12 = <parser::Context as core::cmp::PartialEq>::eq(move _13, move _14) -> [return: bb13, unwind: bb25]
  }
  preds [bb8]
  succs [bb13, bb25]

bb13
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1429:52-1429:86)
      kind: switchInt(move _12) -> [0: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15]

bb14
  0: StorageDead(_15)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  1: StorageDead(_14)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  2: StorageDead(_13)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  3: StorageDead(_12)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  4: FakeRead(ForMatchGuard, _9)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  5: FakeRead(ForMatchGuard, _10)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1428:13-1438:14)
      kind: goto -> bb11
  }
  preds [bb13]
  succs [bb11]

bb15
  0: StorageDead(_15)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  1: StorageDead(_14)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  2: StorageDead(_13)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  3: StorageDead(_12)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1429:52-1429:86)
      kind: falseEdge -> [real: bb7, imaginary: bb9]
  }
  preds [bb13]
  succs [bb7, bb9]

bb16
  0: _9 = &fake shallow _7
    SourceInfo(url/src/parser.rs:1428:19-1428:36)
  1: _10 = &fake shallow (((_7 as Some).0: (char, &str)).0: char)
    SourceInfo(url/src/parser.rs:1428:19-1428:36)
  2: StorageLive(_16)
    SourceInfo(url/src/parser.rs:1429:52-1429:86)
  3: StorageLive(_17)
    SourceInfo(url/src/parser.rs:1429:52-1429:64)
  4: _17 = &((*_1).4: parser::Context)
    SourceInfo(url/src/parser.rs:1429:52-1429:64)
  5: StorageLive(_18)
    SourceInfo(url/src/parser.rs:1429:68-1429:86)
  6: StorageLive(_19)
    SourceInfo(url/src/parser.rs:1429:68-1429:86)
  7: _19 = parser::Context::UrlParser
    SourceInfo(url/src/parser.rs:1429:68-1429:86)
  8: _18 = &_19
    SourceInfo(url/src/parser.rs:1429:68-1429:86)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1429:52-1429:86)
      kind: _16 = <parser::Context as core::cmp::PartialEq>::eq(move _17, move _18) -> [return: bb17, unwind: bb25]
  }
  preds [bb9]
  succs [bb17, bb25]

bb17
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1429:52-1429:86)
      kind: switchInt(move _16) -> [0: bb19, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19]

bb18
  0: StorageDead(_19)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  1: StorageDead(_18)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  2: StorageDead(_17)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  3: StorageDead(_16)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  4: FakeRead(ForMatchGuard, _9)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  5: FakeRead(ForMatchGuard, _10)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1428:13-1438:14)
      kind: goto -> bb11
  }
  preds [bb17]
  succs [bb11]

bb19
  0: StorageDead(_19)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  1: StorageDead(_18)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  2: StorageDead(_17)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  3: StorageDead(_16)
    SourceInfo(url/src/parser.rs:1429:85-1429:86)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1429:52-1429:86)
      kind: falseEdge -> [real: bb7, imaginary: bb7]
  }
  preds [bb17]
  succs [bb7, bb7]

bb20
  0: StorageLive(_21)
    SourceInfo(url/src/parser.rs:1432:23-1432:24)
  1: _21 = (((_7 as Some).0: (char, &str)).0: char)
    SourceInfo(url/src/parser.rs:1432:23-1432:24)
  2: StorageLive(_22)
    SourceInfo(url/src/parser.rs:1432:26-1432:32)
  3: _22 = (((_7 as Some).0: (char, &str)).1: &str)
    SourceInfo(url/src/parser.rs:1432:26-1432:32)
  4: StorageLive(_23)
    SourceInfo(url/src/parser.rs:1433:21-1433:57)
  5: StorageLive(_24)
    SourceInfo(url/src/parser.rs:1433:21-1433:25)
  6: _24 = &(*_1)
    SourceInfo(url/src/parser.rs:1433:21-1433:25)
  7: StorageLive(_25)
    SourceInfo(url/src/parser.rs:1433:47-1433:48)
  8: _25 = _21
    SourceInfo(url/src/parser.rs:1433:47-1433:48)
  9: StorageLive(_26)
    SourceInfo(url/src/parser.rs:1433:50-1433:56)
  10: StorageLive(_27)
    SourceInfo(url/src/parser.rs:1433:50-1433:56)
  11: _27 = &_2
    SourceInfo(url/src/parser.rs:1433:50-1433:56)
  12: _26 = &(*_27)
    SourceInfo(url/src/parser.rs:1433:50-1433:56)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1433:21-1433:57)
      kind: _23 = parser::Parser::<'_>::check_url_code_point(move _24, move _25, move _26) -> [return: bb21, unwind: bb25]
  }
  preds [bb7]
  succs [bb21, bb25]

bb21
  0: StorageDead(_26)
    SourceInfo(url/src/parser.rs:1433:56-1433:57)
  1: StorageDead(_25)
    SourceInfo(url/src/parser.rs:1433:56-1433:57)
  2: StorageDead(_24)
    SourceInfo(url/src/parser.rs:1433:56-1433:57)
  3: StorageDead(_27)
    SourceInfo(url/src/parser.rs:1433:57-1433:58)
  4: StorageDead(_23)
    SourceInfo(url/src/parser.rs:1433:57-1433:58)
  5: StorageLive(_28)
    SourceInfo(url/src/parser.rs:1434:21-1435:71)
  6: StorageLive(_29)
    SourceInfo(url/src/parser.rs:1434:21-1434:39)
  7: _29 = &mut ((*_1).0: std::string::String)
    SourceInfo(url/src/parser.rs:1434:21-1434:39)
  8: StorageLive(_30)
    SourceInfo(url/src/parser.rs:1435:33-1435:70)
  9: StorageLive(_31)
    SourceInfo(url/src/parser.rs:1435:53-1435:59)
  10: _31 = &(*_22)
    SourceInfo(url/src/parser.rs:1435:53-1435:59)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1435:33-1435:70)
      kind: _30 = percent_encoding::utf8_percent_encode(move _31, const percent_encoding::CONTROLS) -> [return: bb22, unwind: bb25]
  }
  preds [bb20]
  succs [bb22, bb25]

bb22
  0: StorageDead(_31)
    SourceInfo(url/src/parser.rs:1435:69-1435:70)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1434:21-1435:71)
      kind: _28 = <std::string::String as core::iter::Extend<&str>>::extend::<percent_encoding::PercentEncode<'_>>(move _29, move _30) -> [return: bb23, unwind: bb25]
  }
  preds [bb21]
  succs [bb23, bb25]

bb23
  0: StorageDead(_30)
    SourceInfo(url/src/parser.rs:1435:70-1435:71)
  1: StorageDead(_29)
    SourceInfo(url/src/parser.rs:1435:70-1435:71)
  2: StorageDead(_28)
    SourceInfo(url/src/parser.rs:1435:71-1435:72)
  3: _4 = const ()
    SourceInfo(url/src/parser.rs:1432:38-1436:18)
  4: StorageDead(_22)
    SourceInfo(url/src/parser.rs:1436:17-1436:18)
  5: StorageDead(_21)
    SourceInfo(url/src/parser.rs:1436:17-1436:18)
  6: StorageDead(_5)
    SourceInfo(url/src/parser.rs:1439:9-1439:10)
  7: StorageDead(_7)
    SourceInfo(url/src/parser.rs:1439:9-1439:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1426:9-1439:10)
      kind: goto -> bb1
  }
  preds [bb22]
  succs [bb1]

bb24
  0: StorageDead(_5)
    SourceInfo(url/src/parser.rs:1439:9-1439:10)
  1: StorageDead(_7)
    SourceInfo(url/src/parser.rs:1439:9-1439:10)
  2: StorageDead(_3)
    SourceInfo(url/src/parser.rs:1439:9-1439:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1440:6-1440:6)
      kind: return
  }
  preds [bb10, bb11]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1425:5-1440:6)
      kind: resume
  }
  preds [bb1, bb2, bb3, bb12, bb16, bb20, bb21, bb22]
  succs []

