{
  "url/src/lib.rs:3131:63:3131:90": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "first.as_bytes()[1] != b':'",
          "lhs": "first.as_bytes()[1]",
          "rhs": "b':'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:3143:20:3143:36": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "bytes[1] != b'%'",
          "lhs": "bytes[1]",
          "rhs": "b'%'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:3123:8:3123:29": [
    {
      "Bool": {
        "Other": "let Some(host) = host"
      }
    }
  ],
  "url/src/lib.rs:3159:15:3159:56": [
    {
      "Match": {
        "match_source": "url/src/lib.rs:3159:15:3159:56",
        "match_str": "percent_decode_str(segment).decode_utf8()",
        "match_kind": {
          "Enum": [
            "Ok",
            "Err"
          ]
        },
        "arms": {
          "url/src/lib.rs:3160:13:3160:18": {
            "pat": {
              "pat_str": "Ok(s)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:3160:22:3160:41"
          },
          "url/src/lib.rs:3161:13:3161:20": {
            "pat": {
              "pat_str": "Err(..)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:3161:24:3161:38"
          }
        }
      }
    }
  ],
  "url/src/lib.rs:3143:81:3143:97": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "bytes[3] != b'A'",
          "lhs": "bytes[3]",
          "rhs": "b'A'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:3122:5:3122:60": [
    {
      "Try": "string.try_reserve(estimated_capacity).map_err(|_| ())?"
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "url/src/lib.rs:3127:21:3127:47": [
    {
      "Try": "segments.next().ok_or(())?"
    }
  ],
  "url/src/lib.rs:3155:20:3155:28": [
    {
      "For": {
        "iter_var": "segment",
        "iter_range": "segments"
      }
    }
  ],
  "url/src/lib.rs:3129:15:3129:26": [
    {
      "Match": {
        "match_source": "url/src/lib.rs:3129:15:3129:26",
        "match_str": "first.len()",
        "match_kind": "Other",
        "arms": {
          "url/src/lib.rs:3151:13:3151:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "url/src/lib.rs:3151:18:3151:32"
          },
          "url/src/lib.rs:3130:13:3130:14": {
            "pat": {
              "pat_str": "2",
              "kind": {
                "Other": 2
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:3130:18:3136:14"
          },
          "url/src/lib.rs:3138:13:3138:14": {
            "pat": {
              "pat_str": "4",
              "kind": {
                "Other": 4
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:3138:18:3149:14"
          }
        }
      }
    }
  ],
  "url/src/lib.rs:3167:13:3167:47": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "string.len() <= estimated_capacity",
          "lhs": "string.len()",
          "rhs": "estimated_capacity",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:3175:9:3175:27": [
    {
      "Bool": {
        "Other": "path.is_absolute()"
      }
    }
  ],
  "url/src/lib.rs:3143:61:3143:77": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "bytes[3] != b'a'",
          "lhs": "bytes[3]",
          "rhs": "b'a'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:3143:40:3143:56": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "bytes[2] != b'3'",
          "lhs": "bytes[2]",
          "rhs": "b'3'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:3131:21:3131:59": [
    {
      "Bool": {
        "Other": "first.starts_with(parser::ascii_alpha)"
      }
    }
  ],
  "url/src/lib.rs:3165:8:3165:18": [
    {
      "Bool": {
        "Other": "cfg!(test)"
      }
    }
  ],
  "url/src/lib.rs:3139:21:3139:59": [
    {
      "Bool": {
        "Other": "first.starts_with(parser::ascii_alpha)"
      }
    }
  ]
}