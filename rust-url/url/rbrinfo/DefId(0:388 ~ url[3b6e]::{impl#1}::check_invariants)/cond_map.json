{
  "url/src/lib.rs:708:17:708:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "self.scheme_end >= 1",
          "lhs": "self.scheme_end",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:724:37:724:77": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.host_start == self.username_end + 1",
          "lhs": "self.host_start",
          "rhs": "self.username_end + 1",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:699:24:699:30": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "a != b",
          "lhs": "a",
          "rhs": "b",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:718:16:718:68": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "self.username_end != self.serialization.len() as u32",
          "lhs": "self.username_end",
          "rhs": "self.serialization.len() as u32",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:728:21:728:57": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "self.host_start >= self.username_end",
          "lhs": "self.host_start",
          "rhs": "self.username_end",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:775:21:775:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "start >= self.path_start",
          "lhs": "start",
          "rhs": "self.path_start",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:719:23:719:54": [
    {
      "Match": {
        "match_source": "url/src/lib.rs:719:23:719:54",
        "match_str": "self.byte_at(self.username_end)",
        "match_kind": "Other",
        "arms": {
          "url/src/lib.rs:720:21:720:25": {
            "pat": {
              "pat_str": "b':'",
              "kind": {
                "Other": 58
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:720:29:723:22"
          },
          "url/src/lib.rs:724:21:724:25": {
            "pat": {
              "pat_str": "b'@'",
              "kind": {
                "Other": 64
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:684:17:690:18"
          },
          "url/src/lib.rs:725:21:725:22": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "url/src/lib.rs:696:17:704:18"
          }
        }
      }
    }
  ],
  "url/src/lib.rs:724:56:724:77": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.username_end + 1",
          "lhs": "self.username_end",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:774:12:774:46": [
    {
      "Bool": {
        "Other": "let Some(start) = self.query_start"
      }
    }
  ],
  "url/src/lib.rs:721:52:721:73": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.username_end + 2",
          "lhs": "self.username_end",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:457:9:460:10": [
    {
      "Match": {
        "match_source": "url/src/lib.rs:756:33:756:62",
        "match_str": "self.byte_at(self.path_start)",
        "match_kind": "Other",
        "arms": {
          "url/src/lib.rs:756:64:756:68": {
            "pat": {
              "pat_str": "b'/'",
              "kind": {
                "Other": 47
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:78:756:82": {
            "pat": {
              "pat_str": "b'?'",
              "kind": {
                "Other": 63
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:71:756:75": {
            "pat": {
              "pat_str": "b'#'",
              "kind": {
                "Other": 35
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "url/src/lib.rs:756:33:756:62",
        "match_str": "self.byte_at(self.path_start)",
        "match_kind": "Other",
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:64:756:68": {
            "pat": {
              "pat_str": "b'/'",
              "kind": {
                "Other": 47
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:71:756:75": {
            "pat": {
              "pat_str": "b'#'",
              "kind": {
                "Other": 35
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:78:756:82": {
            "pat": {
              "pat_str": "b'?'",
              "kind": {
                "Other": 63
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "url/src/lib.rs:756:33:756:62",
        "match_str": "self.byte_at(self.path_start)",
        "match_kind": "Other",
        "arms": {
          "url/src/lib.rs:756:64:756:68": {
            "pat": {
              "pat_str": "b'/'",
              "kind": {
                "Other": 47
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:71:756:75": {
            "pat": {
              "pat_str": "b'#'",
              "kind": {
                "Other": 35
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:78:756:82": {
            "pat": {
              "pat_str": "b'?'",
              "kind": {
                "Other": 63
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "url/src/lib.rs:729:21:729:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "self.host_end >= self.host_start",
          "lhs": "self.host_end",
          "rhs": "self.host_start",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:778:12:778:49": [
    {
      "Bool": {
        "Other": "let Some(start) = self.fragment_start"
      }
    }
  ],
  "url/src/lib.rs:783:21:783:49": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "fragment_start > query_start",
          "lhs": "fragment_start",
          "rhs": "query_start",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:768:41:768:60": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.scheme_end + 2",
          "lhs": "self.scheme_end",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:762:39:762:58": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.scheme_end + 1",
          "lhs": "self.scheme_end",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:793:13:793:36": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.host == other.host",
          "lhs": "self.host",
          "rhs": "other.host",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:710:17:713:87": [
    {
      "Bool": {
        "Other": "self\n            .slice(1..self.scheme_end)\n            .chars()\n            .all(|c| matches!(c, 'a'..='z' | 'A'..='Z' | '0'..='9' | '+' | '-' | '.'))"
      }
    }
  ],
  "url/src/lib.rs:755:17:755:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.path_start as usize == self.serialization.len()",
          "lhs": "self.path_start as usize",
          "rhs": "self.serialization.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:761:41:761:60": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.scheme_end + 1",
          "lhs": "self.scheme_end",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:739:24:739:68": [
    {
      "Bool": {
        "Other": "SchemeType::from(self.scheme()).is_special()"
      }
    }
  ],
  "url/src/lib.rs:716:12:716:63": [
    {
      "Bool": {
        "Other": "self.slice(self.scheme_end + 1..).starts_with(\"//\")"
      }
    }
  ],
  "url/src/lib.rs:716:23:716:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.scheme_end + 1",
          "lhs": "self.scheme_end",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:771:45:771:64": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.scheme_end + 1",
          "lhs": "self.scheme_end",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:731:19:731:28": [
    {
      "Match": {
        "match_source": "url/src/lib.rs:731:19:731:28",
        "match_str": "self.host",
        "match_kind": {
          "Enum": [
            "None",
            "Domain",
            "Ipv4",
            "Ipv6"
          ]
        },
        "arms": {
          "url/src/lib.rs:738:17:738:37": {
            "pat": {
              "pat_str": "HostInternal::Domain",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:738:41:742:18"
          },
          "url/src/lib.rs:733:17:733:44": {
            "pat": {
              "pat_str": "HostInternal::Ipv4(address)",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:696:17:704:18"
          },
          "url/src/lib.rs:734:17:734:44": {
            "pat": {
              "pat_str": "HostInternal::Ipv6(address)",
              "kind": {
                "Enum": 3
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:734:48:737:18"
          },
          "url/src/lib.rs:732:17:732:35": {
            "pat": {
              "pat_str": "HostInternal::None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:696:17:704:18"
          }
        }
      }
    }
  ],
  "url/src/lib.rs:756:33:756:62": [
    {
      "Match": {
        "match_source": "url/src/lib.rs:756:33:756:62",
        "match_str": "self.byte_at(self.path_start)",
        "match_kind": "Other",
        "arms": {
          "url/src/lib.rs:756:64:756:68": {
            "pat": {
              "pat_str": "b'/'",
              "kind": {
                "Other": 47
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:71:756:75": {
            "pat": {
              "pat_str": "b'#'",
              "kind": {
                "Other": 35
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:78:756:82": {
            "pat": {
              "pat_str": "b'?'",
              "kind": {
                "Other": 63
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "url/src/lib.rs:756:33:756:62",
        "match_str": "self.byte_at(self.path_start)",
        "match_kind": "Other",
        "arms": {
          "url/src/lib.rs:756:64:756:68": {
            "pat": {
              "pat_str": "b'/'",
              "kind": {
                "Other": 47
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:78:756:82": {
            "pat": {
              "pat_str": "b'?'",
              "kind": {
                "Other": 63
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:71:756:75": {
            "pat": {
              "pat_str": "b'#'",
              "kind": {
                "Other": 35
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "url/src/lib.rs:756:33:756:62",
        "match_str": "self.byte_at(self.path_start)",
        "match_kind": "Other",
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:64:756:68": {
            "pat": {
              "pat_str": "b'/'",
              "kind": {
                "Other": 47
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:71:756:75": {
            "pat": {
              "pat_str": "b'#'",
              "kind": {
                "Other": 35
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/lib.rs:756:78:756:82": {
            "pat": {
              "pat_str": "b'?'",
              "kind": {
                "Other": 63
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "url/src/lib.rs:725:56:725:75": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.scheme_end + 3",
          "lhs": "self.scheme_end",
          "rhs": "3",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:721:33:721:73": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "self.host_start >= self.username_end + 2",
          "lhs": "self.host_start",
          "rhs": "self.username_end + 2",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:767:41:767:60": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.scheme_end + 1",
          "lhs": "self.scheme_end",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:722:49:722:68": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.host_start - 1",
          "lhs": "self.host_start",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:765:16:765:45": [
    {
      "Bool": {
        "Other": "self.path().starts_with(\"//\")"
      }
    }
  ],
  "url/src/lib.rs:769:45:769:64": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.scheme_end + 3",
          "lhs": "self.scheme_end",
          "rhs": "3",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:782:12:782:99": [
    {
      "Bool": {
        "Other": "let (Some(query_start), Some(fragment_start)) = (self.query_start, self.fragment_start)"
      }
    }
  ],
  "url/src/lib.rs:709:17:709:54": [
    {
      "Bool": {
        "Other": "self.byte_at(0).is_ascii_alphabetic()"
      }
    }
  ],
  "url/src/lib.rs:796:17:796:72": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "(self.host_str(), other.host_str()) == (None, Some(\"\"))",
          "lhs": "(self.host_str(), other.host_str())",
          "rhs": "(None, Some(\"\"))",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:740:34:740:53": [
    {
      "Bool": {
        "Other": "host_str.is_empty()"
      }
    }
  ],
  "url/src/lib.rs:779:21:779:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "start >= self.path_start",
          "lhs": "start",
          "rhs": "self.path_start",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:760:43:760:62": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.scheme_end + 1",
          "lhs": "self.scheme_end",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:748:43:748:60": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.host_end + 1",
          "lhs": "self.host_end",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/lib.rs:744:16:744:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.path_start == self.host_end",
          "lhs": "self.path_start",
          "rhs": "self.host_end",
          "cmp_with_int": false
        }
      }
    }
  ]
}