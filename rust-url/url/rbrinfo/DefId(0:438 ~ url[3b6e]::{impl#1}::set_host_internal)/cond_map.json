{
  "url/src/lib.rs:2083:27:2083:63": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.username_end == self.host_start",
          "lhs": "self.username_end",
          "rhs": "self.host_start",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:2074:33:2074:55": [
    {
      "Bool": {
        "Other": "opt_new_port.is_some()"
      }
    }
  ],
  "url/src/lib.rs:2081:13:2081:33": [
    {
      "Bool": {
        "Other": "self.has_authority()"
      }
    }
  ],
  "url/src/lib.rs:2093:12:2093:45": [
    {
      "Bool": {
        "Other": "let Some(new_port) = opt_new_port"
      }
    }
  ],
  "url/src/lib.rs:2095:16:2095:41": [
    {
      "Bool": {
        "Other": "let Some(port) = new_port"
      }
    }
  ],
  "url/src/lib.rs:2110:12:2110:57": [
    {
      "Bool": {
        "Other": "let Some(ref mut index) = self.fragment_start"
      }
    }
  ],
  "url/src/lib.rs:2107:12:2107:54": [
    {
      "Bool": {
        "Other": "let Some(ref mut index) = self.query_start"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "url/src/lib.rs:2082:27:2082:78": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.slice(self.scheme_end..self.host_start) == \":\"",
          "lhs": "self.slice(self.scheme_end..self.host_start)",
          "rhs": "\":\"",
          "cmp_with_int": false
        }
      }
    }
  ]
}