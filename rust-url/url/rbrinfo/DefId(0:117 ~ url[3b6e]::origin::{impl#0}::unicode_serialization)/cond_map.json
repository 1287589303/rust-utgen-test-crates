{
  "url/src/origin.rs:93:15:93:20": [
    {
      "Match": {
        "match_source": "url/src/origin.rs:93:15:93:20",
        "match_str": "*self",
        "match_kind": {
          "Enum": [
            "Opaque",
            "Tuple"
          ]
        },
        "arms": {
          "url/src/origin.rs:95:13:95:54": {
            "pat": {
              "pat_str": "Origin::Tuple(ref scheme, ref host, port)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/origin.rs:95:58:108:14"
          },
          "url/src/origin.rs:94:13:94:30": {
            "pat": {
              "pat_str": "Origin::Opaque(_)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "url/src/origin.rs:94:34:94:51"
          }
        }
      }
    }
  ],
  "url/src/origin.rs:96:34:96:39": [
    {
      "Match": {
        "match_source": "url/src/origin.rs:96:34:96:39",
        "match_str": "*host",
        "match_kind": {
          "Enum": [
            "Domain",
            "Ipv4",
            "Ipv6"
          ]
        },
        "arms": {
          "url/src/origin.rs:97:21:97:45": {
            "pat": {
              "pat_str": "Host::Domain(ref domain)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "url/src/origin.rs:97:49:100:22"
          },
          "url/src/origin.rs:101:21:101:22": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "url/src/origin.rs:101:26:101:38"
          }
        }
      }
    }
  ],
  "url/src/origin.rs:103:20:103:54": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "default_port(scheme) == Some(port)",
          "lhs": "default_port(scheme)",
          "rhs": "Some(port)",
          "cmp_with_int": false
        }
      }
    }
  ]
}