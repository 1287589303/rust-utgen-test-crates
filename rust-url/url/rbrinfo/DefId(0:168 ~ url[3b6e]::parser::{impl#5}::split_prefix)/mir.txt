bb0
  0: StorageLive(_3)
    SourceInfo(url/src/parser.rs:255:13-255:26)
  1: StorageLive(_4)
    SourceInfo(url/src/parser.rs:255:29-255:33)
  2: _4 = &(*_1)
    SourceInfo(url/src/parser.rs:255:29-255:33)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:255:29-255:41)
      kind: _3 = <parser::Input<'_> as core::clone::Clone>::clone(move _4) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_4)
    SourceInfo(url/src/parser.rs:255:40-255:41)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(url/src/parser.rs:255:13-255:26)
  2: StorageLive(_5)
    SourceInfo(url/src/parser.rs:256:12-256:42)
  3: StorageLive(_6)
    SourceInfo(url/src/parser.rs:256:12-256:13)
  4: _6 = move _2
    SourceInfo(url/src/parser.rs:256:12-256:13)
  5: StorageLive(_7)
    SourceInfo(url/src/parser.rs:256:27-256:41)
  6: StorageLive(_8)
    SourceInfo(url/src/parser.rs:256:27-256:41)
  7: _8 = &mut _3
    SourceInfo(url/src/parser.rs:256:27-256:41)
  8: _7 = &mut (*_8)
    SourceInfo(url/src/parser.rs:256:27-256:41)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:256:12-256:42)
      kind: _5 = <P as parser::Pattern>::split_prefix(move _6, move _7) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:256:12-256:42)
      kind: switchInt(move _5) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_8)
    SourceInfo(url/src/parser.rs:256:41-256:42)
  1: StorageDead(_7)
    SourceInfo(url/src/parser.rs:256:41-256:42)
  2: StorageDead(_6)
    SourceInfo(url/src/parser.rs:256:41-256:42)
  3: StorageLive(_9)
    SourceInfo(url/src/parser.rs:257:18-257:27)
  4: _9 = move _3
    SourceInfo(url/src/parser.rs:257:18-257:27)
  5: _0 = core::option::Option::<parser::Input<'_>>::Some(move _9)
    SourceInfo(url/src/parser.rs:257:13-257:28)
  6: StorageDead(_9)
    SourceInfo(url/src/parser.rs:257:27-257:28)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:256:9-260:10)
      kind: goto -> bb6
  }
  preds [bb2]
  succs [bb6]

bb4
  0: StorageDead(_8)
    SourceInfo(url/src/parser.rs:256:41-256:42)
  1: StorageDead(_7)
    SourceInfo(url/src/parser.rs:256:41-256:42)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:256:41-256:42)
      kind: drop(_6) -> [return: bb5, unwind: bb9]
  }
  preds [bb2]
  succs [bb5, bb9]

bb5
  0: StorageDead(_6)
    SourceInfo(url/src/parser.rs:256:41-256:42)
  1: _0 = core::option::Option::<parser::Input<'_>>::None
    SourceInfo(url/src/parser.rs:259:13-259:17)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:256:9-260:10)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  0: StorageDead(_5)
    SourceInfo(url/src/parser.rs:260:9-260:10)
  1: StorageDead(_3)
    SourceInfo(url/src/parser.rs:261:5-261:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:261:5-261:6)
      kind: drop(_2) -> [return: bb7, unwind: bb10]
  }
  preds [bb3, bb5]
  succs [bb7, bb10]

bb7
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:261:6-261:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:256:41-256:42)
      kind: drop(_6) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:261:5-261:6)
      kind: drop(_2) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb0, bb4, bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:254:5-261:6)
      kind: resume
  }
  preds [bb6, bb9]
  succs []

