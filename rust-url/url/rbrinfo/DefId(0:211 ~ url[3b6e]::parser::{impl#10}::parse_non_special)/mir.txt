bb0
  0: StorageLive(_5)
    SourceInfo(url/src/parser.rs:479:9-481:10)
  1: StorageLive(_6)
    SourceInfo(url/src/parser.rs:479:30-479:54)
  2: StorageLive(_7)
    SourceInfo(url/src/parser.rs:479:30-479:35)
  3: _7 = &_2
    SourceInfo(url/src/parser.rs:479:30-479:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:479:30-479:54)
      kind: _6 = parser::Input::<'_>::split_prefix::<&str>(move _7, const "//") -> [return: bb1, unwind: bb27]
  }
  preds []
  succs [bb1, bb27]

bb1
  0: StorageDead(_7)
    SourceInfo(url/src/parser.rs:479:53-479:54)
  1: PlaceMention(_6)
    SourceInfo(url/src/parser.rs:479:30-479:54)
  2: _8 = discriminant(_6)
    SourceInfo(url/src/parser.rs:479:30-479:54)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:479:16-479:27)
      kind: switchInt(move _8) -> [1: bb2, otherwise: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:479:16-479:27)
      kind: falseEdge -> [real: bb3, imaginary: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageLive(_9)
    SourceInfo(url/src/parser.rs:479:21-479:26)
  1: _9 = move ((_6 as Some).0: parser::Input<'_>)
    SourceInfo(url/src/parser.rs:479:21-479:26)
  2: StorageLive(_11)
    SourceInfo(url/src/parser.rs:480:20-480:24)
  3: _11 = move _1
    SourceInfo(url/src/parser.rs:480:20-480:24)
  4: StorageLive(_12)
    SourceInfo(url/src/parser.rs:480:44-480:49)
  5: _12 = move _9
    SourceInfo(url/src/parser.rs:480:44-480:49)
  6: StorageLive(_13)
    SourceInfo(url/src/parser.rs:480:51-480:62)
  7: _13 = _3
    SourceInfo(url/src/parser.rs:480:51-480:62)
  8: StorageLive(_14)
    SourceInfo(url/src/parser.rs:480:64-480:74)
  9: _14 = _4
    SourceInfo(url/src/parser.rs:480:64-480:74)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:480:20-480:75)
      kind: _0 = parser::Parser::<'_>::after_double_slash(move _11, move _12, move _13, move _14) -> [return: bb4, unwind: bb26]
  }
  preds [bb2]
  succs [bb4, bb26]

bb4
  0: StorageDead(_14)
    SourceInfo(url/src/parser.rs:480:74-480:75)
  1: StorageDead(_13)
    SourceInfo(url/src/parser.rs:480:74-480:75)
  2: StorageDead(_12)
    SourceInfo(url/src/parser.rs:480:74-480:75)
  3: StorageDead(_11)
    SourceInfo(url/src/parser.rs:480:74-480:75)
  4: StorageDead(_9)
    SourceInfo(url/src/parser.rs:481:9-481:10)
  5: StorageDead(_6)
    SourceInfo(url/src/parser.rs:481:9-481:10)
  6: StorageDead(_5)
    SourceInfo(url/src/parser.rs:481:9-481:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb3]
  succs [bb23]

bb5
  0: _5 = const ()
    SourceInfo(url/src/parser.rs:481:10-481:10)
  1: StorageDead(_6)
    SourceInfo(url/src/parser.rs:481:9-481:10)
  2: StorageDead(_5)
    SourceInfo(url/src/parser.rs:481:9-481:10)
  3: StorageLive(_15)
    SourceInfo(url/src/parser.rs:483:13-483:23)
  4: StorageLive(_16)
    SourceInfo(url/src/parser.rs:483:26-483:59)
  5: StorageLive(_17)
    SourceInfo(url/src/parser.rs:483:26-483:58)
  6: StorageLive(_18)
    SourceInfo(url/src/parser.rs:483:33-483:57)
  7: StorageLive(_19)
    SourceInfo(url/src/parser.rs:483:33-483:51)
  8: _19 = &(_1.0: std::string::String)
    SourceInfo(url/src/parser.rs:483:33-483:51)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:483:33-483:57)
      kind: _18 = std::string::String::len(move _19) -> [return: bb6, unwind: bb27]
  }
  preds [bb1, bb2]
  succs [bb6, bb27]

bb6
  0: StorageDead(_19)
    SourceInfo(url/src/parser.rs:483:56-483:57)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:483:26-483:58)
      kind: _17 = parser::to_u32(move _18) -> [return: bb7, unwind: bb27]
  }
  preds [bb5]
  succs [bb7, bb27]

bb7
  0: StorageDead(_18)
    SourceInfo(url/src/parser.rs:483:57-483:58)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:483:26-483:59)
      kind: _16 = <core::result::Result<u32, parser::ParseError> as core::ops::Try>::branch(move _17) -> [return: bb8, unwind: bb27]
  }
  preds [bb6]
  succs [bb8, bb27]

bb8
  0: StorageDead(_17)
    SourceInfo(url/src/parser.rs:483:58-483:59)
  1: PlaceMention(_16)
    SourceInfo(url/src/parser.rs:483:26-483:59)
  2: _20 = discriminant(_16)
    SourceInfo(url/src/parser.rs:483:26-483:59)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:483:26-483:59)
      kind: switchInt(move _20) -> [0: bb11, 1: bb10, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10, bb11]

bb9
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(url/src/parser.rs:483:26-483:59)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:483:26-483:59)
      kind: unreachable
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:483:58-483:59)
      kind: falseEdge -> [real: bb12, imaginary: bb11]
  }
  preds [bb8]
  succs [bb11, bb12]

bb11
  0: StorageLive(_24)
    SourceInfo(url/src/parser.rs:483:26-483:59)
  1: _24 = ((_16 as Continue).0: u32)
    SourceInfo(url/src/parser.rs:483:26-483:59)
  2: _15 = _24
    SourceInfo(url/src/parser.rs:483:26-483:59)
  3: StorageDead(_24)
    SourceInfo(url/src/parser.rs:483:58-483:59)
  4: FakeRead(ForLet(None), _15)
    SourceInfo(url/src/parser.rs:483:13-483:23)
  5: StorageDead(_16)
    SourceInfo(url/src/parser.rs:483:59-483:60)
  6: StorageLive(_25)
    SourceInfo(url/src/parser.rs:484:13-484:25)
  7: _25 = _15
    SourceInfo(url/src/parser.rs:484:28-484:38)
  8: FakeRead(ForLet(None), _25)
    SourceInfo(url/src/parser.rs:484:13-484:25)
  9: StorageLive(_26)
    SourceInfo(url/src/parser.rs:485:13-485:23)
  10: _26 = _15
    SourceInfo(url/src/parser.rs:485:26-485:36)
  11: FakeRead(ForLet(None), _26)
    SourceInfo(url/src/parser.rs:485:13-485:23)
  12: StorageLive(_27)
    SourceInfo(url/src/parser.rs:486:13-486:21)
  13: _27 = _15
    SourceInfo(url/src/parser.rs:486:24-486:34)
  14: FakeRead(ForLet(None), _27)
    SourceInfo(url/src/parser.rs:486:13-486:21)
  15: StorageLive(_28)
    SourceInfo(url/src/parser.rs:487:13-487:17)
  16: _28 = host::HostInternal::None
    SourceInfo(url/src/parser.rs:487:20-487:38)
  17: FakeRead(ForLet(None), _28)
    SourceInfo(url/src/parser.rs:487:13-487:17)
  18: StorageLive(_29)
    SourceInfo(url/src/parser.rs:488:13-488:17)
  19: _29 = core::option::Option::<u16>::None
    SourceInfo(url/src/parser.rs:488:20-488:24)
  20: FakeRead(ForLet(None), _29)
    SourceInfo(url/src/parser.rs:488:13-488:17)
  21: StorageLive(_30)
    SourceInfo(url/src/parser.rs:489:13-489:22)
  22: StorageLive(_31)
    SourceInfo(url/src/parser.rs:489:46-489:69)
  23: StorageLive(_32)
    SourceInfo(url/src/parser.rs:489:46-489:51)
  24: _32 = &_2
    SourceInfo(url/src/parser.rs:489:46-489:51)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:489:46-489:69)
      kind: _31 = parser::Input::<'_>::split_prefix::<char>(move _32, const '/') -> [return: bb14, unwind: bb27]
  }
  preds [bb8, bb10]
  succs [bb14, bb27]

bb12
  0: StorageLive(_21)
    SourceInfo(url/src/parser.rs:483:58-483:59)
  1: _21 = ((_16 as Break).0: core::result::Result<core::convert::Infallible, parser::ParseError>)
    SourceInfo(url/src/parser.rs:483:58-483:59)
  2: StorageLive(_23)
    SourceInfo(url/src/parser.rs:483:58-483:59)
  3: _23 = _21
    SourceInfo(url/src/parser.rs:483:58-483:59)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:483:26-483:59)
      kind: _0 = <core::result::Result<Url, parser::ParseError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, parser::ParseError>>>::from_residual(move _23) -> [return: bb13, unwind: bb27]
  }
  preds [bb10]
  succs [bb13, bb27]

bb13
  0: StorageDead(_23)
    SourceInfo(url/src/parser.rs:483:58-483:59)
  1: StorageDead(_21)
    SourceInfo(url/src/parser.rs:483:58-483:59)
  2: StorageDead(_16)
    SourceInfo(url/src/parser.rs:483:59-483:60)
  3: StorageDead(_15)
    SourceInfo(url/src/parser.rs:506:5-506:6)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb12]
  succs [bb23]

bb14
  0: StorageDead(_32)
    SourceInfo(url/src/parser.rs:489:68-489:69)
  1: PlaceMention(_31)
    SourceInfo(url/src/parser.rs:489:46-489:69)
  2: _33 = discriminant(_31)
    SourceInfo(url/src/parser.rs:489:46-489:69)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:489:32-489:43)
      kind: switchInt(move _33) -> [1: bb15, otherwise: bb19]
  }
  preds [bb11]
  succs [bb15, bb19]

bb15
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:489:32-489:43)
      kind: falseEdge -> [real: bb16, imaginary: bb19]
  }
  preds [bb14]
  succs [bb16, bb19]

bb16
  0: StorageLive(_34)
    SourceInfo(url/src/parser.rs:489:37-489:42)
  1: _34 = move ((_31 as Some).0: parser::Input<'_>)
    SourceInfo(url/src/parser.rs:489:37-489:42)
  2: StorageLive(_35)
    SourceInfo(url/src/parser.rs:490:13-490:41)
  3: StorageLive(_36)
    SourceInfo(url/src/parser.rs:490:13-490:31)
  4: _36 = &mut (_1.0: std::string::String)
    SourceInfo(url/src/parser.rs:490:13-490:31)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:490:13-490:41)
      kind: _35 = std::string::String::push(move _36, const '/') -> [return: bb17, unwind: bb27]
  }
  preds [bb15]
  succs [bb17, bb27]

bb17
  0: StorageDead(_36)
    SourceInfo(url/src/parser.rs:490:40-490:41)
  1: StorageDead(_35)
    SourceInfo(url/src/parser.rs:490:41-490:42)
  2: StorageLive(_37)
    SourceInfo(url/src/parser.rs:491:13-491:17)
  3: _37 = &mut _1
    SourceInfo(url/src/parser.rs:491:13-491:17)
  4: StorageLive(_38)
    SourceInfo(url/src/parser.rs:491:29-491:40)
  5: _38 = _3
    SourceInfo(url/src/parser.rs:491:29-491:40)
  6: StorageLive(_39)
    SourceInfo(url/src/parser.rs:491:42-491:52)
  7: StorageLive(_40)
    SourceInfo(url/src/parser.rs:491:42-491:52)
  8: StorageLive(_41)
    SourceInfo(url/src/parser.rs:491:47-491:52)
  9: _41 = const false
    SourceInfo(url/src/parser.rs:491:47-491:52)
  10: _40 = &mut _41
    SourceInfo(url/src/parser.rs:491:42-491:52)
  11: _39 = &mut (*_40)
    SourceInfo(url/src/parser.rs:491:42-491:52)
  12: StorageLive(_42)
    SourceInfo(url/src/parser.rs:491:54-491:73)
  13: StorageLive(_43)
    SourceInfo(url/src/parser.rs:491:54-491:64)
  14: _43 = _15
    SourceInfo(url/src/parser.rs:491:54-491:64)
  15: _42 = move _43 as usize (IntToInt)
    SourceInfo(url/src/parser.rs:491:54-491:73)
  16: StorageDead(_43)
    SourceInfo(url/src/parser.rs:491:72-491:73)
  17: StorageLive(_44)
    SourceInfo(url/src/parser.rs:491:75-491:80)
  18: _44 = move _34
    SourceInfo(url/src/parser.rs:491:75-491:80)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:491:13-491:81)
      kind: _30 = parser::Parser::<'_>::parse_path(move _37, move _38, move _39, move _42, move _44) -> [return: bb18, unwind: bb27]
  }
  preds [bb16]
  succs [bb18, bb27]

bb18
  0: StorageDead(_44)
    SourceInfo(url/src/parser.rs:491:80-491:81)
  1: StorageDead(_42)
    SourceInfo(url/src/parser.rs:491:80-491:81)
  2: StorageDead(_39)
    SourceInfo(url/src/parser.rs:491:80-491:81)
  3: StorageDead(_38)
    SourceInfo(url/src/parser.rs:491:80-491:81)
  4: StorageDead(_37)
    SourceInfo(url/src/parser.rs:491:80-491:81)
  5: StorageDead(_41)
    SourceInfo(url/src/parser.rs:492:9-492:10)
  6: StorageDead(_40)
    SourceInfo(url/src/parser.rs:492:9-492:10)
  7: StorageDead(_34)
    SourceInfo(url/src/parser.rs:492:9-492:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:489:25-494:10)
      kind: goto -> bb21
  }
  preds [bb17]
  succs [bb21]

bb19
  0: StorageLive(_45)
    SourceInfo(url/src/parser.rs:493:13-493:17)
  1: _45 = &mut _1
    SourceInfo(url/src/parser.rs:493:13-493:17)
  2: StorageLive(_46)
    SourceInfo(url/src/parser.rs:493:46-493:51)
  3: _46 = move _2
    SourceInfo(url/src/parser.rs:493:46-493:51)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:493:13-493:52)
      kind: _30 = parser::Parser::<'_>::parse_cannot_be_a_base_path(move _45, move _46) -> [return: bb20, unwind: bb27]
  }
  preds [bb14, bb15]
  succs [bb20, bb27]

bb20
  0: StorageDead(_46)
    SourceInfo(url/src/parser.rs:493:51-493:52)
  1: StorageDead(_45)
    SourceInfo(url/src/parser.rs:493:51-493:52)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:489:25-494:10)
      kind: goto -> bb21
  }
  preds [bb19]
  succs [bb21]

bb21
  0: FakeRead(ForLet(None), _30)
    SourceInfo(url/src/parser.rs:489:13-489:22)
  1: StorageDead(_31)
    SourceInfo(url/src/parser.rs:494:10-494:11)
  2: StorageLive(_47)
    SourceInfo(url/src/parser.rs:495:9-495:13)
  3: _47 = move _1
    SourceInfo(url/src/parser.rs:495:9-495:13)
  4: StorageLive(_48)
    SourceInfo(url/src/parser.rs:496:13-496:24)
  5: _48 = _3
    SourceInfo(url/src/parser.rs:496:13-496:24)
  6: StorageLive(_49)
    SourceInfo(url/src/parser.rs:497:13-497:23)
  7: _49 = _4
    SourceInfo(url/src/parser.rs:497:13-497:23)
  8: StorageLive(_50)
    SourceInfo(url/src/parser.rs:498:13-498:25)
  9: _50 = _25
    SourceInfo(url/src/parser.rs:498:13-498:25)
  10: StorageLive(_51)
    SourceInfo(url/src/parser.rs:499:13-499:23)
  11: _51 = _26
    SourceInfo(url/src/parser.rs:499:13-499:23)
  12: StorageLive(_52)
    SourceInfo(url/src/parser.rs:500:13-500:21)
  13: _52 = _27
    SourceInfo(url/src/parser.rs:500:13-500:21)
  14: StorageLive(_53)
    SourceInfo(url/src/parser.rs:501:13-501:17)
  15: _53 = _28
    SourceInfo(url/src/parser.rs:501:13-501:17)
  16: StorageLive(_54)
    SourceInfo(url/src/parser.rs:502:13-502:17)
  17: _54 = _29
    SourceInfo(url/src/parser.rs:502:13-502:17)
  18: StorageLive(_55)
    SourceInfo(url/src/parser.rs:503:13-503:23)
  19: _55 = _15
    SourceInfo(url/src/parser.rs:503:13-503:23)
  20: StorageLive(_56)
    SourceInfo(url/src/parser.rs:504:13-504:22)
  21: _56 = move _30
    SourceInfo(url/src/parser.rs:504:13-504:22)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:495:9-505:10)
      kind: _0 = parser::Parser::<'_>::with_query_and_fragment(move _47, move _48, move _49, move _50, move _51, move _52, move _53, move _54, move _55, move _56) -> [return: bb22, unwind: bb25]
  }
  preds [bb18, bb20]
  succs [bb22, bb25]

bb22
  0: StorageDead(_56)
    SourceInfo(url/src/parser.rs:505:9-505:10)
  1: StorageDead(_55)
    SourceInfo(url/src/parser.rs:505:9-505:10)
  2: StorageDead(_54)
    SourceInfo(url/src/parser.rs:505:9-505:10)
  3: StorageDead(_53)
    SourceInfo(url/src/parser.rs:505:9-505:10)
  4: StorageDead(_52)
    SourceInfo(url/src/parser.rs:505:9-505:10)
  5: StorageDead(_51)
    SourceInfo(url/src/parser.rs:505:9-505:10)
  6: StorageDead(_50)
    SourceInfo(url/src/parser.rs:505:9-505:10)
  7: StorageDead(_49)
    SourceInfo(url/src/parser.rs:505:9-505:10)
  8: StorageDead(_48)
    SourceInfo(url/src/parser.rs:505:9-505:10)
  9: StorageDead(_47)
    SourceInfo(url/src/parser.rs:505:9-505:10)
  10: StorageDead(_30)
    SourceInfo(url/src/parser.rs:506:5-506:6)
  11: StorageDead(_29)
    SourceInfo(url/src/parser.rs:506:5-506:6)
  12: StorageDead(_28)
    SourceInfo(url/src/parser.rs:506:5-506:6)
  13: StorageDead(_27)
    SourceInfo(url/src/parser.rs:506:5-506:6)
  14: StorageDead(_26)
    SourceInfo(url/src/parser.rs:506:5-506:6)
  15: StorageDead(_25)
    SourceInfo(url/src/parser.rs:506:5-506:6)
  16: StorageDead(_15)
    SourceInfo(url/src/parser.rs:506:5-506:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:506:5-506:6)
      kind: drop(_1) -> [return: bb24, unwind: bb28]
  }
  preds [bb21]
  succs [bb24, bb28]

bb23
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:506:5-506:6)
      kind: drop(_1) -> [return: bb24, unwind: bb28]
  }
  preds [bb4, bb13]
  succs [bb24, bb28]

bb24
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:506:6-506:6)
      kind: return
  }
  preds [bb22, bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:505:9-505:10)
      kind: drop(_47) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb21]
  succs [bb27]

bb26
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:480:74-480:75)
      kind: drop(_11) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:506:5-506:6)
      kind: drop(_1) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb0, bb5, bb6, bb7, bb11, bb12, bb16, bb17, bb19, bb25, bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:472:5-506:6)
      kind: resume
  }
  preds [bb22, bb23, bb27]
  succs []

