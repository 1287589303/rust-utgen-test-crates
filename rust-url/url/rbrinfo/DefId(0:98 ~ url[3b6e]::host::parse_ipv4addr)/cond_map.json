{
  "url/src/host.rs:323:22:323:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(8 * (3 - counter as u32))",
          "lhs": "8",
          "rhs": "(3 - counter as u32)",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:308:15:308:37": [
    {
      "Match": {
        "match_source": "url/src/host.rs:308:15:308:37",
        "match_str": "parse_ipv4number(part)",
        "match_kind": {
          "Enum": [
            "Ok",
            "Err"
          ]
        },
        "arms": {
          "url/src/host.rs:310:13:310:21": {
            "pat": {
              "pat_str": "Ok(None)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "url/src/host.rs:310:25:310:67"
          },
          "url/src/host.rs:309:13:309:24": {
            "pat": {
              "pat_str": "Ok(Some(n))",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "url/src/host.rs:309:28:309:43"
          },
          "url/src/host.rs:311:13:311:20": {
            "pat": {
              "pat_str": "Err(())",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/host.rs:311:24:311:66"
          }
        }
      }
    }
  ],
  "url/src/host.rs:307:17:307:22": [
    {
      "For": {
        "iter_var": "part",
        "iter_range": "parts"
      }
    }
  ],
  "url/src/host.rs:303:8:303:23": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "parts.len() > 4",
          "lhs": "parts.len()",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:323:27:323:47": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(3 - counter as u32)",
          "lhs": "3",
          "rhs": "counter as u32",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:316:8:316:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "ipv4 > u32::MAX >> (8 * numbers.len() as u32)",
          "lhs": "ipv4",
          "rhs": "u32::MAX >> (8 * numbers.len() as u32)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:316:27:316:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(8 * numbers.len() as u32)",
          "lhs": "8",
          "rhs": "numbers.len() as u32",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/host.rs:316:15:316:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "u32::MAX >> (8 * numbers.len() as u32)",
          "lhs": "u32::MAX",
          "rhs": "(8 * numbers.len() as u32)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:319:8:319:40": [
    {
      "Bool": {
        "Other": "numbers.iter().any(|x| *x > 255)"
      }
    }
  ],
  "url/src/host.rs:322:25:322:51": [
    {
      "For": {
        "iter_var": "(counter, n)",
        "iter_range": "numbers.iter().enumerate()"
      }
    }
  ],
  "url/src/host.rs:300:8:300:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "parts.last() == Some(&\"\")",
          "lhs": "parts.last()",
          "rhs": "Some(&\"\")",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/host.rs:323:17:323:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "n << (8 * (3 - counter as u32))",
          "lhs": "n",
          "rhs": "(8 * (3 - counter as u32))",
          "cmp_with_int": false
        }
      }
    }
  ]
}