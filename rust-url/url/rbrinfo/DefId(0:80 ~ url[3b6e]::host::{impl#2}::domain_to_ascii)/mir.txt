bb0
  0: StorageLive(_2)
    SourceInfo(url/src/host.rs:147:9-147:68)
  1: StorageLive(_3)
    SourceInfo(url/src/host.rs:147:35-147:41)
  2: _3 = &(*_1)
    SourceInfo(url/src/host.rs:147:35-147:41)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:147:9-147:68)
      kind: _2 = idna::domain_to_ascii_cow(move _3, const idna::AsciiDenyList::URL) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(url/src/host.rs:147:67-147:68)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:147:9-147:88)
      kind: _0 = core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}>(move _2, <idna::Errors as core::convert::Into<parser::ParseError>>::into) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_2)
    SourceInfo(url/src/host.rs:147:87-147:88)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:148:6-148:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(url/src/host.rs:147:87-147:88)
      kind: drop(_2) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(url/src/host.rs:146:5-148:6)
      kind: resume
  }
  preds [bb0, bb3]
  succs []

