bb0
  0: PlaceMention(((*_1).3: core::option::Option<&dyn core::ops::Fn(parser::SyntaxViolation)>))
    SourceInfo(url/src/parser.rs:351:26-351:43)
  1: _3 = discriminant(((*_1).3: core::option::Option<&dyn core::ops::Fn(parser::SyntaxViolation)>))
    SourceInfo(url/src/parser.rs:351:26-351:43)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:351:16-351:23)
      kind: switchInt(move _3) -> [1: bb1, otherwise: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:351:16-351:23)
      kind: falseEdge -> [real: bb2, imaginary: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageLive(_4)
    SourceInfo(url/src/parser.rs:351:21-351:22)
  1: _4 = ((((*_1).3: core::option::Option<&dyn core::ops::Fn(parser::SyntaxViolation)>) as Some).0: &dyn core::ops::Fn(parser::SyntaxViolation))
    SourceInfo(url/src/parser.rs:351:21-351:22)
  2: StorageLive(_5)
    SourceInfo(url/src/parser.rs:352:13-352:14)
  3: _5 = &(*_4)
    SourceInfo(url/src/parser.rs:352:13-352:14)
  4: StorageLive(_6)
    SourceInfo(url/src/parser.rs:352:13-352:17)
  5: StorageLive(_7)
    SourceInfo(url/src/parser.rs:352:15-352:16)
  6: _7 = _2
    SourceInfo(url/src/parser.rs:352:15-352:16)
  7: _6 = (move _7,)
    SourceInfo(url/src/parser.rs:352:13-352:17)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:352:13-352:17)
      kind: _0 = <dyn core::ops::Fn(parser::SyntaxViolation) as core::ops::Fn<(parser::SyntaxViolation,)>>::call(move _5, move _6) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_7)
    SourceInfo(url/src/parser.rs:352:16-352:17)
  1: StorageDead(_6)
    SourceInfo(url/src/parser.rs:352:16-352:17)
  2: StorageDead(_5)
    SourceInfo(url/src/parser.rs:352:16-352:17)
  3: StorageDead(_4)
    SourceInfo(url/src/parser.rs:353:9-353:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:351:9-353:10)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb4
  0: _0 = const ()
    SourceInfo(url/src/parser.rs:353:10-353:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:351:9-353:10)
      kind: goto -> bb5
  }
  preds [bb0, bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:354:6-354:6)
      kind: return
  }
  preds [bb3, bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:350:5-354:6)
      kind: resume
  }
  preds [bb2]
  succs []

