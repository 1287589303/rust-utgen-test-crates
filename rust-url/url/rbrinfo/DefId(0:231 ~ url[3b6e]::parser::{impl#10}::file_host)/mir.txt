bb0
  0: StorageLive(_2)
    SourceInfo(url/src/parser.rs:1081:13-1081:22)
  1: StorageLive(_3)
    SourceInfo(url/src/parser.rs:1081:25-1081:36)
  2: _3 = &(_1.0: core::str::Chars<'_>)
    SourceInfo(url/src/parser.rs:1081:25-1081:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1081:25-1081:45)
      kind: _2 = core::str::Chars::<'_>::as_str(move _3) -> [return: bb1, unwind: bb56]
  }
  preds []
  succs [bb1, bb56]

bb1
  0: StorageDead(_3)
    SourceInfo(url/src/parser.rs:1081:44-1081:45)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(url/src/parser.rs:1081:13-1081:22)
  2: StorageLive(_4)
    SourceInfo(url/src/parser.rs:1082:13-1082:34)
  3: _4 = const false
    SourceInfo(url/src/parser.rs:1082:37-1082:42)
  4: FakeRead(ForLet(None), _4)
    SourceInfo(url/src/parser.rs:1082:13-1082:34)
  5: StorageLive(_5)
    SourceInfo(url/src/parser.rs:1083:13-1083:34)
  6: _5 = const 0_usize
    SourceInfo(url/src/parser.rs:1083:37-1083:38)
  7: FakeRead(ForLet(None), _5)
    SourceInfo(url/src/parser.rs:1083:13-1083:34)
  8: StorageLive(_6)
    SourceInfo(url/src/parser.rs:1084:13-1084:22)
  9: _6 = const 0_usize
    SourceInfo(url/src/parser.rs:1084:25-1084:26)
  10: FakeRead(ForLet(None), _6)
    SourceInfo(url/src/parser.rs:1084:13-1084:22)
  11: StorageLive(_7)
    SourceInfo(url/src/parser.rs:1085:9-1092:10)
  12: StorageLive(_8)
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  13: StorageLive(_9)
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  14: StorageLive(_10)
    SourceInfo(url/src/parser.rs:1085:18-1085:27)
  15: _10 = &(*_2)
    SourceInfo(url/src/parser.rs:1085:18-1085:27)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1085:18-1085:35)
      kind: _9 = core::str::<impl str>::chars(move _10) -> [return: bb2, unwind: bb56]
  }
  preds [bb0]
  succs [bb2, bb56]

bb2
  0: StorageDead(_10)
    SourceInfo(url/src/parser.rs:1085:34-1085:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1085:18-1085:35)
      kind: _8 = <core::str::Chars<'_> as core::iter::IntoIterator>::into_iter(move _9) -> [return: bb3, unwind: bb56]
  }
  preds [bb1]
  succs [bb3, bb56]

bb3
  0: StorageDead(_9)
    SourceInfo(url/src/parser.rs:1085:34-1085:35)
  1: PlaceMention(_8)
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  2: StorageLive(_11)
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  3: _11 = move _8
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1085:9-1092:10)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1085:9-1092:10)
      kind: falseUnwind -> [real: bb5, unwind: bb56]
  }
  preds [bb3, bb19]
  succs [bb5, bb56]

bb5
  0: StorageLive(_13)
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  1: StorageLive(_14)
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  2: StorageLive(_15)
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  3: StorageLive(_16)
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  4: _16 = &mut _11
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  5: _15 = &mut (*_16)
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1085:18-1085:35)
      kind: _14 = <core::str::Chars<'_> as core::iter::Iterator>::next(move _15) -> [return: bb6, unwind: bb56]
  }
  preds [bb4]
  succs [bb6, bb56]

bb6
  0: StorageDead(_15)
    SourceInfo(url/src/parser.rs:1085:34-1085:35)
  1: PlaceMention(_14)
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  2: _17 = discriminant(_14)
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1085:18-1085:35)
      kind: switchInt(move _17) -> [0: bb8, 1: bb9, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(url/src/parser.rs:1085:18-1085:35)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1085:18-1085:35)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1085:9-1092:10)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_19)
    SourceInfo(url/src/parser.rs:1085:13-1085:14)
  1: _19 = ((_14 as Some).0: char)
    SourceInfo(url/src/parser.rs:1085:13-1085:14)
  2: StorageLive(_20)
    SourceInfo(url/src/parser.rs:1086:13-1090:14)
  3: PlaceMention(_19)
    SourceInfo(url/src/parser.rs:1086:19-1086:20)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1086:13-1086:20)
      kind: switchInt(_19) -> [47: bb12, 92: bb12, 63: bb12, 35: bb12, 9: bb13, 10: bb13, 13: bb13, otherwise: bb11]
  }
  preds [bb6, bb8]
  succs [bb11, bb12, bb12, bb12, bb12, bb13, bb13, bb13]

bb10
  0: _7 = const ()
    SourceInfo(url/src/parser.rs:1085:9-1092:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1085:9-1092:10)
      kind: goto -> bb20
  }
  preds [bb8]
  succs [bb20]

bb11
  0: _22 = AddWithOverflow(_5, const 1_usize)
    SourceInfo(url/src/parser.rs:1089:22-1089:44)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1089:22-1089:44)
      kind: assert(!move (_22.1: bool), "attempt to compute `{} + {}`, which would overflow", _5, const 1_usize) -> [success: bb16, unwind: bb56]
  }
  preds [bb9, bb13]
  succs [bb16, bb56]

bb12
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1087:17-1087:39)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb9, bb9, bb9, bb9]
  succs [bb13, bb14]

bb13
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:78:9-78:27)
      kind: falseEdge -> [real: bb15, imaginary: bb11]
  }
  preds [bb9, bb9, bb9, bb12]
  succs [bb11, bb15]

bb14
  0: _7 = const ()
    SourceInfo(url/src/parser.rs:1087:43-1087:48)
  1: StorageDead(_20)
    SourceInfo(url/src/parser.rs:1090:13-1090:14)
  2: StorageDead(_19)
    SourceInfo(url/src/parser.rs:1092:9-1092:10)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb12]
  succs [bb20]

bb15
  0: _4 = const true
    SourceInfo(url/src/parser.rs:1088:53-1088:77)
  1: _20 = const ()
    SourceInfo(url/src/parser.rs:1088:53-1088:77)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1088:53-1088:77)
      kind: goto -> bb17
  }
  preds [bb13]
  succs [bb17]

bb16
  0: _5 = move (_22.0: usize)
    SourceInfo(url/src/parser.rs:1089:22-1089:44)
  1: _20 = const ()
    SourceInfo(url/src/parser.rs:1089:22-1089:44)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1089:22-1089:44)
      kind: goto -> bb17
  }
  preds [bb11]
  succs [bb17]

bb17
  0: StorageDead(_20)
    SourceInfo(url/src/parser.rs:1090:13-1090:14)
  1: StorageLive(_23)
    SourceInfo(url/src/parser.rs:1091:22-1091:34)
  2: StorageLive(_24)
    SourceInfo(url/src/parser.rs:1091:22-1091:23)
  3: _24 = _19
    SourceInfo(url/src/parser.rs:1091:22-1091:23)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1091:22-1091:34)
      kind: _23 = core::char::methods::<impl char>::len_utf8(move _24) -> [return: bb18, unwind: bb56]
  }
  preds [bb15, bb16]
  succs [bb18, bb56]

bb18
  0: StorageDead(_24)
    SourceInfo(url/src/parser.rs:1091:33-1091:34)
  1: _25 = AddWithOverflow(_6, _23)
    SourceInfo(url/src/parser.rs:1091:13-1091:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1091:13-1091:34)
      kind: assert(!move (_25.1: bool), "attempt to compute `{} + {}`, which would overflow", _6, move _23) -> [success: bb19, unwind: bb56]
  }
  preds [bb17]
  succs [bb19, bb56]

bb19
  0: _6 = move (_25.0: usize)
    SourceInfo(url/src/parser.rs:1091:13-1091:34)
  1: StorageDead(_23)
    SourceInfo(url/src/parser.rs:1091:33-1091:34)
  2: _13 = const ()
    SourceInfo(url/src/parser.rs:1085:36-1092:10)
  3: StorageDead(_19)
    SourceInfo(url/src/parser.rs:1092:9-1092:10)
  4: StorageDead(_16)
    SourceInfo(url/src/parser.rs:1092:9-1092:10)
  5: StorageDead(_14)
    SourceInfo(url/src/parser.rs:1092:9-1092:10)
  6: StorageDead(_13)
    SourceInfo(url/src/parser.rs:1092:9-1092:10)
  7: _12 = const ()
    SourceInfo(url/src/parser.rs:1085:9-1092:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1085:9-1092:10)
      kind: goto -> bb4
  }
  preds [bb18]
  succs [bb4]

bb20
  0: StorageDead(_16)
    SourceInfo(url/src/parser.rs:1092:9-1092:10)
  1: StorageDead(_14)
    SourceInfo(url/src/parser.rs:1092:9-1092:10)
  2: StorageDead(_13)
    SourceInfo(url/src/parser.rs:1092:9-1092:10)
  3: StorageDead(_11)
    SourceInfo(url/src/parser.rs:1092:9-1092:10)
  4: StorageDead(_8)
    SourceInfo(url/src/parser.rs:1092:9-1092:10)
  5: StorageDead(_7)
    SourceInfo(url/src/parser.rs:1092:9-1092:10)
  6: StorageLive(_26)
    SourceInfo(url/src/parser.rs:1093:13-1093:21)
  7: StorageLive(_27)
    SourceInfo(url/src/parser.rs:1094:13-1094:21)
  8: StorageLive(_28)
    SourceInfo(url/src/parser.rs:1095:13-1095:26)
  9: StorageLive(_29)
    SourceInfo(url/src/parser.rs:1095:29-1095:34)
  10: _29 = &_1
    SourceInfo(url/src/parser.rs:1095:29-1095:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1095:29-1095:42)
      kind: _28 = <parser::Input<'_> as core::clone::Clone>::clone(move _29) -> [return: bb21, unwind: bb55]
  }
  preds [bb10, bb14]
  succs [bb21, bb55]

bb21
  0: StorageDead(_29)
    SourceInfo(url/src/parser.rs:1095:41-1095:42)
  1: FakeRead(ForLet(None), _28)
    SourceInfo(url/src/parser.rs:1095:13-1095:26)
  2: StorageLive(_30)
    SourceInfo(url/src/parser.rs:1096:9-1105:10)
  3: StorageLive(_31)
    SourceInfo(url/src/parser.rs:1097:17-1097:27)
  4: StorageLive(_32)
    SourceInfo(url/src/parser.rs:1097:30-1097:48)
  5: StorageLive(_33)
    SourceInfo(url/src/parser.rs:1097:30-1097:48)
  6: StorageLive(_34)
    SourceInfo(url/src/parser.rs:1097:30-1097:39)
  7: _34 = &mut _28
    SourceInfo(url/src/parser.rs:1097:30-1097:39)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1097:30-1097:48)
      kind: _33 = <parser::Input<'_> as core::iter::Iterator>::by_ref(move _34) -> [return: bb22, unwind: bb55]
  }
  preds [bb20]
  succs [bb22, bb55]

bb22
  0: _32 = &mut (*_33)
    SourceInfo(url/src/parser.rs:1097:30-1097:48)
  1: StorageDead(_34)
    SourceInfo(url/src/parser.rs:1097:47-1097:48)
  2: StorageLive(_35)
    SourceInfo(url/src/parser.rs:1097:54-1097:71)
  3: _35 = _5
    SourceInfo(url/src/parser.rs:1097:54-1097:71)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1097:30-1097:72)
      kind: _31 = <&mut parser::Input<'_> as core::iter::Iterator>::take(move _32, move _35) -> [return: bb23, unwind: bb55]
  }
  preds [bb21]
  succs [bb23, bb55]

bb23
  0: StorageDead(_35)
    SourceInfo(url/src/parser.rs:1097:71-1097:72)
  1: StorageDead(_32)
    SourceInfo(url/src/parser.rs:1097:71-1097:72)
  2: FakeRead(ForLet(None), _31)
    SourceInfo(url/src/parser.rs:1097:17-1097:27)
  3: StorageDead(_33)
    SourceInfo(url/src/parser.rs:1097:72-1097:73)
  4: StorageLive(_36)
    SourceInfo(url/src/parser.rs:1098:16-1098:33)
  5: _36 = _4
    SourceInfo(url/src/parser.rs:1098:16-1098:33)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1098:16-1098:33)
      kind: switchInt(move _36) -> [0: bb30, otherwise: bb24]
  }
  preds [bb22]
  succs [bb24, bb30]

bb24
  0: StorageLive(_37)
    SourceInfo(url/src/parser.rs:1099:28-1099:48)
  1: StorageLive(_38)
    SourceInfo(url/src/parser.rs:1099:28-1099:38)
  2: _38 = move _31
    SourceInfo(url/src/parser.rs:1099:28-1099:38)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1099:28-1099:48)
      kind: _37 = <core::iter::Take<&mut parser::Input<'_>> as core::iter::Iterator>::collect::<std::string::String>(move _38) -> [return: bb25, unwind: bb55]
  }
  preds [bb23]
  succs [bb25, bb55]

bb25
  0: StorageDead(_38)
    SourceInfo(url/src/parser.rs:1099:47-1099:48)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1099:17-1099:25)
      kind: drop(_26) -> [return: bb26, unwind: bb27]
  }
  preds [bb24]
  succs [bb26, bb27]

bb26
  0: _26 = move _37
    SourceInfo(url/src/parser.rs:1099:17-1099:25)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1099:47-1099:48)
      kind: drop(_37) -> [return: bb28, unwind: bb55]
  }
  preds [bb25]
  succs [bb28, bb55]

bb27
  0: _26 = move _37
    SourceInfo(url/src/parser.rs:1099:17-1099:25)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1099:47-1099:48)
      kind: drop(_37) -> [return: bb55, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb55]

bb28
  0: StorageDead(_37)
    SourceInfo(url/src/parser.rs:1099:47-1099:48)
  1: StorageLive(_39)
    SourceInfo(url/src/parser.rs:1100:28-1100:38)
  2: StorageLive(_40)
    SourceInfo(url/src/parser.rs:1100:29-1100:38)
  3: StorageLive(_41)
    SourceInfo(url/src/parser.rs:1100:30-1100:38)
  4: _41 = &_26
    SourceInfo(url/src/parser.rs:1100:30-1100:38)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1100:29-1100:38)
      kind: _40 = <std::string::String as core::ops::Deref>::deref(move _41) -> [return: bb29, unwind: bb55]
  }
  preds [bb26]
  succs [bb29, bb55]

bb29
  0: StorageDead(_41)
    SourceInfo(url/src/parser.rs:1100:37-1100:38)
  1: _39 = &(*_40)
    SourceInfo(url/src/parser.rs:1100:28-1100:38)
  2: _27 = move _39
    SourceInfo(url/src/parser.rs:1100:17-1100:38)
  3: _30 = const ()
    SourceInfo(url/src/parser.rs:1100:17-1100:38)
  4: StorageDead(_39)
    SourceInfo(url/src/parser.rs:1100:37-1100:38)
  5: StorageDead(_40)
    SourceInfo(url/src/parser.rs:1101:13-1101:14)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1098:13-1104:14)
      kind: goto -> bb40
  }
  preds [bb28]
  succs [bb40]

bb30
  0: StorageLive(_42)
    SourceInfo(url/src/parser.rs:1102:17-1102:39)
  1: StorageLive(_43)
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  2: StorageLive(_44)
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  3: _44 = move _31
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1102:26-1102:36)
      kind: _43 = <core::iter::Take<&mut parser::Input<'_>> as core::iter::IntoIterator>::into_iter(move _44) -> [return: bb31, unwind: bb55]
  }
  preds [bb23]
  succs [bb31, bb55]

bb31
  0: StorageDead(_44)
    SourceInfo(url/src/parser.rs:1102:35-1102:36)
  1: PlaceMention(_43)
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  2: StorageLive(_45)
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  3: _45 = move _43
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1102:17-1102:39)
      kind: goto -> bb32
  }
  preds [bb30]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1102:17-1102:39)
      kind: falseUnwind -> [real: bb33, unwind: bb55]
  }
  preds [bb31, bb37]
  succs [bb33, bb55]

bb33
  0: StorageLive(_46)
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  1: StorageLive(_47)
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  2: StorageLive(_48)
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  3: StorageLive(_49)
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  4: _49 = &mut _45
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  5: _48 = &mut (*_49)
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1102:26-1102:36)
      kind: _47 = <core::iter::Take<&mut parser::Input<'_>> as core::iter::Iterator>::next(move _48) -> [return: bb34, unwind: bb55]
  }
  preds [bb32]
  succs [bb34, bb55]

bb34
  0: StorageDead(_48)
    SourceInfo(url/src/parser.rs:1102:35-1102:36)
  1: PlaceMention(_47)
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  2: _50 = discriminant(_47)
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1102:26-1102:36)
      kind: switchInt(move _50) -> [0: bb36, 1: bb37, otherwise: bb35]
  }
  preds [bb33]
  succs [bb35, bb36, bb37]

bb35
  0: FakeRead(ForMatchedPlace(None), _47)
    SourceInfo(url/src/parser.rs:1102:26-1102:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1102:26-1102:36)
      kind: unreachable
  }
  preds [bb34]
  succs []

bb36
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1102:17-1102:39)
      kind: falseEdge -> [real: bb38, imaginary: bb37]
  }
  preds [bb34]
  succs [bb37, bb38]

bb37
  0: _46 = const ()
    SourceInfo(url/src/parser.rs:1102:37-1102:39)
  1: StorageDead(_49)
    SourceInfo(url/src/parser.rs:1102:38-1102:39)
  2: StorageDead(_47)
    SourceInfo(url/src/parser.rs:1102:38-1102:39)
  3: StorageDead(_46)
    SourceInfo(url/src/parser.rs:1102:38-1102:39)
  4: _12 = const ()
    SourceInfo(url/src/parser.rs:1102:17-1102:39)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1102:17-1102:39)
      kind: goto -> bb32
  }
  preds [bb34, bb36]
  succs [bb32]

bb38
  0: _42 = const ()
    SourceInfo(url/src/parser.rs:1102:17-1102:39)
  1: StorageDead(_49)
    SourceInfo(url/src/parser.rs:1102:38-1102:39)
  2: StorageDead(_47)
    SourceInfo(url/src/parser.rs:1102:38-1102:39)
  3: StorageDead(_46)
    SourceInfo(url/src/parser.rs:1102:38-1102:39)
  4: StorageDead(_45)
    SourceInfo(url/src/parser.rs:1102:38-1102:39)
  5: StorageDead(_43)
    SourceInfo(url/src/parser.rs:1102:38-1102:39)
  6: StorageDead(_42)
    SourceInfo(url/src/parser.rs:1102:38-1102:39)
  7: StorageLive(_52)
    SourceInfo(url/src/parser.rs:1103:28-1103:47)
  8: StorageLive(_53)
    SourceInfo(url/src/parser.rs:1103:28-1103:47)
  9: StorageLive(_54)
    SourceInfo(url/src/parser.rs:1103:38-1103:47)
  10: StorageLive(_55)
    SourceInfo(url/src/parser.rs:1103:29-1103:38)
  11: _55 = &(*_2)
    SourceInfo(url/src/parser.rs:1103:29-1103:38)
  12: StorageLive(_56)
    SourceInfo(url/src/parser.rs:1103:39-1103:46)
  13: StorageLive(_57)
    SourceInfo(url/src/parser.rs:1103:41-1103:46)
  14: _57 = _6
    SourceInfo(url/src/parser.rs:1103:41-1103:46)
  15: _56 = core::ops::RangeTo::<usize> { end: move _57 }
    SourceInfo(url/src/parser.rs:1103:39-1103:46)
  16: StorageDead(_57)
    SourceInfo(url/src/parser.rs:1103:45-1103:46)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1103:38-1103:47)
      kind: _54 = <str as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _55, move _56) -> [return: bb39, unwind: bb55]
  }
  preds [bb36]
  succs [bb39, bb55]

bb39
  0: StorageDead(_56)
    SourceInfo(url/src/parser.rs:1103:46-1103:47)
  1: StorageDead(_55)
    SourceInfo(url/src/parser.rs:1103:46-1103:47)
  2: _53 = &(*_54)
    SourceInfo(url/src/parser.rs:1103:28-1103:47)
  3: _52 = &(*_53)
    SourceInfo(url/src/parser.rs:1103:28-1103:47)
  4: _27 = move _52
    SourceInfo(url/src/parser.rs:1103:17-1103:47)
  5: _30 = const ()
    SourceInfo(url/src/parser.rs:1103:17-1103:47)
  6: StorageDead(_52)
    SourceInfo(url/src/parser.rs:1103:46-1103:47)
  7: StorageDead(_54)
    SourceInfo(url/src/parser.rs:1104:13-1104:14)
  8: StorageDead(_53)
    SourceInfo(url/src/parser.rs:1104:13-1104:14)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1098:13-1104:14)
      kind: goto -> bb40
  }
  preds [bb38]
  succs [bb40]

bb40
  0: StorageDead(_36)
    SourceInfo(url/src/parser.rs:1104:13-1104:14)
  1: StorageDead(_31)
    SourceInfo(url/src/parser.rs:1105:9-1105:10)
  2: StorageDead(_30)
    SourceInfo(url/src/parser.rs:1105:9-1105:10)
  3: StorageLive(_58)
    SourceInfo(url/src/parser.rs:1106:9-1108:10)
  4: StorageLive(_59)
    SourceInfo(url/src/parser.rs:1106:12-1106:45)
  5: StorageLive(_60)
    SourceInfo(url/src/parser.rs:1106:36-1106:44)
  6: _60 = &(*_27)
    SourceInfo(url/src/parser.rs:1106:36-1106:44)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1106:12-1106:45)
      kind: _59 = parser::is_windows_drive_letter(move _60) -> [return: bb41, unwind: bb55]
  }
  preds [bb29, bb39]
  succs [bb41, bb55]

bb41
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1106:12-1106:45)
      kind: switchInt(move _59) -> [0: bb46, otherwise: bb42]
  }
  preds [bb40]
  succs [bb42, bb46]

bb42
  0: StorageDead(_60)
    SourceInfo(url/src/parser.rs:1106:44-1106:45)
  1: StorageLive(_62)
    SourceInfo(url/src/parser.rs:1107:23-1107:53)
  2: StorageLive(_63)
    SourceInfo(url/src/parser.rs:1107:31-1107:45)
  3: StorageLive(_64)
    SourceInfo(url/src/parser.rs:1107:31-1107:33)
  4: StorageLive(_65)
    SourceInfo(url/src/parser.rs:1107:31-1107:33)
  5: _65 = const ""
    SourceInfo(url/src/parser.rs:1107:31-1107:33)
  6: _64 = &(*_65)
    SourceInfo(url/src/parser.rs:1107:31-1107:33)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1107:31-1107:45)
      kind: _63 = <str as std::string::ToString>::to_string(move _64) -> [return: bb43, unwind: bb55]
  }
  preds [bb41]
  succs [bb43, bb55]

bb43
  0: StorageDead(_64)
    SourceInfo(url/src/parser.rs:1107:44-1107:45)
  1: StorageLive(_66)
    SourceInfo(url/src/parser.rs:1107:47-1107:52)
  2: _66 = move _1
    SourceInfo(url/src/parser.rs:1107:47-1107:52)
  3: _62 = (const false, move _63, move _66)
    SourceInfo(url/src/parser.rs:1107:23-1107:53)
  4: StorageDead(_66)
    SourceInfo(url/src/parser.rs:1107:52-1107:53)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1107:52-1107:53)
      kind: drop(_63) -> [return: bb44, unwind: bb54]
  }
  preds [bb42]
  succs [bb44, bb54]

bb44
  0: StorageDead(_63)
    SourceInfo(url/src/parser.rs:1107:52-1107:53)
  1: _0 = core::result::Result::<(bool, std::string::String, parser::Input<'_>), parser::ParseError>::Ok(move _62)
    SourceInfo(url/src/parser.rs:1107:20-1107:54)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1107:53-1107:54)
      kind: drop(_62) -> [return: bb45, unwind: bb55]
  }
  preds [bb43]
  succs [bb45, bb55]

bb45
  0: StorageDead(_62)
    SourceInfo(url/src/parser.rs:1107:53-1107:54)
  1: StorageDead(_65)
    SourceInfo(url/src/parser.rs:1107:54-1107:55)
  2: StorageDead(_59)
    SourceInfo(url/src/parser.rs:1108:9-1108:10)
  3: StorageDead(_58)
    SourceInfo(url/src/parser.rs:1108:9-1108:10)
  4: StorageDead(_28)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  5: StorageDead(_27)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1110:5-1110:6)
      kind: drop(_26) -> [return: bb51, unwind: bb56]
  }
  preds [bb44]
  succs [bb51, bb56]

bb46
  0: StorageDead(_60)
    SourceInfo(url/src/parser.rs:1106:44-1106:45)
  1: _58 = const ()
    SourceInfo(url/src/parser.rs:1108:10-1108:10)
  2: StorageDead(_59)
    SourceInfo(url/src/parser.rs:1108:9-1108:10)
  3: StorageDead(_58)
    SourceInfo(url/src/parser.rs:1108:9-1108:10)
  4: StorageLive(_67)
    SourceInfo(url/src/parser.rs:1109:12-1109:51)
  5: StorageLive(_68)
    SourceInfo(url/src/parser.rs:1109:19-1109:39)
  6: StorageLive(_69)
    SourceInfo(url/src/parser.rs:1109:19-1109:27)
  7: _69 = &(*_27)
    SourceInfo(url/src/parser.rs:1109:19-1109:27)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1109:19-1109:39)
      kind: _68 = <str as std::string::ToString>::to_string(move _69) -> [return: bb47, unwind: bb55]
  }
  preds [bb41]
  succs [bb47, bb55]

bb47
  0: StorageDead(_69)
    SourceInfo(url/src/parser.rs:1109:38-1109:39)
  1: StorageLive(_70)
    SourceInfo(url/src/parser.rs:1109:41-1109:50)
  2: _70 = move _28
    SourceInfo(url/src/parser.rs:1109:41-1109:50)
  3: _67 = (const true, move _68, move _70)
    SourceInfo(url/src/parser.rs:1109:12-1109:51)
  4: StorageDead(_70)
    SourceInfo(url/src/parser.rs:1109:50-1109:51)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1109:50-1109:51)
      kind: drop(_68) -> [return: bb48, unwind: bb53]
  }
  preds [bb46]
  succs [bb48, bb53]

bb48
  0: StorageDead(_68)
    SourceInfo(url/src/parser.rs:1109:50-1109:51)
  1: _0 = core::result::Result::<(bool, std::string::String, parser::Input<'_>), parser::ParseError>::Ok(move _67)
    SourceInfo(url/src/parser.rs:1109:9-1109:52)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1109:51-1109:52)
      kind: drop(_67) -> [return: bb49, unwind: bb55]
  }
  preds [bb47]
  succs [bb49, bb55]

bb49
  0: StorageDead(_67)
    SourceInfo(url/src/parser.rs:1109:51-1109:52)
  1: StorageDead(_28)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  2: StorageDead(_27)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1110:5-1110:6)
      kind: drop(_26) -> [return: bb50, unwind: bb56]
  }
  preds [bb48]
  succs [bb50, bb56]

bb50
  0: StorageDead(_26)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  1: StorageDead(_6)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  2: StorageDead(_5)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  3: StorageDead(_4)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  4: StorageDead(_2)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1110:6-1110:6)
      kind: goto -> bb52
  }
  preds [bb49]
  succs [bb52]

bb51
  0: StorageDead(_26)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  1: StorageDead(_6)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  2: StorageDead(_5)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  3: StorageDead(_4)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  4: StorageDead(_2)
    SourceInfo(url/src/parser.rs:1110:5-1110:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1110:6-1110:6)
      kind: goto -> bb52
  }
  preds [bb45]
  succs [bb52]

bb52
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1110:6-1110:6)
      kind: return
  }
  preds [bb50, bb51]
  succs []

bb53
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1109:51-1109:52)
      kind: drop(_67) -> [return: bb55, unwind terminate(cleanup)]
  }
  preds [bb47]
  succs [bb55]

bb54
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1107:53-1107:54)
      kind: drop(_62) -> [return: bb55, unwind terminate(cleanup)]
  }
  preds [bb43]
  succs [bb55]

bb55
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1110:5-1110:6)
      kind: drop(_26) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb20, bb21, bb22, bb24, bb26, bb27, bb28, bb30, bb32, bb33, bb38, bb40, bb42, bb44, bb46, bb48, bb53, bb54]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1078:5-1110:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb5, bb11, bb17, bb18, bb45, bb49, bb55]
  succs []

