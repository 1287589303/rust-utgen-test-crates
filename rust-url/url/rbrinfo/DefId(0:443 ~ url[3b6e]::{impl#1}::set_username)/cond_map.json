{
  "url/src/lib.rs:2307:15:2307:69": [
    {
      "Match": {
        "match_source": "url/src/lib.rs:2307:15:2307:69",
        "match_str": "(new_username_is_empty, after_username.chars().next())",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "url/src/lib.rs:2312:51:2312:60": {
            "pat": {
              "pat_str": "(true, _)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "url/src/lib.rs:2312:52:2312:56"
                  ],
                  "1": [
                    null,
                    "url/src/lib.rs:2312:58:2312:59"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:2312:64:2314:14"
          },
          "url/src/lib.rs:2312:13:2312:31": {
            "pat": {
              "pat_str": "(false, Some('@'))",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "url/src/lib.rs:2312:21:2312:30"
                  ],
                  "0": [
                    null,
                    "url/src/lib.rs:2312:14:2312:19"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:2312:64:2314:14"
          },
          "url/src/lib.rs:2312:34:2312:48": {
            "pat": {
              "pat_str": "(_, Some(':'))",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "url/src/lib.rs:2312:35:2312:36"
                  ],
                  "1": [
                    null,
                    "url/src/lib.rs:2312:38:2312:47"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:2312:64:2314:14"
          },
          "url/src/lib.rs:2315:13:2315:23": {
            "pat": {
              "pat_str": "(false, _)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "url/src/lib.rs:2315:14:2315:19"
                  ],
                  "1": [
                    null,
                    "url/src/lib.rs:2315:21:2315:22"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:2315:27:2319:14"
          },
          "url/src/lib.rs:2308:13:2308:30": {
            "pat": {
              "pat_str": "(true, Some('@'))",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "url/src/lib.rs:2308:14:2308:18"
                  ],
                  "1": [
                    null,
                    "url/src/lib.rs:2308:20:2308:29"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "url/src/lib.rs:2308:34:2311:14"
          }
        }
      }
    }
  ],
  "url/src/lib.rs:2293:23:2293:75": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.slice(self.scheme_end..username_start) == \"://\"",
          "lhs": "self.slice(self.scheme_end..username_start)",
          "rhs": "\"://\"",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:2289:32:2289:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.host() == Some(Host::Domain(\"\"))",
          "lhs": "self.host()",
          "rhs": "Some(Host::Domain(\"\"))",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:2306:37:2306:72": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.username_end == username_start",
          "lhs": "self.username_end",
          "rhs": "username_start",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:2292:30:2292:49": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.scheme_end + 3",
          "lhs": "self.scheme_end",
          "rhs": "3",
          "cmp_with_int": true
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "url/src/lib.rs:2329:12:2329:54": [
    {
      "Bool": {
        "Other": "let Some(ref mut index) = self.query_start"
      }
    }
  ],
  "url/src/lib.rs:2289:13:2289:28": [
    {
      "Bool": {
        "Other": "self.has_host()"
      }
    }
  ],
  "url/src/lib.rs:2294:12:2294:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.slice(username_start..self.username_end) == username",
          "lhs": "self.slice(username_start..self.username_end)",
          "rhs": "username",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:2289:73:2289:96": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.scheme() == \"file\"",
          "lhs": "self.scheme()",
          "rhs": "\"file\"",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/lib.rs:2332:12:2332:57": [
    {
      "Bool": {
        "Other": "let Some(ref mut index) = self.fragment_start"
      }
    }
  ]
}