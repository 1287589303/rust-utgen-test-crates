{
  "url/src/parser.rs:569:24:569:58": [
    {
      "Bool": {
        "Other": "let Some(base_url) = base_file_url"
      }
    }
  ],
  "url/src/parser.rs:648:25:648:73": [
    {
      "Bool": {
        "Other": "starts_with_windows_drive_letter_segment(&input)"
      }
    }
  ],
  "url/src/parser.rs:615:12:615:46": [
    {
      "Bool": {
        "Other": "let Some(base_url) = base_file_url"
      }
    }
  ],
  "url/src/parser.rs:574:35:574:75": [
    {
      "Bool": {
        "Other": "let Some(host_str) = base_url.host_str()"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "url/src/parser.rs:582:43:582:67": [
    {
      "Bool": {
        "Other": "let Some(c) = first_char"
      }
    }
  ],
  "url/src/parser.rs:679:29:679:100": [
    {
      "Try": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?"
    }
  ],
  "url/src/parser.rs:518:21:518:31": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:518:21:518:31",
        "match_str": "first_char",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "url/src/parser.rs:518:33:518:42": {
            "pat": {
              "pat_str": "Some('/')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:518:45:518:55": {
            "pat": {
              "pat_str": "Some('\\\\')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "url/src/parser.rs:518:21:518:31",
        "match_str": "first_char",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:518:33:518:42": {
            "pat": {
              "pat_str": "Some('/')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:518:45:518:55": {
            "pat": {
              "pat_str": "Some('\\\\')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "url/src/parser.rs:529:21:529:65": [
    {
      "Try": "self.parse_file_host(input_after_next_char)?"
    }
  ],
  "url/src/parser.rs:542:21:542:29": [
    {
      "Bool": {
        "Other": "has_host"
      }
    }
  ],
  "url/src/parser.rs:571:28:571:77": [
    {
      "Bool": {
        "Other": "is_normalized_windows_drive_letter(first_segment)"
      }
    }
  ],
  "url/src/parser.rs:516:23:516:52": [
    {
      "Bool": {
        "Other": "self.serialization.is_empty()"
      }
    }
  ],
  "url/src/parser.rs:583:49:583:57": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == '?'",
          "lhs": "c",
          "rhs": "'?'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/parser.rs:549:21:549:87": [
    {
      "Try": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?"
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:457:9:460:10": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:522:25:522:34",
        "match_str": "next_char",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:522:48:522:58": {
            "pat": {
              "pat_str": "Some('\\\\')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:522:36:522:45": {
            "pat": {
              "pat_str": "Some('/')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "url/src/parser.rs:522:25:522:34",
        "match_str": "next_char",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "url/src/parser.rs:522:36:522:45": {
            "pat": {
              "pat_str": "Some('/')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:522:48:522:58": {
            "pat": {
              "pat_str": "Some('\\\\')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "url/src/parser.rs:518:21:518:31",
        "match_str": "first_char",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:518:33:518:42": {
            "pat": {
              "pat_str": "Some('/')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:518:45:518:55": {
            "pat": {
              "pat_str": "Some('\\\\')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "url/src/parser.rs:518:21:518:31",
        "match_str": "first_char",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "url/src/parser.rs:518:33:518:42": {
            "pat": {
              "pat_str": "Some('/')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:518:45:518:55": {
            "pat": {
              "pat_str": "Some('\\\\')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "url/src/parser.rs:531:46:531:50",
        "match_str": "host",
        "match_kind": {
          "Enum": [
            "None",
            "Domain",
            "Ipv4",
            "Ipv6"
          ]
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:531:52:531:70": {
            "pat": {
              "pat_str": "HostInternal::None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "url/src/parser.rs:649:50:649:97": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:649:50:649:97",
        "match_str": "(base_url.query_start, base_url.fragment_start)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "url/src/parser.rs:651:44:651:59": {
            "pat": {
              "pat_str": "(None, Some(i))",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "url/src/parser.rs:651:51:651:58"
                  ],
                  "0": [
                    null,
                    "url/src/parser.rs:651:45:651:49"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:651:63:651:82"
          },
          "url/src/parser.rs:650:29:650:41": {
            "pat": {
              "pat_str": "(None, None)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "url/src/parser.rs:650:30:650:34"
                  ],
                  "1": [
                    null,
                    "url/src/parser.rs:650:36:650:40"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:650:45:650:69"
          },
          "url/src/parser.rs:651:29:651:41": {
            "pat": {
              "pat_str": "(Some(i), _)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "url/src/parser.rs:651:30:651:37"
                  ],
                  "1": [
                    null,
                    "url/src/parser.rs:651:39:651:40"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:651:63:651:82"
          }
        }
      }
    }
  ],
  "url/src/parser.rs:568:21:568:86": [
    {
      "Bool": {
        "Other": "starts_with_windows_drive_letter_segment(&input_after_first_char)"
      }
    }
  ],
  "url/src/parser.rs:632:46:632:93": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:632:46:632:93",
        "match_str": "(base_url.query_start, base_url.fragment_start)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "url/src/parser.rs:634:40:634:55": {
            "pat": {
              "pat_str": "(None, Some(i))",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "url/src/parser.rs:634:41:634:45"
                  ],
                  "1": [
                    null,
                    "url/src/parser.rs:634:47:634:54"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:634:59:634:78"
          },
          "url/src/parser.rs:633:25:633:37": {
            "pat": {
              "pat_str": "(None, None)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "url/src/parser.rs:633:26:633:30"
                  ],
                  "1": [
                    null,
                    "url/src/parser.rs:633:32:633:36"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:633:41:633:65"
          },
          "url/src/parser.rs:634:25:634:37": {
            "pat": {
              "pat_str": "(Some(i), _)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "url/src/parser.rs:634:26:634:33"
                  ],
                  "1": [
                    null,
                    "url/src/parser.rs:634:35:634:36"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:634:59:634:78"
          }
        }
      }
    }
  ],
  "url/src/parser.rs:702:17:702:88": [
    {
      "Try": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?"
    }
  ],
  "url/src/parser.rs:532:36:532:46": [
    {
      "Bool": {
        "Other": "path_start"
      }
    }
  ],
  "url/src/parser.rs:531:46:531:50": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:531:46:531:50",
        "match_str": "host",
        "match_kind": {
          "Enum": [
            "None",
            "Domain",
            "Ipv4",
            "Ipv6"
          ]
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:531:52:531:70": {
            "pat": {
              "pat_str": "HostInternal::None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "url/src/parser.rs:638:25:638:96": [
    {
      "Try": "self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?"
    }
  ],
  "url/src/parser.rs:619:49:619:72": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:619:49:619:72",
        "match_str": "base_url.fragment_start",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "url/src/parser.rs:621:25:621:29": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:621:33:621:57"
          },
          "url/src/parser.rs:620:25:620:32": {
            "pat": {
              "pat_str": "Some(i)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:620:36:620:73"
          }
        }
      }
    }
  ],
  "url/src/parser.rs:522:25:522:34": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:522:25:522:34",
        "match_str": "next_char",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "url/src/parser.rs:522:36:522:45": {
            "pat": {
              "pat_str": "Some('/')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:522:48:522:58": {
            "pat": {
              "pat_str": "Some('\\\\')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "url/src/parser.rs:522:25:522:34",
        "match_str": "next_char",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:522:48:522:58": {
            "pat": {
              "pat_str": "Some('\\\\')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          },
          "url/src/parser.rs:522:36:522:45": {
            "pat": {
              "pat_str": "Some('/')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "url/src/parser.rs:583:61:583:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == '#'",
          "lhs": "c",
          "rhs": "'#'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/parser.rs:583:36:583:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == '\\\\'",
          "lhs": "c",
          "rhs": "'\\\\'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/parser.rs:598:21:598:87": [
    {
      "Try": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?"
    }
  ],
  "url/src/parser.rs:583:24:583:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == '/'",
          "lhs": "c",
          "rhs": "'/'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/parser.rs:616:19:616:29": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:616:19:616:29",
        "match_str": "first_char",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "url/src/parser.rs:646:17:646:26": {
            "pat": {
              "pat_str": "Some('#')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:646:30:646:65"
          },
          "url/src/parser.rs:647:17:647:18": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "url/src/parser.rs:647:22:694:18"
          },
          "url/src/parser.rs:617:17:617:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:617:25:629:18"
          },
          "url/src/parser.rs:630:17:630:26": {
            "pat": {
              "pat_str": "Some('?')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:630:30:645:18"
          }
        }
      }
    }
  ],
  "url/src/parser.rs:530:36:530:69": [
    {
      "Try": "to_u32(self.serialization.len())?"
    }
  ]
}