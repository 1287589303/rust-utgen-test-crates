bb0
  0: PlaceMention(_1)
    SourceInfo(url/src/parser.rs:1724:14-1724:15)
  1: _44 = Le(const 'a', _1)
    SourceInfo(url/src/parser.rs:1725:9-1725:18)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1725:9-1725:18)
      kind: switchInt(move _44) -> [0: bb2, otherwise: bb45]
  }
  preds []
  succs [bb2, bb45]

bb1
  0: _0 = const false
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:18-459:23)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:18-459:23)
      kind: goto -> bb48
  }
  preds [bb23, bb24, bb46]
  succs [bb48]

bb2
  0: _42 = Le(const 'A', _1)
    SourceInfo(url/src/parser.rs:1726:9-1726:18)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1726:9-1726:18)
      kind: switchInt(move _42) -> [0: bb3, otherwise: bb44]
  }
  preds [bb0, bb45]
  succs [bb3, bb44]

bb3
  0: _40 = Le(const '0', _1)
    SourceInfo(url/src/parser.rs:1727:9-1727:18)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1727:9-1727:18)
      kind: switchInt(move _40) -> [0: bb4, otherwise: bb43]
  }
  preds [bb2, bb44]
  succs [bb4, bb43]

bb4
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:457:9-457:9)
      kind: switchInt(_1) -> [33: bb46, 36: bb46, 38: bb46, 39: bb46, 40: bb46, 41: bb46, 42: bb46, 43: bb46, 44: bb46, 45: bb46, 46: bb46, 47: bb46, 58: bb46, 59: bb46, 61: bb46, 63: bb46, 64: bb46, 95: bb46, 126: bb46, otherwise: bb5]
  }
  preds [bb3, bb43]
  succs [bb5, bb46, bb46, bb46, bb46, bb46, bb46, bb46, bb46, bb46, bb46, bb46, bb46, bb46, bb46, bb46, bb46, bb46, bb46, bb46]

bb5
  0: _38 = Le(const '\u{a0}', _1)
    SourceInfo(url/src/parser.rs:1730:9-1730:30)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1730:9-1730:30)
      kind: switchInt(move _38) -> [0: bb6, otherwise: bb42]
  }
  preds [bb4]
  succs [bb6, bb42]

bb6
  0: _36 = Le(const '\u{e000}', _1)
    SourceInfo(url/src/parser.rs:1730:33-1730:56)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1730:33-1730:56)
      kind: switchInt(move _36) -> [0: bb7, otherwise: bb41]
  }
  preds [bb5, bb42]
  succs [bb7, bb41]

bb7
  0: _34 = Le(const 'ﷰ', _1)
    SourceInfo(url/src/parser.rs:1730:59-1730:82)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1730:59-1730:82)
      kind: switchInt(move _34) -> [0: bb8, otherwise: bb40]
  }
  preds [bb6, bb41]
  succs [bb8, bb40]

bb8
  0: _32 = Le(const '𐀀', _1)
    SourceInfo(url/src/parser.rs:1731:9-1731:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1731:9-1731:34)
      kind: switchInt(move _32) -> [0: bb9, otherwise: bb39]
  }
  preds [bb7, bb40]
  succs [bb9, bb39]

bb9
  0: _30 = Le(const '𠀀', _1)
    SourceInfo(url/src/parser.rs:1731:37-1731:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1731:37-1731:62)
      kind: switchInt(move _30) -> [0: bb10, otherwise: bb38]
  }
  preds [bb8, bb39]
  succs [bb10, bb38]

bb10
  0: _28 = Le(const '𰀀', _1)
    SourceInfo(url/src/parser.rs:1732:9-1732:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1732:9-1732:34)
      kind: switchInt(move _28) -> [0: bb11, otherwise: bb37]
  }
  preds [bb9, bb38]
  succs [bb11, bb37]

bb11
  0: _26 = Le(const '\u{40000}', _1)
    SourceInfo(url/src/parser.rs:1732:37-1732:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1732:37-1732:62)
      kind: switchInt(move _26) -> [0: bb12, otherwise: bb36]
  }
  preds [bb10, bb37]
  succs [bb12, bb36]

bb12
  0: _24 = Le(const '\u{50000}', _1)
    SourceInfo(url/src/parser.rs:1733:9-1733:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1733:9-1733:34)
      kind: switchInt(move _24) -> [0: bb13, otherwise: bb35]
  }
  preds [bb11, bb36]
  succs [bb13, bb35]

bb13
  0: _22 = Le(const '\u{60000}', _1)
    SourceInfo(url/src/parser.rs:1733:37-1733:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1733:37-1733:62)
      kind: switchInt(move _22) -> [0: bb14, otherwise: bb34]
  }
  preds [bb12, bb35]
  succs [bb14, bb34]

bb14
  0: _20 = Le(const '\u{70000}', _1)
    SourceInfo(url/src/parser.rs:1734:9-1734:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1734:9-1734:34)
      kind: switchInt(move _20) -> [0: bb15, otherwise: bb33]
  }
  preds [bb13, bb34]
  succs [bb15, bb33]

bb15
  0: _18 = Le(const '\u{80000}', _1)
    SourceInfo(url/src/parser.rs:1734:37-1734:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1734:37-1734:62)
      kind: switchInt(move _18) -> [0: bb16, otherwise: bb32]
  }
  preds [bb14, bb33]
  succs [bb16, bb32]

bb16
  0: _16 = Le(const '\u{90000}', _1)
    SourceInfo(url/src/parser.rs:1735:9-1735:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1735:9-1735:34)
      kind: switchInt(move _16) -> [0: bb17, otherwise: bb31]
  }
  preds [bb15, bb32]
  succs [bb17, bb31]

bb17
  0: _14 = Le(const '\u{a0000}', _1)
    SourceInfo(url/src/parser.rs:1735:37-1735:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1735:37-1735:62)
      kind: switchInt(move _14) -> [0: bb18, otherwise: bb30]
  }
  preds [bb16, bb31]
  succs [bb18, bb30]

bb18
  0: _12 = Le(const '\u{b0000}', _1)
    SourceInfo(url/src/parser.rs:1736:9-1736:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1736:9-1736:34)
      kind: switchInt(move _12) -> [0: bb19, otherwise: bb29]
  }
  preds [bb17, bb30]
  succs [bb19, bb29]

bb19
  0: _10 = Le(const '\u{c0000}', _1)
    SourceInfo(url/src/parser.rs:1736:37-1736:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1736:37-1736:62)
      kind: switchInt(move _10) -> [0: bb20, otherwise: bb28]
  }
  preds [bb18, bb29]
  succs [bb20, bb28]

bb20
  0: _8 = Le(const '\u{d0000}', _1)
    SourceInfo(url/src/parser.rs:1737:9-1737:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1737:9-1737:34)
      kind: switchInt(move _8) -> [0: bb21, otherwise: bb27]
  }
  preds [bb19, bb28]
  succs [bb21, bb27]

bb21
  0: _6 = Le(const '\u{e1000}', _1)
    SourceInfo(url/src/parser.rs:1737:37-1737:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1737:37-1737:62)
      kind: switchInt(move _6) -> [0: bb22, otherwise: bb26]
  }
  preds [bb20, bb27]
  succs [bb22, bb26]

bb22
  0: _4 = Le(const '\u{f0000}', _1)
    SourceInfo(url/src/parser.rs:1738:9-1738:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1738:9-1738:34)
      kind: switchInt(move _4) -> [0: bb23, otherwise: bb25]
  }
  preds [bb21, bb26]
  succs [bb23, bb25]

bb23
  0: _2 = Le(const '\u{100000}', _1)
    SourceInfo(url/src/parser.rs:1738:37-1738:64)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1738:37-1738:64)
      kind: switchInt(move _2) -> [0: bb1, otherwise: bb24]
  }
  preds [bb22, bb25]
  succs [bb1, bb24]

bb24
  0: _3 = Le(_1, const '\u{10fffd}')
    SourceInfo(url/src/parser.rs:1738:37-1738:64)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1738:37-1738:64)
      kind: switchInt(move _3) -> [0: bb1, otherwise: bb46]
  }
  preds [bb23]
  succs [bb1, bb46]

bb25
  0: _5 = Le(_1, const '\u{ffffd}')
    SourceInfo(url/src/parser.rs:1738:9-1738:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1738:9-1738:34)
      kind: switchInt(move _5) -> [0: bb23, otherwise: bb46]
  }
  preds [bb22]
  succs [bb23, bb46]

bb26
  0: _7 = Le(_1, const '\u{efffd}')
    SourceInfo(url/src/parser.rs:1737:37-1737:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1737:37-1737:62)
      kind: switchInt(move _7) -> [0: bb22, otherwise: bb46]
  }
  preds [bb21]
  succs [bb22, bb46]

bb27
  0: _9 = Le(_1, const '\u{dfffd}')
    SourceInfo(url/src/parser.rs:1737:9-1737:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1737:9-1737:34)
      kind: switchInt(move _9) -> [0: bb21, otherwise: bb46]
  }
  preds [bb20]
  succs [bb21, bb46]

bb28
  0: _11 = Le(_1, const '\u{cfffd}')
    SourceInfo(url/src/parser.rs:1736:37-1736:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1736:37-1736:62)
      kind: switchInt(move _11) -> [0: bb20, otherwise: bb46]
  }
  preds [bb19]
  succs [bb20, bb46]

bb29
  0: _13 = Le(_1, const '\u{bfffd}')
    SourceInfo(url/src/parser.rs:1736:9-1736:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1736:9-1736:34)
      kind: switchInt(move _13) -> [0: bb19, otherwise: bb46]
  }
  preds [bb18]
  succs [bb19, bb46]

bb30
  0: _15 = Le(_1, const '\u{afffd}')
    SourceInfo(url/src/parser.rs:1735:37-1735:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1735:37-1735:62)
      kind: switchInt(move _15) -> [0: bb18, otherwise: bb46]
  }
  preds [bb17]
  succs [bb18, bb46]

bb31
  0: _17 = Le(_1, const '\u{9fffd}')
    SourceInfo(url/src/parser.rs:1735:9-1735:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1735:9-1735:34)
      kind: switchInt(move _17) -> [0: bb17, otherwise: bb46]
  }
  preds [bb16]
  succs [bb17, bb46]

bb32
  0: _19 = Le(_1, const '\u{8fffd}')
    SourceInfo(url/src/parser.rs:1734:37-1734:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1734:37-1734:62)
      kind: switchInt(move _19) -> [0: bb16, otherwise: bb46]
  }
  preds [bb15]
  succs [bb16, bb46]

bb33
  0: _21 = Le(_1, const '\u{7fffd}')
    SourceInfo(url/src/parser.rs:1734:9-1734:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1734:9-1734:34)
      kind: switchInt(move _21) -> [0: bb15, otherwise: bb46]
  }
  preds [bb14]
  succs [bb15, bb46]

bb34
  0: _23 = Le(_1, const '\u{6fffd}')
    SourceInfo(url/src/parser.rs:1733:37-1733:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1733:37-1733:62)
      kind: switchInt(move _23) -> [0: bb14, otherwise: bb46]
  }
  preds [bb13]
  succs [bb14, bb46]

bb35
  0: _25 = Le(_1, const '\u{5fffd}')
    SourceInfo(url/src/parser.rs:1733:9-1733:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1733:9-1733:34)
      kind: switchInt(move _25) -> [0: bb13, otherwise: bb46]
  }
  preds [bb12]
  succs [bb13, bb46]

bb36
  0: _27 = Le(_1, const '\u{4fffd}')
    SourceInfo(url/src/parser.rs:1732:37-1732:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1732:37-1732:62)
      kind: switchInt(move _27) -> [0: bb12, otherwise: bb46]
  }
  preds [bb11]
  succs [bb12, bb46]

bb37
  0: _29 = Le(_1, const '\u{3fffd}')
    SourceInfo(url/src/parser.rs:1732:9-1732:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1732:9-1732:34)
      kind: switchInt(move _29) -> [0: bb11, otherwise: bb46]
  }
  preds [bb10]
  succs [bb11, bb46]

bb38
  0: _31 = Le(_1, const '\u{2fffd}')
    SourceInfo(url/src/parser.rs:1731:37-1731:62)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1731:37-1731:62)
      kind: switchInt(move _31) -> [0: bb10, otherwise: bb46]
  }
  preds [bb9]
  succs [bb10, bb46]

bb39
  0: _33 = Le(_1, const '\u{1fffd}')
    SourceInfo(url/src/parser.rs:1731:9-1731:34)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1731:9-1731:34)
      kind: switchInt(move _33) -> [0: bb9, otherwise: bb46]
  }
  preds [bb8]
  succs [bb9, bb46]

bb40
  0: _35 = Le(_1, const '�')
    SourceInfo(url/src/parser.rs:1730:59-1730:82)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1730:59-1730:82)
      kind: switchInt(move _35) -> [0: bb8, otherwise: bb46]
  }
  preds [bb7]
  succs [bb8, bb46]

bb41
  0: _37 = Le(_1, const '﷏')
    SourceInfo(url/src/parser.rs:1730:33-1730:56)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1730:33-1730:56)
      kind: switchInt(move _37) -> [0: bb7, otherwise: bb46]
  }
  preds [bb6]
  succs [bb7, bb46]

bb42
  0: _39 = Le(_1, const '\u{d7ff}')
    SourceInfo(url/src/parser.rs:1730:9-1730:30)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1730:9-1730:30)
      kind: switchInt(move _39) -> [0: bb6, otherwise: bb46]
  }
  preds [bb5]
  succs [bb6, bb46]

bb43
  0: _41 = Le(_1, const '9')
    SourceInfo(url/src/parser.rs:1727:9-1727:18)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1727:9-1727:18)
      kind: switchInt(move _41) -> [0: bb4, otherwise: bb46]
  }
  preds [bb3]
  succs [bb4, bb46]

bb44
  0: _43 = Le(_1, const 'Z')
    SourceInfo(url/src/parser.rs:1726:9-1726:18)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1726:9-1726:18)
      kind: switchInt(move _43) -> [0: bb3, otherwise: bb46]
  }
  preds [bb2]
  succs [bb3, bb46]

bb45
  0: _45 = Le(_1, const 'z')
    SourceInfo(url/src/parser.rs:1725:9-1725:18)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1725:9-1725:18)
      kind: switchInt(move _45) -> [0: bb2, otherwise: bb46]
  }
  preds [bb0]
  succs [bb2, bb46]

bb46
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1725:9-1738:64)
      kind: falseEdge -> [real: bb47, imaginary: bb1]
  }
  preds [bb4, bb4, bb4, bb4, bb4, bb4, bb4, bb4, bb4, bb4, bb4, bb4, bb4, bb4, bb4, bb4, bb4, bb4, bb4, bb24, bb25, bb26, bb27, bb28, bb29, bb30, bb31, bb32, bb33, bb34, bb35, bb36, bb37, bb38, bb39, bb40, bb41, bb42, bb43, bb44, bb45]
  succs [bb1, bb47]

bb47
  0: _0 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:458:39-458:43)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:458:39-458:43)
      kind: goto -> bb48
  }
  preds [bb46]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1739:2-1739:2)
      kind: return
  }
  preds [bb1, bb47]
  succs []

