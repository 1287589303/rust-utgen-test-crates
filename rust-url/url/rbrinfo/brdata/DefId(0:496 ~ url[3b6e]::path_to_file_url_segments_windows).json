{
  "name": "url::path_to_file_url_segments_windows",
  "mod_info": {
    "name": "",
    "loc": "url/src/lib.rs:9:1:3218:2"
  },
  "visible": true,
  "loc": "url/src/lib.rs:2983:1:3045:2",
  "doc": "",
  "code": [
    "fn path_to_file_url_segments_windows(",
    "    path: &Path,",
    "    serialization: &mut String,",
    ") -> Result<(u32, HostInternal), ()> {",
    "    use crate::parser::PATH_SEGMENT;",
    "    use percent_encoding::percent_encode;",
    "    use std::path::{Component, Prefix};",
    "    if !path.is_absolute() {",
    "        return Err(());",
    "    }",
    "    let mut components = path.components();",
    "",
    "    let host_start = serialization.len() + 1;",
    "    let host_end;",
    "    let host_internal;",
    "",
    "    match components.next() {",
    "        Some(Component::Prefix(ref p)) => match p.kind() {",
    "            Prefix::Disk(letter) | Prefix::VerbatimDisk(letter) => {",
    "                host_end = to_u32(serialization.len()).unwrap();",
    "                host_internal = HostInternal::None;",
    "                serialization.push('/');",
    "                serialization.push(letter as char);",
    "                serialization.push(':');",
    "            }",
    "            Prefix::UNC(server, share) | Prefix::VerbatimUNC(server, share) => {",
    "                let host = Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?;",
    "                write!(serialization, \"{}\", host).unwrap();",
    "                host_end = to_u32(serialization.len()).unwrap();",
    "                host_internal = host.into();",
    "                serialization.push('/');",
    "                let share = share.to_str().ok_or(())?;",
    "                serialization.extend(percent_encode(share.as_bytes(), PATH_SEGMENT));",
    "            }",
    "            _ => return Err(()),",
    "        },",
    "        _ => return Err(()),",
    "    }",
    "",
    "    let mut path_only_has_prefix = true;",
    "    for component in components {",
    "        if component == Component::RootDir {",
    "            continue;",
    "        }",
    "",
    "        path_only_has_prefix = false;",
    "        // FIXME: somehow work with non-unicode?",
    "        let component = component.as_os_str().to_str().ok_or(())?;",
    "",
    "        serialization.push('/');",
    "        serialization.extend(percent_encode(component.as_bytes(), PATH_SEGMENT));",
    "    }",
    "",
    "    // A windows drive letter must end with a slash.",
    "    if serialization.len() > host_start",
    "        && parser::is_windows_drive_letter(&serialization[host_start..])",
    "        && path_only_has_prefix",
    "    {",
    "        serialization.push('/');",
    "    }",
    "",
    "    Ok((host_end, host_internal))",
    "}"
  ],
  "size": {
    "chain": 62,
    "contra": 32,
    "min_set": 13
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches _",
          "norm": null,
          "value": "true",
          "line": 3019,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "false",
          "line": 3000,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        108,
        109,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches _",
          "norm": null,
          "value": "true",
          "line": 3019,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "false",
          "line": 3000,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        8,
        108,
        109,
        110
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "false",
          "line": 3001,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "false",
          "line": 3001,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "false",
          "line": 3008,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "false",
          "line": 3008,
          "bound": null
        },
        {
          "cond": "p.kind() matches _",
          "norm": null,
          "value": "true",
          "line": 3017,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        107,
        108,
        109,
        110
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "true",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        14,
        19,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "false",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        14,
        19,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "false",
          "line": 3038,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        14,
        19,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        101,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "false",
          "line": 3037,
          "bound": "serialization.len() == host_start"
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        14,
        19,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        102,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Err/None",
          "line": 3030,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        14,
        19,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        86,
        88,
        89,
        109,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "true",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        14,
        19,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "false",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        14,
        19,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "false",
          "line": 3038,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        14,
        19,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        101,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "false",
          "line": 3037,
          "bound": "serialization.len() == host_start"
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        14,
        19,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        102,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "true",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        14,
        19,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        104,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "false",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        14,
        19,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        103,
        104,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "false",
          "line": 3038,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        14,
        19,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        101,
        103,
        104,
        110
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::Disk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "false",
          "line": 3037,
          "bound": "serialization.len() == host_start"
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        14,
        19,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        102,
        103,
        104,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Err/None",
          "line": 3009,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        34,
        36,
        37,
        105,
        106,
        107,
        108,
        109,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Err/None",
          "line": 3009,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        42,
        44,
        45,
        105,
        106,
        107,
        108,
        109,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Err/None",
          "line": 3014,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        61,
        63,
        64,
        106,
        107,
        108,
        109,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "true",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "false",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "false",
          "line": 3038,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        101,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "false",
          "line": 3037,
          "bound": "serialization.len() == host_start"
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        102,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Err/None",
          "line": 3030,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        86,
        88,
        89,
        109,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "true",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "false",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "false",
          "line": 3038,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        101,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "false",
          "line": 3037,
          "bound": "serialization.len() == host_start"
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        102,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "true",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        104,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "false",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        103,
        104,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 31,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "false",
          "line": 3038,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        101,
        103,
        104,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 32,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::UNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "false",
          "line": 3037,
          "bound": "serialization.len() == host_start"
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        16,
        28,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        102,
        103,
        104,
        110
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 33,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "true",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        15,
        20,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 34,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "false",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        15,
        20,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 35,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "false",
          "line": 3038,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        15,
        20,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        101,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 36,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "false",
          "line": 3037,
          "bound": "serialization.len() == host_start"
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        15,
        20,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        102,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 37,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Err/None",
          "line": 3030,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        15,
        20,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        86,
        88,
        89,
        109,
        110
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 38,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "true",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        15,
        20,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 39,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "false",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        15,
        20,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 40,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "false",
          "line": 3038,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        15,
        20,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        101,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 41,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "false",
          "line": 3037,
          "bound": "serialization.len() == host_start"
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        15,
        20,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        102,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 42,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "true",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        15,
        20,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        104,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 43,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "false",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        15,
        20,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        103,
        104,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 44,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "false",
          "line": 3038,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        15,
        20,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        101,
        103,
        104,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 45,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimDisk(letter)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "false",
          "line": 3037,
          "bound": "serialization.len() == host_start"
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        15,
        20,
        18,
        21,
        22,
        23,
        24,
        25,
        26,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        102,
        103,
        104,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 46,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Err/None",
          "line": 3009,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        34,
        36,
        37,
        105,
        106,
        107,
        108,
        109,
        110
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 47,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Err/None",
          "line": 3009,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        42,
        44,
        45,
        105,
        106,
        107,
        108,
        109,
        110
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 48,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Err/None",
          "line": 3014,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        61,
        63,
        64,
        106,
        107,
        108,
        109,
        110
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 49,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "true",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 50,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "false",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 51,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "false",
          "line": 3038,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        101,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 52,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "true",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "false",
          "line": 3037,
          "bound": "serialization.len() == host_start"
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        79,
        71,
        72,
        73,
        75,
        77,
        94,
        102,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 53,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Err/None",
          "line": 3030,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        86,
        88,
        89,
        109,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 54,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "true",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 55,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "false",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 56,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "false",
          "line": 3038,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        101,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 57,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "true",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "component == Component::RootDir",
          "norm": "Component::RootDir == component",
          "value": "false",
          "line": 3024,
          "bound": null
        },
        {
          "cond": "component.as_os_str().to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3030,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "false",
          "line": 3037,
          "bound": "serialization.len() == host_start"
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        78,
        80,
        81,
        82,
        83,
        84,
        87,
        90,
        91,
        92,
        93,
        71,
        72,
        73,
        75,
        77,
        94,
        102,
        103,
        104,
        110
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 58,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "true",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        104,
        110
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 59,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "true",
          "line": 3038,
          "bound": null
        },
        {
          "cond": "path_only_has_prefix",
          "norm": null,
          "value": "false",
          "line": 3039,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        98,
        103,
        104,
        110
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 60,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "true",
          "line": 3037,
          "bound": null
        },
        {
          "cond": "parser::is_windows_drive_letter(&serialization[host_start..])",
          "norm": null,
          "value": "false",
          "line": 3038,
          "bound": null
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        95,
        96,
        97,
        101,
        103,
        104,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 61,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "true",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches ",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "components.next() matches Some(Component::Prefix(ref p))",
          "norm": null,
          "value": "true",
          "line": 2999,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "p.kind() matches Prefix::VerbatimUNC(server, share)",
          "norm": null,
          "value": "true",
          "line": 3000,
          "bound": null
        },
        {
          "cond": "server.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "Host::parse(server.to_str().ok_or(())?).map_err(|_| ())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3009,
          "bound": null
        },
        {
          "cond": "share.to_str().ok_or(())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 3014,
          "bound": null
        },
        {
          "cond": "component in components",
          "norm": null,
          "value": "false",
          "line": 3023,
          "bound": null
        },
        {
          "cond": "serialization.len() > host_start",
          "norm": "host_start < serialization.len()",
          "value": "false",
          "line": 3037,
          "bound": "serialization.len() == host_start"
        }
      ],
      "ret": "Ok((host_end, host_internal))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        17,
        29,
        27,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        43,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        75,
        77,
        94,
        102,
        103,
        104,
        110
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 62,
      "conds": [
        {
          "cond": "path.is_absolute()",
          "norm": null,
          "value": "false",
          "line": 2990,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        3,
        110
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}