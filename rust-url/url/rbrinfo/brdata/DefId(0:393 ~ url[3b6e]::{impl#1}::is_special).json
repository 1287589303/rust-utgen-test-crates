{
  "name": "url::{impl#1}::is_special",
  "mod_info": {
    "name": "",
    "loc": "url/src/lib.rs:9:1:3218:2"
  },
  "visible": true,
  "loc": "url/src/lib.rs:917:5:920:6",
  "doc": "/// Return whether the URL is special (has a special scheme)\n///\n/// # Examples\n///\n/// ```\n/// use url::Url;\n/// # use url::ParseError;\n///\n/// # fn run() -> Result<(), ParseError> {\n/// assert!(Url::parse(\"http:///tmp/foo\")?.is_special());\n/// assert!(Url::parse(\"file:///tmp/foo\")?.is_special());\n/// assert!(!Url::parse(\"moz:///tmp/foo\")?.is_special());\n/// # Ok(())\n/// # }\n/// # run().unwrap();\n/// ```\n",
  "code": [
    "pub fn is_special(&self) -> bool {",
    "    let scheme_type = SchemeType::from(self.scheme());",
    "    scheme_type.is_special()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}