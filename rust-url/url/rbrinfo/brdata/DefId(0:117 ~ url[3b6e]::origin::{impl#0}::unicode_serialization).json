{
  "name": "url::origin::{impl#0}::unicode_serialization",
  "mod_info": {
    "name": "origin",
    "loc": "url/src/lib.rs:217:1:217:12"
  },
  "visible": true,
  "loc": "url/src/origin.rs:92:5:110:6",
  "doc": "/// <https://html.spec.whatwg.org/multipage/#unicode-serialisation-of-an-origin>\n",
  "code": [
    "pub fn unicode_serialization(&self) -> String {",
    "    match *self {",
    "        Origin::Opaque(_) => \"null\".to_owned(),",
    "        Origin::Tuple(ref scheme, ref host, port) => {",
    "            let host = match *host {",
    "                Host::Domain(ref domain) => {",
    "                    let (domain, _errors) = idna::domain_to_unicode(domain);",
    "                    Host::Domain(domain)",
    "                }",
    "                _ => host.clone(),",
    "            };",
    "            if default_port(scheme) == Some(port) {",
    "                format!(\"{}://{}\", scheme, host)",
    "            } else {",
    "                format!(\"{}://{}:{}\", scheme, host, port)",
    "            }",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*self matches Origin::Tuple(ref scheme, ref host, port)",
          "norm": null,
          "value": "true",
          "line": 93,
          "bound": null
        },
        {
          "cond": "*host matches Host::Domain(ref domain)",
          "norm": null,
          "value": "false",
          "line": 97,
          "bound": null
        },
        {
          "cond": "*host matches _",
          "norm": null,
          "value": "true",
          "line": 101,
          "bound": null
        },
        {
          "cond": "default_port(scheme) == Some(port)",
          "norm": "Some(port) == default_port(scheme)",
          "value": "true",
          "line": 103,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        6,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        34,
        35,
        36
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*self matches Origin::Tuple(ref scheme, ref host, port)",
          "norm": null,
          "value": "true",
          "line": 93,
          "bound": null
        },
        {
          "cond": "*host matches Host::Domain(ref domain)",
          "norm": null,
          "value": "false",
          "line": 97,
          "bound": null
        },
        {
          "cond": "*host matches _",
          "norm": null,
          "value": "true",
          "line": 101,
          "bound": null
        },
        {
          "cond": "default_port(scheme) == Some(port)",
          "norm": "Some(port) == default_port(scheme)",
          "value": "false",
          "line": 103,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        6,
        14,
        15,
        16,
        17,
        18,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*self matches Origin::Tuple(ref scheme, ref host, port)",
          "norm": null,
          "value": "true",
          "line": 93,
          "bound": null
        },
        {
          "cond": "*host matches Host::Domain(ref domain)",
          "norm": null,
          "value": "true",
          "line": 96,
          "bound": null
        },
        {
          "cond": "*host matches Host::Domain(ref domain)",
          "norm": null,
          "value": "true",
          "line": 96,
          "bound": null
        },
        {
          "cond": "default_port(scheme) == Some(port)",
          "norm": "Some(port) == default_port(scheme)",
          "value": "true",
          "line": 103,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        34,
        35,
        36
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*self matches Origin::Tuple(ref scheme, ref host, port)",
          "norm": null,
          "value": "true",
          "line": 93,
          "bound": null
        },
        {
          "cond": "*host matches Host::Domain(ref domain)",
          "norm": null,
          "value": "true",
          "line": 96,
          "bound": null
        },
        {
          "cond": "*host matches Host::Domain(ref domain)",
          "norm": null,
          "value": "true",
          "line": 96,
          "bound": null
        },
        {
          "cond": "default_port(scheme) == Some(port)",
          "norm": "Some(port) == default_port(scheme)",
          "value": "false",
          "line": 103,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        17,
        18,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*self matches Origin::Opaque(_)",
          "norm": null,
          "value": "true",
          "line": 93,
          "bound": null
        },
        {
          "cond": "*self matches Origin::Opaque(_)",
          "norm": null,
          "value": "true",
          "line": 93,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        5,
        36
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}