{
  "name": "url::{impl#1}::mutate",
  "mod_info": {
    "name": "",
    "loc": "url/src/lib.rs:9:1:3218:2"
  },
  "visible": true,
  "loc": "url/src/lib.rs:1539:5:1544:6",
  "doc": "",
  "code": [
    "fn mutate<F: FnOnce(&mut Parser<'_>) -> R, R>(&mut self, f: F) -> R {",
    "    let mut parser = Parser::for_setter(mem::take(&mut self.serialization));",
    "    let result = f(&mut parser);",
    "    self.serialization = parser.serialization;",
    "    result",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "result",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}