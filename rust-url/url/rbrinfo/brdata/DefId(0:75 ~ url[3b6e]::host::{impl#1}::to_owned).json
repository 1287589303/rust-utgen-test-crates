{
  "name": "url::host::{impl#1}::to_owned",
  "mod_info": {
    "name": "host",
    "loc": "url/src/lib.rs:216:1:216:10"
  },
  "visible": true,
  "loc": "url/src/host.rs:69:5:75:6",
  "doc": "/// Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.\n",
  "code": [
    "pub fn to_owned(&self) -> Host<String> {",
    "    match *self {",
    "        Host::Domain(domain) => Host::Domain(domain.to_owned()),",
    "        Host::Ipv4(address) => Host::Ipv4(address),",
    "        Host::Ipv6(address) => Host::Ipv6(address),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*self matches Host::Ipv6(address)",
          "norm": null,
          "value": "true",
          "line": 70,
          "bound": null
        }
      ],
      "ret": "Host::Ipv6(address)",
      "path": [
        0,
        4,
        9
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*self matches Host::Ipv4(address)",
          "norm": null,
          "value": "true",
          "line": 70,
          "bound": null
        },
        {
          "cond": "*self matches Host::Ipv4(address)",
          "norm": null,
          "value": "true",
          "line": 70,
          "bound": null
        }
      ],
      "ret": "Host::Ipv4(address)",
      "path": [
        0,
        3,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*self matches Host::Domain(domain)",
          "norm": null,
          "value": "true",
          "line": 70,
          "bound": null
        },
        {
          "cond": "*self matches Host::Domain(domain)",
          "norm": null,
          "value": "true",
          "line": 70,
          "bound": null
        }
      ],
      "ret": "Host::Domain(domain.to_owned())",
      "path": [
        0,
        2,
        5,
        6,
        7,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}