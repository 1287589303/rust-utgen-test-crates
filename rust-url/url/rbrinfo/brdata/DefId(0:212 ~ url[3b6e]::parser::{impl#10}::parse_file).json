{
  "name": "url::parser::{impl#10}::parse_file",
  "mod_info": {
    "name": "parser",
    "loc": "url/src/lib.rs:218:1:218:12"
  },
  "visible": false,
  "loc": "url/src/parser.rs:508:5:717:6",
  "doc": "",
  "code": [
    "fn parse_file(",
    "    mut self,",
    "    input: Input<'_>,",
    "    scheme_type: SchemeType,",
    "    base_file_url: Option<&Url>,",
    ") -> ParseResult<Url> {",
    "    use crate::SyntaxViolation::Backslash;",
    "    // file state",
    "    debug_assert!(self.serialization.is_empty());",
    "    let (first_char, input_after_first_char) = input.split_first();",
    "    if matches!(first_char, Some('/') | Some('\\\\')) {",
    "        self.log_violation_if(SyntaxViolation::Backslash, || first_char == Some('\\\\'));",
    "        // file slash state",
    "        let (next_char, input_after_next_char) = input_after_first_char.split_first();",
    "        if matches!(next_char, Some('/') | Some('\\\\')) {",
    "            self.log_violation_if(Backslash, || next_char == Some('\\\\'));",
    "            // file host state",
    "            self.serialization.push_str(\"file://\");",
    "            let scheme_end = \"file\".len() as u32;",
    "            let host_start = \"file://\".len() as u32;",
    "            let (path_start, mut host, remaining) =",
    "                self.parse_file_host(input_after_next_char)?;",
    "            let mut host_end = to_u32(self.serialization.len())?;",
    "            let mut has_host = !matches!(host, HostInternal::None);",
    "            let remaining = if path_start {",
    "                self.parse_path_start(SchemeType::File, &mut has_host, remaining)",
    "            } else {",
    "                let path_start = self.serialization.len();",
    "                self.serialization.push('/');",
    "                self.parse_path(SchemeType::File, &mut has_host, path_start, remaining)",
    "            };",
    "",
    "            // For file URLs that have a host and whose path starts",
    "            // with the windows drive letter we just remove the host.",
    "            if !has_host {",
    "                self.serialization",
    "                    .drain(host_start as usize..host_end as usize);",
    "                host_end = host_start;",
    "                host = HostInternal::None;",
    "            }",
    "            let (query_start, fragment_start) =",
    "                self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?;",
    "            return Ok(Url {",
    "                serialization: self.serialization,",
    "                scheme_end,",
    "                username_end: host_start,",
    "                host_start,",
    "                host_end,",
    "                host,",
    "                port: None,",
    "                path_start: host_end,",
    "                query_start,",
    "                fragment_start,",
    "            });",
    "        } else {",
    "            self.serialization.push_str(\"file://\");",
    "            let scheme_end = \"file\".len() as u32;",
    "            let host_start = \"file://\".len();",
    "            let mut host_end = host_start;",
    "            let mut host = HostInternal::None;",
    "            if !starts_with_windows_drive_letter_segment(&input_after_first_char) {",
    "                if let Some(base_url) = base_file_url {",
    "                    let first_segment = base_url.path_segments().unwrap().next().unwrap();",
    "                    if is_normalized_windows_drive_letter(first_segment) {",
    "                        self.serialization.push('/');",
    "                        self.serialization.push_str(first_segment);",
    "                    } else if let Some(host_str) = base_url.host_str() {",
    "                        self.serialization.push_str(host_str);",
    "                        host_end = self.serialization.len();",
    "                        host = base_url.host;",
    "                    }",
    "                }",
    "            }",
    "            // If c is the EOF code point, U+002F (/), U+005C (\\), U+003F (?), or U+0023 (#), then decrease pointer by one",
    "            let parse_path_input = if let Some(c) = first_char {",
    "                if c == '/' || c == '\\\\' || c == '?' || c == '#' {",
    "                    input",
    "                } else {",
    "                    input_after_first_char",
    "                }",
    "            } else {",
    "                input_after_first_char",
    "            };",
    "",
    "            let remaining =",
    "                self.parse_path(SchemeType::File, &mut false, host_end, parse_path_input);",
    "",
    "            let host_start = host_start as u32;",
    "",
    "            let (query_start, fragment_start) =",
    "                self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?;",
    "",
    "            let host_end = host_end as u32;",
    "            return Ok(Url {",
    "                serialization: self.serialization,",
    "                scheme_end,",
    "                username_end: host_start,",
    "                host_start,",
    "                host_end,",
    "                host,",
    "                port: None,",
    "                path_start: host_end,",
    "                query_start,",
    "                fragment_start,",
    "            });",
    "        }",
    "    }",
    "    if let Some(base_url) = base_file_url {",
    "        match first_char {",
    "            None => {",
    "                // Copy everything except the fragment",
    "                let before_fragment = match base_url.fragment_start {",
    "                    Some(i) => &base_url.serialization[..i as usize],",
    "                    None => &*base_url.serialization,",
    "                };",
    "                self.serialization.push_str(before_fragment);",
    "                Ok(Url {",
    "                    serialization: self.serialization,",
    "                    fragment_start: None,",
    "                    ..*base_url",
    "                })",
    "            }",
    "            Some('?') => {",
    "                // Copy everything up to the query string",
    "                let before_query = match (base_url.query_start, base_url.fragment_start) {",
    "                    (None, None) => &*base_url.serialization,",
    "                    (Some(i), _) | (None, Some(i)) => base_url.slice(..i),",
    "                };",
    "                self.serialization.push_str(before_query);",
    "                let (query_start, fragment_start) =",
    "                    self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?;",
    "                Ok(Url {",
    "                    serialization: self.serialization,",
    "                    query_start,",
    "                    fragment_start,",
    "                    ..*base_url",
    "                })",
    "            }",
    "            Some('#') => self.fragment_only(base_url, input),",
    "            _ => {",
    "                if !starts_with_windows_drive_letter_segment(&input) {",
    "                    let before_query = match (base_url.query_start, base_url.fragment_start) {",
    "                        (None, None) => &*base_url.serialization,",
    "                        (Some(i), _) | (None, Some(i)) => base_url.slice(..i),",
    "                    };",
    "                    self.serialization.push_str(before_query);",
    "                    self.shorten_path(SchemeType::File, base_url.path_start as usize);",
    "                    let remaining = self.parse_path(",
    "                        SchemeType::File,",
    "                        &mut true,",
    "                        base_url.path_start as usize,",
    "                        input,",
    "                    );",
    "                    self.with_query_and_fragment(",
    "                        SchemeType::File,",
    "                        base_url.scheme_end,",
    "                        base_url.username_end,",
    "                        base_url.host_start,",
    "                        base_url.host_end,",
    "                        base_url.host,",
    "                        base_url.port,",
    "                        base_url.path_start,",
    "                        remaining,",
    "                    )",
    "                } else {",
    "                    self.serialization.push_str(\"file:///\");",
    "                    let scheme_end = \"file\".len() as u32;",
    "                    let path_start = \"file://\".len();",
    "                    let remaining =",
    "                        self.parse_path(SchemeType::File, &mut false, path_start, input);",
    "                    let (query_start, fragment_start) =",
    "                        self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?;",
    "                    let path_start = path_start as u32;",
    "                    Ok(Url {",
    "                        serialization: self.serialization,",
    "                        scheme_end,",
    "                        username_end: path_start,",
    "                        host_start: path_start,",
    "                        host_end: path_start,",
    "                        host: HostInternal::None,",
    "                        port: None,",
    "                        path_start,",
    "                        query_start,",
    "                        fragment_start,",
    "                    })",
    "                }",
    "            }",
    "        }",
    "    } else {",
    "        self.serialization.push_str(\"file:///\");",
    "        let scheme_end = \"file\".len() as u32;",
    "        let path_start = \"file://\".len();",
    "        let remaining = self.parse_path(SchemeType::File, &mut false, path_start, input);",
    "        let (query_start, fragment_start) =",
    "            self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?;",
    "        let path_start = path_start as u32;",
    "        Ok(Url {",
    "            serialization: self.serialization,",
    "            scheme_end,",
    "            username_end: path_start,",
    "            host_start: path_start,",
    "            host_end: path_start,",
    "            host: HostInternal::None,",
    "            port: None,",
    "            path_start,",
    "            query_start,",
    "            fragment_start,",
    "        })",
    "    }",
    "}"
  ],
  "size": {
    "chain": 355,
    "contra": 0,
    "min_set": 21
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 702,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        119,
        195,
        196,
        197,
        198,
        199,
        200,
        202,
        204,
        205,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 702,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                serialization: self.serialization,\n                scheme_end,\n                username_end: path_start,\n                host_start: path_start,\n                host_end: path_start,\n                host: HostInternal::None,\n                port: None,\n                path_start,\n                query_start,\n                fragment_start,\n            })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        119,
        195,
        196,
        197,
        198,
        199,
        200,
        203,
        206,
        207,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "true",
          "line": 648,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 679,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        122,
        162,
        163,
        180,
        181,
        182,
        183,
        184,
        185,
        187,
        189,
        190,
        209,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "true",
          "line": 648,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 679,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                            serialization: self.serialization,\n                            scheme_end,\n                            username_end: path_start,\n                            host_start: path_start,\n                            host_end: path_start,\n                            host: HostInternal::None,\n                            port: None,\n                            path_start,\n                            query_start,\n                            fragment_start,\n                        })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        122,
        162,
        163,
        180,
        181,
        182,
        183,
        184,
        185,
        188,
        191,
        192,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "false",
          "line": 648,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (Some(i), _)",
          "norm": null,
          "value": "true",
          "line": 649,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        122,
        162,
        164,
        169,
        173,
        172,
        174,
        175,
        176,
        177,
        178,
        179,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "false",
          "line": 648,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        122,
        162,
        164,
        166,
        168,
        172,
        174,
        175,
        176,
        177,
        178,
        179,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "false",
          "line": 648,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (None, None)",
          "norm": null,
          "value": "true",
          "line": 649,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        122,
        162,
        164,
        166,
        167,
        170,
        171,
        175,
        176,
        177,
        178,
        179,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "true",
          "line": 648,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 679,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        124,
        122,
        162,
        163,
        180,
        181,
        182,
        183,
        184,
        185,
        187,
        189,
        190,
        209,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "true",
          "line": 648,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 679,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                            serialization: self.serialization,\n                            scheme_end,\n                            username_end: path_start,\n                            host_start: path_start,\n                            host_end: path_start,\n                            host: HostInternal::None,\n                            port: None,\n                            path_start,\n                            query_start,\n                            fragment_start,\n                        })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        124,
        122,
        162,
        163,
        180,
        181,
        182,
        183,
        184,
        185,
        188,
        191,
        192,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "false",
          "line": 648,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (Some(i), _)",
          "norm": null,
          "value": "true",
          "line": 649,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        124,
        122,
        162,
        164,
        169,
        173,
        172,
        174,
        175,
        176,
        177,
        178,
        179,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "false",
          "line": 648,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        124,
        122,
        162,
        164,
        166,
        168,
        172,
        174,
        175,
        176,
        177,
        178,
        179,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "false",
          "line": 648,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (None, None)",
          "norm": null,
          "value": "true",
          "line": 649,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        124,
        122,
        162,
        164,
        166,
        167,
        170,
        171,
        175,
        176,
        177,
        178,
        179,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        124,
        126,
        160,
        161,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (Some(i), _)",
          "norm": null,
          "value": "true",
          "line": 632,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?",
          "norm": null,
          "value": "Err/None",
          "line": 638,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        124,
        125,
        138,
        143,
        147,
        146,
        148,
        149,
        150,
        151,
        152,
        154,
        156,
        157,
        209,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (Some(i), _)",
          "norm": null,
          "value": "true",
          "line": 632,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 638,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                        serialization: self.serialization,\n                        query_start,\n                        fragment_start,\n                        ..*base_url\n                    })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        124,
        125,
        138,
        143,
        147,
        146,
        148,
        149,
        150,
        151,
        152,
        155,
        158,
        159,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?",
          "norm": null,
          "value": "Err/None",
          "line": 638,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        124,
        125,
        138,
        140,
        142,
        146,
        148,
        149,
        150,
        151,
        152,
        154,
        156,
        157,
        209,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 638,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                        serialization: self.serialization,\n                        query_start,\n                        fragment_start,\n                        ..*base_url\n                    })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        124,
        125,
        138,
        140,
        142,
        146,
        148,
        149,
        150,
        151,
        152,
        155,
        158,
        159,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (None, None)",
          "norm": null,
          "value": "true",
          "line": 632,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?",
          "norm": null,
          "value": "Err/None",
          "line": 638,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        124,
        125,
        138,
        140,
        141,
        144,
        145,
        149,
        150,
        151,
        152,
        154,
        156,
        157,
        209,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (None, None)",
          "norm": null,
          "value": "true",
          "line": 632,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 638,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                        serialization: self.serialization,\n                        query_start,\n                        fragment_start,\n                        ..*base_url\n                    })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        124,
        125,
        138,
        140,
        141,
        144,
        145,
        149,
        150,
        151,
        152,
        155,
        158,
        159,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "base_url.fragment_start matches Some(i)",
          "norm": null,
          "value": "true",
          "line": 619,
          "bound": null
        },
        {
          "cond": "base_url.fragment_start matches Some(i)",
          "norm": null,
          "value": "true",
          "line": 619,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                        serialization: self.serialization,\n                        fragment_start: None,\n                        ..*base_url\n                    })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        123,
        127,
        129,
        131,
        132,
        134,
        135,
        136,
        137,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "base_url.fragment_start matches None",
          "norm": null,
          "value": "true",
          "line": 619,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                        serialization: self.serialization,\n                        fragment_start: None,\n                        ..*base_url\n                    })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        12,
        118,
        120,
        121,
        123,
        127,
        130,
        133,
        134,
        135,
        136,
        137,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 702,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        119,
        195,
        196,
        197,
        198,
        199,
        200,
        202,
        204,
        205,
        215,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 702,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                serialization: self.serialization,\n                scheme_end,\n                username_end: path_start,\n                host_start: path_start,\n                host_end: path_start,\n                host: HostInternal::None,\n                port: None,\n                path_start,\n                query_start,\n                fragment_start,\n            })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        119,
        195,
        196,
        197,
        198,
        199,
        200,
        203,
        206,
        207,
        208,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "true",
          "line": 648,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 679,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        122,
        162,
        163,
        180,
        181,
        182,
        183,
        184,
        185,
        187,
        189,
        190,
        209,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "true",
          "line": 648,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 679,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                            serialization: self.serialization,\n                            scheme_end,\n                            username_end: path_start,\n                            host_start: path_start,\n                            host_end: path_start,\n                            host: HostInternal::None,\n                            port: None,\n                            path_start,\n                            query_start,\n                            fragment_start,\n                        })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        122,
        162,
        163,
        180,
        181,
        182,
        183,
        184,
        185,
        188,
        191,
        192,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "false",
          "line": 648,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (Some(i), _)",
          "norm": null,
          "value": "true",
          "line": 649,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        122,
        162,
        164,
        169,
        173,
        172,
        174,
        175,
        176,
        177,
        178,
        179,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "false",
          "line": 648,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        122,
        162,
        164,
        166,
        168,
        172,
        174,
        175,
        176,
        177,
        178,
        179,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "false",
          "line": 648,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (None, None)",
          "norm": null,
          "value": "true",
          "line": 649,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        122,
        162,
        164,
        166,
        167,
        170,
        171,
        175,
        176,
        177,
        178,
        179,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "true",
          "line": 648,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 679,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        124,
        122,
        162,
        163,
        180,
        181,
        182,
        183,
        184,
        185,
        187,
        189,
        190,
        209,
        215,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "true",
          "line": 648,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(SchemeType::File, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 679,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                            serialization: self.serialization,\n                            scheme_end,\n                            username_end: path_start,\n                            host_start: path_start,\n                            host_end: path_start,\n                            host: HostInternal::None,\n                            port: None,\n                            path_start,\n                            query_start,\n                            fragment_start,\n                        })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        124,
        122,
        162,
        163,
        180,
        181,
        182,
        183,
        184,
        185,
        188,
        191,
        192,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 31,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "false",
          "line": 648,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (Some(i), _)",
          "norm": null,
          "value": "true",
          "line": 649,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        124,
        122,
        162,
        164,
        169,
        173,
        172,
        174,
        175,
        176,
        177,
        178,
        179,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 32,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "false",
          "line": 648,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        124,
        122,
        162,
        164,
        166,
        168,
        172,
        174,
        175,
        176,
        177,
        178,
        179,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 33,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "false",
          "line": 646,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 647,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "false",
          "line": 630,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input)",
          "norm": null,
          "value": "false",
          "line": 648,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (None, None)",
          "norm": null,
          "value": "true",
          "line": 649,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        124,
        122,
        162,
        164,
        166,
        167,
        170,
        171,
        175,
        176,
        177,
        178,
        179,
        193,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 34,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        124,
        126,
        160,
        161,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 35,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (Some(i), _)",
          "norm": null,
          "value": "true",
          "line": 632,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?",
          "norm": null,
          "value": "Err/None",
          "line": 638,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        124,
        125,
        138,
        143,
        147,
        146,
        148,
        149,
        150,
        151,
        152,
        154,
        156,
        157,
        209,
        215,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 36,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (Some(i), _)",
          "norm": null,
          "value": "true",
          "line": 632,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 638,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                        serialization: self.serialization,\n                        query_start,\n                        fragment_start,\n                        ..*base_url\n                    })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        124,
        125,
        138,
        143,
        147,
        146,
        148,
        149,
        150,
        151,
        152,
        155,
        158,
        159,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 37,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?",
          "norm": null,
          "value": "Err/None",
          "line": 638,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        124,
        125,
        138,
        140,
        142,
        146,
        148,
        149,
        150,
        151,
        152,
        154,
        156,
        157,
        209,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 38,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 638,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                        serialization: self.serialization,\n                        query_start,\n                        fragment_start,\n                        ..*base_url\n                    })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        124,
        125,
        138,
        140,
        142,
        146,
        148,
        149,
        150,
        151,
        152,
        155,
        158,
        159,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 39,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (None, None)",
          "norm": null,
          "value": "true",
          "line": 632,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?",
          "norm": null,
          "value": "Err/None",
          "line": 638,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        124,
        125,
        138,
        140,
        141,
        144,
        145,
        149,
        150,
        151,
        152,
        154,
        156,
        157,
        209,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 40,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches Some('#') or Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches Some('?')",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "(base_url.query_start, base_url.fragment_start) matches (None, None)",
          "norm": null,
          "value": "true",
          "line": 632,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, base_url.scheme_end, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 638,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                        serialization: self.serialization,\n                        query_start,\n                        fragment_start,\n                        ..*base_url\n                    })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        124,
        125,
        138,
        140,
        141,
        144,
        145,
        149,
        150,
        151,
        152,
        155,
        158,
        159,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 41,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "base_url.fragment_start matches Some(i)",
          "norm": null,
          "value": "true",
          "line": 619,
          "bound": null
        },
        {
          "cond": "base_url.fragment_start matches Some(i)",
          "norm": null,
          "value": "true",
          "line": 619,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                        serialization: self.serialization,\n                        fragment_start: None,\n                        ..*base_url\n                    })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        123,
        127,
        129,
        131,
        132,
        134,
        135,
        136,
        137,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 42,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 615,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "first_char matches None",
          "norm": null,
          "value": "true",
          "line": 616,
          "bound": null
        },
        {
          "cond": "base_url.fragment_start matches None",
          "norm": null,
          "value": "true",
          "line": 619,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                        serialization: self.serialization,\n                        fragment_start: None,\n                        ..*base_url\n                    })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        8,
        12,
        118,
        120,
        121,
        123,
        127,
        130,
        133,
        134,
        135,
        136,
        137,
        194,
        208,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 43,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 44,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 45,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 46,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 47,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 48,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 49,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 50,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 51,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 52,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 53,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 54,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 55,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 56,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 57,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 58,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 59,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 60,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 61,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 62,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 63,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 64,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 65,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 66,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 67,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 68,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 69,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 70,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 71,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 72,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 73,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 74,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 75,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 76,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 77,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 78,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 79,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 80,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 81,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 82,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 83,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 84,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 85,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 86,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 87,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 88,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 89,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 90,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 91,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 92,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 93,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 94,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 95,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 96,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 97,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 98,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 99,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 100,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 101,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 102,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 103,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 104,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 105,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 106,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 107,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 108,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 109,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 110,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 111,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 112,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 113,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 114,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 115,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 116,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 117,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 118,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 119,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 120,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 121,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 122,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 123,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 124,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 125,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 126,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 127,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 128,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 129,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 130,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 131,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 132,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 133,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 134,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 135,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 136,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 137,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 138,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 139,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 140,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 141,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 142,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 143,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 144,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 145,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 146,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 147,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 148,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 149,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 150,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 151,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 152,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 153,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 154,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 155,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 156,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 157,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 158,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 159,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 160,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 161,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 162,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 163,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Err/None",
          "line": 529,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        29,
        31,
        32,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 164,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Err/None",
          "line": 530,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        37,
        39,
        40,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 165,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 166,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 167,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 168,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 169,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 170,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 171,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 172,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 173,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 174,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 175,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 176,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 177,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 178,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 179,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 180,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 181,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Err/None",
          "line": 529,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        29,
        31,
        32,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 182,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Err/None",
          "line": 530,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        37,
        39,
        40,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 183,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 184,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 185,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 186,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 187,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 188,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 189,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 190,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 191,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 192,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 193,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 194,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 195,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 196,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 197,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 198,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 199,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 200,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 201,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 202,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 203,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 204,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 205,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 206,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 207,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 208,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 209,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 210,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 211,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 212,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 213,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 214,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 215,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 216,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 217,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 218,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 219,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 220,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 221,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 222,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 223,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 224,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 225,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 226,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 227,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 228,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 229,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 230,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 231,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 232,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 233,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 234,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 235,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 236,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 237,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 238,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 239,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 240,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 241,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 242,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 243,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 244,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 245,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 246,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 247,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 248,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 249,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 250,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 251,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 252,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 253,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 254,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 255,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 256,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 257,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 258,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 259,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 260,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 261,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 262,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 263,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 264,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 265,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 266,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 267,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 268,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 269,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 270,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "true",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        71,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 271,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 272,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 273,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 274,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 275,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 276,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 277,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 278,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 279,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 280,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 281,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 282,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        92,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 283,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 284,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 285,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 286,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 287,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 288,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 289,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 290,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 291,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 292,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 293,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 294,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "true",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 295,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 296,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 297,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 298,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 299,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 300,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 301,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 302,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 303,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 304,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 305,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 306,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        89,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 307,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 308,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        106,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 309,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 310,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        96,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 311,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 312,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        98,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 313,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 314,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        100,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 315,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 316,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "false",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        102,
        103,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 317,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 598,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        112,
        114,
        115,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 318,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('/')",
          "norm": null,
          "value": "false",
          "line": 522,
          "bound": null
        },
        {
          "cond": "starts_with_windows_drive_letter_segment(&input_after_first_char)",
          "norm": null,
          "value": "false",
          "line": 568,
          "bound": null
        },
        {
          "cond": "let Some(base_url) = base_file_url",
          "norm": null,
          "value": "true",
          "line": 569,
          "bound": null
        },
        {
          "cond": "is_normalized_windows_drive_letter(first_segment)",
          "norm": null,
          "value": "false",
          "line": 571,
          "bound": null
        },
        {
          "cond": "let Some(host_str) = base_url.host_str()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        },
        {
          "cond": "let Some(c) = first_char",
          "norm": null,
          "value": "true",
          "line": 582,
          "bound": null
        },
        {
          "cond": "c == '/'",
          "norm": "'/' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '\\\\'",
          "norm": "'\\\\' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '?'",
          "norm": "'?' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "c == '#'",
          "norm": "'#' == c",
          "value": "true",
          "line": 583,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 598,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        16,
        20,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        83,
        84,
        85,
        86,
        87,
        88,
        90,
        91,
        93,
        94,
        95,
        97,
        99,
        101,
        104,
        105,
        107,
        108,
        109,
        110,
        113,
        116,
        117,
        210,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 319,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Err/None",
          "line": 529,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        29,
        31,
        32,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 320,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Err/None",
          "line": 530,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        37,
        39,
        40,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 321,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 322,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 323,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 324,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 325,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 326,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 327,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 328,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 329,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 330,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 331,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 332,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 333,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 334,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 335,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 336,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 337,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Err/None",
          "line": 529,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        29,
        31,
        32,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 338,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Err/None",
          "line": 530,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        37,
        39,
        40,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 339,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 340,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 341,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 342,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 343,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 344,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 345,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 346,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches _",
          "norm": null,
          "value": "true",
          "line": 459,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        41,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 347,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 348,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 349,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 350,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 351,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 352,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 353,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Err/None",
          "line": 549,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        60,
        62,
        63,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 354,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 516,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches ",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "first_char matches Some('/') or Some('\\\\')",
          "norm": null,
          "value": "true",
          "line": 518,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches ",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "next_char matches Some('\\\\') or Some('/')",
          "norm": null,
          "value": "true",
          "line": 522,
          "bound": null
        },
        {
          "cond": "self.parse_file_host(input_after_next_char)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 529,
          "bound": null
        },
        {
          "cond": "to_u32(self.serialization.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "host matches HostInternal::None",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "path_start",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "has_host",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        },
        {
          "cond": "self.parse_query_and_fragment(scheme_type, scheme_end, remaining)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n                    serialization: self.serialization,\n                    scheme_end,\n                    username_end: host_start,\n                    host_start,\n                    host_end,\n                    host,\n                    port: None,\n                    path_start: host_end,\n                    query_start,\n                    fragment_start,\n                })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        38,
        42,
        43,
        44,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        56,
        57,
        58,
        61,
        64,
        65,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 355,
      "conds": [
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "false",
          "line": 516,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        225,
        226
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}