{
  "name": "url::parser::{impl#5}::new_trim_tab_and_newlines",
  "mod_info": {
    "name": "parser",
    "loc": "url/src/lib.rs:218:1:218:12"
  },
  "visible": true,
  "loc": "url/src/parser.rs:207:5:223:6",
  "doc": "",
  "code": [
    "pub fn new_trim_tab_and_newlines(",
    "    original_input: &'i str,",
    "    vfn: Option<&dyn Fn(SyntaxViolation)>,",
    ") -> Self {",
    "    let input = original_input.trim_matches(ascii_tab_or_new_line);",
    "    if let Some(vfn) = vfn {",
    "        if input.len() < original_input.len() {",
    "            vfn(SyntaxViolation::C0SpaceIgnored)",
    "        }",
    "        if input.chars().any(ascii_tab_or_new_line) {",
    "            vfn(SyntaxViolation::TabOrNewlineIgnored)",
    "        }",
    "    }",
    "    Input {",
    "        chars: input.chars(),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(vfn) = vfn",
          "norm": null,
          "value": "true",
          "line": 212,
          "bound": null
        }
      ],
      "ret": "Input {\n            chars: input.chars(),\n        }",
      "path": [
        0,
        1,
        16,
        17,
        18
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(vfn) = vfn",
          "norm": null,
          "value": "true",
          "line": 212,
          "bound": null
        },
        {
          "cond": "input.len() < original_input.len()",
          "norm": null,
          "value": "true",
          "line": 213,
          "bound": null
        },
        {
          "cond": "input.chars().any(ascii_tab_or_new_line)",
          "norm": null,
          "value": "true",
          "line": 216,
          "bound": null
        }
      ],
      "ret": "Input {\n            chars: input.chars(),\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        15,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Some(vfn) = vfn",
          "norm": null,
          "value": "true",
          "line": 212,
          "bound": null
        },
        {
          "cond": "input.len() < original_input.len()",
          "norm": null,
          "value": "true",
          "line": 213,
          "bound": null
        },
        {
          "cond": "input.chars().any(ascii_tab_or_new_line)",
          "norm": null,
          "value": "false",
          "line": 216,
          "bound": null
        }
      ],
      "ret": "Input {\n            chars: input.chars(),\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        14,
        15,
        17,
        18
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "let Some(vfn) = vfn",
          "norm": null,
          "value": "true",
          "line": 212,
          "bound": null
        },
        {
          "cond": "input.len() < original_input.len()",
          "norm": null,
          "value": "false",
          "line": 213,
          "bound": "input.len() == original_input.len()"
        },
        {
          "cond": "input.chars().any(ascii_tab_or_new_line)",
          "norm": null,
          "value": "true",
          "line": 216,
          "bound": null
        }
      ],
      "ret": "Input {\n            chars: input.chars(),\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        17,
        18
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "let Some(vfn) = vfn",
          "norm": null,
          "value": "true",
          "line": 212,
          "bound": null
        },
        {
          "cond": "input.len() < original_input.len()",
          "norm": null,
          "value": "false",
          "line": 213,
          "bound": "input.len() == original_input.len()"
        },
        {
          "cond": "input.chars().any(ascii_tab_or_new_line)",
          "norm": null,
          "value": "false",
          "line": 216,
          "bound": null
        }
      ],
      "ret": "Input {\n            chars: input.chars(),\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}