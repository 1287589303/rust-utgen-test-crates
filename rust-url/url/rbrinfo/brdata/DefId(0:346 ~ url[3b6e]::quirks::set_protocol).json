{
  "name": "url::quirks::set_protocol",
  "mod_info": {
    "name": "quirks",
    "loc": "url/src/lib.rs:223:1:223:16"
  },
  "visible": true,
  "loc": "url/src/quirks.rs:105:1:112:2",
  "doc": "/// Setter for <https://url.spec.whatwg.org/#dom-url-protocol>\n",
  "code": [
    "pub fn set_protocol(url: &mut Url, mut new_protocol: &str) -> Result<(), ()> {",
    "    // The scheme state in the spec ignores everything after the first `:`,",
    "    // but `set_scheme` errors if there is more.",
    "    if let Some(position) = new_protocol.find(':') {",
    "        new_protocol = &new_protocol[..position];",
    "    }",
    "    url.set_scheme(new_protocol)",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(position) = new_protocol.find(':')",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(position) = new_protocol.find(':')",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}