{
  "name": "url::parser::{impl#10}::parse_scheme",
  "mod_info": {
    "name": "parser",
    "loc": "url/src/lib.rs:218:1:218:12"
  },
  "visible": true,
  "loc": "url/src/parser.rs:400:5:424:6",
  "doc": "",
  "code": [
    "pub fn parse_scheme<'i>(&mut self, mut input: Input<'i>) -> Result<Input<'i>, ()> {",
    "    // starts_with will also fail for empty strings so we can skip that comparison for perf",
    "    if !input.starts_with(ascii_alpha) {",
    "        return Err(());",
    "    }",
    "    debug_assert!(self.serialization.is_empty());",
    "    while let Some(c) = input.next() {",
    "        match c {",
    "            'a'..='z' | '0'..='9' | '+' | '-' | '.' => self.serialization.push(c),",
    "            'A'..='Z' => self.serialization.push(c.to_ascii_lowercase()),",
    "            ':' => return Ok(input),",
    "            _ => {",
    "                self.serialization.clear();",
    "                return Err(());",
    "            }",
    "        }",
    "    }",
    "    // EOF before ':'",
    "    if self.context == Context::Setter {",
    "        Ok(input)",
    "    } else {",
    "        self.serialization.clear();",
    "        Err(())",
    "    }",
    "}"
  ],
  "size": {
    "chain": 54,
    "contra": 36,
    "min_set": 7
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        22,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        22,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        22,
        17,
        18,
        20,
        19,
        27,
        28,
        29,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        22,
        17,
        18,
        20,
        19,
        27,
        28,
        29,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        22,
        17,
        18,
        20,
        15,
        31,
        39,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        22,
        17,
        18,
        15,
        31,
        39,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        22,
        17,
        21,
        30,
        39,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        22,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        22,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        22,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        22,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        22,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        22,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        17,
        18,
        20,
        19,
        27,
        28,
        29,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        17,
        18,
        20,
        19,
        27,
        28,
        29,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        17,
        18,
        20,
        15,
        31,
        39,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        17,
        18,
        15,
        31,
        39,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        17,
        21,
        30,
        39,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        23,
        16,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        22,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        22,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 31,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        22,
        17,
        18,
        20,
        19,
        27,
        28,
        29,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 32,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        22,
        17,
        18,
        20,
        19,
        27,
        28,
        29,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 33,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        22,
        17,
        18,
        20,
        15,
        31,
        39,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 34,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        22,
        17,
        18,
        15,
        31,
        39,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 35,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        22,
        17,
        21,
        30,
        39,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 36,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        22,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 37,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        22,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 38,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        22,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 39,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        22,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 40,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        22,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 41,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        22,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 42,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        17,
        18,
        20,
        19,
        27,
        28,
        29,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 43,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        17,
        18,
        20,
        19,
        27,
        28,
        29,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 44,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        17,
        18,
        20,
        15,
        31,
        39,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 45,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches 'A'..='Z'",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        17,
        18,
        15,
        31,
        39,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 46,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 410,
          "bound": null
        },
        {
          "cond": "c matches ':'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        17,
        21,
        30,
        39,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 47,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 48,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '.'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 49,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 50,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '-'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 51,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "true",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Ok(input)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        35,
        38,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 52,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 405,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "c matches 'a'..='z'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '0'..='9'",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+'",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "c matches '+' or 'a'..='z' or '.' or '0'..='9' or '-'",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "let Some(c) = input.next()",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.context == Context::Setter",
          "norm": "Context::Setter == self.context",
          "value": "false",
          "line": 418,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        17,
        24,
        25,
        26,
        32,
        10,
        11,
        12,
        33,
        34,
        36,
        37,
        38,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 53,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "true",
          "line": 402,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "false",
          "line": 405,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        8,
        41
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 54,
      "conds": [
        {
          "cond": "input.starts_with(ascii_alpha)",
          "norm": null,
          "value": "false",
          "line": 402,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        3,
        40
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}