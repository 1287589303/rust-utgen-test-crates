{
  "name": "url::host::{impl#3}::fmt",
  "mod_info": {
    "name": "host",
    "loc": "url/src/lib.rs:216:1:216:10"
  },
  "visible": true,
  "loc": "url/src/host.rs:152:5:162:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {",
    "    match *self {",
    "        Host::Domain(ref domain) => domain.as_ref().fmt(f),",
    "        Host::Ipv4(ref addr) => addr.fmt(f),",
    "        Host::Ipv6(ref addr) => {",
    "            f.write_str(\"[\")?;",
    "            write_ipv6(addr, f)?;",
    "            f.write_str(\"]\")",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 0,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*self matches Host::Ipv6(ref addr)",
          "norm": null,
          "value": "true",
          "line": 153,
          "bound": null
        },
        {
          "cond": "f.write_str(\"[\")?",
          "norm": null,
          "value": "Err/None",
          "line": 157,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        10,
        11,
        13,
        15,
        16,
        25,
        26
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*self matches Host::Ipv6(ref addr)",
          "norm": null,
          "value": "true",
          "line": 153,
          "bound": null
        },
        {
          "cond": "f.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 157,
          "bound": null
        },
        {
          "cond": "write_ipv6(addr, f)?",
          "norm": null,
          "value": "Err/None",
          "line": 158,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        10,
        11,
        14,
        17,
        18,
        20,
        22,
        23,
        25,
        26
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*self matches Host::Ipv6(ref addr)",
          "norm": null,
          "value": "true",
          "line": 153,
          "bound": null
        },
        {
          "cond": "f.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 157,
          "bound": null
        },
        {
          "cond": "write_ipv6(addr, f)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 158,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        10,
        11,
        14,
        17,
        18,
        21,
        24,
        26
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*self matches Host::Ipv4(ref addr)",
          "norm": null,
          "value": "true",
          "line": 153,
          "bound": null
        },
        {
          "cond": "*self matches Host::Ipv4(ref addr)",
          "norm": null,
          "value": "true",
          "line": 153,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        8,
        9,
        26
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*self matches Host::Domain(ref domain)",
          "norm": null,
          "value": "true",
          "line": 153,
          "bound": null
        },
        {
          "cond": "*self matches Host::Domain(ref domain)",
          "norm": null,
          "value": "true",
          "line": 153,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        5,
        6,
        7,
        26
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}