{
  "name": "url::parser::{impl#10}::parse_cannot_be_a_base_path",
  "mod_info": {
    "name": "parser",
    "loc": "url/src/lib.rs:218:1:218:12"
  },
  "visible": true,
  "loc": "url/src/parser.rs:1425:5:1440:6",
  "doc": "",
  "code": [
    "pub fn parse_cannot_be_a_base_path<'i>(&mut self, mut input: Input<'i>) -> Input<'i> {",
    "    loop {",
    "        let input_before_c = input.clone();",
    "        match input.next_utf8() {",
    "            Some(('?', _)) | Some(('#', _)) if self.context == Context::UrlParser => {",
    "                return input_before_c",
    "            }",
    "            Some((c, utf8_c)) => {",
    "                self.check_url_code_point(c, &input);",
    "                self.serialization",
    "                    .extend(utf8_percent_encode(utf8_c, CONTROLS));",
    "            }",
    "            None => return input,",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 6,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "input.next_utf8() matches Some(('?', _)) or Some(('#', _)) or Some((c, utf8_c))",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches Some(('?', _))",
          "norm": null,
          "value": "false",
          "line": 1429,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches Some(('#', _))",
          "norm": null,
          "value": "false",
          "line": 1429,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches None",
          "norm": null,
          "value": "false",
          "line": 1437,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches Some((c, utf8_c))",
          "norm": null,
          "value": "false",
          "line": 1432,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches Some((c, utf8_c))",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches None",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        }
      ],
      "ret": "input",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        20,
        21,
        22,
        23,
        1,
        2,
        3,
        4,
        10,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "input.next_utf8() matches Some(('?', _)) or Some(('#', _)) or Some((c, utf8_c))",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches ",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches Some(('#', _))",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "self.context == Context::UrlParser",
          "norm": "Context::UrlParser == self.context",
          "value": "true",
          "line": 1429,
          "bound": null
        }
      ],
      "ret": "input_before_c",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        9,
        16,
        17,
        18,
        11,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "input.next_utf8() matches Some(('?', _)) or Some(('#', _)) or Some((c, utf8_c))",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches ",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches Some(('#', _))",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "self.context == Context::UrlParser",
          "norm": "Context::UrlParser == self.context",
          "value": "false",
          "line": 1429,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches Some((c, utf8_c))",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches None",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        }
      ],
      "ret": "input",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        9,
        16,
        17,
        19,
        7,
        20,
        21,
        22,
        23,
        1,
        2,
        3,
        4,
        10,
        24
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "input.next_utf8() matches Some(('?', _)) or Some(('#', _)) or Some((c, utf8_c))",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches ",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches Some(('?', _))",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "self.context == Context::UrlParser",
          "norm": "Context::UrlParser == self.context",
          "value": "true",
          "line": 1429,
          "bound": null
        }
      ],
      "ret": "input_before_c",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        8,
        12,
        13,
        14,
        11,
        24
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "input.next_utf8() matches Some(('?', _)) or Some(('#', _)) or Some((c, utf8_c))",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches ",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches Some(('?', _))",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "self.context == Context::UrlParser",
          "norm": "Context::UrlParser == self.context",
          "value": "false",
          "line": 1429,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches Some((c, utf8_c))",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        },
        {
          "cond": "input.next_utf8() matches None",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        }
      ],
      "ret": "input",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        8,
        12,
        13,
        15,
        7,
        20,
        21,
        22,
        23,
        1,
        2,
        3,
        4,
        10,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "input.next_utf8() matches None",
          "norm": null,
          "value": "true",
          "line": 1428,
          "bound": null
        }
      ],
      "ret": "input",
      "path": [
        0,
        1,
        2,
        3,
        4,
        10,
        24
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}