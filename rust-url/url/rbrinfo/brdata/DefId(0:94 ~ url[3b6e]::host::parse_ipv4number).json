{
  "name": "url::host::parse_ipv4number",
  "mod_info": {
    "name": "host",
    "loc": "url/src/lib.rs:216:1:216:10"
  },
  "visible": false,
  "loc": "url/src/host.rs:262:1:295:2",
  "doc": "/// <https://url.spec.whatwg.org/#ipv4-number-parser>\n/// Ok(None) means the input is a valid number, but it overflows a `u32`.\n",
  "code": [
    "fn parse_ipv4number(mut input: &str) -> Result<Option<u32>, ()> {",
    "    if input.is_empty() {",
    "        return Err(());",
    "    }",
    "",
    "    let mut r = 10;",
    "    if input.starts_with(\"0x\") || input.starts_with(\"0X\") {",
    "        input = &input[2..];",
    "        r = 16;",
    "    } else if input.len() >= 2 && input.starts_with('0') {",
    "        input = &input[1..];",
    "        r = 8;",
    "    }",
    "",
    "    if input.is_empty() {",
    "        return Ok(Some(0));",
    "    }",
    "",
    "    let valid_number = match r {",
    "        8 => input.as_bytes().iter().all(|c| (b'0'..=b'7').contains(c)),",
    "        10 => input.as_bytes().iter().all(|c| c.is_ascii_digit()),",
    "        16 => input.as_bytes().iter().all(|c| c.is_ascii_hexdigit()),",
    "        _ => false,",
    "    };",
    "    if !valid_number {",
    "        return Err(());",
    "    }",
    "",
    "    match u32::from_str_radix(input, r) {",
    "        Ok(num) => Ok(Some(num)),",
    "        Err(_) => Ok(None), // The only possible error kind here is an integer overflow.",
    "                            // The validity of the chars in the input is checked above.",
    "    }",
    "}"
  ],
  "size": {
    "chain": 21,
    "contra": 0,
    "min_set": 6
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "true",
          "line": 263,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        51
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "true",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "true",
          "line": 276,
          "bound": null
        }
      ],
      "ret": "Ok(Some(0))",
      "path": [
        0,
        1,
        3,
        4,
        5,
        9,
        10,
        21,
        22,
        23,
        50,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "true",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 16",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        }
      ],
      "ret": "Ok(None)",
      "path": [
        0,
        1,
        3,
        4,
        5,
        9,
        10,
        21,
        22,
        24,
        28,
        37,
        38,
        39,
        40,
        41,
        43,
        44,
        47,
        49,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "true",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 16",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Ok(num)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Ok(num)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        }
      ],
      "ret": "Ok(Some(num))",
      "path": [
        0,
        1,
        3,
        4,
        5,
        9,
        10,
        21,
        22,
        24,
        28,
        37,
        38,
        39,
        40,
        41,
        43,
        44,
        46,
        48,
        49,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "true",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 16",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "false",
          "line": 286,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        3,
        4,
        5,
        9,
        10,
        21,
        22,
        24,
        28,
        37,
        38,
        39,
        40,
        41,
        42,
        50,
        51
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "true",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "true",
          "line": 276,
          "bound": null
        }
      ],
      "ret": "Ok(Some(0))",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        9,
        10,
        21,
        22,
        23,
        50,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "true",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 16",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        }
      ],
      "ret": "Ok(None)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        9,
        10,
        21,
        22,
        24,
        28,
        37,
        38,
        39,
        40,
        41,
        43,
        44,
        47,
        49,
        51
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "true",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 16",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Ok(num)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Ok(num)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        }
      ],
      "ret": "Ok(Some(num))",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        9,
        10,
        21,
        22,
        24,
        28,
        37,
        38,
        39,
        40,
        41,
        43,
        44,
        46,
        48,
        49,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "true",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 16",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "false",
          "line": 286,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        9,
        10,
        21,
        22,
        24,
        28,
        37,
        38,
        39,
        40,
        41,
        42,
        50,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.len() >= 2",
          "norm": "2 <= input.len()",
          "value": "true",
          "line": 271,
          "bound": "input.len() == 2"
        },
        {
          "cond": "input.starts_with('0')",
          "norm": null,
          "value": "true",
          "line": 271,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "true",
          "line": 276,
          "bound": null
        }
      ],
      "ret": "Ok(Some(0))",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        21,
        22,
        23,
        50,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.len() >= 2",
          "norm": "2 <= input.len()",
          "value": "true",
          "line": 271,
          "bound": "input.len() == 2"
        },
        {
          "cond": "input.starts_with('0')",
          "norm": null,
          "value": "true",
          "line": 271,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 8",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        }
      ],
      "ret": "Ok(None)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        21,
        22,
        24,
        26,
        29,
        30,
        31,
        32,
        41,
        43,
        44,
        47,
        49,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.len() >= 2",
          "norm": "2 <= input.len()",
          "value": "true",
          "line": 271,
          "bound": "input.len() == 2"
        },
        {
          "cond": "input.starts_with('0')",
          "norm": null,
          "value": "true",
          "line": 271,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 8",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Ok(num)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Ok(num)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        }
      ],
      "ret": "Ok(Some(num))",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        21,
        22,
        24,
        26,
        29,
        30,
        31,
        32,
        41,
        43,
        44,
        46,
        48,
        49,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.len() >= 2",
          "norm": "2 <= input.len()",
          "value": "true",
          "line": 271,
          "bound": "input.len() == 2"
        },
        {
          "cond": "input.starts_with('0')",
          "norm": null,
          "value": "true",
          "line": 271,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 8",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "false",
          "line": 286,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        11,
        12,
        13,
        14,
        15,
        16,
        20,
        21,
        22,
        24,
        26,
        29,
        30,
        31,
        32,
        41,
        42,
        50,
        51
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.len() >= 2",
          "norm": "2 <= input.len()",
          "value": "true",
          "line": 271,
          "bound": "input.len() == 2"
        },
        {
          "cond": "input.starts_with('0')",
          "norm": null,
          "value": "false",
          "line": 271,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "true",
          "line": 276,
          "bound": null
        }
      ],
      "ret": "Ok(Some(0))",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        11,
        12,
        13,
        14,
        17,
        19,
        20,
        21,
        22,
        23,
        50,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.len() >= 2",
          "norm": "2 <= input.len()",
          "value": "true",
          "line": 271,
          "bound": "input.len() == 2"
        },
        {
          "cond": "input.starts_with('0')",
          "norm": null,
          "value": "false",
          "line": 271,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 10",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        }
      ],
      "ret": "Ok(None)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        11,
        12,
        13,
        14,
        17,
        19,
        20,
        21,
        22,
        24,
        27,
        33,
        34,
        35,
        36,
        41,
        43,
        44,
        47,
        49,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.len() >= 2",
          "norm": "2 <= input.len()",
          "value": "true",
          "line": 271,
          "bound": "input.len() == 2"
        },
        {
          "cond": "input.starts_with('0')",
          "norm": null,
          "value": "false",
          "line": 271,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 10",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Ok(num)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Ok(num)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        }
      ],
      "ret": "Ok(Some(num))",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        11,
        12,
        13,
        14,
        17,
        19,
        20,
        21,
        22,
        24,
        27,
        33,
        34,
        35,
        36,
        41,
        43,
        44,
        46,
        48,
        49,
        51
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.len() >= 2",
          "norm": "2 <= input.len()",
          "value": "true",
          "line": 271,
          "bound": "input.len() == 2"
        },
        {
          "cond": "input.starts_with('0')",
          "norm": null,
          "value": "false",
          "line": 271,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 10",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "false",
          "line": 286,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        11,
        12,
        13,
        14,
        17,
        19,
        20,
        21,
        22,
        24,
        27,
        33,
        34,
        35,
        36,
        41,
        42,
        50,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.len() >= 2",
          "norm": "2 <= input.len()",
          "value": "false",
          "line": 271,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "true",
          "line": 276,
          "bound": null
        }
      ],
      "ret": "Ok(Some(0))",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        11,
        12,
        18,
        19,
        20,
        21,
        22,
        23,
        50,
        51
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.len() >= 2",
          "norm": "2 <= input.len()",
          "value": "false",
          "line": 271,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 10",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        }
      ],
      "ret": "Ok(None)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        11,
        12,
        18,
        19,
        20,
        21,
        22,
        24,
        27,
        33,
        34,
        35,
        36,
        41,
        43,
        44,
        47,
        49,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.len() >= 2",
          "norm": "2 <= input.len()",
          "value": "false",
          "line": 271,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 10",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Ok(num)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        },
        {
          "cond": "u32::from_str_radix(input, r) matches Ok(num)",
          "norm": null,
          "value": "true",
          "line": 290,
          "bound": null
        }
      ],
      "ret": "Ok(Some(num))",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        11,
        12,
        18,
        19,
        20,
        21,
        22,
        24,
        27,
        33,
        34,
        35,
        36,
        41,
        43,
        44,
        46,
        48,
        49,
        51
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 263,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0x\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"0X\")",
          "norm": null,
          "value": "false",
          "line": 268,
          "bound": null
        },
        {
          "cond": "input.len() >= 2",
          "norm": "2 <= input.len()",
          "value": "false",
          "line": 271,
          "bound": null
        },
        {
          "cond": "input.is_empty()",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "r matches 10",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "valid_number",
          "norm": null,
          "value": "false",
          "line": 286,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        11,
        12,
        18,
        19,
        20,
        21,
        22,
        24,
        27,
        33,
        34,
        35,
        36,
        41,
        42,
        50,
        51
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}