{
  "name": "url::{impl#1}::take_after_path",
  "mod_info": {
    "name": "",
    "loc": "url/src/lib.rs:9:1:3218:2"
  },
  "visible": true,
  "loc": "url/src/lib.rs:1708:5:1717:6",
  "doc": "",
  "code": [
    "fn take_after_path(&mut self) -> String {",
    "    match (self.query_start, self.fragment_start) {",
    "        (Some(i), _) | (None, Some(i)) => {",
    "            let after_path = self.slice(i..).to_owned();",
    "            self.serialization.truncate(i as usize);",
    "            after_path",
    "        }",
    "        (None, None) => String::new(),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(self.query_start, self.fragment_start) matches (Some(i), _)",
          "norm": null,
          "value": "true",
          "line": 1709,
          "bound": null
        }
      ],
      "ret": "after_path",
      "path": [
        0,
        2,
        7,
        6,
        9,
        10,
        11,
        12,
        13
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(self.query_start, self.fragment_start) matches (None, Some(i))",
          "norm": null,
          "value": "true",
          "line": 1709,
          "bound": null
        }
      ],
      "ret": "after_path",
      "path": [
        0,
        3,
        4,
        8,
        6,
        9,
        10,
        11,
        12,
        13
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "(self.query_start, self.fragment_start) matches (None, None)",
          "norm": null,
          "value": "true",
          "line": 1715,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        5,
        13
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}