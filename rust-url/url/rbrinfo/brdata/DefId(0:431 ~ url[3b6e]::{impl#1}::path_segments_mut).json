{
  "name": "url::{impl#1}::path_segments_mut",
  "mod_info": {
    "name": "",
    "loc": "url/src/lib.rs:9:1:3218:2"
  },
  "visible": true,
  "loc": "url/src/lib.rs:1783:5:1789:6",
  "doc": "/// Return an object with methods to manipulate this URLâ€™s path segments.\n///\n/// Return `Err(())` if this URL is cannot-be-a-base.\n",
  "code": [
    "pub fn path_segments_mut(&mut self) -> Result<PathSegmentsMut<'_>, ()> {",
    "    if self.cannot_be_a_base() {",
    "        Err(())",
    "    } else {",
    "        Ok(path_segments::new(self))",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.cannot_be_a_base()",
          "norm": null,
          "value": "true",
          "line": 1784,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.cannot_be_a_base()",
          "norm": null,
          "value": "false",
          "line": 1784,
          "bound": null
        }
      ],
      "ret": "Ok(path_segments::new(self))",
      "path": [
        0,
        1,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}