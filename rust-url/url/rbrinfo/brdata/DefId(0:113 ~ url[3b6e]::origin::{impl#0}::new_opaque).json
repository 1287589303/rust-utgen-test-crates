{
  "name": "url::origin::{impl#0}::new_opaque",
  "mod_info": {
    "name": "origin",
    "loc": "url/src/lib.rs:217:1:217:12"
  },
  "visible": true,
  "loc": "url/src/origin.rs:66:5:69:6",
  "doc": "/// Creates a new opaque origin that is only equal to itself.\n",
  "code": [
    "pub fn new_opaque() -> Origin {",
    "    static COUNTER: AtomicUsize = AtomicUsize::new(0);",
    "    Origin::Opaque(OpaqueOrigin(COUNTER.fetch_add(1, Ordering::SeqCst)))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Origin::Opaque(OpaqueOrigin(COUNTER.fetch_add(1, Ordering::SeqCst)))",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}