{
  "name": "url::host::ends_in_a_number",
  "mod_info": {
    "name": "host",
    "loc": "url/src/lib.rs:216:1:216:10"
  },
  "visible": false,
  "loc": "url/src/host.rs:241:1:258:2",
  "doc": "/// <https://url.spec.whatwg.org/#ends-in-a-number-checker>\n",
  "code": [
    "fn ends_in_a_number(input: &str) -> bool {",
    "    let mut parts = input.rsplit('.');",
    "    let last = parts.next().unwrap();",
    "    let last = if last.is_empty() {",
    "        if let Some(last) = parts.next() {",
    "            last",
    "        } else {",
    "            return false;",
    "        }",
    "    } else {",
    "        last",
    "    };",
    "    if !last.is_empty() && last.as_bytes().iter().all(|c| c.is_ascii_digit()) {",
    "        return true;",
    "    }",
    "",
    "    parse_ipv4number(last).is_ok()",
    "}"
  ],
  "size": {
    "chain": 7,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "last.is_empty()",
          "norm": null,
          "value": "true",
          "line": 244,
          "bound": null
        },
        {
          "cond": "let Some(last) = parts.next()",
          "norm": null,
          "value": "true",
          "line": 245,
          "bound": null
        }
      ],
      "ret": "false",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        23,
        24
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "last.is_empty()",
          "norm": null,
          "value": "true",
          "line": 244,
          "bound": null
        },
        {
          "cond": "let Some(last) = parts.next()",
          "norm": null,
          "value": "true",
          "line": 245,
          "bound": null
        },
        {
          "cond": "last.is_empty()",
          "norm": null,
          "value": "true",
          "line": 253,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        11,
        12,
        13,
        20,
        21,
        22,
        24
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "last.is_empty()",
          "norm": null,
          "value": "true",
          "line": 244,
          "bound": null
        },
        {
          "cond": "let Some(last) = parts.next()",
          "norm": null,
          "value": "true",
          "line": 245,
          "bound": null
        },
        {
          "cond": "last.is_empty()",
          "norm": null,
          "value": "false",
          "line": 253,
          "bound": null
        },
        {
          "cond": "last.as_bytes().iter().all(|c| c.is_ascii_digit())",
          "norm": null,
          "value": "true",
          "line": 253,
          "bound": null
        }
      ],
      "ret": "true",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        11,
        12,
        14,
        15,
        16,
        17,
        18,
        23,
        24
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "last.is_empty()",
          "norm": null,
          "value": "true",
          "line": 244,
          "bound": null
        },
        {
          "cond": "let Some(last) = parts.next()",
          "norm": null,
          "value": "true",
          "line": 245,
          "bound": null
        },
        {
          "cond": "last.is_empty()",
          "norm": null,
          "value": "false",
          "line": 253,
          "bound": null
        },
        {
          "cond": "last.as_bytes().iter().all(|c| c.is_ascii_digit())",
          "norm": null,
          "value": "false",
          "line": 253,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        11,
        12,
        14,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "last.is_empty()",
          "norm": null,
          "value": "false",
          "line": 244,
          "bound": null
        },
        {
          "cond": "last.is_empty()",
          "norm": null,
          "value": "true",
          "line": 253,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        10,
        11,
        12,
        13,
        20,
        21,
        22,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "last.is_empty()",
          "norm": null,
          "value": "false",
          "line": 244,
          "bound": null
        },
        {
          "cond": "last.is_empty()",
          "norm": null,
          "value": "false",
          "line": 253,
          "bound": null
        },
        {
          "cond": "last.as_bytes().iter().all(|c| c.is_ascii_digit())",
          "norm": null,
          "value": "true",
          "line": 253,
          "bound": null
        }
      ],
      "ret": "true",
      "path": [
        0,
        1,
        2,
        3,
        4,
        10,
        11,
        12,
        14,
        15,
        16,
        17,
        18,
        23,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "last.is_empty()",
          "norm": null,
          "value": "false",
          "line": 244,
          "bound": null
        },
        {
          "cond": "last.is_empty()",
          "norm": null,
          "value": "false",
          "line": 253,
          "bound": null
        },
        {
          "cond": "last.as_bytes().iter().all(|c| c.is_ascii_digit())",
          "norm": null,
          "value": "false",
          "line": 253,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        10,
        11,
        12,
        14,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        24
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}