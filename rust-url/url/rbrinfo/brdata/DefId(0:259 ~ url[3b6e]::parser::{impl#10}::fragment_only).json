{
  "name": "url::parser::{impl#10}::fragment_only",
  "mod_info": {
    "name": "parser",
    "loc": "url/src/lib.rs:218:1:218:12"
  },
  "visible": false,
  "loc": "url/src/parser.rs:1623:5:1641:6",
  "doc": "",
  "code": [
    "fn fragment_only(mut self, base_url: &Url, mut input: Input<'_>) -> ParseResult<Url> {",
    "    let before_fragment = match base_url.fragment_start {",
    "        Some(i) => base_url.slice(..i),",
    "        None => &*base_url.serialization,",
    "    };",
    "    debug_assert!(self.serialization.is_empty());",
    "    self.serialization",
    "        .reserve(before_fragment.len() + input.chars.as_str().len());",
    "    self.serialization.push_str(before_fragment);",
    "    self.serialization.push('#');",
    "    let next = input.next();",
    "    debug_assert!(next == Some('#'));",
    "    self.parse_fragment(input);",
    "    Ok(Url {",
    "        serialization: self.serialization,",
    "        fragment_start: Some(to_u32(before_fragment.len())?),",
    "        ..*base_url",
    "    })",
    "}"
  ],
  "size": {
    "chain": 8,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "base_url.fragment_start matches Some(i)",
          "norm": null,
          "value": "true",
          "line": 1624,
          "bound": null
        },
        {
          "cond": "base_url.fragment_start matches Some(i)",
          "norm": null,
          "value": "true",
          "line": 1624,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1628,
          "bound": null
        },
        {
          "cond": "next == Some('#')",
          "norm": "Some('#') == next",
          "value": "true",
          "line": 1634,
          "bound": null
        },
        {
          "cond": "to_u32(before_fragment.len())?",
          "norm": null,
          "value": "Err/None",
          "line": 1638,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        5,
        7,
        8,
        9,
        10,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        27,
        28,
        29,
        30,
        31,
        33,
        35,
        36,
        39,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "base_url.fragment_start matches Some(i)",
          "norm": null,
          "value": "true",
          "line": 1624,
          "bound": null
        },
        {
          "cond": "base_url.fragment_start matches Some(i)",
          "norm": null,
          "value": "true",
          "line": 1624,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1628,
          "bound": null
        },
        {
          "cond": "next == Some('#')",
          "norm": "Some('#') == next",
          "value": "true",
          "line": 1634,
          "bound": null
        },
        {
          "cond": "to_u32(before_fragment.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1638,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n            serialization: self.serialization,\n            fragment_start: Some(to_u32(before_fragment.len())?),\n            ..*base_url\n        })",
      "path": [
        0,
        2,
        4,
        5,
        7,
        8,
        9,
        10,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        27,
        28,
        29,
        30,
        31,
        34,
        37,
        38,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "base_url.fragment_start matches Some(i)",
          "norm": null,
          "value": "true",
          "line": 1624,
          "bound": null
        },
        {
          "cond": "base_url.fragment_start matches Some(i)",
          "norm": null,
          "value": "true",
          "line": 1624,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1628,
          "bound": null
        },
        {
          "cond": "next == Some('#')",
          "norm": "Some('#') == next",
          "value": "false",
          "line": 1634,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        5,
        7,
        8,
        9,
        10,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        25,
        43,
        44
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "base_url.fragment_start matches Some(i)",
          "norm": null,
          "value": "true",
          "line": 1624,
          "bound": null
        },
        {
          "cond": "base_url.fragment_start matches Some(i)",
          "norm": null,
          "value": "true",
          "line": 1624,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1628,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        5,
        7,
        8,
        9,
        11,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "base_url.fragment_start matches None",
          "norm": null,
          "value": "true",
          "line": 1624,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1628,
          "bound": null
        },
        {
          "cond": "next == Some('#')",
          "norm": "Some('#') == next",
          "value": "true",
          "line": 1634,
          "bound": null
        },
        {
          "cond": "to_u32(before_fragment.len())?",
          "norm": null,
          "value": "Err/None",
          "line": 1638,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        6,
        7,
        8,
        9,
        10,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        27,
        28,
        29,
        30,
        31,
        33,
        35,
        36,
        39,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "base_url.fragment_start matches None",
          "norm": null,
          "value": "true",
          "line": 1624,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1628,
          "bound": null
        },
        {
          "cond": "next == Some('#')",
          "norm": "Some('#') == next",
          "value": "true",
          "line": 1634,
          "bound": null
        },
        {
          "cond": "to_u32(before_fragment.len())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1638,
          "bound": null
        }
      ],
      "ret": "Ok(Url {\n            serialization: self.serialization,\n            fragment_start: Some(to_u32(before_fragment.len())?),\n            ..*base_url\n        })",
      "path": [
        0,
        3,
        6,
        7,
        8,
        9,
        10,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        27,
        28,
        29,
        30,
        31,
        34,
        37,
        38,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "base_url.fragment_start matches None",
          "norm": null,
          "value": "true",
          "line": 1624,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1628,
          "bound": null
        },
        {
          "cond": "next == Some('#')",
          "norm": "Some('#') == next",
          "value": "false",
          "line": 1634,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        6,
        7,
        8,
        9,
        10,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        25,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "base_url.fragment_start matches None",
          "norm": null,
          "value": "true",
          "line": 1624,
          "bound": null
        },
        {
          "cond": "self.serialization.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1628,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        6,
        7,
        8,
        9,
        11,
        43,
        44
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}