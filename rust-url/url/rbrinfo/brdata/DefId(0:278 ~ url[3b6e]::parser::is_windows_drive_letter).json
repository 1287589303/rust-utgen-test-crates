{
  "name": "url::parser::is_windows_drive_letter",
  "mod_info": {
    "name": "parser",
    "loc": "url/src/lib.rs:218:1:218:12"
  },
  "visible": true,
  "loc": "url/src/parser.rs:1775:1:1777:2",
  "doc": "/// Whether the scheme is file:, the path has a single segment, and that segment\n/// is a Windows drive letter\n",
  "code": [
    "pub fn is_windows_drive_letter(segment: &str) -> bool {",
    "    segment.len() == 2 && starts_with_windows_drive_letter(segment)",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "segment.len() == 2",
          "norm": "2 == segment.len()",
          "value": "false",
          "line": 1776,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "segment.len() == 2",
          "norm": "2 == segment.len()",
          "value": "true",
          "line": 1776,
          "bound": null
        }
      ],
      "ret": "segment.len() == 2 && starts_with_windows_drive_letter(segment)",
      "path": [
        0,
        1,
        3,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}