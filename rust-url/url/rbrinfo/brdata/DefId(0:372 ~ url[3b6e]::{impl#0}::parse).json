{
  "name": "url::{impl#0}::parse",
  "mod_info": {
    "name": "",
    "loc": "url/src/lib.rs:9:1:3218:2"
  },
  "visible": true,
  "loc": "url/src/lib.rs:305:5:314:6",
  "doc": "/// Parse an URL string with the configuration so far.\n",
  "code": [
    "pub fn parse(self, input: &str) -> Result<Url, crate::ParseError> {",
    "    Parser {",
    "        serialization: String::with_capacity(input.len()),",
    "        base_url: self.base_url,",
    "        query_encoding_override: self.encoding_override,",
    "        violation_fn: self.violation_fn,",
    "        context: Context::UrlParser,",
    "    }",
    "    .parse_url(input)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}