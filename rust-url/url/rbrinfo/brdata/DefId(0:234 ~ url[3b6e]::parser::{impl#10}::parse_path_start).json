{
  "name": "url::parser::{impl#10}::parse_path_start",
  "mod_info": {
    "name": "parser",
    "loc": "url/src/lib.rs:218:1:218:12"
  },
  "visible": true,
  "loc": "url/src/parser.rs:1148:5:1185:6",
  "doc": "",
  "code": [
    "pub fn parse_path_start<'i>(",
    "    &mut self,",
    "    scheme_type: SchemeType,",
    "    has_host: &mut bool,",
    "    input: Input<'i>,",
    ") -> Input<'i> {",
    "    let path_start = self.serialization.len();",
    "    let (maybe_c, remaining) = input.split_first();",
    "    // If url is special, then:",
    "    if scheme_type.is_special() {",
    "        if maybe_c == Some('\\\\') {",
    "            // If c is U+005C (\\), validation error.",
    "            self.log_violation(SyntaxViolation::Backslash);",
    "        }",
    "        // A special URL always has a non-empty path.",
    "        if !self.serialization.ends_with('/') {",
    "            self.serialization.push('/');",
    "            // We have already made sure the forward slash is present.",
    "            if maybe_c == Some('/') || maybe_c == Some('\\\\') {",
    "                return self.parse_path(scheme_type, has_host, path_start, remaining);",
    "            }",
    "        }",
    "        return self.parse_path(scheme_type, has_host, path_start, input);",
    "    } else if maybe_c == Some('?') || maybe_c == Some('#') {",
    "        // Otherwise, if state override is not given and c is U+003F (?),",
    "        // set url’s query to the empty string and state to query state.",
    "        // Otherwise, if state override is not given and c is U+0023 (#),",
    "        // set url’s fragment to the empty string and state to fragment state.",
    "        // The query and path states will be handled by the caller.",
    "        return input;",
    "    }",
    "",
    "    if maybe_c.is_some() && maybe_c != Some('/') {",
    "        self.serialization.push('/');",
    "    }",
    "    // Otherwise, if c is not the EOF code point:",
    "    self.parse_path(scheme_type, has_host, path_start, input)",
    "}"
  ],
  "size": {
    "chain": 13,
    "contra": 0,
    "min_set": 9
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "scheme_type.is_special()",
          "norm": null,
          "value": "true",
          "line": 1157,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('\\\\')",
          "norm": "Some('\\\\') == maybe_c",
          "value": "true",
          "line": 1158,
          "bound": null
        },
        {
          "cond": "self.serialization.ends_with('/')",
          "norm": null,
          "value": "true",
          "line": 1163,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        23,
        24,
        43,
        44
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "scheme_type.is_special()",
          "norm": null,
          "value": "true",
          "line": 1157,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('\\\\')",
          "norm": "Some('\\\\') == maybe_c",
          "value": "true",
          "line": 1158,
          "bound": null
        },
        {
          "cond": "self.serialization.ends_with('/')",
          "norm": null,
          "value": "false",
          "line": 1163,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('/')",
          "norm": "Some('/') == maybe_c",
          "value": "true",
          "line": 1166,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        16,
        20,
        21,
        43,
        44
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "scheme_type.is_special()",
          "norm": null,
          "value": "true",
          "line": 1157,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('\\\\')",
          "norm": "Some('\\\\') == maybe_c",
          "value": "true",
          "line": 1158,
          "bound": null
        },
        {
          "cond": "self.serialization.ends_with('/')",
          "norm": null,
          "value": "false",
          "line": 1163,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('/')",
          "norm": "Some('/') == maybe_c",
          "value": "false",
          "line": 1166,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('\\\\')",
          "norm": "Some('\\\\') == maybe_c",
          "value": "true",
          "line": 1166,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "scheme_type.is_special()",
          "norm": null,
          "value": "true",
          "line": 1157,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('\\\\')",
          "norm": "Some('\\\\') == maybe_c",
          "value": "true",
          "line": 1158,
          "bound": null
        },
        {
          "cond": "self.serialization.ends_with('/')",
          "norm": null,
          "value": "false",
          "line": 1163,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('/')",
          "norm": "Some('/') == maybe_c",
          "value": "false",
          "line": 1166,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('\\\\')",
          "norm": "Some('\\\\') == maybe_c",
          "value": "false",
          "line": 1166,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        17,
        18,
        22,
        23,
        24,
        43,
        44
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "scheme_type.is_special()",
          "norm": null,
          "value": "true",
          "line": 1157,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('\\\\')",
          "norm": "Some('\\\\') == maybe_c",
          "value": "false",
          "line": 1158,
          "bound": null
        },
        {
          "cond": "self.serialization.ends_with('/')",
          "norm": null,
          "value": "true",
          "line": 1163,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        9,
        10,
        11,
        12,
        23,
        24,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "scheme_type.is_special()",
          "norm": null,
          "value": "true",
          "line": 1157,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('\\\\')",
          "norm": "Some('\\\\') == maybe_c",
          "value": "false",
          "line": 1158,
          "bound": null
        },
        {
          "cond": "self.serialization.ends_with('/')",
          "norm": null,
          "value": "false",
          "line": 1163,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('/')",
          "norm": "Some('/') == maybe_c",
          "value": "true",
          "line": 1166,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        9,
        10,
        11,
        13,
        14,
        15,
        16,
        20,
        21,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "scheme_type.is_special()",
          "norm": null,
          "value": "true",
          "line": 1157,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('\\\\')",
          "norm": "Some('\\\\') == maybe_c",
          "value": "false",
          "line": 1158,
          "bound": null
        },
        {
          "cond": "self.serialization.ends_with('/')",
          "norm": null,
          "value": "false",
          "line": 1163,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('/')",
          "norm": "Some('/') == maybe_c",
          "value": "false",
          "line": 1166,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('\\\\')",
          "norm": "Some('\\\\') == maybe_c",
          "value": "true",
          "line": 1166,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        9,
        10,
        11,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        43,
        44
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "scheme_type.is_special()",
          "norm": null,
          "value": "true",
          "line": 1157,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('\\\\')",
          "norm": "Some('\\\\') == maybe_c",
          "value": "false",
          "line": 1158,
          "bound": null
        },
        {
          "cond": "self.serialization.ends_with('/')",
          "norm": null,
          "value": "false",
          "line": 1163,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('/')",
          "norm": "Some('/') == maybe_c",
          "value": "false",
          "line": 1166,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('\\\\')",
          "norm": "Some('\\\\') == maybe_c",
          "value": "false",
          "line": 1166,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        9,
        10,
        11,
        13,
        14,
        15,
        17,
        18,
        22,
        23,
        24,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "scheme_type.is_special()",
          "norm": null,
          "value": "false",
          "line": 1157,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('?')",
          "norm": "Some('?') == maybe_c",
          "value": "true",
          "line": 1171,
          "bound": null
        }
      ],
      "ret": "input",
      "path": [
        0,
        1,
        2,
        3,
        25,
        26,
        27,
        31,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "scheme_type.is_special()",
          "norm": null,
          "value": "false",
          "line": 1157,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('?')",
          "norm": "Some('?') == maybe_c",
          "value": "false",
          "line": 1171,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('#')",
          "norm": "Some('#') == maybe_c",
          "value": "true",
          "line": 1171,
          "bound": null
        }
      ],
      "ret": "input",
      "path": [
        0,
        1,
        2,
        3,
        25,
        26,
        28,
        29,
        30,
        31,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "scheme_type.is_special()",
          "norm": null,
          "value": "false",
          "line": 1157,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('?')",
          "norm": "Some('?') == maybe_c",
          "value": "false",
          "line": 1171,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('#')",
          "norm": "Some('#') == maybe_c",
          "value": "false",
          "line": 1171,
          "bound": null
        },
        {
          "cond": "maybe_c.is_some()",
          "norm": null,
          "value": "true",
          "line": 1180,
          "bound": null
        },
        {
          "cond": "maybe_c != Some('/')",
          "norm": "Some('/') != maybe_c",
          "value": "true",
          "line": 1180,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        25,
        26,
        28,
        29,
        32,
        33,
        34,
        35,
        36,
        37,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "scheme_type.is_special()",
          "norm": null,
          "value": "false",
          "line": 1157,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('?')",
          "norm": "Some('?') == maybe_c",
          "value": "false",
          "line": 1171,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('#')",
          "norm": "Some('#') == maybe_c",
          "value": "false",
          "line": 1171,
          "bound": null
        },
        {
          "cond": "maybe_c.is_some()",
          "norm": null,
          "value": "true",
          "line": 1180,
          "bound": null
        },
        {
          "cond": "maybe_c != Some('/')",
          "norm": "Some('/') != maybe_c",
          "value": "false",
          "line": 1180,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        25,
        26,
        28,
        29,
        32,
        33,
        34,
        35,
        38,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "scheme_type.is_special()",
          "norm": null,
          "value": "false",
          "line": 1157,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('?')",
          "norm": "Some('?') == maybe_c",
          "value": "false",
          "line": 1171,
          "bound": null
        },
        {
          "cond": "maybe_c == Some('#')",
          "norm": "Some('#') == maybe_c",
          "value": "false",
          "line": 1171,
          "bound": null
        },
        {
          "cond": "maybe_c.is_some()",
          "norm": null,
          "value": "false",
          "line": 1180,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        25,
        26,
        28,
        29,
        32,
        33,
        39,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}