{
  "url/src/parser.rs:1615:16:1615:27": [
    {
      "Bool": {
        "Other": "is_finished"
      }
    }
  ],
  "url/src/parser.rs:1607:15:1607:63": [
    {
      "Bool": {
        "Other": "let Some((part, is_finished)) = part_iter.next()"
      }
    }
  ],
  "url/src/parser.rs:1591:28:1591:62": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.context == Context::UrlParser",
          "lhs": "self.context",
          "rhs": "Context::UrlParser",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:1608:19:1608:42": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:1608:19:1608:42",
        "match_str": "query_encoding_override",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "url/src/parser.rs:1611:17:1611:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1611:25:1613:66"
          },
          "url/src/parser.rs:1610:17:1610:24": {
            "pat": {
              "pat_str": "Some(o)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1610:28:1610:84"
          }
        }
      }
    }
  ],
  "url/src/parser.rs:1595:22:1595:46": [
    {
      "Bool": {
        "Other": "scheme_type.is_special()"
      }
    }
  ]
}