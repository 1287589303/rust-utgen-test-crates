{
  "url/src/parser.rs:851:29:851:73": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "before_authority != self.serialization.len()",
          "lhs": "before_authority",
          "rhs": "self.serialization.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:856:42:856:55": [
    {
      "Bool": {
        "Other": "has_authority"
      }
    }
  ],
  "url/src/parser.rs:856:12:856:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "host == HostInternal::None",
          "lhs": "host",
          "rhs": "HostInternal::None",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:855:13:855:74": [
    {
      "Try": "self.parse_host_and_port(remaining, scheme_end, scheme_type)?"
    }
  ],
  "url/src/parser.rs:850:41:850:81": [
    {
      "Try": "self.parse_userinfo(input, scheme_type)?"
    }
  ],
  "url/src/parser.rs:853:26:853:59": [
    {
      "Try": "to_u32(self.serialization.len())?"
    }
  ],
  "url/src/parser.rs:860:26:860:59": [
    {
      "Try": "to_u32(self.serialization.len())?"
    }
  ]
}