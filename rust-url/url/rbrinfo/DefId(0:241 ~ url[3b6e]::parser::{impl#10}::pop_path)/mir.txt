bb0
  0: StorageLive(_4)
    SourceInfo(url/src/parser.rs:1412:12-1412:49)
  1: StorageLive(_5)
    SourceInfo(url/src/parser.rs:1412:12-1412:36)
  2: StorageLive(_6)
    SourceInfo(url/src/parser.rs:1412:12-1412:30)
  3: _6 = &((*_1).0: std::string::String)
    SourceInfo(url/src/parser.rs:1412:12-1412:30)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1412:12-1412:36)
      kind: _5 = std::string::String::len(move _6) -> [return: bb1, unwind: bb20]
  }
  preds []
  succs [bb1, bb20]

bb1
  0: StorageDead(_6)
    SourceInfo(url/src/parser.rs:1412:35-1412:36)
  1: StorageLive(_7)
    SourceInfo(url/src/parser.rs:1412:39-1412:49)
  2: _7 = _3
    SourceInfo(url/src/parser.rs:1412:39-1412:49)
  3: _4 = Gt(move _5, move _7)
    SourceInfo(url/src/parser.rs:1412:12-1412:49)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1412:12-1412:49)
      kind: switchInt(move _4) -> [0: bb18, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb18]

bb2
  0: StorageDead(_7)
    SourceInfo(url/src/parser.rs:1412:48-1412:49)
  1: StorageDead(_5)
    SourceInfo(url/src/parser.rs:1412:48-1412:49)
  2: StorageLive(_8)
    SourceInfo(url/src/parser.rs:1413:17-1413:31)
  3: StorageLive(_9)
    SourceInfo(url/src/parser.rs:1413:34-1413:77)
  4: StorageLive(_10)
    SourceInfo(url/src/parser.rs:1413:34-1413:66)
  5: StorageLive(_11)
    SourceInfo(url/src/parser.rs:1413:52-1413:66)
  6: StorageLive(_12)
    SourceInfo(url/src/parser.rs:1413:34-1413:52)
  7: _12 = &((*_1).0: std::string::String)
    SourceInfo(url/src/parser.rs:1413:34-1413:52)
  8: StorageLive(_13)
    SourceInfo(url/src/parser.rs:1413:53-1413:65)
  9: StorageLive(_14)
    SourceInfo(url/src/parser.rs:1413:53-1413:63)
  10: _14 = _3
    SourceInfo(url/src/parser.rs:1413:53-1413:63)
  11: _13 = core::ops::RangeFrom::<usize> { start: move _14 }
    SourceInfo(url/src/parser.rs:1413:53-1413:65)
  12: StorageDead(_14)
    SourceInfo(url/src/parser.rs:1413:64-1413:65)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1413:52-1413:66)
      kind: _11 = <std::string::String as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _12, move _13) -> [return: bb3, unwind: bb20]
  }
  preds [bb1]
  succs [bb3, bb20]

bb3
  0: _10 = &(*_11)
    SourceInfo(url/src/parser.rs:1413:34-1413:66)
  1: StorageDead(_13)
    SourceInfo(url/src/parser.rs:1413:65-1413:66)
  2: StorageDead(_12)
    SourceInfo(url/src/parser.rs:1413:65-1413:66)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1413:34-1413:77)
      kind: _9 = core::str::<impl str>::rfind::<'_, char>(move _10, const '/') -> [return: bb4, unwind: bb20]
  }
  preds [bb2]
  succs [bb4, bb20]

bb4
  0: StorageDead(_10)
    SourceInfo(url/src/parser.rs:1413:76-1413:77)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1413:34-1413:86)
      kind: _8 = core::option::Option::<usize>::unwrap(move _9) -> [return: bb5, unwind: bb20]
  }
  preds [bb3]
  succs [bb5, bb20]

bb5
  0: StorageDead(_9)
    SourceInfo(url/src/parser.rs:1413:85-1413:86)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(url/src/parser.rs:1413:17-1413:31)
  2: StorageDead(_11)
    SourceInfo(url/src/parser.rs:1413:86-1413:87)
  3: StorageLive(_15)
    SourceInfo(url/src/parser.rs:1415:17-1415:30)
  4: StorageLive(_16)
    SourceInfo(url/src/parser.rs:1415:33-1415:60)
  5: StorageLive(_17)
    SourceInfo(url/src/parser.rs:1415:33-1415:43)
  6: _17 = _3
    SourceInfo(url/src/parser.rs:1415:33-1415:43)
  7: StorageLive(_18)
    SourceInfo(url/src/parser.rs:1415:46-1415:60)
  8: _18 = _8
    SourceInfo(url/src/parser.rs:1415:46-1415:60)
  9: _19 = AddWithOverflow(_17, _18)
    SourceInfo(url/src/parser.rs:1415:33-1415:60)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1415:33-1415:60)
      kind: assert(!move (_19.1: bool), "attempt to compute `{} + {}`, which would overflow", move _17, move _18) -> [success: bb6, unwind: bb20]
  }
  preds [bb4]
  succs [bb6, bb20]

bb6
  0: _16 = move (_19.0: usize)
    SourceInfo(url/src/parser.rs:1415:33-1415:60)
  1: StorageDead(_18)
    SourceInfo(url/src/parser.rs:1415:59-1415:60)
  2: StorageDead(_17)
    SourceInfo(url/src/parser.rs:1415:59-1415:60)
  3: _20 = AddWithOverflow(_16, const 1_usize)
    SourceInfo(url/src/parser.rs:1415:33-1415:64)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1415:33-1415:64)
      kind: assert(!move (_20.1: bool), "attempt to compute `{} + {}`, which would overflow", move _16, const 1_usize) -> [success: bb7, unwind: bb20]
  }
  preds [bb5]
  succs [bb7, bb20]

bb7
  0: _15 = move (_20.0: usize)
    SourceInfo(url/src/parser.rs:1415:33-1415:64)
  1: StorageDead(_16)
    SourceInfo(url/src/parser.rs:1415:63-1415:64)
  2: FakeRead(ForLet(None), _15)
    SourceInfo(url/src/parser.rs:1415:17-1415:30)
  3: StorageLive(_21)
    SourceInfo(url/src/parser.rs:1417:18-1417:39)
  4: StorageLive(_22)
    SourceInfo(url/src/parser.rs:1417:18-1417:29)
  5: _22 = &_2
    SourceInfo(url/src/parser.rs:1417:18-1417:29)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1417:18-1417:39)
      kind: _21 = parser::SchemeType::is_file(move _22) -> [return: bb8, unwind: bb20]
  }
  preds [bb6]
  succs [bb8, bb20]

bb8
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1417:18-1417:39)
      kind: switchInt(move _21) -> [0: bb14, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb14]

bb9
  0: StorageDead(_22)
    SourceInfo(url/src/parser.rs:1417:38-1417:39)
  1: StorageLive(_23)
    SourceInfo(url/src/parser.rs:1418:20-1418:92)
  2: StorageLive(_24)
    SourceInfo(url/src/parser.rs:1418:55-1418:91)
  3: StorageLive(_25)
    SourceInfo(url/src/parser.rs:1418:55-1418:91)
  4: StorageLive(_26)
    SourceInfo(url/src/parser.rs:1418:74-1418:91)
  5: StorageLive(_27)
    SourceInfo(url/src/parser.rs:1418:56-1418:74)
  6: _27 = &((*_1).0: std::string::String)
    SourceInfo(url/src/parser.rs:1418:56-1418:74)
  7: StorageLive(_28)
    SourceInfo(url/src/parser.rs:1418:75-1418:90)
  8: StorageLive(_29)
    SourceInfo(url/src/parser.rs:1418:75-1418:88)
  9: _29 = _15
    SourceInfo(url/src/parser.rs:1418:75-1418:88)
  10: _28 = core::ops::RangeFrom::<usize> { start: move _29 }
    SourceInfo(url/src/parser.rs:1418:75-1418:90)
  11: StorageDead(_29)
    SourceInfo(url/src/parser.rs:1418:89-1418:90)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1418:74-1418:91)
      kind: _26 = <std::string::String as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _27, move _28) -> [return: bb10, unwind: bb20]
  }
  preds [bb8]
  succs [bb10, bb20]

bb10
  0: StorageDead(_28)
    SourceInfo(url/src/parser.rs:1418:90-1418:91)
  1: StorageDead(_27)
    SourceInfo(url/src/parser.rs:1418:90-1418:91)
  2: _25 = &(*_26)
    SourceInfo(url/src/parser.rs:1418:55-1418:91)
  3: _24 = &(*_25)
    SourceInfo(url/src/parser.rs:1418:55-1418:91)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1418:20-1418:92)
      kind: _23 = parser::is_normalized_windows_drive_letter(move _24) -> [return: bb11, unwind: bb20]
  }
  preds [bb9]
  succs [bb11, bb20]

bb11
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1418:20-1418:92)
      kind: switchInt(move _23) -> [0: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13]

bb12
  0: StorageDead(_26)
    SourceInfo(url/src/parser.rs:1418:91-1418:92)
  1: StorageDead(_25)
    SourceInfo(url/src/parser.rs:1418:91-1418:92)
  2: StorageDead(_24)
    SourceInfo(url/src/parser.rs:1418:91-1418:92)
  3: _0 = const ()
    SourceInfo(url/src/parser.rs:1421:14-1421:14)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1417:13-1421:14)
      kind: goto -> bb17
  }
  preds [bb11]
  succs [bb17]

bb13
  0: StorageDead(_26)
    SourceInfo(url/src/parser.rs:1418:91-1418:92)
  1: StorageDead(_25)
    SourceInfo(url/src/parser.rs:1418:91-1418:92)
  2: StorageDead(_24)
    SourceInfo(url/src/parser.rs:1418:91-1418:92)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb15
  }
  preds [bb11]
  succs [bb15]

bb14
  0: StorageDead(_22)
    SourceInfo(url/src/parser.rs:1417:38-1417:39)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb15
  }
  preds [bb8]
  succs [bb15]

bb15
  0: StorageLive(_30)
    SourceInfo(url/src/parser.rs:1420:17-1420:59)
  1: StorageLive(_31)
    SourceInfo(url/src/parser.rs:1420:17-1420:35)
  2: _31 = &mut ((*_1).0: std::string::String)
    SourceInfo(url/src/parser.rs:1420:17-1420:35)
  3: StorageLive(_32)
    SourceInfo(url/src/parser.rs:1420:45-1420:58)
  4: _32 = _15
    SourceInfo(url/src/parser.rs:1420:45-1420:58)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1420:17-1420:59)
      kind: _30 = std::string::String::truncate(move _31, move _32) -> [return: bb16, unwind: bb20]
  }
  preds [bb13, bb14]
  succs [bb16, bb20]

bb16
  0: StorageDead(_32)
    SourceInfo(url/src/parser.rs:1420:58-1420:59)
  1: StorageDead(_31)
    SourceInfo(url/src/parser.rs:1420:58-1420:59)
  2: StorageDead(_30)
    SourceInfo(url/src/parser.rs:1420:59-1420:60)
  3: _0 = const ()
    SourceInfo(url/src/parser.rs:1419:13-1421:14)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1417:13-1421:14)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  0: StorageDead(_23)
    SourceInfo(url/src/parser.rs:1421:13-1421:14)
  1: StorageDead(_21)
    SourceInfo(url/src/parser.rs:1421:13-1421:14)
  2: StorageDead(_15)
    SourceInfo(url/src/parser.rs:1422:9-1422:10)
  3: StorageDead(_8)
    SourceInfo(url/src/parser.rs:1422:9-1422:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1412:9-1422:10)
      kind: goto -> bb19
  }
  preds [bb12, bb16]
  succs [bb19]

bb18
  0: StorageDead(_7)
    SourceInfo(url/src/parser.rs:1412:48-1412:49)
  1: StorageDead(_5)
    SourceInfo(url/src/parser.rs:1412:48-1412:49)
  2: _0 = const ()
    SourceInfo(url/src/parser.rs:1422:10-1422:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1412:9-1422:10)
      kind: goto -> bb19
  }
  preds [bb1]
  succs [bb19]

bb19
  0: StorageDead(_4)
    SourceInfo(url/src/parser.rs:1422:9-1422:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1423:6-1423:6)
      kind: return
  }
  preds [bb17, bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1411:5-1423:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb5, bb6, bb7, bb9, bb10, bb15]
  succs []

