bb0
  0: StorageLive(_2)
    SourceInfo(url/src/parser.rs:366:13-366:26)
  1: _2 = move _1
    SourceInfo(url/src/parser.rs:366:13-366:26)
  2: StorageLive(_3)
    SourceInfo(url/src/parser.rs:367:23-367:27)
  3: _3 = core::option::Option::<&Url>::None
    SourceInfo(url/src/parser.rs:367:23-367:27)
  4: StorageLive(_4)
    SourceInfo(url/src/parser.rs:368:38-368:42)
  5: _4 = core::option::Option::<&dyn for<'a> core::ops::Fn(&'a str) -> std::borrow::Cow<'_, [u8]>>::None
    SourceInfo(url/src/parser.rs:368:38-368:42)
  6: StorageLive(_5)
    SourceInfo(url/src/parser.rs:369:27-369:31)
  7: _5 = core::option::Option::<&dyn core::ops::Fn(parser::SyntaxViolation)>::None
    SourceInfo(url/src/parser.rs:369:27-369:31)
  8: StorageLive(_6)
    SourceInfo(url/src/parser.rs:370:22-370:37)
  9: _6 = parser::Context::Setter
    SourceInfo(url/src/parser.rs:370:22-370:37)
  10: _0 = parser::Parser::<'_> { serialization: move _2, base_url: move _3, query_encoding_override: move _4, violation_fn: move _5, context: move _6 }
    SourceInfo(url/src/parser.rs:365:9-371:10)
  11: StorageDead(_6)
    SourceInfo(url/src/parser.rs:371:9-371:10)
  12: StorageDead(_5)
    SourceInfo(url/src/parser.rs:371:9-371:10)
  13: StorageDead(_4)
    SourceInfo(url/src/parser.rs:371:9-371:10)
  14: StorageDead(_3)
    SourceInfo(url/src/parser.rs:371:9-371:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:371:9-371:10)
      kind: drop(_2) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_2)
    SourceInfo(url/src/parser.rs:371:9-371:10)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:372:5-372:6)
      kind: drop(_1) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:372:6-372:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:372:5-372:6)
      kind: drop(_1) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:364:5-372:6)
      kind: resume
  }
  preds [bb1, bb3]
  succs []

