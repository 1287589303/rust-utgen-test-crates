{
  "url/src/parser.rs:1344:28:1344:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "segment_start == path_start + 1",
          "lhs": "segment_start",
          "rhs": "path_start + 1",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:1319:35:1319:91": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.serialization.as_bytes()[segment_start - 1] == b'/'",
          "lhs": "self.serialization.as_bytes()[segment_start - 1]",
          "rhs": "b'/'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "url/src/parser.rs:1345:28:1345:73": [
    {
      "Bool": {
        "Other": "is_windows_drive_letter(segment_before_slash)"
      }
    }
  ],
  "url/src/parser.rs:1365:17:1365:32": [
    {
      "Bool": {
        "Other": "ends_with_slash"
      }
    }
  ],
  "url/src/parser.rs:1311:52:1311:80": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.serialization.len() - 1",
          "lhs": "self.serialization.len()",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/parser.rs:1329:24:1329:39": [
    {
      "Bool": {
        "Other": "ends_with_slash"
      }
    }
  ],
  "url/src/parser.rs:1262:28:1262:52": [
    {
      "Bool": {
        "Other": "scheme_type.is_special()"
      }
    }
  ],
  "url/src/parser.rs:1249:28:1249:70": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "self.context != Context::PathSegmentSetter",
          "lhs": "self.context",
          "rhs": "Context::PathSegmentSetter",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:1358:28:1358:37": [
    {
      "Bool": {
        "Other": "*has_host"
      }
    }
  ],
  "url/src/parser.rs:1290:32:1290:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "self.serialization.len() > path_start",
          "lhs": "self.serialization.len()",
          "rhs": "path_start",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:1344:45:1344:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "path_start + 1",
          "lhs": "path_start",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/parser.rs:1291:32:1293:30": [
    {
      "Bool": {
        "Other": "is_normalized_windows_drive_letter(\n                                &self.serialization[path_start + 1..],\n                            )"
      }
    }
  ],
  "url/src/parser.rs:1322:28:1322:94": [
    {
      "Bool": {
        "Other": "Parser::last_slash_can_be_removed(&self.serialization, path_start)"
      }
    }
  ],
  "url/src/parser.rs:1315:19:1315:39": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:1315:19:1315:39",
        "match_str": "segment_before_slash",
        "match_kind": "Other",
        "arms": {
          "url/src/parser.rs:1341:17:1341:18": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1341:22:1363:18"
          },
          "url/src/parser.rs:1318:19:1318:25": {
            "pat": {
              "pat_str": "\".%2E\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1318:29:1332:18"
          },
          "url/src/parser.rs:1335:23:1335:28": {
            "pat": {
              "pat_str": "\"%2e\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1335:40:1340:18"
          },
          "url/src/parser.rs:1317:46:1317:54": {
            "pat": {
              "pat_str": "\"%2E%2e\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1318:29:1332:18"
          },
          "url/src/parser.rs:1317:86:1317:92": {
            "pat": {
              "pat_str": "\".%2e\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1318:29:1332:18"
          },
          "url/src/parser.rs:1317:17:1317:21": {
            "pat": {
              "pat_str": "\"..\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1318:29:1332:18"
          },
          "url/src/parser.rs:1317:24:1317:32": {
            "pat": {
              "pat_str": "\"%2e%2e\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1318:29:1332:18"
          },
          "url/src/parser.rs:1317:77:1317:83": {
            "pat": {
              "pat_str": "\"%2E.\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1318:29:1332:18"
          },
          "url/src/parser.rs:1335:31:1335:36": {
            "pat": {
              "pat_str": "\"%2E\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1335:40:1340:18"
          },
          "url/src/parser.rs:1317:68:1317:74": {
            "pat": {
              "pat_str": "\"%2e.\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1318:29:1332:18"
          },
          "url/src/parser.rs:1317:57:1317:65": {
            "pat": {
              "pat_str": "\"%2E%2E\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1318:29:1332:18"
          },
          "url/src/parser.rs:1317:35:1317:43": {
            "pat": {
              "pat_str": "\"%2e%2E\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1318:29:1332:18"
          },
          "url/src/parser.rs:1335:17:1335:20": {
            "pat": {
              "pat_str": "\".\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1335:40:1340:18"
          }
        }
      }
    }
  ],
  "url/src/parser.rs:1226:28:1226:60": [
    {
      "Bool": {
        "Other": "let Some(c) = input.chars.next()"
      }
    }
  ],
  "url/src/parser.rs:1321:24:1321:57": [
    {
      "Bool": {
        "Other": "self.serialization.ends_with('/')"
      }
    }
  ],
  "url/src/parser.rs:1289:28:1289:49": [
    {
      "Bool": {
        "Other": "scheme_type.is_file()"
      }
    }
  ],
  "url/src/parser.rs:1292:53:1292:67": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "path_start + 1",
          "lhs": "path_start",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/parser.rs:1276:34:1276:68": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.context == Context::UrlParser",
          "lhs": "self.context",
          "rhs": "Context::UrlParser",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:1238:23:1238:24": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:1238:23:1238:24",
        "match_str": "c",
        "match_kind": "Other",
        "arms": {
          "url/src/parser.rs:1276:21:1276:24": {
            "pat": {
              "pat_str": "'?'",
              "kind": {
                "Other": 63
              }
            },
            "guard": {
              "url/src/parser.rs:1276:34:1276:68": [
                {
                  "Bool": {
                    "Binary": {
                      "kind": "Eq",
                      "expr": "self.context == Context::UrlParser",
                      "lhs": "self.context",
                      "rhs": "Context::UrlParser",
                      "cmp_with_int": false
                    }
                  }
                }
              ]
            },
            "body_source": "url/src/parser.rs:1276:72:1286:22"
          },
          "url/src/parser.rs:78:9:78:13": {
            "pat": {
              "pat_str": "'\\t'",
              "kind": {
                "Other": 9
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1239:57:1248:22"
          },
          "url/src/parser.rs:78:16:78:20": {
            "pat": {
              "pat_str": "'\\n'",
              "kind": {
                "Other": 10
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1239:57:1248:22"
          },
          "url/src/parser.rs:1249:21:1249:24": {
            "pat": {
              "pat_str": "'/'",
              "kind": {
                "Other": 47
              }
            },
            "guard": {
              "url/src/parser.rs:1249:28:1249:70": [
                {
                  "Bool": {
                    "Binary": {
                      "kind": "Ne",
                      "expr": "self.context != Context::PathSegmentSetter",
                      "lhs": "self.context",
                      "rhs": "Context::PathSegmentSetter",
                      "cmp_with_int": false
                    }
                  }
                }
              ]
            },
            "body_source": "url/src/parser.rs:1249:74:1260:22"
          },
          "url/src/parser.rs:1287:21:1287:22": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1287:26:1306:22"
          },
          "url/src/parser.rs:1276:27:1276:30": {
            "pat": {
              "pat_str": "'#'",
              "kind": {
                "Other": 35
              }
            },
            "guard": {
              "url/src/parser.rs:1276:34:1276:68": [
                {
                  "Bool": {
                    "Binary": {
                      "kind": "Eq",
                      "expr": "self.context == Context::UrlParser",
                      "lhs": "self.context",
                      "rhs": "Context::UrlParser",
                      "cmp_with_int": false
                    }
                  }
                }
              ]
            },
            "body_source": "url/src/parser.rs:1276:72:1286:22"
          },
          "url/src/parser.rs:1261:21:1261:25": {
            "pat": {
              "pat_str": "'\\\\'",
              "kind": {
                "Other": 92
              }
            },
            "guard": {
              "url/src/parser.rs:1261:29:1261:71": [
                {
                  "Bool": {
                    "Binary": {
                      "kind": "Ne",
                      "expr": "self.context != Context::PathSegmentSetter",
                      "lhs": "self.context",
                      "rhs": "Context::PathSegmentSetter",
                      "cmp_with_int": false
                    }
                  }
                }
              ],
              "url/src/parser.rs:1262:28:1262:52": [
                {
                  "Bool": {
                    "Other": "scheme_type.is_special()"
                  }
                }
              ]
            },
            "body_source": "url/src/parser.rs:1263:21:1275:22"
          },
          "url/src/parser.rs:78:23:78:27": {
            "pat": {
              "pat_str": "'\\r'",
              "kind": {
                "Other": 13
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:1239:57:1248:22"
          }
        }
      }
    }
  ],
  "url/src/parser.rs:1337:25:1337:58": [
    {
      "Bool": {
        "Other": "self.serialization.ends_with('/')"
      }
    }
  ],
  "url/src/parser.rs:1352:32:1352:47": [
    {
      "Bool": {
        "Other": "ends_with_slash"
      }
    }
  ],
  "url/src/parser.rs:1310:43:1310:58": [
    {
      "Bool": {
        "Other": "ends_with_slash"
      }
    }
  ],
  "url/src/parser.rs:1343:24:1343:45": [
    {
      "Bool": {
        "Other": "scheme_type.is_file()"
      }
    }
  ],
  "url/src/parser.rs:1329:44:1329:77": [
    {
      "Bool": {
        "Other": "self.serialization.ends_with('/')"
      }
    }
  ],
  "url/src/parser.rs:1261:29:1261:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "self.context != Context::PathSegmentSetter",
          "lhs": "self.context",
          "rhs": "Context::PathSegmentSetter",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/parser.rs:1348:28:1348:77": [
    {
      "Bool": {
        "Other": "let Some(c) = segment_before_slash.chars().next()"
      }
    }
  ],
  "url/src/parser.rs:1369:12:1369:33": [
    {
      "Bool": {
        "Other": "scheme_type.is_file()"
      }
    }
  ],
  "url/src/parser.rs:1319:65:1319:82": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "segment_start - 1",
          "lhs": "segment_start",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ]
}