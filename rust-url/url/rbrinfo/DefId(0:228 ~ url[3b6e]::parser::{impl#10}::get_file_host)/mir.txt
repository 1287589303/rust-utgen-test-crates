bb0
  0: StorageLive(_4)
    SourceInfo(url/src/parser.rs:1045:40-1045:65)
  1: StorageLive(_5)
    SourceInfo(url/src/parser.rs:1045:40-1045:65)
  2: StorageLive(_6)
    SourceInfo(url/src/parser.rs:1045:40-1045:64)
  3: StorageLive(_7)
    SourceInfo(url/src/parser.rs:1045:58-1045:63)
  4: _7 = move _1
    SourceInfo(url/src/parser.rs:1045:58-1045:63)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1045:40-1045:64)
      kind: _6 = parser::Parser::<'_>::file_host(move _7) -> [return: bb1, unwind: bb50]
  }
  preds []
  succs [bb1, bb50]

bb1
  0: StorageDead(_7)
    SourceInfo(url/src/parser.rs:1045:63-1045:64)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1045:40-1045:65)
      kind: _5 = <core::result::Result<(bool, std::string::String, parser::Input<'_>), parser::ParseError> as core::ops::Try>::branch(move _6) -> [return: bb2, unwind: bb49]
  }
  preds [bb0]
  succs [bb2, bb49]

bb2
  0: StorageDead(_6)
    SourceInfo(url/src/parser.rs:1045:64-1045:65)
  1: PlaceMention(_5)
    SourceInfo(url/src/parser.rs:1045:40-1045:65)
  2: _8 = discriminant(_5)
    SourceInfo(url/src/parser.rs:1045:40-1045:65)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1045:40-1045:65)
      kind: switchInt(move _8) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(url/src/parser.rs:1045:40-1045:65)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1045:40-1045:65)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1045:64-1045:65)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_12)
    SourceInfo(url/src/parser.rs:1045:40-1045:65)
  1: _12 = move ((_5 as Continue).0: (bool, std::string::String, parser::Input<'_>))
    SourceInfo(url/src/parser.rs:1045:40-1045:65)
  2: _4 = move _12
    SourceInfo(url/src/parser.rs:1045:40-1045:65)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1045:64-1045:65)
      kind: drop(_12) -> [return: bb8, unwind: bb48]
  }
  preds [bb2, bb4]
  succs [bb8, bb48]

bb6
  0: StorageLive(_9)
    SourceInfo(url/src/parser.rs:1045:64-1045:65)
  1: _9 = ((_5 as Break).0: core::result::Result<core::convert::Infallible, parser::ParseError>)
    SourceInfo(url/src/parser.rs:1045:64-1045:65)
  2: StorageLive(_11)
    SourceInfo(url/src/parser.rs:1045:64-1045:65)
  3: _11 = _9
    SourceInfo(url/src/parser.rs:1045:64-1045:65)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1045:40-1045:65)
      kind: _0 = <core::result::Result<(host::Host, parser::Input<'_>), parser::ParseError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, parser::ParseError>>>::from_residual(move _11) -> [return: bb7, unwind: bb48]
  }
  preds [bb4]
  succs [bb7, bb48]

bb7
  0: StorageDead(_11)
    SourceInfo(url/src/parser.rs:1045:64-1045:65)
  1: StorageDead(_9)
    SourceInfo(url/src/parser.rs:1045:64-1045:65)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1045:65-1045:66)
      kind: drop(_5) -> [return: bb38, unwind: bb50]
  }
  preds [bb6]
  succs [bb38, bb50]

bb8
  0: StorageDead(_12)
    SourceInfo(url/src/parser.rs:1045:64-1045:65)
  1: PlaceMention(_4)
    SourceInfo(url/src/parser.rs:1045:40-1045:65)
  2: StorageLive(_2)
    SourceInfo(url/src/parser.rs:1045:17-1045:25)
  3: _2 = move (_4.1: std::string::String)
    SourceInfo(url/src/parser.rs:1045:17-1045:25)
  4: StorageLive(_3)
    SourceInfo(url/src/parser.rs:1045:27-1045:36)
  5: _3 = move (_4.2: parser::Input<'_>)
    SourceInfo(url/src/parser.rs:1045:27-1045:36)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1045:65-1045:66)
      kind: drop(_4) -> [return: bb9, unwind: bb46]
  }
  preds [bb5]
  succs [bb9, bb46]

bb9
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1045:65-1045:66)
      kind: drop(_5) -> [return: bb10, unwind: bb47]
  }
  preds [bb8]
  succs [bb10, bb47]

bb10
  0: StorageDead(_5)
    SourceInfo(url/src/parser.rs:1045:65-1045:66)
  1: StorageDead(_4)
    SourceInfo(url/src/parser.rs:1045:65-1045:66)
  2: StorageLive(_13)
    SourceInfo(url/src/parser.rs:1046:13-1046:17)
  3: StorageLive(_14)
    SourceInfo(url/src/parser.rs:1046:26-1046:49)
  4: StorageLive(_15)
    SourceInfo(url/src/parser.rs:1046:26-1046:49)
  5: StorageLive(_16)
    SourceInfo(url/src/parser.rs:1046:26-1046:48)
  6: StorageLive(_17)
    SourceInfo(url/src/parser.rs:1046:38-1046:47)
  7: StorageLive(_18)
    SourceInfo(url/src/parser.rs:1046:38-1046:47)
  8: StorageLive(_19)
    SourceInfo(url/src/parser.rs:1046:38-1046:47)
  9: StorageLive(_20)
    SourceInfo(url/src/parser.rs:1046:38-1046:47)
  10: _20 = &_2
    SourceInfo(url/src/parser.rs:1046:38-1046:47)
  11: _19 = &(*_20)
    SourceInfo(url/src/parser.rs:1046:38-1046:47)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1046:38-1046:47)
      kind: _18 = <std::string::String as core::ops::Deref>::deref(move _19) -> [return: bb11, unwind: bb47]
  }
  preds [bb9]
  succs [bb11, bb47]

bb11
  0: _17 = &(*_18)
    SourceInfo(url/src/parser.rs:1046:38-1046:47)
  1: StorageDead(_19)
    SourceInfo(url/src/parser.rs:1046:46-1046:47)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1046:26-1046:48)
      kind: _16 = host::Host::parse(move _17) -> [return: bb12, unwind: bb47]
  }
  preds [bb10]
  succs [bb12, bb47]

bb12
  0: StorageDead(_17)
    SourceInfo(url/src/parser.rs:1046:47-1046:48)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1046:26-1046:49)
      kind: _15 = <core::result::Result<host::Host, parser::ParseError> as core::ops::Try>::branch(move _16) -> [return: bb13, unwind: bb45]
  }
  preds [bb11]
  succs [bb13, bb45]

bb13
  0: StorageDead(_16)
    SourceInfo(url/src/parser.rs:1046:48-1046:49)
  1: PlaceMention(_15)
    SourceInfo(url/src/parser.rs:1046:26-1046:49)
  2: _21 = discriminant(_15)
    SourceInfo(url/src/parser.rs:1046:26-1046:49)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1046:26-1046:49)
      kind: switchInt(move _21) -> [0: bb16, 1: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15, bb16]

bb14
  0: FakeRead(ForMatchedPlace(None), _15)
    SourceInfo(url/src/parser.rs:1046:26-1046:49)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1046:26-1046:49)
      kind: unreachable
  }
  preds [bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1046:48-1046:49)
      kind: falseEdge -> [real: bb17, imaginary: bb16]
  }
  preds [bb13]
  succs [bb16, bb17]

bb16
  0: StorageLive(_25)
    SourceInfo(url/src/parser.rs:1046:26-1046:49)
  1: _25 = move ((_15 as Continue).0: host::Host)
    SourceInfo(url/src/parser.rs:1046:26-1046:49)
  2: _14 = move _25
    SourceInfo(url/src/parser.rs:1046:26-1046:49)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1046:48-1046:49)
      kind: drop(_25) -> [return: bb19, unwind: bb44]
  }
  preds [bb13, bb15]
  succs [bb19, bb44]

bb17
  0: StorageLive(_22)
    SourceInfo(url/src/parser.rs:1046:48-1046:49)
  1: _22 = ((_15 as Break).0: core::result::Result<core::convert::Infallible, parser::ParseError>)
    SourceInfo(url/src/parser.rs:1046:48-1046:49)
  2: StorageLive(_24)
    SourceInfo(url/src/parser.rs:1046:48-1046:49)
  3: _24 = _22
    SourceInfo(url/src/parser.rs:1046:48-1046:49)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1046:26-1046:49)
      kind: _0 = <core::result::Result<(host::Host, parser::Input<'_>), parser::ParseError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, parser::ParseError>>>::from_residual(move _24) -> [return: bb18, unwind: bb44]
  }
  preds [bb15]
  succs [bb18, bb44]

bb18
  0: StorageDead(_24)
    SourceInfo(url/src/parser.rs:1046:48-1046:49)
  1: StorageDead(_22)
    SourceInfo(url/src/parser.rs:1046:48-1046:49)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1049:10-1049:11)
      kind: drop(_15) -> [return: bb36, unwind: bb47]
  }
  preds [bb17]
  succs [bb36, bb47]

bb19
  0: StorageDead(_25)
    SourceInfo(url/src/parser.rs:1046:48-1046:49)
  1: PlaceMention(_14)
    SourceInfo(url/src/parser.rs:1046:26-1046:49)
  2: _27 = discriminant(_14)
    SourceInfo(url/src/parser.rs:1046:26-1046:49)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1046:20-1046:49)
      kind: switchInt(move _27) -> [0: bb21, otherwise: bb20]
  }
  preds [bb16]
  succs [bb20, bb21]

bb20
  0: StorageLive(_37)
    SourceInfo(url/src/parser.rs:1048:13-1048:17)
  1: _37 = move _14
    SourceInfo(url/src/parser.rs:1048:13-1048:17)
  2: _13 = move _37
    SourceInfo(url/src/parser.rs:1048:21-1048:25)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1048:24-1048:25)
      kind: drop(_37) -> [return: bb28, unwind: bb43]
  }
  preds [bb19, bb21, bb25, bb25]
  succs [bb28, bb43]

bb21
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1047:13-1047:32)
      kind: falseEdge -> [real: bb22, imaginary: bb20]
  }
  preds [bb19]
  succs [bb20, bb22]

bb22
  0: StorageLive(_29)
    SourceInfo(url/src/parser.rs:1047:26-1047:31)
  1: StorageLive(_28)
    SourceInfo(url/src/parser.rs:1047:26-1047:31)
  2: _28 = &((_14 as Domain).0: std::string::String)
    SourceInfo(url/src/parser.rs:1047:26-1047:31)
  3: _29 = &_28
    SourceInfo(url/src/parser.rs:1047:26-1047:31)
  4: _26 = &fake shallow _14
    SourceInfo(url/src/parser.rs:1046:26-1046:49)
  5: StorageLive(_30)
    SourceInfo(url/src/parser.rs:1047:36-1047:52)
  6: StorageLive(_31)
    SourceInfo(url/src/parser.rs:1047:36-1047:37)
  7: _31 = &(*_29)
    SourceInfo(url/src/parser.rs:1047:36-1047:37)
  8: StorageLive(_32)
    SourceInfo(url/src/parser.rs:1047:41-1047:52)
  9: StorageLive(_33)
    SourceInfo(url/src/parser.rs:1047:41-1047:52)
  10: _33 = const "localhost"
    SourceInfo(url/src/parser.rs:1047:41-1047:52)
  11: _32 = &_33
    SourceInfo(url/src/parser.rs:1047:41-1047:52)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1047:36-1047:52)
      kind: _30 = <&std::string::String as core::cmp::PartialEq<&str>>::eq(move _31, move _32) -> [return: bb23, unwind: bb43]
  }
  preds [bb21]
  succs [bb23, bb43]

bb23
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1047:36-1047:52)
      kind: switchInt(move _30) -> [0: bb25, otherwise: bb24]
  }
  preds [bb22]
  succs [bb24, bb25]

bb24
  0: StorageDead(_33)
    SourceInfo(url/src/parser.rs:1047:51-1047:52)
  1: StorageDead(_32)
    SourceInfo(url/src/parser.rs:1047:51-1047:52)
  2: StorageDead(_31)
    SourceInfo(url/src/parser.rs:1047:51-1047:52)
  3: StorageDead(_30)
    SourceInfo(url/src/parser.rs:1047:51-1047:52)
  4: FakeRead(ForMatchGuard, _26)
    SourceInfo(url/src/parser.rs:1047:51-1047:52)
  5: StorageLive(_34)
    SourceInfo(url/src/parser.rs:1047:69-1047:83)
  6: StorageLive(_35)
    SourceInfo(url/src/parser.rs:1047:69-1047:71)
  7: StorageLive(_36)
    SourceInfo(url/src/parser.rs:1047:69-1047:71)
  8: _36 = const ""
    SourceInfo(url/src/parser.rs:1047:69-1047:71)
  9: _35 = &(*_36)
    SourceInfo(url/src/parser.rs:1047:69-1047:71)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1047:69-1047:83)
      kind: _34 = <str as std::string::ToString>::to_string(move _35) -> [return: bb26, unwind: bb43]
  }
  preds [bb23]
  succs [bb26, bb43]

bb25
  0: StorageDead(_33)
    SourceInfo(url/src/parser.rs:1047:51-1047:52)
  1: StorageDead(_32)
    SourceInfo(url/src/parser.rs:1047:51-1047:52)
  2: StorageDead(_31)
    SourceInfo(url/src/parser.rs:1047:51-1047:52)
  3: StorageDead(_30)
    SourceInfo(url/src/parser.rs:1047:51-1047:52)
  4: StorageDead(_28)
    SourceInfo(url/src/parser.rs:1047:83-1047:84)
  5: StorageDead(_29)
    SourceInfo(url/src/parser.rs:1047:83-1047:84)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1047:36-1047:52)
      kind: falseEdge -> [real: bb20, imaginary: bb20]
  }
  preds [bb23]
  succs [bb20, bb20]

bb26
  0: StorageDead(_35)
    SourceInfo(url/src/parser.rs:1047:82-1047:83)
  1: _13 = host::Host::Domain(move _34)
    SourceInfo(url/src/parser.rs:1047:56-1047:84)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1047:83-1047:84)
      kind: drop(_34) -> [return: bb27, unwind: bb43]
  }
  preds [bb24]
  succs [bb27, bb43]

bb27
  0: StorageDead(_34)
    SourceInfo(url/src/parser.rs:1047:83-1047:84)
  1: StorageDead(_36)
    SourceInfo(url/src/parser.rs:1047:83-1047:84)
  2: StorageDead(_28)
    SourceInfo(url/src/parser.rs:1047:83-1047:84)
  3: StorageDead(_29)
    SourceInfo(url/src/parser.rs:1047:83-1047:84)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1047:83-1047:84)
      kind: goto -> bb29
  }
  preds [bb26]
  succs [bb29]

bb28
  0: StorageDead(_37)
    SourceInfo(url/src/parser.rs:1048:24-1048:25)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1048:24-1048:25)
      kind: goto -> bb29
  }
  preds [bb20]
  succs [bb29]

bb29
  0: FakeRead(ForLet(None), _13)
    SourceInfo(url/src/parser.rs:1046:13-1046:17)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1049:10-1049:11)
      kind: drop(_14) -> [return: bb30, unwind: bb41]
  }
  preds [bb27, bb28]
  succs [bb30, bb41]

bb30
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1049:10-1049:11)
      kind: drop(_15) -> [return: bb31, unwind: bb42]
  }
  preds [bb29]
  succs [bb31, bb42]

bb31
  0: StorageDead(_20)
    SourceInfo(url/src/parser.rs:1049:10-1049:11)
  1: StorageDead(_18)
    SourceInfo(url/src/parser.rs:1049:10-1049:11)
  2: StorageDead(_15)
    SourceInfo(url/src/parser.rs:1049:10-1049:11)
  3: StorageDead(_14)
    SourceInfo(url/src/parser.rs:1049:10-1049:11)
  4: StorageLive(_38)
    SourceInfo(url/src/parser.rs:1050:12-1050:29)
  5: StorageLive(_39)
    SourceInfo(url/src/parser.rs:1050:13-1050:17)
  6: _39 = move _13
    SourceInfo(url/src/parser.rs:1050:13-1050:17)
  7: StorageLive(_40)
    SourceInfo(url/src/parser.rs:1050:19-1050:28)
  8: _40 = move _3
    SourceInfo(url/src/parser.rs:1050:19-1050:28)
  9: _38 = (move _39, move _40)
    SourceInfo(url/src/parser.rs:1050:12-1050:29)
  10: StorageDead(_40)
    SourceInfo(url/src/parser.rs:1050:28-1050:29)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1050:28-1050:29)
      kind: drop(_39) -> [return: bb32, unwind: bb40]
  }
  preds [bb30]
  succs [bb32, bb40]

bb32
  0: StorageDead(_39)
    SourceInfo(url/src/parser.rs:1050:28-1050:29)
  1: _0 = core::result::Result::<(host::Host, parser::Input<'_>), parser::ParseError>::Ok(move _38)
    SourceInfo(url/src/parser.rs:1050:9-1050:30)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1050:29-1050:30)
      kind: drop(_38) -> [return: bb33, unwind: bb42]
  }
  preds [bb31]
  succs [bb33, bb42]

bb33
  0: StorageDead(_38)
    SourceInfo(url/src/parser.rs:1050:29-1050:30)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1051:5-1051:6)
      kind: drop(_13) -> [return: bb34, unwind: bb47]
  }
  preds [bb32]
  succs [bb34, bb47]

bb34
  0: StorageDead(_13)
    SourceInfo(url/src/parser.rs:1051:5-1051:6)
  1: StorageDead(_3)
    SourceInfo(url/src/parser.rs:1051:5-1051:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1051:5-1051:6)
      kind: drop(_2) -> [return: bb35, unwind: bb50]
  }
  preds [bb33]
  succs [bb35, bb50]

bb35
  0: StorageDead(_2)
    SourceInfo(url/src/parser.rs:1051:5-1051:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1051:6-1051:6)
      kind: goto -> bb39
  }
  preds [bb34]
  succs [bb39]

bb36
  0: StorageDead(_20)
    SourceInfo(url/src/parser.rs:1049:10-1049:11)
  1: StorageDead(_18)
    SourceInfo(url/src/parser.rs:1049:10-1049:11)
  2: StorageDead(_15)
    SourceInfo(url/src/parser.rs:1049:10-1049:11)
  3: StorageDead(_14)
    SourceInfo(url/src/parser.rs:1049:10-1049:11)
  4: StorageDead(_13)
    SourceInfo(url/src/parser.rs:1051:5-1051:6)
  5: StorageDead(_3)
    SourceInfo(url/src/parser.rs:1051:5-1051:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1051:5-1051:6)
      kind: drop(_2) -> [return: bb37, unwind: bb50]
  }
  preds [bb18]
  succs [bb37, bb50]

bb37
  0: StorageDead(_2)
    SourceInfo(url/src/parser.rs:1051:5-1051:6)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb39
  }
  preds [bb36]
  succs [bb39]

bb38
  0: StorageDead(_5)
    SourceInfo(url/src/parser.rs:1045:65-1045:66)
  1: StorageDead(_4)
    SourceInfo(url/src/parser.rs:1045:65-1045:66)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb39
  }
  preds [bb7]
  succs [bb39]

bb39
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1051:6-1051:6)
      kind: return
  }
  preds [bb35, bb37, bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1050:29-1050:30)
      kind: drop(_38) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb31]
  succs [bb42]

bb41
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1049:10-1049:11)
      kind: drop(_15) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb29]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1051:5-1051:6)
      kind: drop(_13) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb30, bb32, bb40, bb41]
  succs [bb47]

bb43
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1049:10-1049:11)
      kind: drop(_14) -> [return: bb44, unwind terminate(cleanup)]
  }
  preds [bb20, bb22, bb24, bb26]
  succs [bb44]

bb44
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1049:10-1049:11)
      kind: drop(_15) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb16, bb17, bb43]
  succs [bb47]

bb45
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1046:48-1046:49)
      kind: drop(_16) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb47]

bb46
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1045:65-1045:66)
      kind: drop(_5) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1051:5-1051:6)
      kind: drop(_2) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb9, bb10, bb11, bb18, bb33, bb42, bb44, bb45, bb46]
  succs [bb50]

bb48
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1045:65-1045:66)
      kind: drop(_5) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb5, bb6]
  succs [bb50]

bb49
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1045:64-1045:65)
      kind: drop(_6) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb50]

bb50
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:1044:5-1051:6)
      kind: resume
  }
  preds [bb0, bb7, bb34, bb36, bb47, bb48, bb49]
  succs []

