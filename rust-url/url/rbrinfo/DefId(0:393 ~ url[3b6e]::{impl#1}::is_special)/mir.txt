bb0
  0: StorageLive(_2)
    SourceInfo(url/src/lib.rs:918:13-918:24)
  1: StorageLive(_3)
    SourceInfo(url/src/lib.rs:918:44-918:57)
  2: StorageLive(_4)
    SourceInfo(url/src/lib.rs:918:44-918:48)
  3: _4 = &(*_1)
    SourceInfo(url/src/lib.rs:918:44-918:48)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:918:44-918:57)
      kind: _3 = Url::scheme(move _4) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_4)
    SourceInfo(url/src/lib.rs:918:56-918:57)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:918:27-918:58)
      kind: _2 = <parser::SchemeType as core::convert::From<&str>>::from(move _3) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_3)
    SourceInfo(url/src/lib.rs:918:57-918:58)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(url/src/lib.rs:918:13-918:24)
  2: StorageLive(_5)
    SourceInfo(url/src/lib.rs:919:9-919:20)
  3: _5 = &_2
    SourceInfo(url/src/lib.rs:919:9-919:20)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:919:9-919:33)
      kind: _0 = parser::SchemeType::is_special(move _5) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_5)
    SourceInfo(url/src/lib.rs:919:32-919:33)
  1: StorageDead(_2)
    SourceInfo(url/src/lib.rs:920:5-920:6)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:920:6-920:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:917:5-920:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

