bb0
  0: PlaceMention((*_1))
    SourceInfo(url/src/host.rs:153:15-153:20)
  1: _3 = discriminant((*_1))
    SourceInfo(url/src/host.rs:153:15-153:20)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:153:9-153:20)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, 2: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(url/src/host.rs:153:15-153:20)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:153:15-153:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(url/src/host.rs:154:13-154:37)
      kind: falseEdge -> [real: bb5, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb5]

bb3
  Terminator {
      source_info: SourceInfo(url/src/host.rs:155:13-155:33)
      kind: falseEdge -> [real: bb8, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb8]

bb4
  0: StorageLive(_12)
    SourceInfo(url/src/host.rs:156:24-156:32)
  1: _12 = &(((*_1) as Ipv6).0: core::net::Ipv6Addr)
    SourceInfo(url/src/host.rs:156:24-156:32)
  2: StorageLive(_13)
    SourceInfo(url/src/host.rs:157:17-157:34)
  3: StorageLive(_14)
    SourceInfo(url/src/host.rs:157:17-157:34)
  4: StorageLive(_15)
    SourceInfo(url/src/host.rs:157:17-157:33)
  5: StorageLive(_16)
    SourceInfo(url/src/host.rs:157:17-157:18)
  6: _16 = &mut (*_2)
    SourceInfo(url/src/host.rs:157:17-157:18)
  7: StorageLive(_17)
    SourceInfo(url/src/host.rs:157:29-157:32)
  8: StorageLive(_18)
    SourceInfo(url/src/host.rs:157:29-157:32)
  9: _18 = const "["
    SourceInfo(url/src/host.rs:157:29-157:32)
  10: _17 = &(*_18)
    SourceInfo(url/src/host.rs:157:29-157:32)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:157:17-157:33)
      kind: _15 = core::fmt::Formatter::<'_>::write_str(move _16, move _17) -> [return: bb10, unwind: bb27]
  }
  preds [bb0, bb3]
  succs [bb10, bb27]

bb5
  0: StorageLive(_4)
    SourceInfo(url/src/host.rs:154:26-154:36)
  1: _4 = &(((*_1) as Domain).0: S)
    SourceInfo(url/src/host.rs:154:26-154:36)
  2: StorageLive(_5)
    SourceInfo(url/src/host.rs:154:41-154:56)
  3: StorageLive(_6)
    SourceInfo(url/src/host.rs:154:41-154:56)
  4: StorageLive(_7)
    SourceInfo(url/src/host.rs:154:41-154:47)
  5: _7 = &(*_4)
    SourceInfo(url/src/host.rs:154:41-154:47)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:154:41-154:56)
      kind: _6 = <S as core::convert::AsRef<str>>::as_ref(move _7) -> [return: bb6, unwind: bb27]
  }
  preds [bb2]
  succs [bb6, bb27]

bb6
  0: _5 = &(*_6)
    SourceInfo(url/src/host.rs:154:41-154:56)
  1: StorageDead(_7)
    SourceInfo(url/src/host.rs:154:55-154:56)
  2: StorageLive(_8)
    SourceInfo(url/src/host.rs:154:61-154:62)
  3: _8 = &mut (*_2)
    SourceInfo(url/src/host.rs:154:61-154:62)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:154:41-154:63)
      kind: _0 = <str as core::fmt::Display>::fmt(move _5, move _8) -> [return: bb7, unwind: bb27]
  }
  preds [bb5]
  succs [bb7, bb27]

bb7
  0: StorageDead(_8)
    SourceInfo(url/src/host.rs:154:62-154:63)
  1: StorageDead(_5)
    SourceInfo(url/src/host.rs:154:62-154:63)
  2: StorageDead(_6)
    SourceInfo(url/src/host.rs:154:62-154:63)
  3: StorageDead(_4)
    SourceInfo(url/src/host.rs:154:62-154:63)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:154:62-154:63)
      kind: goto -> bb26
  }
  preds [bb6]
  succs [bb26]

bb8
  0: StorageLive(_9)
    SourceInfo(url/src/host.rs:155:24-155:32)
  1: _9 = &(((*_1) as Ipv4).0: core::net::Ipv4Addr)
    SourceInfo(url/src/host.rs:155:24-155:32)
  2: StorageLive(_10)
    SourceInfo(url/src/host.rs:155:37-155:41)
  3: _10 = &(*_9)
    SourceInfo(url/src/host.rs:155:37-155:41)
  4: StorageLive(_11)
    SourceInfo(url/src/host.rs:155:46-155:47)
  5: _11 = &mut (*_2)
    SourceInfo(url/src/host.rs:155:46-155:47)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:155:37-155:48)
      kind: _0 = <core::net::Ipv4Addr as core::fmt::Display>::fmt(move _10, move _11) -> [return: bb9, unwind: bb27]
  }
  preds [bb3]
  succs [bb9, bb27]

bb9
  0: StorageDead(_11)
    SourceInfo(url/src/host.rs:155:47-155:48)
  1: StorageDead(_10)
    SourceInfo(url/src/host.rs:155:47-155:48)
  2: StorageDead(_9)
    SourceInfo(url/src/host.rs:155:47-155:48)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:155:47-155:48)
      kind: goto -> bb26
  }
  preds [bb8]
  succs [bb26]

bb10
  0: StorageDead(_17)
    SourceInfo(url/src/host.rs:157:32-157:33)
  1: StorageDead(_16)
    SourceInfo(url/src/host.rs:157:32-157:33)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:157:17-157:34)
      kind: _14 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _15) -> [return: bb11, unwind: bb27]
  }
  preds [bb4]
  succs [bb11, bb27]

bb11
  0: StorageDead(_15)
    SourceInfo(url/src/host.rs:157:33-157:34)
  1: PlaceMention(_14)
    SourceInfo(url/src/host.rs:157:17-157:34)
  2: _19 = discriminant(_14)
    SourceInfo(url/src/host.rs:157:17-157:34)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:157:17-157:34)
      kind: switchInt(move _19) -> [0: bb14, 1: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(url/src/host.rs:157:17-157:34)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:157:17-157:34)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(url/src/host.rs:157:33-157:34)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_23)
    SourceInfo(url/src/host.rs:157:17-157:34)
  1: _23 = ((_14 as Continue).0: ())
    SourceInfo(url/src/host.rs:157:17-157:34)
  2: _13 = _23
    SourceInfo(url/src/host.rs:157:17-157:34)
  3: StorageDead(_23)
    SourceInfo(url/src/host.rs:157:33-157:34)
  4: StorageDead(_18)
    SourceInfo(url/src/host.rs:157:34-157:35)
  5: StorageDead(_14)
    SourceInfo(url/src/host.rs:157:34-157:35)
  6: StorageDead(_13)
    SourceInfo(url/src/host.rs:157:34-157:35)
  7: StorageLive(_24)
    SourceInfo(url/src/host.rs:158:17-158:37)
  8: StorageLive(_25)
    SourceInfo(url/src/host.rs:158:17-158:37)
  9: StorageLive(_26)
    SourceInfo(url/src/host.rs:158:17-158:36)
  10: StorageLive(_27)
    SourceInfo(url/src/host.rs:158:28-158:32)
  11: _27 = &(*_12)
    SourceInfo(url/src/host.rs:158:28-158:32)
  12: StorageLive(_28)
    SourceInfo(url/src/host.rs:158:34-158:35)
  13: _28 = &mut (*_2)
    SourceInfo(url/src/host.rs:158:34-158:35)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:158:17-158:36)
      kind: _26 = host::write_ipv6(move _27, move _28) -> [return: bb17, unwind: bb27]
  }
  preds [bb11, bb13]
  succs [bb17, bb27]

bb15
  0: StorageLive(_20)
    SourceInfo(url/src/host.rs:157:33-157:34)
  1: _20 = ((_14 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>)
    SourceInfo(url/src/host.rs:157:33-157:34)
  2: StorageLive(_22)
    SourceInfo(url/src/host.rs:157:33-157:34)
  3: _22 = _20
    SourceInfo(url/src/host.rs:157:33-157:34)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:157:17-157:34)
      kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _22) -> [return: bb16, unwind: bb27]
  }
  preds [bb13]
  succs [bb16, bb27]

bb16
  0: StorageDead(_22)
    SourceInfo(url/src/host.rs:157:33-157:34)
  1: StorageDead(_20)
    SourceInfo(url/src/host.rs:157:33-157:34)
  2: StorageDead(_18)
    SourceInfo(url/src/host.rs:157:34-157:35)
  3: StorageDead(_14)
    SourceInfo(url/src/host.rs:157:34-157:35)
  4: StorageDead(_13)
    SourceInfo(url/src/host.rs:157:34-157:35)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb15]
  succs [bb25]

bb17
  0: StorageDead(_28)
    SourceInfo(url/src/host.rs:158:35-158:36)
  1: StorageDead(_27)
    SourceInfo(url/src/host.rs:158:35-158:36)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:158:17-158:37)
      kind: _25 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _26) -> [return: bb18, unwind: bb27]
  }
  preds [bb14]
  succs [bb18, bb27]

bb18
  0: StorageDead(_26)
    SourceInfo(url/src/host.rs:158:36-158:37)
  1: PlaceMention(_25)
    SourceInfo(url/src/host.rs:158:17-158:37)
  2: _29 = discriminant(_25)
    SourceInfo(url/src/host.rs:158:17-158:37)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:158:17-158:37)
      kind: switchInt(move _29) -> [0: bb21, 1: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20, bb21]

bb19
  0: FakeRead(ForMatchedPlace(None), _25)
    SourceInfo(url/src/host.rs:158:17-158:37)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:158:17-158:37)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(url/src/host.rs:158:36-158:37)
      kind: falseEdge -> [real: bb22, imaginary: bb21]
  }
  preds [bb18]
  succs [bb21, bb22]

bb21
  0: StorageLive(_33)
    SourceInfo(url/src/host.rs:158:17-158:37)
  1: _33 = ((_25 as Continue).0: ())
    SourceInfo(url/src/host.rs:158:17-158:37)
  2: _24 = _33
    SourceInfo(url/src/host.rs:158:17-158:37)
  3: StorageDead(_33)
    SourceInfo(url/src/host.rs:158:36-158:37)
  4: StorageDead(_25)
    SourceInfo(url/src/host.rs:158:37-158:38)
  5: StorageDead(_24)
    SourceInfo(url/src/host.rs:158:37-158:38)
  6: StorageLive(_34)
    SourceInfo(url/src/host.rs:159:17-159:18)
  7: _34 = &mut (*_2)
    SourceInfo(url/src/host.rs:159:17-159:18)
  8: StorageLive(_35)
    SourceInfo(url/src/host.rs:159:29-159:32)
  9: StorageLive(_36)
    SourceInfo(url/src/host.rs:159:29-159:32)
  10: _36 = const "]"
    SourceInfo(url/src/host.rs:159:29-159:32)
  11: _35 = &(*_36)
    SourceInfo(url/src/host.rs:159:29-159:32)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:159:17-159:33)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _34, move _35) -> [return: bb24, unwind: bb27]
  }
  preds [bb18, bb20]
  succs [bb24, bb27]

bb22
  0: StorageLive(_30)
    SourceInfo(url/src/host.rs:158:36-158:37)
  1: _30 = ((_25 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>)
    SourceInfo(url/src/host.rs:158:36-158:37)
  2: StorageLive(_32)
    SourceInfo(url/src/host.rs:158:36-158:37)
  3: _32 = _30
    SourceInfo(url/src/host.rs:158:36-158:37)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:158:17-158:37)
      kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _32) -> [return: bb23, unwind: bb27]
  }
  preds [bb20]
  succs [bb23, bb27]

bb23
  0: StorageDead(_32)
    SourceInfo(url/src/host.rs:158:36-158:37)
  1: StorageDead(_30)
    SourceInfo(url/src/host.rs:158:36-158:37)
  2: StorageDead(_25)
    SourceInfo(url/src/host.rs:158:37-158:38)
  3: StorageDead(_24)
    SourceInfo(url/src/host.rs:158:37-158:38)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb22]
  succs [bb25]

bb24
  0: StorageDead(_35)
    SourceInfo(url/src/host.rs:159:32-159:33)
  1: StorageDead(_34)
    SourceInfo(url/src/host.rs:159:32-159:33)
  2: StorageDead(_36)
    SourceInfo(url/src/host.rs:160:13-160:14)
  3: StorageDead(_12)
    SourceInfo(url/src/host.rs:160:13-160:14)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:160:13-160:14)
      kind: goto -> bb26
  }
  preds [bb21]
  succs [bb26]

bb25
  0: StorageDead(_12)
    SourceInfo(url/src/host.rs:160:13-160:14)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:162:6-162:6)
      kind: goto -> bb26
  }
  preds [bb16, bb23]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(url/src/host.rs:162:6-162:6)
      kind: return
  }
  preds [bb7, bb9, bb24, bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(url/src/host.rs:152:5-162:6)
      kind: resume
  }
  preds [bb4, bb5, bb6, bb8, bb10, bb14, bb15, bb17, bb21, bb22]
  succs []

