{
  "url/src/quirks.rs:224:25:224:64": [
    {
      "Bool": {
        "Other": "url.password().unwrap_or(\"\").is_empty()"
      }
    }
  ],
  "url/src/quirks.rs:221:24:221:44": [
    {
      "Bool": {
        "Other": "port(url).is_empty()"
      }
    }
  ],
  "url/src/quirks.rs:216:12:216:39": [
    {
      "Bool": {
        "Other": "let Host::Domain(h) = &host"
      }
    }
  ],
  "url/src/quirks.rs:204:8:204:30": [
    {
      "Bool": {
        "Other": "url.cannot_be_a_base()"
      }
    }
  ],
  "url/src/quirks.rs:219:20:219:80": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "SchemeType::from(url.scheme()) == SchemeType::SpecialNotFile",
          "lhs": "SchemeType::from(url.scheme())",
          "rhs": "SchemeType::SpecialNotFile",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/quirks.rs:215:8:215:75": [
    {
      "Bool": {
        "Other": "let Ok((host, _remaining)) = Parser::parse_host(input, scheme_type)"
      }
    }
  ],
  "url/src/quirks.rs:217:16:217:28": [
    {
      "Bool": {
        "Other": "h.is_empty()"
      }
    }
  ],
  "url/src/quirks.rs:210:43:210:66": [
    {
      "Bool": {
        "Other": "new_hostname.is_empty()"
      }
    }
  ],
  "url/src/quirks.rs:223:25:223:50": [
    {
      "Bool": {
        "Other": "url.username().is_empty()"
      }
    }
  ],
  "url/src/quirks.rs:210:8:210:39": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "scheme_type == SchemeType::File",
          "lhs": "scheme_type",
          "rhs": "SchemeType::File",
          "cmp_with_int": false
        }
      }
    }
  ]
}