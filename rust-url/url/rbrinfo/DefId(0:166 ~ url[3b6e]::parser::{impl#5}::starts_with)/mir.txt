bb0
  0: StorageLive(_3)
    SourceInfo(url/src/parser.rs:250:9-250:10)
  1: _3 = move _2
    SourceInfo(url/src/parser.rs:250:9-250:10)
  2: StorageLive(_4)
    SourceInfo(url/src/parser.rs:250:24-250:41)
  3: StorageLive(_5)
    SourceInfo(url/src/parser.rs:250:24-250:41)
  4: StorageLive(_6)
    SourceInfo(url/src/parser.rs:250:29-250:41)
  5: StorageLive(_7)
    SourceInfo(url/src/parser.rs:250:29-250:33)
  6: _7 = &(*_1)
    SourceInfo(url/src/parser.rs:250:29-250:33)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:250:29-250:41)
      kind: _6 = <parser::Input<'_> as core::clone::Clone>::clone(move _7) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_7)
    SourceInfo(url/src/parser.rs:250:40-250:41)
  1: _5 = &mut _6
    SourceInfo(url/src/parser.rs:250:24-250:41)
  2: _4 = &mut (*_5)
    SourceInfo(url/src/parser.rs:250:24-250:41)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:250:9-250:42)
      kind: _0 = <P as parser::Pattern>::split_prefix(move _3, move _4) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_4)
    SourceInfo(url/src/parser.rs:250:41-250:42)
  1: StorageDead(_3)
    SourceInfo(url/src/parser.rs:250:41-250:42)
  2: StorageDead(_6)
    SourceInfo(url/src/parser.rs:251:5-251:6)
  3: StorageDead(_5)
    SourceInfo(url/src/parser.rs:251:5-251:6)
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:251:5-251:6)
      kind: drop(_2) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:251:6-251:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:250:41-250:42)
      kind: drop(_3) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0, bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:251:5-251:6)
      kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(url/src/parser.rs:249:5-251:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

