{
  "url/src/parser.rs:402:13:402:43": [
    {
      "Bool": {
        "Other": "input.starts_with(ascii_alpha)"
      }
    }
  ],
  "url/src/parser.rs:405:23:405:52": [
    {
      "Bool": {
        "Other": "self.serialization.is_empty()"
      }
    }
  ],
  "url/src/parser.rs:406:15:406:41": [
    {
      "Bool": {
        "Other": "let Some(c) = input.next()"
      }
    }
  ],
  "url/src/parser.rs:407:19:407:20": [
    {
      "Match": {
        "match_source": "url/src/parser.rs:407:19:407:20",
        "match_str": "c",
        "match_kind": "Other",
        "arms": {
          "url/src/parser.rs:410:17:410:20": {
            "pat": {
              "pat_str": "':'",
              "kind": {
                "Other": 58
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:410:24:410:40"
          },
          "url/src/parser.rs:408:41:408:44": {
            "pat": {
              "pat_str": "'+'",
              "kind": {
                "Other": 43
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:408:60:408:86"
          },
          "url/src/parser.rs:409:17:409:26": {
            "pat": {
              "pat_str": "'A'..='Z'",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:409:30:409:77"
          },
          "url/src/parser.rs:408:17:408:26": {
            "pat": {
              "pat_str": "'a'..='z'",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:408:60:408:86"
          },
          "url/src/parser.rs:408:53:408:56": {
            "pat": {
              "pat_str": "'.'",
              "kind": {
                "Other": 46
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:408:60:408:86"
          },
          "url/src/parser.rs:408:29:408:38": {
            "pat": {
              "pat_str": "'0'..='9'",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:408:60:408:86"
          },
          "url/src/parser.rs:411:17:411:18": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "url/src/parser.rs:411:22:414:18"
          },
          "url/src/parser.rs:408:47:408:50": {
            "pat": {
              "pat_str": "'-'",
              "kind": {
                "Other": 45
              }
            },
            "guard": null,
            "body_source": "url/src/parser.rs:408:60:408:86"
          }
        }
      }
    }
  ],
  "url/src/parser.rs:418:12:418:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.context == Context::Setter",
          "lhs": "self.context",
          "rhs": "Context::Setter",
          "cmp_with_int": false
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ]
}