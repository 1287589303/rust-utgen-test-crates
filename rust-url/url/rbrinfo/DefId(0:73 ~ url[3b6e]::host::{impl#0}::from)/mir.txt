bb0
  0: PlaceMention(_1)
    SourceInfo(url/src/host.rs:35:15-35:19)
  1: _3 = discriminant(_1)
    SourceInfo(url/src/host.rs:35:15-35:19)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:35:9-35:19)
      kind: switchInt(move _3) -> [0: bb2, 1: bb4, 2: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb4, bb5]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(url/src/host.rs:35:15-35:19)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:35:15-35:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(url/src/host.rs:36:13-36:32)
      kind: falseEdge -> [real: bb6, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(url/src/host.rs:37:13-37:28)
      kind: falseEdge -> [real: bb10, imaginary: bb4]
  }
  preds [bb2, bb9]
  succs [bb4, bb10]

bb4
  Terminator {
      source_info: SourceInfo(url/src/host.rs:38:13-38:32)
      kind: falseEdge -> [real: bb11, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb11]

bb5
  0: StorageLive(_10)
    SourceInfo(url/src/host.rs:39:24-39:31)
  1: _10 = ((_1 as Ipv6).0: core::net::Ipv6Addr)
    SourceInfo(url/src/host.rs:39:24-39:31)
  2: StorageLive(_11)
    SourceInfo(url/src/host.rs:39:55-39:62)
  3: _11 = _10
    SourceInfo(url/src/host.rs:39:55-39:62)
  4: _0 = host::HostInternal::Ipv6(move _11)
    SourceInfo(url/src/host.rs:39:36-39:63)
  5: StorageDead(_11)
    SourceInfo(url/src/host.rs:39:62-39:63)
  6: StorageDead(_10)
    SourceInfo(url/src/host.rs:39:62-39:63)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:39:62-39:63)
      kind: goto -> bb12
  }
  preds [bb0, bb4]
  succs [bb12]

bb6
  0: StorageLive(_5)
    SourceInfo(url/src/host.rs:36:26-36:31)
  1: StorageLive(_4)
    SourceInfo(url/src/host.rs:36:26-36:31)
  2: _4 = &((_1 as Domain).0: std::string::String)
    SourceInfo(url/src/host.rs:36:26-36:31)
  3: _5 = &_4
    SourceInfo(url/src/host.rs:36:26-36:31)
  4: _2 = &fake shallow _1
    SourceInfo(url/src/host.rs:35:15-35:19)
  5: StorageLive(_6)
    SourceInfo(url/src/host.rs:36:36-36:48)
  6: StorageLive(_7)
    SourceInfo(url/src/host.rs:36:36-36:37)
  7: _7 = &(*(*_5))
    SourceInfo(url/src/host.rs:36:36-36:37)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:36:36-36:48)
      kind: _6 = std::string::String::is_empty(move _7) -> [return: bb7, unwind: bb14]
  }
  preds [bb2]
  succs [bb7, bb14]

bb7
  Terminator {
      source_info: SourceInfo(url/src/host.rs:36:36-36:48)
      kind: switchInt(move _6) -> [0: bb9, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_7)
    SourceInfo(url/src/host.rs:36:47-36:48)
  1: StorageDead(_6)
    SourceInfo(url/src/host.rs:36:47-36:48)
  2: FakeRead(ForMatchGuard, _2)
    SourceInfo(url/src/host.rs:36:47-36:48)
  3: _0 = host::HostInternal::None
    SourceInfo(url/src/host.rs:36:52-36:70)
  4: StorageDead(_4)
    SourceInfo(url/src/host.rs:36:69-36:70)
  5: StorageDead(_5)
    SourceInfo(url/src/host.rs:36:69-36:70)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:36:69-36:70)
      kind: goto -> bb12
  }
  preds [bb7]
  succs [bb12]

bb9
  0: StorageDead(_7)
    SourceInfo(url/src/host.rs:36:47-36:48)
  1: StorageDead(_6)
    SourceInfo(url/src/host.rs:36:47-36:48)
  2: StorageDead(_4)
    SourceInfo(url/src/host.rs:36:69-36:70)
  3: StorageDead(_5)
    SourceInfo(url/src/host.rs:36:69-36:70)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:36:36-36:48)
      kind: goto -> bb3
  }
  preds [bb7]
  succs [bb3]

bb10
  0: _0 = host::HostInternal::Domain
    SourceInfo(url/src/host.rs:37:32-37:52)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:37:32-37:52)
      kind: goto -> bb12
  }
  preds [bb3]
  succs [bb12]

bb11
  0: StorageLive(_8)
    SourceInfo(url/src/host.rs:38:24-38:31)
  1: _8 = ((_1 as Ipv4).0: core::net::Ipv4Addr)
    SourceInfo(url/src/host.rs:38:24-38:31)
  2: StorageLive(_9)
    SourceInfo(url/src/host.rs:38:55-38:62)
  3: _9 = _8
    SourceInfo(url/src/host.rs:38:55-38:62)
  4: _0 = host::HostInternal::Ipv4(move _9)
    SourceInfo(url/src/host.rs:38:36-38:63)
  5: StorageDead(_9)
    SourceInfo(url/src/host.rs:38:62-38:63)
  6: StorageDead(_8)
    SourceInfo(url/src/host.rs:38:62-38:63)
  Terminator {
      source_info: SourceInfo(url/src/host.rs:38:62-38:63)
      kind: goto -> bb12
  }
  preds [bb4]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(url/src/host.rs:41:5-41:6)
      kind: drop(_1) -> [return: bb13, unwind: bb15]
  }
  preds [bb5, bb8, bb10, bb11]
  succs [bb13, bb15]

bb13
  Terminator {
      source_info: SourceInfo(url/src/host.rs:41:6-41:6)
      kind: return
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(url/src/host.rs:41:5-41:6)
      kind: drop(_1) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(url/src/host.rs:34:5-41:6)
      kind: resume
  }
  preds [bb12, bb14]
  succs []

