{
  "url/src/path_segments.rs:58:13:58:63": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "url.serialization.len() == url.path_start as usize",
          "lhs": "url.serialization.len()",
          "rhs": "url.path_start as usize",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/path_segments.rs:54:8:54:51": [
    {
      "Bool": {
        "Other": "SchemeType::from(url.scheme()).is_special()"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "url/src/path_segments.rs:63:28:63:63": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "url.path_start as usize + \"/\".len()",
          "lhs": "url.path_start as usize",
          "rhs": "\"/\".len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "url/src/path_segments.rs:59:20:59:55": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "url.byte_at(url.path_start) == b'/'",
          "lhs": "url.byte_at(url.path_start)",
          "rhs": "b'/'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "url/src/path_segments.rs:55:23:55:58": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "url.byte_at(url.path_start) == b'/'",
          "lhs": "url.byte_at(url.path_start)",
          "rhs": "b'/'",
          "cmp_with_int": true
        }
      }
    }
  ]
}