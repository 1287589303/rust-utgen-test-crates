bb0
  0: StorageLive(_2)
    SourceInfo(url/src/lib.rs:1709:15-1709:54)
  1: StorageLive(_3)
    SourceInfo(url/src/lib.rs:1709:16-1709:32)
  2: _3 = ((*_1).8: core::option::Option<u32>)
    SourceInfo(url/src/lib.rs:1709:16-1709:32)
  3: StorageLive(_4)
    SourceInfo(url/src/lib.rs:1709:34-1709:53)
  4: _4 = ((*_1).9: core::option::Option<u32>)
    SourceInfo(url/src/lib.rs:1709:34-1709:53)
  5: _2 = (move _3, move _4)
    SourceInfo(url/src/lib.rs:1709:15-1709:54)
  6: StorageDead(_4)
    SourceInfo(url/src/lib.rs:1709:53-1709:54)
  7: StorageDead(_3)
    SourceInfo(url/src/lib.rs:1709:53-1709:54)
  8: PlaceMention(_2)
    SourceInfo(url/src/lib.rs:1709:15-1709:54)
  9: _6 = discriminant((_2.0: core::option::Option<u32>))
    SourceInfo(url/src/lib.rs:1709:15-1709:54)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1709:9-1709:54)
      kind: switchInt(move _6) -> [0: bb3, 1: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(url/src/lib.rs:1709:15-1709:54)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1709:15-1709:54)
      kind: unreachable
  }
  preds [bb0, bb3]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1710:13-1710:25)
      kind: falseEdge -> [real: bb7, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb7]

bb3
  0: _5 = discriminant((_2.1: core::option::Option<u32>))
    SourceInfo(url/src/lib.rs:1709:15-1709:54)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1709:9-1709:54)
      kind: switchInt(move _5) -> [0: bb5, 1: bb4, otherwise: bb1]
  }
  preds [bb0, bb2]
  succs [bb1, bb4, bb5]

bb4
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1710:28-1710:43)
      kind: falseEdge -> [real: bb8, imaginary: bb5]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1715:29-1715:42)
      kind: _0 = std::string::String::new() -> [return: bb13, unwind: bb15]
  }
  preds [bb3, bb4]
  succs [bb13, bb15]

bb6
  0: StorageLive(_8)
    SourceInfo(url/src/lib.rs:1711:21-1711:31)
  1: StorageLive(_9)
    SourceInfo(url/src/lib.rs:1711:34-1711:49)
  2: StorageLive(_10)
    SourceInfo(url/src/lib.rs:1711:34-1711:49)
  3: StorageLive(_11)
    SourceInfo(url/src/lib.rs:1711:34-1711:38)
  4: _11 = &(*_1)
    SourceInfo(url/src/lib.rs:1711:34-1711:38)
  5: StorageLive(_12)
    SourceInfo(url/src/lib.rs:1711:45-1711:48)
  6: StorageLive(_13)
    SourceInfo(url/src/lib.rs:1711:45-1711:46)
  7: _13 = _7
    SourceInfo(url/src/lib.rs:1711:45-1711:46)
  8: _12 = core::ops::RangeFrom::<u32> { start: move _13 }
    SourceInfo(url/src/lib.rs:1711:45-1711:48)
  9: StorageDead(_13)
    SourceInfo(url/src/lib.rs:1711:47-1711:48)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1711:34-1711:49)
      kind: _10 = Url::slice::<core::ops::RangeFrom<u32>>(move _11, move _12) -> [return: bb9, unwind: bb15]
  }
  preds [bb7, bb8]
  succs [bb9, bb15]

bb7
  0: StorageLive(_7)
    SourceInfo(url/src/lib.rs:1710:19-1710:20)
  1: _7 = (((_2.0: core::option::Option<u32>) as Some).0: u32)
    SourceInfo(url/src/lib.rs:1710:19-1710:20)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1709:9-1716:10)
      kind: goto -> bb6
  }
  preds [bb2]
  succs [bb6]

bb8
  0: StorageLive(_7)
    SourceInfo(url/src/lib.rs:1710:40-1710:41)
  1: _7 = (((_2.1: core::option::Option<u32>) as Some).0: u32)
    SourceInfo(url/src/lib.rs:1710:40-1710:41)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1709:9-1716:10)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb9
  0: _9 = &(*_10)
    SourceInfo(url/src/lib.rs:1711:34-1711:49)
  1: StorageDead(_12)
    SourceInfo(url/src/lib.rs:1711:48-1711:49)
  2: StorageDead(_11)
    SourceInfo(url/src/lib.rs:1711:48-1711:49)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1711:34-1711:60)
      kind: _8 = <str as std::borrow::ToOwned>::to_owned(move _9) -> [return: bb10, unwind: bb15]
  }
  preds [bb6]
  succs [bb10, bb15]

bb10
  0: StorageDead(_9)
    SourceInfo(url/src/lib.rs:1711:59-1711:60)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(url/src/lib.rs:1711:21-1711:31)
  2: StorageDead(_10)
    SourceInfo(url/src/lib.rs:1711:60-1711:61)
  3: StorageLive(_14)
    SourceInfo(url/src/lib.rs:1712:17-1712:56)
  4: StorageLive(_15)
    SourceInfo(url/src/lib.rs:1712:17-1712:35)
  5: _15 = &mut ((*_1).0: std::string::String)
    SourceInfo(url/src/lib.rs:1712:17-1712:35)
  6: StorageLive(_16)
    SourceInfo(url/src/lib.rs:1712:45-1712:55)
  7: StorageLive(_17)
    SourceInfo(url/src/lib.rs:1712:45-1712:46)
  8: _17 = _7
    SourceInfo(url/src/lib.rs:1712:45-1712:46)
  9: _16 = move _17 as usize (IntToInt)
    SourceInfo(url/src/lib.rs:1712:45-1712:55)
  10: StorageDead(_17)
    SourceInfo(url/src/lib.rs:1712:54-1712:55)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1712:17-1712:56)
      kind: _14 = std::string::String::truncate(move _15, move _16) -> [return: bb11, unwind: bb14]
  }
  preds [bb9]
  succs [bb11, bb14]

bb11
  0: StorageDead(_16)
    SourceInfo(url/src/lib.rs:1712:55-1712:56)
  1: StorageDead(_15)
    SourceInfo(url/src/lib.rs:1712:55-1712:56)
  2: StorageDead(_14)
    SourceInfo(url/src/lib.rs:1712:56-1712:57)
  3: _0 = move _8
    SourceInfo(url/src/lib.rs:1713:17-1713:27)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1714:13-1714:14)
      kind: drop(_8) -> [return: bb12, unwind: bb15]
  }
  preds [bb10]
  succs [bb12, bb15]

bb12
  0: StorageDead(_8)
    SourceInfo(url/src/lib.rs:1714:13-1714:14)
  1: StorageDead(_7)
    SourceInfo(url/src/lib.rs:1714:13-1714:14)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1714:13-1714:14)
      kind: goto -> bb13
  }
  preds [bb11]
  succs [bb13]

bb13
  0: StorageDead(_2)
    SourceInfo(url/src/lib.rs:1717:5-1717:6)
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1717:6-1717:6)
      kind: return
  }
  preds [bb5, bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1714:13-1714:14)
      kind: drop(_8) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb10]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(url/src/lib.rs:1708:5-1717:6)
      kind: resume
  }
  preds [bb5, bb6, bb9, bb11, bb14]
  succs []

