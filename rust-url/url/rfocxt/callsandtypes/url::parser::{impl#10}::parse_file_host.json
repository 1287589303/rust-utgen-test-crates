{"mod_name":"parser","calls":["parser::Parser::<'_>::file_host","<host::Host as core::convert::Into<host::HostInternal>>::into","core::fmt::rt::Argument::<'_>::new_display::<host::Host>","std::string::String::is_empty","<std::string::String as core::ops::Deref>::deref","core::result::Result::<","<&std::string::String as core::cmp::PartialEq<&str>>::eq","host::Host::parse","<std::string::String as core::fmt::Write>::write_fmt","<core::result::Result<host::Host, parser::ParseError> as core::ops::Try>::branch","<core::result::Result<","core::fmt::Arguments::<'_>::new_v1::<1, 1>"],"types":["host::Host","core::fmt::rt::Argument<'_>","str","!","isize","std::string::String","parser::ParseError","core::result::Result<(bool, host::HostInternal, parser::Input<'_>), parser::ParseError>","core::fmt::Error","[&str; 1]","core::result::Result<(), core::fmt::Error>","parser::Parser<'_>","core::result::Result<host::Host, parser::ParseError>","core::result::Result<(bool, std::string::String, parser::Input<'_>), parser::ParseError>","parser::Input<'_>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, parser::ParseError>, (bool, std::string::String, parser::Input<'_>)>","bool","[core::fmt::rt::Argument<'_>; 1]","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, parser::ParseError>, host::Host>","core::fmt::Arguments<'_>","(bool, std::string::String, parser::Input<'_>)","()","core::convert::Infallible","host::HostInternal","core::result::Result<core::convert::Infallible, parser::ParseError>","(bool, host::HostInternal, parser::Input<'_>)"]}