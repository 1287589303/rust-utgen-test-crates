{"mod_name":"parser","calls":["parser::Parser::<'_>::shorten_path","core::str::<impl str>::trim_start_matches::<'_, char>","parser::Parser::<'_>::check_url_code_point","core::str::<impl str>::len","std::string::String::push","parser::SchemeType::is_special","core::str::<impl str>::chars","std::string::String::truncate","parser::SchemeType::is_file","<parser::Input<'_> as core::clone::Clone>::clone","core::str::Chars::<'_>::as_str","parser::is_normalized_windows_drive_letter","std::string::String::split_off","parser::Parser::<'_>::last_slash_can_be_removed","<str as core::cmp::PartialEq>::eq","std::string::String::as_bytes","<core::str::Chars<'_> as core::iter::Iterator>::next","parser::Parser::<'_>::log_violation","<std::string::String as core::ops::Index<core::ops::Range<usize>>>::index","parser::is_windows_drive_letter","core::panicking::panic","<std::string::String as core::ops::Deref>::deref","parser::Parser::<'a>::parse_path::push_pending","<parser::Context as core::cmp::PartialEq>::eq","std::string::String::len","<parser::Context as core::cmp::PartialEq>::ne","<std::string::String as core::ops::Index<core::ops::RangeFrom<usize>>>::index","std::string::String::push_str","std::string::String::pop","core::str::<impl str>::ends_with::<'_, char>"],"types":["parser::Parser<'_>","parser::Input<'_>","parser::SchemeType","std::string::String","u8","core::ops::RangeFrom<usize>","()","core::option::Option<char>","core::ops::Range<usize>","(usize, bool)","isize","core::str::Chars<'_>","usize","bool","parser::Context","char","str","[u8]","!","parser::SyntaxViolation"]}