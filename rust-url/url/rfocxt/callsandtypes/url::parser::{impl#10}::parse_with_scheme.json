{"mod_name":"parser","calls":["parser::Input::<'_>::count_matching::<{closure@url/src/parser.rs:446:71: 446:74}>","<parser::SchemeType as core::convert::From<&std::string::String>>::from","Url::scheme","parser::to_u32","<core::result::Result<u32, parser::ParseError> as core::ops::Try>::branch","parser::Parser::<'_>::log_violation_if::<{closure@url/src/parser.rs:433:64: 433:66}>","core::option::Option::<&Url>::and_then::<&Url, {closure@url/src/parser.rs:434:60: 434:66}>","Url::cannot_be_a_base","parser::Parser::<'_>::parse_non_special","core::panicking::panic","parser::Parser::<'_>::log_violation_if::<{closure@url/src/parser.rs:458:60: 458:62}>","<&str as core::cmp::PartialEq>::eq","std::string::String::len","<core::result::Result<Url, parser::ParseError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, parser::ParseError>>>::from_residual","std::string::String::push","std::string::String::clear","parser::Parser::<'_>::parse_file","parser::Parser::<'_>::after_double_slash","parser::Parser::<'_>::parse_relative","<std::string::String as core::ops::Index<core::ops::RangeTo<usize>>>::index"],"types":["str","!","{closure@url/src/parser.rs:433:64: 433:66}","char","core::result::Result<u32, parser::ParseError>","core::convert::Infallible","usize","std::string::String","{closure@url/src/parser.rs:458:60: 458:62}","u32","{closure@url/src/parser.rs:434:60: 434:66}","core::result::Result<core::convert::Infallible, parser::ParseError>","isize","()","{closure@url/src/parser.rs:446:71: 446:74}","core::option::Option<&Url>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, parser::ParseError>, u32>","bool","parser::SyntaxViolation","parser::ParseError","parser::Parser<'_>","core::result::Result<Url, parser::ParseError>","core::ops::RangeTo<usize>","parser::Input<'_>","parser::SchemeType","Url","(u32, parser::Input<'_>)"]}