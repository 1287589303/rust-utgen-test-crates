{"mod_name":"","calls":["alloc::alloc::exchange_malloc","<std::vec::IntoIter<core::net::SocketAddr> as core::iter::Iterator>::collect::<std::vec::Vec<core::net::SocketAddr>>","Url::host","Url::socket_addrs::io_result::<u16>","core::option::Option::<u16>::or_else::<impl Fn","<","<core::result::Result<u16, std::io::Error> as core::ops::Try>::branch","<core::result::Result<std::vec::IntoIter<core::net::SocketAddr>, std::io::Error> as core::ops::Try>::branch","Url::port_or_known_default","Url::socket_addrs::io_result::<host::Host<&str>>","std::slice::<impl [core::net::SocketAddr]>::into_vec::<std::alloc::Global>","<core::result::Result<host::Host<&str>, std::io::Error> as core::ops::Try>::branch","<core::result::Result<std::vec::Vec<core::net::SocketAddr>, std::io::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, std::io::Error>>>::from_residual"],"types":["std::vec::IntoIter<core::net::SocketAddr>","u16","(core::net::Ipv4Addr, u16)","core::net::SocketAddr","u8","[core::net::SocketAddr; 1]","Url","core::result::Result<core::convert::Infallible, std::io::Error>","std::boxed::Box<[core::net::SocketAddr; 1]>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, std::io::Error>, u16>","core::result::Result<u16, std::io::Error>","core::result::Result<std::vec::Vec<core::net::SocketAddr>, std::io::Error>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, std::io::Error>, host::Host<&str>>","core::net::Ipv6Addr","(&str, u16)","core::result::Result<std::vec::IntoIter<core::net::SocketAddr>, std::io::Error>","isize","usize","*mut u8","core::option::Option<host::Host<&str>>","str","std::vec::Vec<core::net::SocketAddr>","std::io::Error","impl Fn() -> Option<u16>","host::Host<&str>","(core::net::Ipv6Addr, u16)","std::alloc::Global","core::option::Option<u16>","core::net::Ipv4Addr","[core::net::SocketAddr]","std::boxed::Box<[core::net::SocketAddr]>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, std::io::Error>, std::vec::IntoIter<core::net::SocketAddr>>","core::result::Result<host::Host<&str>, std::io::Error>","!","core::convert::Infallible"]}