{"mod_name":"host","calls":["core::str::<impl str>::starts_with::<'_, char>","core::str::<impl str>::len","<std::borrow::Cow<'_, str> as std::string::ToString>::to_string","percent_encoding::percent_decode","core::str::<impl str>::as_bytes","host::Host::domain_to_ascii","<core::result::Result<host::Host, parser::ParseError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, parser::ParseError>>>::from_residual","<core::result::Result<core::net::Ipv4Addr, parser::ParseError> as core::ops::Try>::branch","core::result::Result::<core::net::Ipv6Addr, parser::ParseError>::map::<host::Host, fn","core::str::<impl str>::ends_with::<'_, char>","<str as core::ops::Index<core::ops::Range<usize>>>::index","<std::borrow::Cow<'_, str> as core::ops::Deref>::deref","host::parse_ipv4addr","core::str::<impl str>::is_empty","host::ends_in_a_number","host::parse_ipv6addr","<std::borrow::Cow<'_, [u8]> as core::ops::Deref>::deref","<core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError> as core::ops::Try>::branch","<percent_encoding::PercentDecode<'_> as core::convert::Into<std::borrow::Cow<'_, [u8]>>>::into"],"types":["isize","core::result::Result<core::convert::Infallible, parser::ParseError>","std::borrow::Cow<'_, str>","core::result::Result<core::net::Ipv6Addr, parser::ParseError>","usize","!","core::net::Ipv4Addr","core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","core::ops::Range<usize>","core::net::Ipv6Addr","[u8]","percent_encoding::PercentDecode<'_>","(usize, bool)","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, parser::ParseError>, core::net::Ipv4Addr>","std::borrow::Cow<'_, [u8]>","core::result::Result<host::Host, parser::ParseError>","str","()","char","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, parser::ParseError>, std::borrow::Cow<'_, str>>","core::result::Result<core::net::Ipv4Addr, parser::ParseError>","fn(core::net::Ipv6Addr) -> host::Host {host::Host::Ipv6}","std::string::String","bool","core::convert::Infallible","parser::ParseError","u8","host::Host"]}