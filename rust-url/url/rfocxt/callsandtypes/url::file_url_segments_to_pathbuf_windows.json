{"mod_name":"","calls":["std::string::String::push_str","core::str::<impl str>::len","std::string::String::try_reserve","core::option::Option::<&str>::ok_or::<","<str as core::ops::Index<core::ops::Range<usize>>>::index","core::result::Result::<","std::string::String::new","<core::str::Split<'_, char> as core::iter::IntoIterator>::into_iter","<core::result::Result<&str, ","<core::str::Split<'_, char> as core::iter::Iterator>::next","percent_encoding::PercentDecode::<'_>::decode_utf8","std::string::String::len","core::fmt::rt::Argument::<'_>::new_display::<usize>","<std::path::PathBuf as core::convert::From<std::string::String>>::from","std::path::Path::is_absolute","core::str::<impl str>::as_bytes","<std::path::PathBuf as core::ops::Deref>::deref","<core::result::Result<std::path::PathBuf, ","<core::result::Result<","percent_encoding::percent_decode_str","core::str::<impl str>::starts_with::<'_, fn","std::string::String::push","core::panicking::panic_fmt","core::fmt::Arguments::<'_>::new_v1::<2, 2>","core::panicking::panic","<std::borrow::Cow<'_, str> as core::ops::Deref>::deref"],"types":["isize","core::result::Result<&str, ()>","core::convert::Infallible","fn(char) -> bool {parser::ascii_alpha}","std::string::String","core::result::Result<(), ()>","core::str::Utf8Error","core::ops::Range<usize>","core::fmt::rt::Argument<'_>","[core::fmt::rt::Argument<'_>; 2]","std::path::Path","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ()>, &str>","core::str::Split<'_, char>","bool","[&str; 2]","[u8]","!","core::result::Result<(), std::collections::TryReserveError>","core::result::Result<std::path::PathBuf, ()>","std::collections::TryReserveError","std::path::PathBuf","percent_encoding::PercentDecode<'_>","char","usize","core::option::Option<&str>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ()>>","{closure@url/src/lib.rs:3122:52: 3122:55}","std::borrow::Cow<'_, str>","core::fmt::Arguments<'_>","str","()","u8","core::result::Result<std::borrow::Cow<'_, str>, core::str::Utf8Error>","core::result::Result<core::convert::Infallible, ()>"]}