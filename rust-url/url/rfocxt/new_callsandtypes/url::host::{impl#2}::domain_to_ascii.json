{"mod_name":"host","calls":["core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","idna::domain_to_ascii_cow","url::host::Host::domain_to_ascii","core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::net::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::path_to_file_url_segments::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::host::url::host::Host::domain_to_ascii","url::net::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::quirks::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::parser::{impl#11}::parse_with_scheme::idna::domain_to_ascii_cow","url::parser::{impl#11}::parse_query::idna::domain_to_ascii_cow","url::file_url_segments_to_pathbuf_windows::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#17}::deserialize::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::net::url::host::Host::domain_to_ascii","url::parser::{impl#11}::parse_query::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#1}::socket_addrs::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::file_url_segments_to_pathbuf::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::host::longest_zero_sequence::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::url::host::Host::domain_to_ascii","url::origin::{impl#0}::new_opaque::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#1}::check_invariants::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::origin::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#1}::socket_addrs::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::file_url_segments_to_pathbuf_windows::url::host::Host::domain_to_ascii","url::path_segments::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#1}::make_relative::url::host::Host::domain_to_ascii","url::{impl#1}::check_invariants::idna::domain_to_ascii_cow","url::{impl#1}::serialize_internal::url::host::Host::domain_to_ascii","url::parser::{impl#11}::parse_file::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#1}::deserialize_internal::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::file_url_segments_to_pathbuf::idna::domain_to_ascii_cow","url::{impl#1}::serialize_internal::idna::domain_to_ascii_cow","url::file_url_segments_to_pathbuf::url::host::Host::domain_to_ascii","url::{impl#1}::check_invariants::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#17}::deserialize::idna::domain_to_ascii_cow","url::quirks::url::host::Host::domain_to_ascii","url::net::idna::domain_to_ascii_cow","url::parser::url::host::Host::domain_to_ascii","url::parser::{impl#11}::parse_path::url::host::Host::domain_to_ascii","url::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#17}::deserialize::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::parser::{impl#11}::parse_query::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::quirks::idna::domain_to_ascii_cow","url::file_url_segments_to_pathbuf_windows::idna::domain_to_ascii_cow","url::{impl#1}::deserialize_internal::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::path_segments::idna::domain_to_ascii_cow","url::{impl#1}::deserialize_internal::url::host::Host::domain_to_ascii","url::path_to_file_url_segments_windows::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::slicing::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::host::longest_zero_sequence::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#1}::socket_addrs::idna::domain_to_ascii_cow","url::origin::{impl#0}::new_opaque::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::host::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::host::longest_zero_sequence::idna::domain_to_ascii_cow","url::{impl#1}::socket_addrs::url::host::Host::domain_to_ascii","url::quirks::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::parser::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#1}::serialize_internal::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#1}::make_relative::idna::domain_to_ascii_cow","url::parser::{impl#11}::parse_fragment::idna::domain_to_ascii_cow","url::path_to_file_url_segments::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::host::longest_zero_sequence::url::host::Host::domain_to_ascii","url::parser::{impl#11}::parse_path::idna::domain_to_ascii_cow","url::file_url_segments_to_pathbuf::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#1}::serialize_internal::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#1}::make_relative::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::parser::{impl#11}::parse_fragment::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#1}::check_invariants::url::host::Host::domain_to_ascii","url::origin::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::parser::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::origin::{impl#0}::new_opaque::idna::domain_to_ascii_cow","url::slicing::idna::domain_to_ascii_cow","url::{impl#17}::deserialize::url::host::Host::domain_to_ascii","url::path_to_file_url_segments::url::host::Host::domain_to_ascii","url::parser::{impl#11}::parse_file::idna::domain_to_ascii_cow","url::path_segments::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::slicing::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#1}::make_relative::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::parser::{impl#11}::parse_file::url::host::Host::domain_to_ascii","url::parser::{impl#11}::parse_with_scheme::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::parser::{impl#11}::parse_path::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::path_to_file_url_segments::idna::domain_to_ascii_cow","url::path_segments::url::host::Host::domain_to_ascii","url::parser::{impl#11}::parse_fragment::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::path_to_file_url_segments_windows::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::{impl#1}::deserialize_internal::idna::domain_to_ascii_cow","url::host::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::parser::{impl#11}::parse_query::url::host::Host::domain_to_ascii","url::parser::{impl#11}::parse_with_scheme::url::host::Host::domain_to_ascii","url::parser::{impl#11}::parse_with_scheme::core::result::Result, idna::Errors>::map_err::<parser::ParseError, fn","url::host::idna::domain_to_ascii_cow","url::parser::{impl#11}::parse_fragment::url::host::Host::domain_to_ascii","url::origin::idna::domain_to_ascii_cow","url::parser::idna::domain_to_ascii_cow","url::idna::domain_to_ascii_cow","url::origin::url::host::Host::domain_to_ascii","url::parser::{impl#11}::parse_path::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::file_url_segments_to_pathbuf_windows::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::path_to_file_url_segments_windows::idna::domain_to_ascii_cow","url::parser::{impl#11}::parse_file::core::result::Result::<std::borrow::Cow<'_, str>, idna::Errors>::map_err::<parser::ParseError, fn","url::path_to_file_url_segments_windows::url::host::Host::domain_to_ascii","url::slicing::url::host::Host::domain_to_ascii","url::origin::{impl#0}::new_opaque::url::host::Host::domain_to_ascii"],"types":["fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","u8","core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","idna::AsciiDenyList","std::borrow::Cow<'_, str>","core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","idna::Errors","parser::ParseError","[u8]","str","url::host::Host","","fmt::Display","Ipv4Addr","Ipv6Addr","S","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {>::into}","fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","std::borrow::Cow","core::result::Result, idna::Errors>","fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","core::result::Result, parser::ParseError>","fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::u8","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::","url::{impl#1}::serialize_internal::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::std::borrow::Cow<'_, str>","url::{impl#1}::check_invariants::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::net::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::origin::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::str","url::origin::fn(idna::Errors) -> parser::ParseError {>::into}","url::path_to_file_url_segments_windows::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::quirks::fmt::Display","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::quirks::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::url::host::Host","url::parser::{impl#11}::parse_with_scheme::S","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::idna::Errors","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::[u8]","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::str","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::origin::core::result::Result, parser::ParseError>","url::{impl#1}::make_relative::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::path_segments::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::str","url::{impl#1}::socket_addrs::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::u8","url::path_segments::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::core::result::Result, parser::ParseError>","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::core::result::Result, idna::Errors>","url::origin::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::u8","url::parser::{impl#11}::parse_with_scheme::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {>::into}","url::slicing::[u8]","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::parser::ParseError","url::host::longest_zero_sequence::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fmt::Display","url::parser::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::path_segments::Ipv6Addr","url::file_url_segments_to_pathbuf::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::[u8]","url::parser::{impl#11}::parse_fragment::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::parser::core::result::Result, parser::ParseError>","url::path_to_file_url_segments::Ipv6Addr","url::{impl#1}::serialize_internal::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::core::result::Result, parser::ParseError>","url::{impl#1}::make_relative::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::[u8]","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::host::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::[u8]","url::slicing::url::host::Host","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::core::result::Result, parser::ParseError>","url::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::path_segments::url::host::Host","url::file_url_segments_to_pathbuf::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::host::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::file_url_segments_to_pathbuf_windows::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::idna::Errors","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::S","url::parser::{impl#11}::parse_query::core::result::Result, idna::Errors>","url::file_url_segments_to_pathbuf::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::origin::","url::path_segments::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::url::host::Host","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::host::core::result::Result, idna::Errors>","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::origin::str","url::file_url_segments_to_pathbuf::[u8]","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::{impl#1}::check_invariants::parser::ParseError","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::quirks::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::std::borrow::Cow<'_, str>","url::origin::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::[u8]","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::idna::AsciiDenyList","url::parser::{impl#11}::parse_with_scheme::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::Ipv6Addr","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::net::std::borrow::Cow<'_, str>","url::{impl#1}::check_invariants::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::core::result::Result, idna::Errors>","url::host::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::fn(idna::Errors) -> parser::ParseError {>::into}","url::path_to_file_url_segments_windows::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::{impl#1}::make_relative::S","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::str","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::slicing::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::slicing::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::Ipv6Addr","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::Ipv4Addr","url::file_url_segments_to_pathbuf_windows::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::slicing::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::std::borrow::Cow<'_, str>","url::net::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::parser::parser::ParseError","url::slicing::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::quirks::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::Ipv4Addr","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::idna::Errors","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::{impl#17}::deserialize::idna::AsciiDenyList","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::Ipv6Addr","url::file_url_segments_to_pathbuf_windows::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::origin::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::std::borrow::Cow<'_, str>","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::Ipv4Addr","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::net::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::std::borrow::Cow<'_, str>","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::fmt::Display","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::slicing::core::result::Result, idna::Errors>","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::url::host::Host","url::host::longest_zero_sequence::","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::slicing::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::[u8]","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fmt::Display","url::{impl#1}::deserialize_internal::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::slicing::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::url::host::Host","url::path_to_file_url_segments_windows::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::std::borrow::Cow","url::parser::{impl#11}::parse_file::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::Ipv4Addr","url::{impl#1}::check_invariants::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::idna::Errors","url::net::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::net::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::str","url::{impl#1}::check_invariants::S","url::{impl#17}::deserialize::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::host::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::str","url::net::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::parser::ParseError","url::path_segments::fmt::Display","url::parser::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::host::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::host::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::net::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::{impl#1}::make_relative::u8","url::origin::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::path_segments::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::path_to_file_url_segments::idna::Errors","url::quirks::core::result::Result, parser::ParseError>","url::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::parser::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::std::borrow::Cow<'_, str>","url::parser::{impl#11}::parse_fragment::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::Ipv4Addr","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::str","url::{impl#17}::deserialize::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fmt::Display","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::std::borrow::Cow<'_, str>","url::parser::idna::Errors","url::parser::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::quirks::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::fmt::Display","url::parser::{impl#11}::parse_file::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::parser::ParseError","url::parser::{impl#11}::parse_query::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::quirks::std::borrow::Cow","url::slicing::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::idna::Errors","url::origin::{impl#0}::new_opaque::parser::ParseError","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::origin::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::Ipv4Addr","url::{impl#1}::deserialize_internal::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::origin::fmt::Display","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {>::into}","url::host::Ipv6Addr","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::origin::core::result::Result, idna::Errors>","url::{impl#1}::socket_addrs::idna::AsciiDenyList","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fmt::Display","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::parser::core::result::Result, idna::Errors>","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::origin::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fmt::Display","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::","url::{impl#1}::socket_addrs::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::str","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::url::host::Host","url::{impl#1}::make_relative::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::parser::std::borrow::Cow<'_, str>","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::host::longest_zero_sequence::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::slicing::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::idna::Errors","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::str","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::Ipv4Addr","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::core::result::Result, idna::Errors>","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::u8","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::slicing::Ipv6Addr","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::[u8]","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::host::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::str","url::quirks::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::quirks::core::result::Result, idna::Errors>","url::path_to_file_url_segments_windows::","url::host::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::host::S","url::origin::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::{impl#1}::make_relative::idna::AsciiDenyList","url::file_url_segments_to_pathbuf::Ipv6Addr","url::parser::{impl#11}::parse_with_scheme::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::idna::Errors","url::net::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::Ipv4Addr","url::origin::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::std::borrow::Cow","url::file_url_segments_to_pathbuf_windows::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::idna::AsciiDenyList","url::{impl#1}::socket_addrs::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::idna::Errors","url::parser::{impl#11}::parse_query::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::host::std::borrow::Cow<'_, str>","url::parser::{impl#11}::parse_file::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::url::host::Host","url::origin::{impl#0}::new_opaque::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::origin::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::{impl#1}::make_relative::Ipv4Addr","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::url::host::Host","url::parser::{impl#11}::parse_fragment::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::std::borrow::Cow","url::{impl#1}::deserialize_internal::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::S","url::{impl#1}::deserialize_internal::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::Ipv6Addr","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::{impl#1}::check_invariants::idna::AsciiDenyList","url::origin::{impl#0}::new_opaque::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::[u8]","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::slicing::idna::Errors","url::path_to_file_url_segments_windows::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::url::host::Host","url::slicing::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::{impl#17}::deserialize::parser::ParseError","url::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::{impl#1}::make_relative::","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::url::host::Host","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::host::longest_zero_sequence::parser::ParseError","url::file_url_segments_to_pathbuf_windows::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::std::borrow::Cow<'_, str>","url::{impl#1}::deserialize_internal::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::quirks::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::quirks::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {>::into}","url::parser::{impl#11}::parse_with_scheme::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::host::longest_zero_sequence::Ipv6Addr","url::{impl#1}::make_relative::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::quirks::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::std::borrow::Cow<'_, str>","url::path_to_file_url_segments_windows::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::Ipv6Addr","url::parser::{impl#11}::parse_path::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::","url::quirks::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::core::result::Result, parser::ParseError>","url::path_segments::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::S","url::net::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::path_segments::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::quirks::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::host::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::origin::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::url::host::Host","url::slicing::std::borrow::Cow","url::host::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::parser::ParseError","url::parser::{impl#11}::parse_path::std::borrow::Cow","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::[u8]","url::path_to_file_url_segments_windows::parser::ParseError","url::quirks::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::quirks::parser::ParseError","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::host::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::S","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::Ipv6Addr","url::{impl#1}::check_invariants::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::net::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::slicing::Ipv4Addr","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::path_segments::std::borrow::Cow<'_, str>","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::parser::idna::AsciiDenyList","url::{impl#1}::socket_addrs::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::std::borrow::Cow","url::path_segments::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::quirks::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::core::result::Result, parser::ParseError>","url::{impl#1}::check_invariants::std::borrow::Cow<'_, str>","url::host::longest_zero_sequence::str","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::idna::AsciiDenyList","url::{impl#17}::deserialize::Ipv6Addr","url::path_to_file_url_segments_windows::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::origin::Ipv6Addr","url::path_segments::str","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::{impl#1}::check_invariants::Ipv6Addr","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::core::result::Result, idna::Errors>","url::host::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::idna::Errors","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::parser::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::host::parser::ParseError","url::host::","url::host::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {>::into}","url::{impl#1}::check_invariants::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::url::host::Host","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::[u8]","url::path_segments::Ipv4Addr","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::net::idna::AsciiDenyList","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::core::result::Result, idna::Errors>","url::path_to_file_url_segments_windows::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::idna::AsciiDenyList","url::{impl#1}::socket_addrs::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::str","url::file_url_segments_to_pathbuf_windows::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::Ipv6Addr","url::{impl#1}::make_relative::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::origin::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::std::borrow::Cow<'_, str>","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::slicing::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::net::std::borrow::Cow","url::file_url_segments_to_pathbuf_windows::","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::idna::Errors","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::url::host::Host","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::parser::ParseError","url::parser::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::core::result::Result, parser::ParseError>","url::origin::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::host::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::path_segments::idna::Errors","url::slicing::parser::ParseError","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::Ipv4Addr","url::parser::{impl#11}::parse_path::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::origin::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::std::borrow::Cow","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::path_segments::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::host::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::slicing::S","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::S","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::file_url_segments_to_pathbuf_windows::u8","url::{impl#1}::make_relative::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::path_segments::core::result::Result, idna::Errors>","url::parser::{impl#11}::parse_file::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::{impl#1}::check_invariants::","url::{impl#1}::check_invariants::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::origin::S","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::quirks::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::std::borrow::Cow","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::path_segments::std::borrow::Cow","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::std::borrow::Cow<'_, str>","url::path_to_file_url_segments_windows::S","url::quirks::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::idna::AsciiDenyList","url::parser::{impl#11}::parse_with_scheme::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::","url::parser::{impl#11}::parse_file::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::Ipv4Addr","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::idna::AsciiDenyList","url::file_url_segments_to_pathbuf_windows::idna::AsciiDenyList","url::net::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::host::Ipv4Addr","url::{impl#1}::deserialize_internal::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::Ipv6Addr","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::parser::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::Ipv6Addr","url::path_segments::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::Ipv6Addr","url::{impl#17}::deserialize::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::path_segments::core::result::Result, parser::ParseError>","url::quirks::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::path_segments::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::core::result::Result, parser::ParseError>","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::net::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::path_to_file_url_segments::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::quirks::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::str","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::u8","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::str","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::quirks::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::core::result::Result, parser::ParseError>","url::parser::{impl#11}::parse_file::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::u8","url::net::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::Ipv4Addr","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::S","url::path_to_file_url_segments::idna::AsciiDenyList","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::","url::file_url_segments_to_pathbuf_windows::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::[u8]","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::Ipv4Addr","url::{impl#1}::deserialize_internal::str","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::","url::path_segments::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::quirks::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::slicing::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::idna::Errors","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::url::host::Host","url::{impl#1}::socket_addrs::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::idna::AsciiDenyList","url::parser::{impl#11}::parse_path::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::Ipv6Addr","url::{impl#1}::deserialize_internal::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::net::core::result::Result, parser::ParseError>","url::{impl#1}::deserialize_internal::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::idna::Errors","url::path_to_file_url_segments::","url::{impl#1}::deserialize_internal::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::idna::AsciiDenyList","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::std::borrow::Cow","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::std::borrow::Cow","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::{impl#17}::deserialize::fmt::Display","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::parser::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {>::into}","url::{impl#1}::serialize_internal::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::host::core::result::Result, parser::ParseError>","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::idna::Errors","url::origin::parser::ParseError","url::file_url_segments_to_pathbuf::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::[u8]","url::{impl#1}::socket_addrs::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::origin::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::{impl#1}::deserialize_internal::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::idna::AsciiDenyList","url::path_to_file_url_segments::S","url::{impl#17}::deserialize::std::borrow::Cow","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::host::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::parser::url::host::Host","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::net::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::Ipv4Addr","url::net::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::path_to_file_url_segments::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::parser::{impl#11}::parse_query::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::idna::AsciiDenyList","url::net::[u8]","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::std::borrow::Cow","url::path_to_file_url_segments::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::core::result::Result, parser::ParseError>","url::path_to_file_url_segments_windows::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::std::borrow::Cow","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fmt::Display","url::path_segments::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::core::result::Result, idna::Errors>","url::{impl#1}::check_invariants::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::{impl#1}::make_relative::parser::ParseError","url::{impl#1}::socket_addrs::parser::ParseError","url::net::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::core::result::Result, parser::ParseError>","url::path_to_file_url_segments::std::borrow::Cow","url::origin::{impl#0}::new_opaque::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::parser::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::origin::std::borrow::Cow<'_, str>","url::parser::{impl#11}::parse_with_scheme::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::url::host::Host","url::{impl#1}::check_invariants::u8","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::u8","url::parser::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::Ipv4Addr","url::net::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::idna::Errors","url::net::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::net::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::slicing::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fmt::Display","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::origin::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::file_url_segments_to_pathbuf_windows::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::Ipv6Addr","url::host::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::core::result::Result, parser::ParseError>","url::net::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fmt::Display","url::origin::{impl#0}::new_opaque::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::S","url::origin::{impl#0}::new_opaque::S","url::host::longest_zero_sequence::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::Ipv6Addr","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::{impl#1}::make_relative::str","url::{impl#1}::serialize_internal::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::core::result::Result, idna::Errors>","url::{impl#1}::deserialize_internal::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::host::std::borrow::Cow","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::","url::parser::","url::{impl#1}::socket_addrs::Ipv6Addr","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::S","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::slicing::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {>::into}","url::parser::u8","url::quirks::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::parser::{impl#11}::parse_path::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::origin::Ipv4Addr","url::parser::{impl#11}::parse_file::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::path_segments::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::host::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::path_segments::parser::ParseError","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::u8","url::path_to_file_url_segments::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::Ipv4Addr","url::parser::{impl#11}::parse_query::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fmt::Display","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::slicing::fmt::Display","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::path_segments::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::u8","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::url::host::Host","url::host::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::Ipv4Addr","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::parser::ParseError","url::parser::{impl#11}::parse_path::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::parser::ParseError","url::path_segments::[u8]","url::{impl#1}::deserialize_internal::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::origin::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::{impl#1}::socket_addrs::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::net::idna::Errors","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::origin::u8","url::parser::{impl#11}::parse_path::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::origin::[u8]","url::host::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::url::host::Host","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::quirks::url::host::Host","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::url::host::Host","url::{impl#1}::make_relative::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::parser::ParseError","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::path_segments::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::S","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fmt::Display","url::host::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fmt::Display","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::net::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::[u8]","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::std::borrow::Cow","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::url::host::Host","url::parser::{impl#11}::parse_fragment::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::net::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::slicing::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::core::result::Result, idna::Errors>","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::[u8]","url::path_to_file_url_segments_windows::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::u8","url::{impl#1}::deserialize_internal::","url::parser::{impl#11}::parse_with_scheme::parser::ParseError","url::slicing::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::S","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::origin::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::slicing::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::core::result::Result, idna::Errors>","url::parser::{impl#11}::parse_with_scheme::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::host::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::std::borrow::Cow<'_, str>","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::core::result::Result, parser::ParseError>","url::{impl#1}::socket_addrs::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fmt::Display","url::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::parser::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fmt::Display","url::parser::{impl#11}::parse_path::core::result::Result, idna::Errors>","url::net::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::quirks::std::borrow::Cow<'_, str>","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::str","url::slicing::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::core::result::Result, idna::Errors>","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fmt::Display","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::idna::Errors","url::host::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::slicing::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::host::url::host::Host","url::{impl#17}::deserialize::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::net::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::u8","url::file_url_segments_to_pathbuf::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::{impl#17}::deserialize::","url::path_to_file_url_segments::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::std::borrow::Cow","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::std::borrow::Cow<'_, str>","url::file_url_segments_to_pathbuf::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::std::borrow::Cow<'_, str>","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::std::borrow::Cow","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::slicing::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::net::core::result::Result, idna::Errors>","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::host::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::parser::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::slicing::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::net::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::idna::Errors","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::quirks::S","url::{impl#1}::make_relative::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::core::result::Result, idna::Errors>","url::path_segments::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::origin::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::quirks::u8","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::u8","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::core::result::Result, parser::ParseError>","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::u8","url::{impl#1}::deserialize_internal::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::std::borrow::Cow","url::file_url_segments_to_pathbuf_windows::core::result::Result, parser::ParseError>","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::path_segments::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::quirks::Ipv6Addr","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::net::","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::path_segments::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::{impl#1}::deserialize_internal::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::str","url::origin::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::{impl#1}::deserialize_internal::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::[u8]","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::core::result::Result, parser::ParseError>","url::parser::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::host::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::origin::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::path_segments::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::host::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::host::idna::AsciiDenyList","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::quirks::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::Ipv4Addr","url::{impl#1}::socket_addrs::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::file_url_segments_to_pathbuf_windows::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::core::result::Result, parser::ParseError>","url::origin::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::S","url::net::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::net::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::S","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::S","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::[u8]","url::{impl#17}::deserialize::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::net::core::convert::Into<parser::ParseError>>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fmt::Display","url::quirks::","url::net::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::std::borrow::Cow<'_, str>","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::path_segments::","url::host::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::path_segments::S","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::parser::ParseError","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {>::into}","url::path_to_file_url_segments::url::host::Host","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::{impl#1}::make_relative::std::borrow::Cow","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::origin::{impl#0}::new_opaque::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fmt::Display","url::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::parser::ParseError","url::parser::{impl#11}::parse_fragment::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::idna::AsciiDenyList","url::quirks::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::[u8]","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::path_to_file_url_segments::str","url::slicing::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::{impl#1}::deserialize_internal::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::origin::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::S","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::quirks::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::","url::host::longest_zero_sequence::core::result::Result, parser::ParseError>","url::origin::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::str","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::u8","url::parser::{impl#11}::parse_query::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::core::result::Result, idna::Errors>","url::{impl#17}::deserialize::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::idna::Errors","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::parser::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::Ipv4Addr","url::parser::{impl#11}::parse_with_scheme::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fmt::Display","url::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::path_to_file_url_segments::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::host::longest_zero_sequence::core::result::Result, idna::Errors>","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::host::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::net::str","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::core::result::Result, idna::Errors>","url::path_to_file_url_segments_windows::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::idna::Errors","url::{impl#17}::deserialize::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::slicing::u8","url::parser::{impl#11}::parse_file::str","url::host::idna::Errors","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::net::url::host::Host","url::{impl#1}::serialize_internal::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::origin::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::[u8]","url::{impl#1}::make_relative::std::borrow::Cow<'_, str>","url::parser::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::slicing::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::std::borrow::Cow<'_, str>","url::{impl#1}::deserialize_internal::idna::AsciiDenyList","url::path_to_file_url_segments::fmt::Display","url::{impl#1}::check_invariants::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::net::u8","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::{impl#1}::make_relative::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn( ) -> parser::ParseError {<  as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::u8","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::idna::AsciiDenyList","url::file_url_segments_to_pathbuf_windows::std::borrow::Cow","url::host::u8","url::file_url_segments_to_pathbuf::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#17}::deserialize::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::{impl#1}::socket_addrs::core::convert::Into<parser::ParseError>>::into}","url::quirks::[u8]","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as >>::into}","url::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as >>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::parser::{impl#11}::parse_query::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::origin::{impl#0}::new_opaque::u8","url::path_to_file_url_segments::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::net::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::parser::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::str","url::net::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::Ipv4Addr","url::slicing::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::host::longest_zero_sequence::idna::Errors) -> parser::ParseError {<url::host::longest_zero_sequence::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::host::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::core::result::Result, idna::Errors>","url::quirks::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::core::result::Result, idna::Errors>","url::slicing::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::net::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::parser::{impl#11}::parse_path::parser::ParseError","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as >>::into}","url::quirks::fn(url::quirks::idna::Errors) -> parser::ParseError {<url::quirks::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::path_segments::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::parser::{impl#11}::parse_fragment::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::idna::Errors","url::slicing::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::parser::{impl#11}::parse_with_scheme::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_with_scheme::idna::Errors as >>::into}","url::host::longest_zero_sequence::[u8]","url::fn( ) -> parser::ParseError {<  as url::quirks::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::origin::std::borrow::Cow","url::host::longest_zero_sequence::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::origin::{impl#0}::new_opaque::core::result::Result, parser::ParseError>","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::{impl#1}::socket_addrs::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::origin::idna::Errors) -> parser::ParseError {<url::origin::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::quirks::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::path_to_file_url_segments::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::path_segments::idna::Errors) -> parser::ParseError {<url::path_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::{impl#1}::deserialize_internal::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::slicing::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::origin::{impl#0}::new_opaque::core::convert::Into<parser::ParseError>>::into}","url::host::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as >>::into}","url::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::std::borrow::Cow<'_, str>","url::quirks::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::parser::{impl#11}::parse_query::Ipv6Addr","url::origin::{impl#0}::new_opaque::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::deserialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::Ipv4Addr","url::parser::{impl#11}::parse_query::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::path_segments::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::host::idna::Errors) -> parser::ParseError {<url::host::idna::Errors as >>::into}","url::{impl#1}::make_relative::fn(url::idna::Errors) -> parser::ParseError {<url::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_path::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::origin::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::quirks::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::quirks::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::deserialize_internal::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::host::longest_zero_sequence::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::{impl#1}::deserialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::deserialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::core::result::Result<std::borrow::Cow<'_, str>, parser::ParseError>","url::quirks::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::net::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as >>::into}","url::slicing::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::core::result::Result, parser::ParseError>","url::{impl#1}::check_invariants::fn(url::{impl#1}::socket_addrs::idna::Errors) -> parser::ParseError {<url::{impl#1}::socket_addrs::idna::Errors as >>::into}","url::slicing::fn(url::parser::{impl#11}::parse_query::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_query::idna::Errors as >>::into}","url::file_url_segments_to_pathbuf::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::parser::{impl#11}::parse_file::fn(url::origin::{impl#0}::new_opaque::idna::Errors) -> parser::ParseError {<url::origin::{impl#0}::new_opaque::idna::Errors as >>::into}","url::{impl#1}::check_invariants::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::file_url_segments_to_pathbuf_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn( ) -> parser::ParseError {<  as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::parser::{impl#11}::parse_with_scheme::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_with_scheme::core::convert::Into<parser::ParseError>>::into}","url::origin::{impl#0}::new_opaque::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::{impl#1}::make_relative::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn( ) -> parser::ParseError {<  as url::path_to_file_url_segments_windows::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as >>::into}","url::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::host::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(url::{impl#1}::make_relative::idna::Errors) -> parser::ParseError {<url::{impl#1}::make_relative::idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(url::{impl#1}::serialize_internal::idna::Errors) -> parser::ParseError {<url::{impl#1}::serialize_internal::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::host::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(url::net::idna::Errors) -> parser::ParseError {<url::net::idna::Errors as >>::into}","url::parser::{impl#11}::parse_path::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn( ) -> parser::ParseError {<  as url::{impl#1}::serialize_internal::core::convert::Into<parser::ParseError>>::into}","url::origin::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::quirks::idna::AsciiDenyList","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::parser::{impl#11}::parse_file::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_file::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#17}::deserialize::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_file::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_query::fn(idna::Errors) -> parser::ParseError {<idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::idna::AsciiDenyList","url::host::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_query::core::convert::Into<parser::ParseError>>::into}","url::fn( ) -> parser::ParseError {<  as url::{impl#1}::check_invariants::core::convert::Into<parser::ParseError>>::into}","url::origin::fn(url::parser::{impl#11}::parse_path::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_path::idna::Errors as >>::into}","url::origin::idna::AsciiDenyList","url::{impl#1}::serialize_internal::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::path_to_file_url_segments_windows::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_segments::core::convert::Into<parser::ParseError>>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as >>::into}","url::host::longest_zero_sequence::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::path_to_file_url_segments::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(url::file_url_segments_to_pathbuf_windows::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::path_segments::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::net::fn(url::parser::{impl#11}::parse_fragment::idna::Errors) -> parser::ParseError {<url::parser::{impl#11}::parse_fragment::idna::Errors as >>::into}","url::path_to_file_url_segments_windows::fn(url::path_to_file_url_segments::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_fragment::fn(url::slicing::idna::Errors) -> parser::ParseError {<url::slicing::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::file_url_segments_to_pathbuf::idna::Errors) -> parser::ParseError {<url::file_url_segments_to_pathbuf::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::check_invariants::fn(url::path_to_file_url_segments_windows::idna::Errors) -> parser::ParseError {<url::path_to_file_url_segments_windows::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::file_url_segments_to_pathbuf_windows::fn(url::parser::idna::Errors) -> parser::ParseError {<url::parser::idna::Errors as >>::into}","url::fn( ) -> parser::ParseError {<  as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::net::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::net::fn(url::{impl#17}::deserialize::idna::Errors) -> parser::ParseError {<url::{impl#17}::deserialize::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::core::result::Result<std::borrow::Cow<'_, str>, idna::Errors>","url::file_url_segments_to_pathbuf_windows::fn(url::{impl#1}::check_invariants::idna::Errors) -> parser::ParseError {<url::{impl#1}::check_invariants::idna::Errors as core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::serialize_internal::fn( ) -> parser::ParseError {<  as url::parser::{impl#11}::parse_path::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn( ) -> parser::ParseError {<  as url::parser::core::convert::Into<parser::ParseError>>::into}","url::{impl#1}::socket_addrs::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_with_scheme::fn( ) -> parser::ParseError {<  as url::origin::core::convert::Into<parser::ParseError>>::into}","url::parser::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::file_url_segments_to_pathbuf::core::convert::Into<parser::ParseError>>::into}","url::parser::{impl#11}::parse_file::fn(idna::Errors) -> parser::ParseError {<idna::Errors as url::parser::{impl#11}::parse_fragment::core::convert::Into<parser::ParseError>>::into}"]}