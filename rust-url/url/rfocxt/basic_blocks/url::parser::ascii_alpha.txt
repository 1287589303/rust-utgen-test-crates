[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &_1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/parser.rs:1756:5: 1756:29 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::char::methods::<impl char>::is_ascii_alphabetic(move _2) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/parser.rs:1757:2: 1757:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/parser.rs:1755:1: 1757:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/parser.rs:1755:33: 1755:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            url/src/parser.rs:1755:24: 1755:28 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                url/src/parser.rs:1755:20: 1755:22 (#0),
                            ),
                        ),
                        pat_span: url/src/parser.rs:1755:20: 1755:22 (#0),
                    },
                ),
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/parser.rs:1755:20: 1755:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: url/src/parser.rs:1756:5: 1756:29 (#0),
                },
            ),
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/parser.rs:1756:5: 1756:7 (#0),
            scope: scope[0],
        },
    },
]