[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:275:8: 275:30 (#0),
                    scope: scope[0],
                },
                kind: _4 = Url::cannot_be_a_base(move _5) -> [return: bb1, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:275:8: 275:30 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb3, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _0 = const (),
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:294:2: 294:2 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _3 = const (),
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:278:8: 278:37 (#0),
                    scope: scope[0],
                },
                kind: _7 = core::str::<impl str>::starts_with::<'_, char>(move _8, const '/') -> [return: bb4, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:278:8: 278:37 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _7) -> [0: bb6, otherwise: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:282:5: 284:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb13,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            _13 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:279:30: 279:42 (#0),
                    scope: scope[0],
                },
                kind: _12 = Url::scheme(move _13) -> [return: bb7, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:279:13: 279:43 (#0),
                    scope: scope[0],
                },
                kind: _11 = <parser::SchemeType as core::convert::From<&str>>::from(move _12) -> [return: bb8, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _10 = &_11,
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:279:13: 279:56 (#0),
                    scope: scope[0],
                },
                kind: _9 = parser::SchemeType::is_special(move _10) -> [return: bb9, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:279:13: 279:56 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _9) -> [0: bb16, otherwise: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:281:16: 281:46 (#0),
                    scope: scope[0],
                },
                kind: _14 = core::str::<impl str>::starts_with::<'_, char>(move _15, const '\\') -> [return: bb11, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:281:16: 281:46 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _14) -> [0: bb15, otherwise: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:282:5: 284:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb13,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_16),
            _16 = &mut (*_1),
            StorageLive(_17),
            _17 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:283:9: 283:35 (#0),
                    scope: scope[0],
                },
                kind: _0 = Url::set_path(move _16, move _17) -> [return: bb14, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb37,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb17,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb17,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            _22 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:284:32: 284:44 (#0),
                    scope: scope[0],
                },
                kind: _21 = Url::scheme(move _22) -> [return: bb18, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:284:15: 284:45 (#0),
                    scope: scope[0],
                },
                kind: _20 = <parser::SchemeType as core::convert::From<&str>>::from(move _21) -> [return: bb19, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _19 = &_20,
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:284:15: 284:58 (#0),
                    scope: scope[0],
                },
                kind: _18 = parser::SchemeType::is_special(move _19) -> [return: bb20, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:284:15: 284:58 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _18) -> [0: bb22, otherwise: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:287:5: 291:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            StorageDead(_19),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:285:13: 285:36 (#0),
                    scope: scope[0],
                },
                kind: _23 = core::str::<impl str>::is_empty(move _24) -> [return: bb23, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:285:13: 285:36 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _23) -> [0: bb25, otherwise: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageLive(_25),
            StorageLive(_26),
            _26 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:286:13: 286:27 (#0),
                    scope: scope[0],
                },
                kind: _25 = Url::has_host(move _26) -> [return: bb26, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:287:5: 291:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:286:13: 286:27 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _25) -> [0: bb28, otherwise: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            StorageLive(_36),
            _36 = &mut (*_1),
            StorageLive(_37),
            _37 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:292:9: 292:35 (#0),
                    scope: scope[0],
                },
                kind: _0 = Url::set_path(move _36, move _37) -> [return: bb35, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:287:5: 291:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:288:31: 288:48 (#0),
                    scope: scope[0],
                },
                kind: _27 = <std::string::String as core::convert::From<&str>>::from(const "/") -> [return: bb30, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _27),
            StorageLive(_28),
            StorageLive(_29),
            _29 = &mut _27,
            StorageLive(_30),
            _30 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:289:9: 289:43 (#0),
                    scope: scope[1],
                },
                kind: _28 = std::string::String::push_str(move _29, move _30) -> [return: bb31, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            StorageDead(_29),
            StorageDead(_28),
            StorageLive(_31),
            _31 = &mut (*_1),
            StorageLive(_32),
            StorageLive(_33),
            StorageLive(_34),
            StorageLive(_35),
            _35 = &_27,
            _34 = &(*_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:290:22: 290:34 (#0),
                    scope: scope[1],
                },
                kind: _33 = <std::string::String as core::ops::Deref>::deref(move _34) -> [return: bb32, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _32 = &(*_33),
            StorageDead(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:290:9: 290:35 (#0),
                    scope: scope[1],
                },
                kind: _0 = Url::set_path(move _31, move _32) -> [return: bb33, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:291:5: 291:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_27) -> [return: bb34, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageDead(_35),
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:284:12: 293:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb36,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
            StorageDead(_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:284:12: 293:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb36,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            StorageDead(_23),
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb37,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageDead(_9),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:294:2: 294:2 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:294:2: 294:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:291:5: 291:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_27) -> [return: bb40, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/quirks.rs:274:1: 294:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:274:55: 274:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            url/src/quirks.rs:274:26: 274:34 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                url/src/quirks.rs:274:21: 274:24 (#0),
                            ),
                        ),
                        pat_span: url/src/quirks.rs:274:21: 274:24 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut Url,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:274:21: 274:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            url/src/quirks.rs:274:50: 274:54 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                url/src/quirks.rs:274:36: 274:48 (#0),
                            ),
                        ),
                        pat_span: url/src/quirks.rs:274:36: 274:48 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:274:36: 274:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:275:5: 277:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:275:8: 275:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} Url,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:275:8: 275:11 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:275:31: 277:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:278:8: 278:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:278:8: 278:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:279:13: 279:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: &'{erased} parser::SchemeType,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:279:13: 279:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: parser::SchemeType,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:279:13: 279:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:279:30: 279:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: &'{erased} Url,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:279:30: 279:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:281:16: 281:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:281:16: 281:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:283:9: 283:35 (#0),
                },
            ),
        ),
        ty: &'{erased} mut Url,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:283:9: 283:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:283:9: 283:35 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:283:22: 283:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:284:15: 284:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: &'{erased} parser::SchemeType,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:284:15: 284:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: parser::SchemeType,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:284:15: 284:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:284:32: 284:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: &'{erased} Url,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:284:32: 284:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:285:13: 285:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:285:13: 285:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:286:13: 286:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:278:5: 293:6 (#0),
                },
            ),
        ),
        ty: &'{erased} Url,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:286:13: 286:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                url/src/quirks.rs:288:31: 288:48 (#0),
                            ),
                        ),
                        pat_span: url/src/quirks.rs:288:13: 288:28 (#0),
                    },
                ),
            ),
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:288:13: 288:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:289:9: 289:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:289:9: 289:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:289:30: 289:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:290:9: 290:35 (#0),
                },
            ),
        ),
        ty: &'{erased} mut Url,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:290:9: 290:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:290:9: 290:35 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:290:22: 290:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:290:9: 290:35 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:290:22: 290:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:290:9: 290:35 (#0),
                },
            ),
        ),
        ty: &'{erased} std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:290:22: 290:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:290:9: 290:35 (#0),
                },
            ),
        ),
        ty: &'{erased} std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:290:22: 290:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:292:9: 292:35 (#0),
                },
            ),
        ),
        ty: &'{erased} mut Url,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:292:9: 292:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: url/src/quirks.rs:292:9: 292:35 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/quirks.rs:292:22: 292:34 (#0),
            scope: scope[0],
        },
    },
]