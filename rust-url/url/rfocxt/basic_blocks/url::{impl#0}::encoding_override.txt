[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = _2,
            (_1.1: core::option::Option<&dyn for<'a> core::ops::Fn(&'a str) -> std::borrow::Cow<'_, [u8]>>) = move _3,
            StorageDead(_3),
            _0 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: url/src/lib.rs:275:6: 275:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: ParseOptions<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/lib.rs:272:70: 272:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                ImplicitSelf(
                    Mut,
                ),
            ),
        ),
        ty: ParseOptions<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/lib.rs:272:30: 272:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            url/src/lib.rs:272:45: 272:65 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                url/src/lib.rs:272:40: 272:43 (#0),
                            ),
                        ),
                        pat_span: url/src/lib.rs:272:40: 272:43 (#0),
                    },
                ),
            ),
        ),
        ty: core::option::Option<&'{erased} dyn [Binder { value: Trait(core::ops::Fn<(&str,)>), bound_vars: [Region(BrNamed(DefId(20:140 ~ form_urlencoded[21d3]::EncodingOverride::'_), '_))] }, Binder { value: Projection(Output = std::borrow::Cow<'_, [u8]>), bound_vars: [Region(BrNamed(DefId(20:140 ~ form_urlencoded[21d3]::EncodingOverride::'_), '_))] }] + '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/lib.rs:272:40: 272:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} dyn [Binder { value: Trait(core::ops::Fn<(&str,)>), bound_vars: [Region(BrNamed(DefId(20:140 ~ form_urlencoded[21d3]::EncodingOverride::'_), '_))] }, Binder { value: Projection(Output = std::borrow::Cow<'_, [u8]>), bound_vars: [Region(BrNamed(DefId(20:140 ~ form_urlencoded[21d3]::EncodingOverride::'_), '_))] }] + '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: url/src/lib.rs:273:34: 273:37 (#0),
            scope: scope[0],
        },
    },
]