[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:165:25: 165:37 (#0),
                    scope: scope[0],
                },
                kind: _6 = uts46::Uts46::new() -> [return: bb1, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = &_6,
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:166:9: 166:26 (#0),
                    scope: scope[0],
                },
                kind: _8 = core::str::<impl str>::as_bytes(move _9) -> [return: bb2, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = &(*_8),
            StorageDead(_9),
            StorageLive(_10),
            _10 = uts46::Hyphens::Allow,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:165:25: 169:6 (#0),
                    scope: scope[0],
                },
                kind: _4 = uts46::Uts46::to_unicode(move _5, move _7, const uts46::AsciiDenyList::EMPTY, move _10) -> [return: bb3, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_7),
            StorageDead(_5),
            PlaceMention(_4),
            StorageLive(_2),
            _2 = move (_4.0: std::borrow::Cow<'_, str>),
            StorageLive(_3),
            _3 = move (_4.1: core::result::Result<(), Errors>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:169:6: 169:7 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb4, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:169:6: 169:7 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb5, unwind: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_4),
            StorageLive(_11),
            StorageLive(_12),
            _12 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:170:6: 170:22 (#0),
                    scope: scope[1],
                },
                kind: _11 = std::borrow::Cow::<'_, str>::into_owned(move _12) -> [return: bb6, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageLive(_13),
            _13 = move _3,
            _0 = (move _11, move _13),
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:170:30: 170:31 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb7, unwind: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:171:1: 171:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb8, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:171:2: 171:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:170:21: 170:22 (#0),
                    scope: scope[1],
                },
                kind: drop(_12) -> [return: bb11, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:169:6: 169:7 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb11, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:171:1: 171:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb13, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:169:6: 169:7 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb13, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/lib.rs:164:1: 171:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (std::string::String, core::result::Result<(), Errors>),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:164:43: 164:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/lib.rs:164:34: 164:38 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/lib.rs:164:26: 164:32 (#0),
                            ),
                        ),
                        pat_span: idna/src/lib.rs:164:26: 164:32 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:164:26: 164:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                idna/src/lib.rs:165:25: 169:6 (#0),
                            ),
                        ),
                        pat_span: idna/src/lib.rs:165:9: 165:22 (#0),
                    },
                ),
            ),
        ),
        ty: std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:165:10: 165:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                idna/src/lib.rs:165:25: 169:6 (#0),
                            ),
                        ),
                        pat_span: idna/src/lib.rs:165:9: 165:22 (#0),
                    },
                ),
            ),
        ),
        ty: core::result::Result<(), Errors>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:165:15: 165:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (std::borrow::Cow<'{erased}, str>, core::result::Result<(), Errors>),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:165:25: 169:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} uts46::Uts46,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:165:25: 165:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: uts46::Uts46,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:165:25: 165:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:166:9: 166:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:166:9: 166:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:166:9: 166:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: uts46::Hyphens,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:168:9: 168:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/lib.rs:170:5: 170:31 (#0),
                },
            ),
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:170:6: 170:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/lib.rs:170:5: 170:31 (#0),
                },
            ),
        ),
        ty: std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:170:6: 170:9 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/lib.rs:170:5: 170:31 (#0),
                },
            ),
        ),
        ty: core::result::Result<(), Errors>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/lib.rs:170:24: 170:30 (#0),
            scope: scope[0],
        },
    },
]