[
    BasicBlockData {
        statements: [
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &((*_1).0: idna_adapter::Adapter),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &(*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1490:33: 1490:52 (#0),
                    scope: scope[0],
                },
                kind: _14 = core::slice::<impl [char]>::iter(move _15) -> [return: bb1, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1490:33: 1490:61 (#0),
                    scope: scope[0],
                },
                kind: _13 = <core::slice::Iter<'_, char> as core::iter::Iterator>::copied::<'_, char>(move _14) -> [return: bb2, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1488:18: 1490:62 (#0),
                    scope: scope[0],
                },
                kind: _11 = idna_adapter::Adapter::normalize_validate::<'_, core::iter::Copied<core::slice::Iter<'_, char>>>(move _12, move _13) -> [return: bb3, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_12),
            StorageLive(_16),
            StorageLive(_17),
            _17 = &_5,
            _16 = {closure@idna/src/uts46.rs:1491:18: 1491:21} { deny_list_deny_dot: move _17 },
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1488:18: 1491:90 (#0),
                    scope: scope[0],
                },
                kind: _10 = <impl core::iter::Iterator<Item = char> + '_ as core::iter::Iterator>::map::<char, {closure@idna/src/uts46.rs:1491:18: 1491:21}>(move _11, move _16) -> [return: bb4, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1488:18: 1491:90 (#550),
                    scope: scope[0],
                },
                kind: _9 = <core::iter::Map<impl core::iter::Iterator<Item = char> + '_, {closure@idna/src/uts46.rs:1491:18: 1491:21}> as core::iter::IntoIterator>::into_iter(move _10) -> [return: bb5, unwind: bb37],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            PlaceMention(_9),
            StorageLive(_18),
            _18 = move _9,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1488:9: 1500:10 (#549),
                    scope: scope[1],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1488:9: 1500:10 (#549),
                    scope: scope[1],
                },
                kind: falseUnwind -> [real: bb7, unwind: bb35],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            StorageLive(_23),
            _23 = &mut _18,
            _22 = &mut (*_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1488:18: 1491:90 (#550),
                    scope: scope[1],
                },
                kind: _21 = <core::iter::Map<impl core::iter::Iterator<Item = char> + '_, {closure@idna/src/uts46.rs:1491:18: 1491:21}> as core::iter::Iterator>::next(move _22) -> [return: bb8, unwind: bb35],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            PlaceMention(_21),
            _24 = discriminant(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1488:18: 1491:90 (#550),
                    scope: scope[1],
                },
                kind: switchInt(move _24) -> [0: bb10, 1: bb11, otherwise: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1488:18: 1491:90 (#550),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1488:9: 1500:10 (#549),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_26),
            _26 = ((_21 as Some).0: char),
            StorageLive(_27),
            StorageLive(_28),
            StorageLive(_29),
            _29 = _26,
            _28 = Eq(move _29, const 'ï¿½'),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1493:16: 1493:31 (#0),
                    scope: scope[2],
                },
                kind: switchInt(move _28) -> [0: bb16, otherwise: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _8 = const (),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1500:9: 1500:10 (#549),
                    scope: scope[0],
                },
                kind: drop(_18) -> [return: bb19, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            StorageLive(_30),
            StorageLive(_31),
            _31 = _6,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1494:20: 1494:29 (#0),
                    scope: scope[2],
                },
                kind: switchInt(move _31) -> [0: bb15, otherwise: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const true,
            StorageDead(_31),
            StorageDead(_30),
            StorageDead(_28),
            StorageDead(_27),
            StorageDead(_26),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1500:9: 1500:10 (#549),
                    scope: scope[0],
                },
                kind: drop(_18) -> [return: bb32, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _30 = const (),
            StorageDead(_31),
            StorageDead(_30),
            (*_7) = const true,
            _27 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1493:13: 1498:14 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb17,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            _27 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1493:13: 1498:14 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb17,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_27),
            StorageLive(_33),
            StorageLive(_34),
            _34 = &mut (*_2),
            StorageLive(_35),
            _35 = _26,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1499:13: 1499:34 (#0),
                    scope: scope[2],
                },
                kind: _33 = smallvec::SmallVec::<[char; 253]>::push(move _34, move _35) -> [return: bb18, unwind: bb35],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
            StorageDead(_34),
            StorageDead(_33),
            _20 = const (),
            StorageDead(_26),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_20),
            _19 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1488:9: 1500:10 (#549),
                    scope: scope[1],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1500:9: 1500:10 (#549),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb20, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
            StorageLive(_36),
            StorageLive(_37),
            StorageLive(_38),
            _38 = &mut (*_2),
            StorageLive(_39),
            StorageLive(_40),
            _40 = _3,
            _39 = core::ops::RangeFrom::<usize> { start: move _40 },
            StorageDead(_40),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1501:44: 1501:67 (#0),
                    scope: scope[0],
                },
                kind: _37 = <smallvec::SmallVec<[char; 253]> as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _38, move _39) -> [return: bb21, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            StorageDead(_38),
            _36 = &mut (*_37),
            FakeRead(ForLet(None), _36),
            StorageLive(_41),
            StorageLive(_42),
            StorageLive(_43),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            _46 = &mut (*_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1503:13: 1504:28 (#0),
                    scope: scope[4],
                },
                kind: _45 = core::slice::<impl [char]>::iter_mut(move _46) -> [return: bb22, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageLive(_47),
            StorageLive(_48),
            _48 = &(*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1505:22: 1505:41 (#0),
                    scope: scope[4],
                },
                kind: _47 = core::slice::<impl [char]>::iter(move _48) -> [return: bb23, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_48),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1503:13: 1505:42 (#0),
                    scope: scope[4],
                },
                kind: _44 = <core::slice::IterMut<'_, char> as core::iter::Iterator>::zip::<core::slice::Iter<'_, char>>(move _45, move _47) -> [return: bb24, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _43 = &mut _44,
            StorageDead(_47),
            StorageDead(_45),
            StorageLive(_49),
            _49 = {closure@idna/src/uts46.rs:1506:31: 1506:52},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1503:13: 1514:19 (#0),
                    scope: scope[4],
                },
                kind: _42 = <core::iter::Zip<core::slice::IterMut<'_, char>, core::slice::Iter<'_, char>> as core::iter::Iterator>::try_for_each::<{closure@idna/src/uts46.rs:1506:31: 1506:52}, core::result::Result<(), ()>>(move _43, move _49) -> [return: bb25, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            StorageDead(_43),
            PlaceMention(_42),
            _50 = discriminant(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1502:16: 1502:23 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _50) -> [1: bb26, otherwise: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1502:16: 1502:23 (#0),
                    scope: scope[4],
                },
                kind: falseEdge -> [real: bb27, imaginary: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_51),
            StorageLive(_52),
            _52 = _6,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1516:16: 1516:25 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _52) -> [0: bb29, otherwise: bb28],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const true,
            StorageDead(_52),
            StorageDead(_51),
            StorageDead(_44),
            StorageDead(_42),
            StorageDead(_41),
            StorageDead(_37),
            StorageDead(_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb34,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _51 = const (),
            StorageDead(_52),
            StorageDead(_51),
            (*_7) = const true,
            _41 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1502:9: 1520:10 (#0),
                    scope: scope[3],
                },
                kind: goto -> bb31,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _41 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1502:9: 1520:10 (#0),
                    scope: scope[3],
                },
                kind: goto -> bb31,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
            StorageDead(_42),
            StorageDead(_41),
            _0 = const false,
            StorageDead(_37),
            StorageDead(_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1522:6: 1522:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb34,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1500:9: 1500:10 (#549),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb33, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb34,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1522:6: 1522:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1500:9: 1500:10 (#549),
                    scope: scope[0],
                },
                kind: drop(_18) -> [return: bb36, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1500:9: 1500:10 (#549),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb39, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1491:89: 1491:90 (#550),
                    scope: scope[0],
                },
                kind: drop(_10) -> [return: bb39, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1491:89: 1491:90 (#0),
                    scope: scope[0],
                },
                kind: drop(_11) -> [return: bb39, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1479:5: 1522:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1487:10: 1487:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} uts46::Uts46,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1480:9: 1480:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:1481:24: 1481:50 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:1481:9: 1481:22 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1481:9: 1481:22 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut smallvec::SmallVec<[char; 253_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1481:9: 1481:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:1482:30: 1482:35 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:1482:9: 1482:28 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1482:9: 1482:28 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1482:9: 1482:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:1483:23: 1483:30 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:1483:9: 1483:21 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1483:9: 1483:21 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1483:9: 1483:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:1484:29: 1484:33 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:1484:9: 1484:27 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1484:9: 1484:27 (#0),
                    },
                ),
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1484:9: 1484:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:1485:20: 1485:24 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:1485:9: 1485:18 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1485:9: 1485:18 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1485:9: 1485:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:1486:21: 1486:30 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:1486:9: 1486:19 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1486:9: 1486:19 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1486:9: 1486:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1488:9: 1500:10 (#549),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Map<Alias(Opaque, AliasTy { args: ['{erased}, core::iter::Copied<core::slice::Iter<'{erased}, char>>, '{erased}], def_id: DefId(20:84 ~ idna_adapter[b034]::{impl#5}::normalize_validate::{opaque#0}) }), Closure(DefId(0:212 ~ idna[9561]::uts46::{impl#4}::after_punycode_decode::{closure#0}), [i16, Binder { value: extern "RustCall" fn((char,)) -> char, bound_vars: [] }, (&'{erased} u128,)])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1488:18: 1491:90 (#550),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Map<Alias(Opaque, AliasTy { args: ['{erased}, core::iter::Copied<core::slice::Iter<'{erased}, char>>, '{erased}], def_id: DefId(20:84 ~ idna_adapter[b034]::{impl#5}::normalize_validate::{opaque#0}) }), Closure(DefId(0:212 ~ idna[9561]::uts46::{impl#4}::after_punycode_decode::{closure#0}), [i16, Binder { value: extern "RustCall" fn((char,)) -> char, bound_vars: [] }, (&'{erased} u128,)])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1488:18: 1491:90 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Alias(
            Opaque,
            AliasTy {
                args: [
                    '{erased},
                    core::iter::Copied<core::slice::Iter<'{erased}, char>>,
                    '{erased},
                ],
                def_id: DefId(20:84 ~ idna_adapter[b034]::{impl#5}::normalize_validate::{opaque#0}),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1488:18: 1490:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} idna_adapter::Adapter,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1488:18: 1489:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Copied<core::slice::Iter<'{erased}, char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1490:33: 1490:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, char>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1490:33: 1490:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1490:33: 1490:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:212 ~ idna[9561]::uts46::{impl#4}::after_punycode_decode::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn((char,)) -> char, bound_vars: [] },
                (&'{erased} u128,),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1491:18: 1491:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u128,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1491:18: 1491:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _9,
                                ),
                                idna/src/uts46.rs:1488:18: 1491:90 (#550),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1488:18: 1491:90 (#550),
                    },
                ),
            ),
        ),
        ty: core::iter::Map<Alias(Opaque, AliasTy { args: ['{erased}, core::iter::Copied<core::slice::Iter<'{erased}, char>>, '{erased}], def_id: DefId(20:84 ~ idna_adapter[b034]::{impl#5}::normalize_validate::{opaque#0}) }), Closure(DefId(0:212 ~ idna[9561]::uts46::{impl#4}::after_punycode_decode::{closure#0}), [i16, Binder { value: extern "RustCall" fn((char,)) -> char, bound_vars: [] }, (&'{erased} u128,)])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1488:18: 1491:90 (#550),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1479:5: 1522:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1488:18: 1491:90 (#550),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<char>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1488:18: 1491:90 (#550),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Map<Alias(Opaque, AliasTy { args: ['{erased}, core::iter::Copied<core::slice::Iter<'{erased}, char>>, '{erased}], def_id: DefId(20:84 ~ idna_adapter[b034]::{impl#5}::normalize_validate::{opaque#0}) }), Closure(DefId(0:212 ~ idna[9561]::uts46::{impl#4}::after_punycode_decode::{closure#0}), [i16, Binder { value: extern "RustCall" fn((char,)) -> char, bound_vars: [] }, (&'{erased} u128,)])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1488:18: 1491:90 (#550),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Map<Alias(Opaque, AliasTy { args: ['{erased}, core::iter::Copied<core::slice::Iter<'{erased}, char>>, '{erased}], def_id: DefId(20:84 ~ idna_adapter[b034]::{impl#5}::normalize_validate::{opaque#0}) }), Closure(DefId(0:212 ~ idna[9561]::uts46::{impl#4}::after_punycode_decode::{closure#0}), [i16, Binder { value: extern "RustCall" fn((char,)) -> char, bound_vars: [] }, (&'{erased} u128,)])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1488:18: 1491:90 (#550),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1488:9: 1500:10 (#549),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1488:9: 1500:10 (#549),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _21,
                                ),
                                idna/src/uts46.rs:1488:18: 1491:90 (#550),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1488:13: 1488:14 (#551),
                    },
                ),
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1488:13: 1488:14 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1493:13: 1498:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1493:16: 1493:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1493:16: 1493:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1494:17: 1496:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1494:20: 1494:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1494:30: 1496:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1499:13: 1499:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut smallvec::SmallVec<[char; 253_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1499:13: 1499:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1499:32: 1499:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:1501:26: 1501:67 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1501:13: 1501:23 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1501:13: 1501:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1501:44: 1501:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut smallvec::SmallVec<[char; 253_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1501:31: 1501:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeFrom<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1501:45: 1501:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1501:45: 1501:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1502:9: 1520:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1503:13: 1514:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Zip<core::slice::IterMut<'{erased}, char>, core::slice::Iter<'{erased}, char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1503:13: 1505:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Zip<core::slice::IterMut<'{erased}, char>, core::slice::Iter<'{erased}, char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1503:13: 1505:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::IterMut<'{erased}, char>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1503:13: 1504:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1503:13: 1503:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, char>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1505:22: 1505:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1505:22: 1505:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:213 ~ idna[9561]::uts46::{impl#4}::after_punycode_decode::{closure#1}),
            [
                i16,
                Binder { value: extern "RustCall" fn(((&'{erased} mut char, &'{erased} char),)) -> core::result::Result<(), ()>, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1506:31: 1514:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1502:16: 1502:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1516:13: 1518:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1516:16: 1516:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1516:26: 1518:14 (#0),
            scope: scope[0],
        },
    },
]