[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:212:18: 212:23 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb2, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9: 30:39 (#20),
                    scope: scope[0],
                },
                kind: _5 = core::panicking::panic(const "IDNA 2008 rules are no longer supported") -> bb3,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = const (),
            StorageDead(_4),
            StorageDead(_3),
            _0 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:214:6: 214:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:211:5: 214:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: deprecated::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:211:58: 211:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                ImplicitSelf(
                    Mut,
                ),
            ),
        ),
        ty: deprecated::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:211:32: 211:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/deprecated.rs:211:49: 211:53 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/deprecated.rs:211:42: 211:47 (#0),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:211:42: 211:47 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:211:42: 211:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:212:9: 212:67 (#16),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:212:18: 212:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9: 30:39 (#20),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9: 30:39 (#20),
            scope: scope[0],
        },
    },
]