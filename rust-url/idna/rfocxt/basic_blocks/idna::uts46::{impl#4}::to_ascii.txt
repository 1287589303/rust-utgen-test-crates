[
    BasicBlockData {
        statements: [
            StorageLive(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:534:21: 534:34 (#0),
                    scope: scope[0],
                },
                kind: _6 = std::string::String::new() -> [return: bb1, unwind: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*_1),
            StorageLive(_9),
            _9 = &(*_2),
            StorageLive(_10),
            _10 = _3,
            StorageLive(_11),
            _11 = _4,
            StorageLive(_12),
            _12 = uts46::ErrorPolicy::FailFast,
            StorageLive(_13),
            _13 = {closure@idna/src/uts46.rs:540:13: 540:22},
            StorageLive(_14),
            StorageLive(_15),
            _15 = &mut _6,
            _14 = &mut (*_15),
            StorageLive(_16),
            _16 = core::option::Option::<&mut std::string::String>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:535:15: 543:10 (#0),
                    scope: scope[1],
                },
                kind: _7 = uts46::Uts46::process::<std::string::String, {closure@idna/src/uts46.rs:540:13: 540:22}>(move _8, move _9, move _10, move _11, move _12, move _13, move _14, move _16) -> [return: bb2, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_14),
            StorageDead(_13),
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_8),
            PlaceMention(_7),
            _19 = discriminant(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:535:9: 543:10 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _19) -> [0: bb4, 1: bb7, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:535:15: 543:10 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _17 = discriminant(((_7 as Ok).0: uts46::ProcessingSuccess)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:535:9: 543:10 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _17) -> [0: bb5, 1: bb6, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:545:13: 545:47 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:555:13: 555:47 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb25, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _18 = discriminant(((_7 as Err).0: uts46::ProcessingError)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:535:9: 543:10 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _18) -> [0: bb8, 1: bb9, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:565:13: 565:48 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb40, imaginary: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_57),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:119:9: 119:77 (#102),
                    scope: scope[1],
                },
                kind: _57 = core::panicking::panic(const "internal error: entered unreachable code") -> bb46,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            StorageLive(_23),
            _23 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:546:50: 546:93 (#0),
                    scope: scope[1],
                },
                kind: _22 = core::str::from_utf8_unchecked(move _23) -> [return: bb11, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _21 = &(*_22),
            StorageDead(_23),
            _20 = std::borrow::Cow::<'_, str>::Borrowed(move _21),
            StorageDead(_21),
            FakeRead(ForLet(None), _20),
            StorageDead(_22),
            StorageLive(_24),
            StorageLive(_25),
            _25 = &_5,
            StorageLive(_26),
            StorageLive(_27),
            _27 = uts46::DnsLength::Ignore,
            _26 = &_27,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:547:20: 547:51 (#0),
                    scope: scope[2],
                },
                kind: _24 = <uts46::DnsLength as core::cmp::PartialEq>::ne(move _25, move _26) -> [return: bb12, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:547:20: 547:51 (#0),
                    scope: scope[2],
                },
                kind: switchInt(move _24) -> [0: bb20, otherwise: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageDead(_26),
            StorageDead(_25),
            StorageLive(_28),
            StorageLive(_29),
            StorageLive(_30),
            StorageLive(_31),
            StorageLive(_32),
            _32 = &_20,
            _31 = &(*_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:548:43: 548:47 (#0),
                    scope: scope[2],
                },
                kind: _30 = <std::borrow::Cow<'_, str> as core::ops::Deref>::deref(move _31) -> [return: bb14, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _29 = &(*_30),
            StorageDead(_31),
            StorageLive(_33),
            StorageLive(_34),
            _34 = &_5,
            StorageLive(_35),
            StorageLive(_36),
            _36 = uts46::DnsLength::VerifyAllowRootDot,
            _35 = &_36,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:548:49: 548:92 (#0),
                    scope: scope[2],
                },
                kind: _33 = <uts46::DnsLength as core::cmp::PartialEq>::eq(move _34, move _35) -> [return: bb15, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
            StorageDead(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:548:25: 548:93 (#0),
                    scope: scope[2],
                },
                kind: _28 = uts46::verify_dns_length(move _29, move _33) -> [return: bb16, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:548:25: 548:93 (#0),
                    scope: scope[2],
                },
                kind: switchInt(move _28) -> [0: bb18, otherwise: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
            StorageDead(_29),
            StorageDead(_36),
            StorageDead(_32),
            StorageDead(_30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[2],
                },
                kind: goto -> bb21,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
            StorageDead(_29),
            StorageDead(_36),
            StorageDead(_32),
            StorageDead(_30),
            StorageLive(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:550:25: 550:49 (#0),
                    scope: scope[2],
                },
                kind: _37 = <Errors as core::default::Default>::default() -> [return: bb19, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::result::Result::<std::borrow::Cow<'_, str>, Errors>::Err(move _37),
            StorageDead(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageDead(_26),
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[2],
                },
                kind: goto -> bb21,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_38),
            _38 = move _20,
            _0 = core::result::Result::<std::borrow::Cow<'_, str>, Errors>::Ok(move _38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:552:27: 552:28 (#0),
                    scope: scope[2],
                },
                kind: drop(_38) -> [return: bb22, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:554:13: 554:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_20) -> [return: bb24, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:554:13: 554:14 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb42,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_39),
            StorageLive(_40),
            _40 = move _6,
            _39 = std::borrow::Cow::<'_, str>::Owned(move _40),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:556:53: 556:54 (#0),
                    scope: scope[1],
                },
                kind: drop(_40) -> [return: bb26, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_40),
            FakeRead(ForLet(None), _39),
            AscribeUserType(_39, o, UserTypeProjection { base: UserType(1), projs: [] }),
            StorageLive(_41),
            StorageLive(_42),
            _42 = &_5,
            StorageLive(_43),
            StorageLive(_44),
            _44 = uts46::DnsLength::Ignore,
            _43 = &_44,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:557:20: 557:51 (#0),
                    scope: scope[3],
                },
                kind: _41 = <uts46::DnsLength as core::cmp::PartialEq>::ne(move _42, move _43) -> [return: bb27, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:557:20: 557:51 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _41) -> [0: bb35, otherwise: bb28],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
            StorageDead(_43),
            StorageDead(_42),
            StorageLive(_45),
            StorageLive(_46),
            StorageLive(_47),
            StorageLive(_48),
            StorageLive(_49),
            _49 = &_39,
            _48 = &(*_49),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:558:43: 558:47 (#0),
                    scope: scope[3],
                },
                kind: _47 = <std::borrow::Cow<'_, str> as core::ops::Deref>::deref(move _48) -> [return: bb29, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _46 = &(*_47),
            StorageDead(_48),
            StorageLive(_50),
            StorageLive(_51),
            _51 = &_5,
            StorageLive(_52),
            StorageLive(_53),
            _53 = uts46::DnsLength::VerifyAllowRootDot,
            _52 = &_53,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:558:49: 558:92 (#0),
                    scope: scope[3],
                },
                kind: _50 = <uts46::DnsLength as core::cmp::PartialEq>::eq(move _51, move _52) -> [return: bb30, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_52),
            StorageDead(_51),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:558:25: 558:93 (#0),
                    scope: scope[3],
                },
                kind: _45 = uts46::verify_dns_length(move _46, move _50) -> [return: bb31, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:558:25: 558:93 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _45) -> [0: bb33, otherwise: bb32],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_50),
            StorageDead(_46),
            StorageDead(_53),
            StorageDead(_49),
            StorageDead(_47),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[3],
                },
                kind: goto -> bb36,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_50),
            StorageDead(_46),
            StorageDead(_53),
            StorageDead(_49),
            StorageDead(_47),
            StorageLive(_54),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:560:25: 560:49 (#0),
                    scope: scope[3],
                },
                kind: _54 = <Errors as core::default::Default>::default() -> [return: bb34, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::result::Result::<std::borrow::Cow<'_, str>, Errors>::Err(move _54),
            StorageDead(_54),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                    scope: scope[3],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
            StorageDead(_43),
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[3],
                },
                kind: goto -> bb36,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_55),
            _55 = move _39,
            _0 = core::result::Result::<std::borrow::Cow<'_, str>, Errors>::Ok(move _55),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:562:27: 562:28 (#0),
                    scope: scope[3],
                },
                kind: drop(_55) -> [return: bb37, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                    scope: scope[3],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_45),
            StorageDead(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:564:13: 564:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_39) -> [return: bb39, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:564:13: 564:14 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb42,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:565:56: 565:80 (#0),
                    scope: scope[1],
                },
                kind: _56 = <Errors as core::default::Default>::default() -> [return: bb41, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::result::Result::<std::borrow::Cow<'_, str>, Errors>::Err(move _56),
            StorageDead(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:565:80: 565:81 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb42,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:568:5: 568:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb43, unwind: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_15),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:568:6: 568:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:564:13: 564:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_39) -> [return: bb46, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:554:13: 554:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_20) -> [return: bb46, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:568:5: 568:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb47, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:527:5: 568:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<std::borrow::Cow<'{erased}, str>, Errors>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:533:10: 533:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} uts46::Uts46,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:528:9: 528:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:529:22: 529:30 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:529:9: 529:20 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:529:9: 529:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:529:9: 529:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:530:26: 530:39 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:530:9: 530:24 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:530:9: 530:24 (#0),
                    },
                ),
            ),
        ),
        ty: uts46::AsciiDenyList,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:530:9: 530:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:531:18: 531:25 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:531:9: 531:16 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:531:9: 531:16 (#0),
                    },
                ),
            ),
        ),
        ty: uts46::Hyphens,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:531:9: 531:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:532:21: 532:30 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:532:9: 532:19 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:532:9: 532:19 (#0),
                    },
                ),
            ),
        ),
        ty: uts46::DnsLength,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:532:9: 532:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:534:21: 534:34 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:534:13: 534:18 (#0),
                    },
                ),
            ),
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:534:13: 534:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:535:9: 567:10 (#0),
                },
            ),
        ),
        ty: core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:535:15: 543:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:535:9: 567:10 (#0),
                },
            ),
        ),
        ty: &'{erased} uts46::Uts46,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:535:15: 535:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:535:9: 567:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:536:13: 536:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:535:9: 567:10 (#0),
                },
            ),
        ),
        ty: uts46::AsciiDenyList,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:537:13: 537:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:535:9: 567:10 (#0),
                },
            ),
        ),
        ty: uts46::Hyphens,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:538:13: 538:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:535:9: 567:10 (#0),
                },
            ),
        ),
        ty: uts46::ErrorPolicy,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:539:13: 539:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:535:9: 567:10 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:176 ~ idna[9561]::uts46::{impl#4}::to_ascii::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn((&'^0 [char], &'^1 [char], bool)) -> bool, bound_vars: [Region(BrAnon), Region(BrAnon)] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:540:13: 540:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:535:9: 567:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:541:13: 541:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:535:9: 567:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:541:13: 541:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:535:9: 567:10 (#0),
                },
            ),
        ),
        ty: core::option::Option<&'{erased} mut std::string::String>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:542:13: 542:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:545:16: 545:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:565:17: 565:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:545:13: 545:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:546:27: 546:96 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:546:21: 546:24 (#0),
                    },
                ),
            ),
        ),
        ty: std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:546:21: 546:24 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:546:41: 546:95 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:546:50: 546:93 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:546:50: 546:93 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:546:50: 546:93 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:546:81: 546:92 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:547:20: 547:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                },
            ),
        ),
        ty: &'{erased} uts46::DnsLength,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:547:20: 547:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                },
            ),
        ),
        ty: &'{erased} uts46::DnsLength,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:547:34: 547:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                },
            ),
        ),
        ty: uts46::DnsLength,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:547:34: 547:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:548:25: 548:93 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:548:43: 548:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:548:43: 548:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                },
            ),
        ),
        ty: &'{erased} std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:548:43: 548:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                },
            ),
        ),
        ty: &'{erased} std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:548:43: 548:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:548:49: 548:92 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                },
            ),
        ),
        ty: &'{erased} uts46::DnsLength,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:548:49: 548:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                },
            ),
        ),
        ty: &'{erased} uts46::DnsLength,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:548:63: 548:92 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:547:17: 553:18 (#0),
                },
            ),
        ),
        ty: uts46::DnsLength,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:548:63: 548:92 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: Errors,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:550:25: 550:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:552:24: 552:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:556:41: 556:54 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:556:21: 556:24 (#0),
                    },
                ),
            ),
        ),
        ty: std::borrow::Cow<'{erased}, str>,
        user_ty: Some(
            UserTypeProjections {
                contents: [
                    (
                        UserTypeProjection {
                            base: UserType(0),
                            projs: [],
                        },
                        idna/src/uts46.rs:556:26: 556:38 (#0),
                    ),
                ],
            },
        ),
        source_info: SourceInfo {
            span: idna/src/uts46.rs:556:21: 556:24 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:556:52: 556:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:557:20: 557:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                },
            ),
        ),
        ty: &'{erased} uts46::DnsLength,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:557:20: 557:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                },
            ),
        ),
        ty: &'{erased} uts46::DnsLength,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:557:34: 557:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                },
            ),
        ),
        ty: uts46::DnsLength,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:557:34: 557:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:558:25: 558:93 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:558:43: 558:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:558:43: 558:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                },
            ),
        ),
        ty: &'{erased} std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:558:43: 558:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                },
            ),
        ),
        ty: &'{erased} std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:558:43: 558:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:558:49: 558:92 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                },
            ),
        ),
        ty: &'{erased} uts46::DnsLength,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:558:49: 558:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                },
            ),
        ),
        ty: &'{erased} uts46::DnsLength,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:558:63: 558:92 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:557:17: 563:18 (#0),
                },
            ),
        ),
        ty: uts46::DnsLength,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:558:63: 558:92 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: Errors,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:560:25: 560:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:562:24: 562:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: Errors,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:565:56: 565:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:535:9: 567:10 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:119:9: 119:77 (#102),
            scope: scope[0],
        },
    },
]