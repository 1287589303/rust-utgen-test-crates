[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:146:8: 146:19 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::slice::<impl [u8]>::len(move _5) -> [return: bb1, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _3 = Ge(move _4, const 4_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:146:8: 146:24 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [0: bb9, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = const 2_usize,
            _9 = Len((*_1)),
            _10 = Lt(_8, _9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:146:28: 146:36 (#0),
                    scope: scope[0],
                },
                kind: assert(move _10, "index out of bounds: the length is {} but the index is {}", move _9, _8) -> [success: bb3, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = (*_1)[_8],
            _6 = Eq(move _7, const 45_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:146:28: 146:44 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _6) -> [0: bb8, otherwise: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            _13 = const 3_usize,
            _14 = Len((*_1)),
            _15 = Lt(_13, _14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:146:48: 146:56 (#0),
                    scope: scope[0],
                },
                kind: assert(move _15, "index out of bounds: the length is {} but the index is {}", move _14, _13) -> [success: bb5, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _12 = (*_1)[_13],
            _11 = Eq(move _12, const 45_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:146:48: 146:64 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _11) -> [0: bb7, otherwise: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_12),
            _0 = const false,
            StorageDead(_11),
            StorageDead(_6),
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb10,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb10,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb10,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _2 = const (),
            StorageDead(_11),
            StorageDead(_6),
            StorageDead(_3),
            StorageDead(_2),
            StorageLive(_17),
            StorageLive(_18),
            _18 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:149:35: 149:54 (#0),
                    scope: scope[1],
                },
                kind: _17 = core::slice::<impl [u8]>::split_first(move _18) -> [return: bb11, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            PlaceMention(_17),
            _19 = discriminant(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:149:12: 149:32 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _19) -> [1: bb12, otherwise: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:149:12: 149:32 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb13, imaginary: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_20),
            _20 = (*(((_17 as Some).0: (&u8, &[u8])).0: &u8)),
            StorageLive(_21),
            _21 = (((_17 as Some).0: (&u8, &[u8])).1: &[u8]),
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            _24 = _20,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:161:13: 161:51 (#0),
                    scope: scope[1],
                },
                kind: _23 = uts46::in_inclusive_range8(move _24, const 97_u8, const 122_u8) -> [return: bb14, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:161:13: 161:51 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _23) -> [0: bb16, otherwise: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            _22 = const (),
            StorageDead(_23),
            StorageDead(_22),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = _21,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:164:19: 164:23 (#277),
                    scope: scope[1],
                },
                kind: _27 = <&[u8] as core::iter::IntoIterator>::into_iter(move _28) -> [return: bb17, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            _0 = const false,
            StorageDead(_23),
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            PlaceMention(_27),
            StorageLive(_29),
            _29 = move _27,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:164:9: 177:10 (#276),
                    scope: scope[2],
                },
                kind: goto -> bb18,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:164:9: 177:10 (#276),
                    scope: scope[2],
                },
                kind: falseUnwind -> [real: bb19, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_31),
            StorageLive(_32),
            StorageLive(_33),
            StorageLive(_34),
            _34 = &mut _29,
            _33 = &mut (*_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:164:19: 164:23 (#277),
                    scope: scope[2],
                },
                kind: _32 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::next(move _33) -> [return: bb20, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
            PlaceMention(_32),
            _35 = discriminant(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:164:19: 164:23 (#277),
                    scope: scope[2],
                },
                kind: switchInt(move _35) -> [0: bb22, 1: bb23, otherwise: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:164:19: 164:23 (#277),
                    scope: scope[2],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:164:9: 177:10 (#276),
                    scope: scope[2],
                },
                kind: falseEdge -> [real: bb24, imaginary: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_37),
            _37 = (*((_32 as Some).0: &u8)),
            StorageLive(_39),
            StorageLive(_40),
            StorageLive(_41),
            _41 = _37,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:167:16: 167:50 (#0),
                    scope: scope[3],
                },
                kind: _40 = uts46::in_inclusive_range8(move _41, const 97_u8, const 122_u8) -> [return: bb25, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _26 = const (),
            StorageDead(_34),
            StorageDead(_32),
            StorageDead(_31),
            StorageDead(_29),
            StorageDead(_27),
            StorageDead(_26),
            StorageLive(_51),
            StorageLive(_52),
            StorageLive(_53),
            _53 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:178:9: 178:21 (#0),
                    scope: scope[1],
                },
                kind: _52 = core::slice::<impl [u8]>::last(move _53) -> [return: bb34, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:167:16: 167:50 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _40) -> [0: bb27, otherwise: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
            StorageDead(_40),
            StorageDead(_39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[3],
                },
                kind: goto -> bb33,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
            _39 = const (),
            StorageDead(_40),
            StorageDead(_39),
            StorageLive(_43),
            StorageLive(_44),
            StorageLive(_45),
            _45 = _37,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:170:16: 170:50 (#0),
                    scope: scope[3],
                },
                kind: _44 = uts46::in_inclusive_range8(move _45, const 48_u8, const 57_u8) -> [return: bb28, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:170:16: 170:50 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _44) -> [0: bb30, otherwise: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_45),
            StorageDead(_44),
            StorageDead(_43),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[3],
                },
                kind: goto -> bb33,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_45),
            _43 = const (),
            StorageDead(_44),
            StorageDead(_43),
            StorageLive(_47),
            StorageLive(_48),
            StorageLive(_49),
            _49 = _37,
            _48 = Eq(move _49, const 45_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:173:16: 173:25 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _48) -> [0: bb32, otherwise: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            StorageDead(_48),
            StorageDead(_47),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[3],
                },
                kind: goto -> bb33,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            _47 = const (),
            StorageDead(_48),
            StorageDead(_47),
            _0 = const false,
            StorageDead(_37),
            StorageDead(_34),
            StorageDead(_32),
            StorageDead(_31),
            StorageDead(_29),
            StorageDead(_27),
            StorageDead(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
            StorageDead(_34),
            StorageDead(_32),
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[2],
                },
                kind: goto -> bb18,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _51 = &_52,
            StorageDead(_53),
            StorageLive(_54),
            StorageLive(_55),
            StorageLive(_56),
            StorageLive(_57),
            StorageLive(_58),
            _58 = const 45_u8,
            _57 = &_58,
            _56 = &(*_57),
            _55 = core::option::Option::<&u8>::Some(move _56),
            _54 = &_55,
            StorageDead(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:178:9: 178:36 (#0),
                    scope: scope[1],
                },
                kind: _0 = <core::option::Option<&u8> as core::cmp::PartialEq>::ne(move _51, move _54) -> [return: bb35, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_54),
            StorageDead(_51),
            StorageDead(_58),
            StorageDead(_57),
            StorageDead(_55),
            StorageDead(_52),
            StorageDead(_21),
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:149:5: 182:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb37,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:149:5: 182:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb37,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:183:2: 183:2 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:183:2: 183:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:143:1: 183:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:143:48: 143:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:143:38: 143:43 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:143:31: 143:36 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:143:31: 143:36 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:143:31: 143:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:5: 148:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:8: 146:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:8: 146:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:8: 146:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:28: 146:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:28: 146:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:34: 146:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:28: 146:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:28: 146:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:48: 146:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:48: 146:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:54: 146:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:48: 146:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:48: 146:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:146:65: 148:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:149:5: 182:6 (#0),
                },
            ),
        ),
        ty: core::option::Option<(&'{erased} u8, &'{erased} [u8])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:149:35: 149:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:149:5: 182:6 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:149:35: 149:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:149:12: 149:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _17,
                                ),
                                idna/src/uts46.rs:149:35: 149:54 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:149:12: 149:32 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:149:19: 149:24 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _17,
                                ),
                                idna/src/uts46.rs:149:35: 149:54 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:149:12: 149:32 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:149:26: 149:30 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:161:9: 163:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:161:13: 161:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:161:33: 161:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:161:52: 163:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:164:9: 177:10 (#276),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:164:19: 164:23 (#277),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:164:19: 164:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _27,
                                ),
                                idna/src/uts46.rs:164:19: 164:23 (#277),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:164:19: 164:23 (#277),
                    },
                ),
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:164:19: 164:23 (#277),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:143:1: 183:2 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:164:19: 164:23 (#277),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:164:19: 164:23 (#277),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:164:19: 164:23 (#277),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:164:19: 164:23 (#277),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:164:9: 177:10 (#276),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:164:9: 177:10 (#276),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _32,
                                ),
                                idna/src/uts46.rs:164:19: 164:23 (#277),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:164:13: 164:15 (#278),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:164:14: 164:15 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:164:24: 177:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:167:13: 169:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:167:16: 167:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:167:36: 167:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:167:51: 169:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:170:13: 172:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:170:16: 170:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:170:36: 170:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:170:51: 172:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:173:13: 175:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:173:16: 173:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:173:16: 173:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:173:26: 175:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:178:9: 178:36 (#0),
                },
            ),
        ),
        ty: &'{erased} core::option::Option<&'{erased} u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:178:9: 178:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:178:9: 178:36 (#0),
                },
            ),
        ),
        ty: core::option::Option<&'{erased} u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:178:9: 178:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:178:9: 178:36 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:178:9: 178:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:178:9: 178:36 (#0),
                },
            ),
        ),
        ty: &'{erased} core::option::Option<&'{erased} u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:178:25: 178:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:178:9: 178:36 (#0),
                },
            ),
        ),
        ty: core::option::Option<&'{erased} u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:178:25: 178:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:178:30: 178:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:178:9: 178:36 (#0),
                },
            ),
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:178:30: 178:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:178:9: 178:36 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:178:31: 178:35 (#0),
            scope: scope[0],
        },
    },
]