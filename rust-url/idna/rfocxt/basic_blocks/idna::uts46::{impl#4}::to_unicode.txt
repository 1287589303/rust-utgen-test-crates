[
    BasicBlockData {
        statements: [
            StorageLive(_5),
            _5 = &(*_1),
            StorageLive(_6),
            _6 = &(*_2),
            StorageLive(_7),
            _7 = _3,
            StorageLive(_8),
            _8 = _4,
            StorageLive(_9),
            _9 = {closure@idna/src/uts46.rs:598:71: 598:80},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:598:9: 598:86 (#0),
                    scope: scope[0],
                },
                kind: _0 = uts46::Uts46::to_user_interface::<{closure@idna/src/uts46.rs:598:71: 598:80}>(move _5, move _6, move _7, move _8, move _9) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
            StorageDead(_7),
            StorageDead(_6),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:599:6: 599:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:592:5: 599:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (std::borrow::Cow<'{erased}, str>, core::result::Result<(), Errors>),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:597:10: 597:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} uts46::Uts46,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:593:9: 593:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:594:22: 594:30 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:594:9: 594:20 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:594:9: 594:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:594:9: 594:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:595:26: 595:39 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:595:9: 595:24 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:595:9: 595:24 (#0),
                    },
                ),
            ),
        ),
        ty: uts46::AsciiDenyList,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:595:9: 595:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:596:18: 596:25 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:596:9: 596:16 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:596:9: 596:16 (#0),
                    },
                ),
            ),
        ),
        ty: uts46::Hyphens,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:596:9: 596:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:598:9: 598:86 (#0),
                },
            ),
        ),
        ty: &'{erased} uts46::Uts46,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:598:9: 598:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:598:9: 598:86 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:598:32: 598:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:598:9: 598:86 (#0),
                },
            ),
        ),
        ty: uts46::AsciiDenyList,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:598:45: 598:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:598:9: 598:86 (#0),
                },
            ),
        ),
        ty: uts46::Hyphens,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:598:62: 598:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:598:9: 598:86 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:179 ~ idna[9561]::uts46::{impl#4}::to_unicode::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn((&'^0 [char], &'^1 [char], bool)) -> bool, bound_vars: [Region(BrAnon), Region(BrAnon)] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:598:71: 598:85 (#0),
            scope: scope[0],
        },
    },
]