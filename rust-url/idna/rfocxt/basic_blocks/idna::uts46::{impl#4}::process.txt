[
    BasicBlockData {
        statements: [
            StorageLive(_9),
            StorageLive(_10),
            _10 = &_5,
            StorageLive(_11),
            StorageLive(_12),
            _12 = uts46::ErrorPolicy::FailFast,
            _11 = &_12,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:765:25: 765:62 (#0),
                    scope: scope[0],
                },
                kind: _9 = <uts46::ErrorPolicy as core::cmp::PartialEq>::eq(move _10, move _11) -> [return: bb1, unwind: bb534],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
            FakeRead(ForLet(None), _9),
            StorageDead(_12),
            StorageLive(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:766:33: 766:63 (#0),
                    scope: scope[1],
                },
                kind: _13 = smallvec::SmallVec::<[char; 253]>::new() -> [return: bb2, unwind: bb534],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _13),
            StorageLive(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:767:36: 767:77 (#0),
                    scope: scope[2],
                },
                kind: _14 = smallvec::SmallVec::<[uts46::AlreadyAsciiLabel<'_>; 8]>::new() -> [return: bb3, unwind: bb533],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _14),
            StorageLive(_18),
            StorageLive(_19),
            _19 = &(*_1),
            StorageLive(_20),
            _20 = &(*_2),
            StorageLive(_21),
            _21 = _3,
            StorageLive(_22),
            _22 = _4,
            StorageLive(_23),
            _23 = _9,
            StorageLive(_24),
            StorageLive(_25),
            _25 = &mut _13,
            _24 = &mut (*_25),
            StorageLive(_26),
            StorageLive(_27),
            _27 = &mut _14,
            _26 = &mut (*_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:770:56: 777:10 (#0),
                    scope: scope[3],
                },
                kind: _18 = uts46::Uts46::process_inner(move _19, move _20, move _21, move _22, move _23, move _24, move _26) -> [return: bb4, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            StorageDead(_24),
            StorageDead(_23),
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_19),
            PlaceMention(_18),
            StorageLive(_15),
            _15 = (_18.0: usize),
            StorageLive(_16),
            _16 = (_18.1: bool),
            StorageLive(_17),
            _17 = (_18.2: bool),
            StorageDead(_27),
            StorageDead(_25),
            StorageDead(_18),
            StorageLive(_28),
            StorageLive(_29),
            StorageLive(_30),
            _30 = _15,
            StorageLive(_31),
            StorageLive(_32),
            _32 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:778:33: 778:50 (#0),
                    scope: scope[4],
                },
                kind: _31 = core::slice::<impl [u8]>::len(move _32) -> [return: bb5, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
            _29 = Eq(move _30, move _31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:778:12: 778:50 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _29) -> [0: bb12, otherwise: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            StorageDead(_30),
            StorageLive(_34),
            StorageLive(_35),
            _35 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#107),
                    scope: scope[4],
                },
                kind: switchInt(move _35) -> [0: bb10, otherwise: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_36),
            StorageLive(_37),
            _37 = _17,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:779:28: 779:38 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _37) -> [0: bb9, otherwise: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#108),
                    scope: scope[4],
                },
                kind: _38 = core::panicking::panic(const "assertion failed: !had_errors") -> bb532,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _36 = const (),
            StorageDead(_37),
            StorageDead(_36),
            _34 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#106),
                    scope: scope[4],
                },
                kind: goto -> bb11,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _34 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#106),
                    scope: scope[4],
                },
                kind: goto -> bb11,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
            StorageDead(_34),
            StorageLive(_39),
            _39 = uts46::ProcessingSuccess::Passthrough,
            _0 = core::result::Result::<uts46::ProcessingSuccess, uts46::ProcessingError>::Ok(move _39),
            StorageDead(_39),
            StorageDead(_29),
            StorageDead(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[4],
                },
                kind: goto -> bb528,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            StorageDead(_30),
            _28 = const (),
            StorageDead(_29),
            StorageDead(_28),
            StorageLive(_40),
            StorageLive(_41),
            _41 = _9,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:783:12: 783:21 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _41) -> [0: bb15, otherwise: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_42),
            _42 = _17,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:783:25: 783:35 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _42) -> [0: bb15, otherwise: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_44),
            _44 = uts46::ProcessingError::ValidityError,
            _0 = core::result::Result::<uts46::ProcessingSuccess, uts46::ProcessingError>::Err(move _44),
            StorageDead(_44),
            StorageDead(_42),
            StorageDead(_41),
            StorageDead(_40),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[4],
                },
                kind: goto -> bb528,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _40 = const (),
            StorageDead(_42),
            StorageDead(_41),
            StorageDead(_40),
            StorageLive(_45),
            StorageLive(_46),
            _46 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12: 346:42 (#111),
                    scope: scope[4],
                },
                kind: switchInt(move _46) -> [0: bb17, otherwise: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_47),
            StorageLive(_48),
            StorageLive(_49),
            _49 = &_17,
            StorageLive(_50),
            StorageLive(_51),
            StorageLive(_52),
            StorageLive(_53),
            StorageLive(_54),
            _54 = &_13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:786:38: 786:73 (#0),
                    scope: scope[4],
                },
                kind: _53 = <smallvec::SmallVec<[char; 253]> as core::ops::Deref>::deref(move _54) -> [return: bb18, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _45 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9: 348:10 (#110),
                    scope: scope[4],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _52 = &(*_53),
            StorageDead(_54),
            StorageLive(_55),
            StorageLive(_56),
            StorageLive(_57),
            _57 = const '�',
            _56 = &_57,
            _55 = &(*_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:786:38: 786:73 (#0),
                    scope: scope[4],
                },
                kind: _51 = core::slice::<impl [char]>::contains(move _52, move _55) -> [return: bb19, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
            StorageDead(_52),
            _50 = &_51,
            _48 = (move _49, move _50),
            StorageDead(_50),
            StorageDead(_49),
            PlaceMention(_48),
            StorageLive(_58),
            _58 = (_48.0: &bool),
            StorageLive(_59),
            _59 = (_48.1: &bool),
            StorageLive(_60),
            StorageLive(_61),
            _61 = (*_58),
            StorageLive(_62),
            _62 = (*_59),
            _60 = Eq(move _61, move _62),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21: 40:46 (#112),
                    scope: scope[5],
                },
                kind: switchInt(move _60) -> [0: bb21, otherwise: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_62),
            StorageDead(_61),
            _47 = const (),
            StorageDead(_60),
            StorageDead(_59),
            StorageDead(_58),
            StorageDead(_57),
            StorageDead(_56),
            StorageDead(_53),
            StorageDead(_51),
            StorageDead(_48),
            StorageDead(_47),
            _45 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9: 348:10 (#110),
                    scope: scope[4],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_62),
            StorageDead(_61),
            StorageLive(_64),
            _64 = core::panicking::AssertKind::Eq,
            FakeRead(ForLet(None), _64),
            StorageLive(_65),
            StorageLive(_66),
            _66 = move _64,
            StorageLive(_67),
            StorageLive(_68),
            _68 = &(*_58),
            _67 = &(*_68),
            StorageLive(_69),
            StorageLive(_70),
            _70 = &(*_59),
            _69 = &(*_70),
            StorageLive(_71),
            _71 = core::option::Option::<core::fmt::Arguments<'_>>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21: 45:114 (#112),
                    scope: scope[6],
                },
                kind: _65 = core::panicking::assert_failed::<bool, bool>(move _66, move _67, move _69, move _71) -> bb532,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_45),
            StorageLive(_72),
            StorageLive(_73),
            StorageLive(_74),
            StorageLive(_75),
            StorageLive(_76),
            _76 = &_13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:787:54: 787:88 (#0),
                    scope: scope[8],
                },
                kind: _75 = <smallvec::SmallVec<[char; 253]> as core::ops::Deref>::deref(move _76) -> [return: bb23, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _74 = &(*_75),
            StorageDead(_76),
            StorageLive(_77),
            StorageLive(_78),
            StorageLive(_79),
            _79 = [const '.'],
            _78 = &_79,
            _77 = &(*_78),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:787:54: 787:88 (#0),
                    scope: scope[8],
                },
                kind: _73 = core::slice::<impl [char]>::strip_suffix::<[char; 1]>(move _74, move _77) -> [return: bb24, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_77),
            StorageDead(_74),
            PlaceMention(_73),
            _80 = discriminant(_73),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:787:34: 787:51 (#0),
                    scope: scope[8],
                },
                kind: switchInt(move _80) -> [1: bb25, otherwise: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:787:34: 787:51 (#0),
                    scope: scope[8],
                },
                kind: falseEdge -> [real: bb26, imaginary: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_81),
            _81 = ((_73 as Some).0: &[char]),
            _72 = _81,
            StorageDead(_81),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:787:27: 791:10 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_82),
            StorageLive(_83),
            StorageLive(_84),
            _84 = &_13,
            StorageLive(_85),
            _85 = core::ops::RangeFull,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:790:27: 790:31 (#0),
                    scope: scope[4],
                },
                kind: _83 = <smallvec::SmallVec<[char; 253]> as core::ops::Index<core::ops::RangeFull>>::index(move _84, move _85) -> [return: bb28, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_85),
            StorageDead(_84),
            _82 = &(*_83),
            _72 = &(*_82),
            StorageDead(_82),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:787:27: 791:10 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _72),
            StorageDead(_79),
            StorageDead(_78),
            StorageDead(_75),
            StorageDead(_73),
            StorageLive(_86),
            StorageLive(_87),
            StorageLive(_88),
            StorageLive(_89),
            StorageLive(_90),
            _90 = &(*_72),
            StorageLive(_91),
            _91 = {closure@idna/src/uts46.rs:793:38: 793:41},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:793:19: 793:52 (#0),
                    scope: scope[7],
                },
                kind: _89 = core::slice::<impl [char]>::rsplit::<{closure@idna/src/uts46.rs:793:38: 793:41}>(move _90, move _91) -> [return: bb30, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _88 = &mut _89,
            StorageDead(_91),
            StorageDead(_90),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:793:19: 793:59 (#0),
                    scope: scope[7],
                },
                kind: _87 = <core::slice::RSplit<'_, char, {closure@idna/src/uts46.rs:793:38: 793:41}> as core::iter::Iterator>::next(move _88) -> [return: bb31, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_88),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:793:19: 793:68 (#0),
                    scope: scope[7],
                },
                kind: _86 = core::option::Option::<&[char]>::unwrap(move _87) -> [return: bb32, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_87),
            FakeRead(ForLet(None), _86),
            StorageDead(_89),
            StorageLive(_92),
            _92 = const false,
            FakeRead(ForLet(None), _92),
            StorageLive(_93),
            _93 = const false,
            FakeRead(ForLet(None), _93),
            StorageLive(_94),
            StorageLive(_95),
            StorageLive(_96),
            StorageLive(_97),
            _97 = &_14,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:796:41: 796:64 (#0),
                    scope: scope[11],
                },
                kind: _96 = <smallvec::SmallVec<[uts46::AlreadyAsciiLabel<'_>; 8]> as core::ops::Deref>::deref(move _97) -> [return: bb33, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _95 = &(*_96),
            StorageDead(_97),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:796:41: 796:64 (#0),
                    scope: scope[11],
                },
                kind: _94 = core::slice::<impl [uts46::AlreadyAsciiLabel<'_>]>::iter(move _95) -> [return: bb34, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_95),
            FakeRead(ForLet(None), _94),
            StorageDead(_96),
            StorageLive(_98),
            _98 = _15,
            FakeRead(ForLet(None), _98),
            StorageLive(_99),
            _99 = const false,
            FakeRead(ForLet(None), _99),
            StorageLive(_100),
            StorageLive(_101),
            StorageLive(_102),
            StorageLive(_103),
            StorageLive(_104),
            StorageLive(_105),
            _105 = &_13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:799:22: 799:56 (#0),
                    scope: scope[14],
                },
                kind: _104 = <smallvec::SmallVec<[char; 253]> as core::ops::Deref>::deref(move _105) -> [return: bb35, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _103 = &(*_104),
            StorageDead(_105),
            StorageLive(_106),
            _106 = {closure@idna/src/uts46.rs:799:42: 799:45},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:799:22: 799:56 (#0),
                    scope: scope[14],
                },
                kind: _102 = core::slice::<impl [char]>::split::<{closure@idna/src/uts46.rs:799:42: 799:45}>(move _103, move _106) -> [return: bb36, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_106),
            StorageDead(_103),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:799:22: 799:56 (#331),
                    scope: scope[14],
                },
                kind: _101 = <core::slice::Split<'_, char, {closure@idna/src/uts46.rs:799:42: 799:45}> as core::iter::IntoIterator>::into_iter(move _102) -> [return: bb37, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_102),
            PlaceMention(_101),
            StorageLive(_107),
            _107 = move _101,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:799:9: 910:10 (#330),
                    scope: scope[15],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:799:9: 910:10 (#330),
                    scope: scope[15],
                },
                kind: falseUnwind -> [real: bb39, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_109),
            StorageLive(_110),
            StorageLive(_111),
            StorageLive(_112),
            _112 = &mut _107,
            _111 = &mut (*_112),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:799:22: 799:56 (#331),
                    scope: scope[15],
                },
                kind: _110 = <core::slice::Split<'_, char, {closure@idna/src/uts46.rs:799:42: 799:45}> as core::iter::Iterator>::next(move _111) -> [return: bb40, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_111),
            PlaceMention(_110),
            _113 = discriminant(_110),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:799:22: 799:56 (#331),
                    scope: scope[15],
                },
                kind: switchInt(move _113) -> [0: bb42, 1: bb43, otherwise: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _110),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:799:22: 799:56 (#331),
                    scope: scope[15],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:799:9: 910:10 (#330),
                    scope: scope[15],
                },
                kind: falseEdge -> [real: bb44, imaginary: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_115),
            _115 = ((_110 as Some).0: &[char]),
            StorageLive(_116),
            StorageLive(_117),
            StorageLive(_118),
            StorageLive(_119),
            _119 = &mut _94,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:802:35: 802:63 (#0),
                    scope: scope[16],
                },
                kind: _118 = <core::slice::Iter<'_, uts46::AlreadyAsciiLabel<'_>> as core::iter::Iterator>::next(move _119) -> [return: bb45, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _100 = const (),
            StorageDead(_112),
            StorageDead(_110),
            StorageDead(_109),
            StorageDead(_107),
            StorageDead(_104),
            StorageDead(_101),
            StorageDead(_100),
            StorageLive(_486),
            StorageLive(_487),
            _487 = _17,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:912:12: 912:22 (#0),
                    scope: scope[14],
                },
                kind: switchInt(move _487) -> [0: bb282, otherwise: bb281],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_119),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:802:35: 802:72 (#0),
                    scope: scope[16],
                },
                kind: _117 = core::option::Option::<&uts46::AlreadyAsciiLabel<'_>>::unwrap(move _118) -> [return: bb46, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_118),
            _116 = (*_117),
            FakeRead(ForLet(None), _116),
            StorageDead(_117),
            StorageLive(_120),
            StorageLive(_121),
            _121 = _93,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:803:16: 803:26 (#0),
                    scope: scope[17],
                },
                kind: switchInt(move _121) -> [0: bb73, otherwise: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_122),
            _122 = _99,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:804:20: 804:34 (#0),
                    scope: scope[17],
                },
                kind: switchInt(move _122) -> [0: bb56, otherwise: bb48],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_123),
            StorageLive(_124),
            StorageLive(_125),
            StorageLive(_126),
            _126 = &mut (*_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:805:21: 805:41 (#0),
                    scope: scope[17],
                },
                kind: _125 = <W as core::fmt::Write>::write_char(move _126, const '.') -> [return: bb49, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_126),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:805:21: 805:42 (#335),
                    scope: scope[17],
                },
                kind: _124 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _125) -> [return: bb50, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_125),
            PlaceMention(_124),
            _127 = discriminant(_124),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:805:21: 805:42 (#335),
                    scope: scope[17],
                },
                kind: switchInt(move _127) -> [0: bb53, 1: bb52, otherwise: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _124),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:805:21: 805:42 (#335),
                    scope: scope[17],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:805:41: 805:42 (#336),
                    scope: scope[17],
                },
                kind: falseEdge -> [real: bb54, imaginary: bb53],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_131),
            _131 = ((_124 as Continue).0: ()),
            _123 = _131,
            StorageDead(_131),
            StorageDead(_124),
            StorageDead(_123),
            _120 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:804:17: 813:18 (#0),
                    scope: scope[17],
                },
                kind: goto -> bb72,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_128),
            _128 = ((_124 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_130),
            _130 = _128,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:805:21: 805:42 (#335),
                    scope: scope[19],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _130) -> [return: bb55, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_130),
            StorageDead(_128),
            StorageDead(_124),
            StorageDead(_123),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[17],
                },
                kind: goto -> bb525,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_132),
            StorageLive(_133),
            _133 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12: 346:42 (#114),
                    scope: scope[17],
                },
                kind: switchInt(move _133) -> [0: bb61, otherwise: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_134),
            StorageLive(_135),
            StorageLive(_136),
            StorageLive(_137),
            _137 = _98,
            _138 = Len((*_2)),
            _139 = Lt(_137, _138),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:807:38: 807:77 (#0),
                    scope: scope[17],
                },
                kind: assert(move _139, "index out of bounds: the length is {} but the index is {}", move _138, _137) -> [success: bb58, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _136 = &(*_2)[_137],
            StorageLive(_140),
            StorageLive(_141),
            _141 = const 46_u8,
            _140 = &_141,
            _135 = (move _136, move _140),
            StorageDead(_140),
            StorageDead(_136),
            PlaceMention(_135),
            StorageLive(_142),
            _142 = (_135.0: &u8),
            StorageLive(_143),
            _143 = (_135.1: &u8),
            StorageLive(_144),
            StorageLive(_145),
            _145 = (*_142),
            StorageLive(_146),
            _146 = (*_143),
            _144 = Eq(move _145, move _146),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21: 40:46 (#115),
                    scope: scope[22],
                },
                kind: switchInt(move _144) -> [0: bb60, otherwise: bb59],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_146),
            StorageDead(_145),
            _134 = const (),
            StorageDead(_144),
            StorageDead(_143),
            StorageDead(_142),
            StorageDead(_141),
            StorageDead(_137),
            StorageDead(_135),
            StorageDead(_134),
            _132 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9: 348:10 (#113),
                    scope: scope[17],
                },
                kind: goto -> bb62,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_146),
            StorageDead(_145),
            StorageLive(_148),
            _148 = core::panicking::AssertKind::Eq,
            FakeRead(ForLet(None), _148),
            StorageLive(_149),
            StorageLive(_150),
            _150 = move _148,
            StorageLive(_151),
            StorageLive(_152),
            _152 = &(*_142),
            _151 = &(*_152),
            StorageLive(_153),
            StorageLive(_154),
            _154 = &(*_143),
            _153 = &(*_154),
            StorageLive(_155),
            _155 = core::option::Option::<core::fmt::Arguments<'_>>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21: 45:114 (#115),
                    scope: scope[23],
                },
                kind: _149 = core::panicking::assert_failed::<u8, u8>(move _150, move _151, move _153, move _155) -> bb532,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _132 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9: 348:10 (#113),
                    scope: scope[17],
                },
                kind: goto -> bb62,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_133),
            StorageDead(_132),
            _156 = AddWithOverflow(_98, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:808:21: 808:52 (#0),
                    scope: scope[17],
                },
                kind: assert(!move (_156.1: bool), "attempt to compute `{} + {}`, which would overflow", _98, const 1_usize) -> [success: bb63, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _98 = move (_156.0: usize),
            StorageLive(_157),
            StorageLive(_158),
            _158 = _98,
            StorageLive(_159),
            StorageLive(_160),
            _160 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:809:54: 809:71 (#0),
                    scope: scope[17],
                },
                kind: _159 = core::slice::<impl [u8]>::len(move _160) -> [return: bb64, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_160),
            _157 = Eq(move _158, move _159),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:809:24: 809:71 (#0),
                    scope: scope[17],
                },
                kind: switchInt(move _157) -> [0: bb71, otherwise: bb65],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_159),
            StorageDead(_158),
            StorageLive(_162),
            StorageLive(_163),
            _163 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#117),
                    scope: scope[17],
                },
                kind: switchInt(move _163) -> [0: bb69, otherwise: bb66],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_164),
            StorageLive(_165),
            _165 = _17,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:810:40: 810:50 (#0),
                    scope: scope[17],
                },
                kind: switchInt(move _165) -> [0: bb68, otherwise: bb67],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_166),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#118),
                    scope: scope[17],
                },
                kind: _166 = core::panicking::panic(const "assertion failed: !had_errors") -> bb532,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _164 = const (),
            StorageDead(_165),
            StorageDead(_164),
            _162 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#116),
                    scope: scope[17],
                },
                kind: goto -> bb70,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _162 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#116),
                    scope: scope[17],
                },
                kind: goto -> bb70,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_163),
            StorageDead(_162),
            StorageLive(_167),
            _167 = uts46::ProcessingSuccess::Passthrough,
            _0 = core::result::Result::<uts46::ProcessingSuccess, uts46::ProcessingError>::Ok(move _167),
            StorageDead(_167),
            StorageDead(_157),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[17],
                },
                kind: goto -> bb525,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_159),
            StorageDead(_158),
            _120 = const (),
            StorageDead(_157),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:804:17: 813:18 (#0),
                    scope: scope[17],
                },
                kind: goto -> bb72,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_122),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:803:13: 814:14 (#0),
                    scope: scope[17],
                },
                kind: goto -> bb74,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _120 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:803:13: 814:14 (#0),
                    scope: scope[17],
                },
                kind: goto -> bb74,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_121),
            StorageDead(_120),
            _93 = const true,
            StorageLive(_168),
            PlaceMention(_116),
            _169 = discriminant(_116),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:817:20: 817:65 (#0),
                    scope: scope[24],
                },
                kind: switchInt(move _169) -> [0: bb75, otherwise: bb143],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:817:20: 817:65 (#0),
                    scope: scope[24],
                },
                kind: falseEdge -> [real: bb76, imaginary: bb143],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_170),
            _170 = ((_116 as MixedCaseAscii).0: &[u8]),
            StorageLive(_172),
            StorageLive(_173),
            StorageLive(_174),
            StorageLive(_175),
            StorageLive(_176),
            _176 = &(*_170),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:819:21: 819:38 (#0),
                    scope: scope[25],
                },
                kind: _175 = core::slice::<impl [u8]>::iter(move _176) -> [return: bb77, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _174 = &mut _175,
            StorageDead(_176),
            StorageLive(_177),
            _177 = {closure@idna/src/uts46.rs:819:48: 819:51},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:819:21: 819:75 (#0),
                    scope: scope[25],
                },
                kind: _173 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::position::<{closure@idna/src/uts46.rs:819:48: 819:51}>(move _174, move _177) -> [return: bb78, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_177),
            StorageDead(_174),
            PlaceMention(_173),
            _178 = discriminant(_173),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:818:24: 818:46 (#0),
                    scope: scope[25],
                },
                kind: switchInt(move _178) -> [1: bb79, otherwise: bb120],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:818:24: 818:46 (#0),
                    scope: scope[25],
                },
                kind: falseEdge -> [real: bb80, imaginary: bb120],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_179),
            _179 = ((_173 as Some).0: usize),
            StorageLive(_182),
            StorageLive(_183),
            _183 = &(*_170),
            StorageLive(_184),
            _184 = _179,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:821:40: 821:77 (#0),
                    scope: scope[25],
                },
                kind: _182 = core::slice::<impl [u8]>::split_at(move _183, move _184) -> [return: bb81, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_184),
            StorageDead(_183),
            PlaceMention(_182),
            StorageLive(_180),
            _180 = (_182.0: &[u8]),
            StorageLive(_181),
            _181 = (_182.1: &[u8]),
            StorageDead(_182),
            StorageLive(_185),
            StorageLive(_186),
            _186 = _99,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:822:45: 822:59 (#0),
                    scope: scope[26],
                },
                kind: switchInt(move _186) -> [0: bb83, otherwise: bb82],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _185 = _180,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:822:42: 829:22 (#0),
                    scope: scope[26],
                },
                kind: goto -> bb93,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_187),
            _99 = const true,
            StorageLive(_188),
            StorageLive(_189),
            _189 = &(*_180),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:826:55: 826:65 (#0),
                    scope: scope[26],
                },
                kind: _188 = core::slice::<impl [u8]>::len(move _189) -> [return: bb84, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_189),
            _190 = AddWithOverflow(_98, _188),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:826:25: 826:65 (#0),
                    scope: scope[26],
                },
                kind: assert(!move (_190.1: bool), "attempt to compute `{} + {}`, which would overflow", _98, move _188) -> [success: bb85, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _98 = move (_190.0: usize),
            StorageDead(_188),
            StorageLive(_191),
            StorageLive(_192),
            _192 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:12: 376:42 (#121),
                    scope: scope[26],
                },
                kind: switchInt(move _192) -> [0: bb90, otherwise: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_193),
            StorageLive(_194),
            StorageLive(_195),
            _195 = &_98,
            StorageLive(_196),
            StorageLive(_197),
            StorageLive(_198),
            _198 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:827:70: 827:87 (#0),
                    scope: scope[26],
                },
                kind: _197 = core::slice::<impl [u8]>::len(move _198) -> [return: bb87, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_198),
            _196 = &_197,
            _194 = (move _195, move _196),
            StorageDead(_196),
            StorageDead(_195),
            PlaceMention(_194),
            StorageLive(_199),
            _199 = (_194.0: &usize),
            StorageLive(_200),
            _200 = (_194.1: &usize),
            StorageLive(_201),
            StorageLive(_202),
            _202 = (*_199),
            StorageLive(_203),
            _203 = (*_200),
            _201 = Eq(move _202, move _203),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:20: 90:43 (#122),
                    scope: scope[28],
                },
                kind: switchInt(move _201) -> [0: bb89, otherwise: bb88],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_203),
            StorageDead(_202),
            StorageLive(_205),
            _205 = core::panicking::AssertKind::Ne,
            FakeRead(ForLet(None), _205),
            StorageLive(_206),
            StorageLive(_207),
            _207 = move _205,
            StorageLive(_208),
            StorageLive(_209),
            _209 = &(*_199),
            _208 = &(*_209),
            StorageLive(_210),
            StorageLive(_211),
            _211 = &(*_200),
            _210 = &(*_211),
            StorageLive(_212),
            _212 = core::option::Option::<core::fmt::Arguments<'_>>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:21: 95:114 (#122),
                    scope: scope[29],
                },
                kind: _206 = core::panicking::assert_failed::<usize, usize>(move _207, move _208, move _210, move _212) -> bb532,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_203),
            StorageDead(_202),
            _193 = const (),
            StorageDead(_201),
            StorageDead(_200),
            StorageDead(_199),
            StorageDead(_197),
            StorageDead(_194),
            StorageDead(_193),
            _191 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:9: 378:10 (#120),
                    scope: scope[26],
                },
                kind: goto -> bb91,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _191 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:9: 378:10 (#120),
                    scope: scope[26],
                },
                kind: goto -> bb91,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_192),
            StorageDead(_191),
            StorageLive(_213),
            StorageLive(_214),
            _214 = &(*_2),
            StorageLive(_215),
            StorageLive(_216),
            _216 = _98,
            _215 = core::ops::RangeTo::<usize> { end: move _216 },
            StorageDead(_216),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:828:37: 828:67 (#0),
                    scope: scope[26],
                },
                kind: _213 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _214, move _215) -> [return: bb92, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_215),
            StorageDead(_214),
            _187 = &(*_213),
            _185 = &(*_187),
            StorageDead(_187),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:822:42: 829:22 (#0),
                    scope: scope[26],
                },
                kind: goto -> bb93,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_186),
            FakeRead(ForLet(None), _185),
            StorageLive(_217),
            StorageLive(_218),
            StorageLive(_219),
            StorageLive(_220),
            _220 = &mut (*_7),
            StorageLive(_221),
            StorageLive(_222),
            StorageLive(_223),
            _223 = &(*_185),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:831:45: 831:91 (#0),
                    scope: scope[27],
                },
                kind: _222 = core::str::from_utf8_unchecked(move _223) -> [return: bb94, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _221 = &(*_222),
            StorageDead(_223),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:831:21: 831:94 (#0),
                    scope: scope[27],
                },
                kind: _219 = <W as core::fmt::Write>::write_str(move _220, move _221) -> [return: bb95, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_221),
            StorageDead(_220),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:831:21: 831:95 (#352),
                    scope: scope[27],
                },
                kind: _218 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _219) -> [return: bb96, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_219),
            PlaceMention(_218),
            _224 = discriminant(_218),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:831:21: 831:95 (#352),
                    scope: scope[27],
                },
                kind: switchInt(move _224) -> [0: bb99, 1: bb98, otherwise: bb97],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _218),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:831:21: 831:95 (#352),
                    scope: scope[27],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:831:94: 831:95 (#353),
                    scope: scope[27],
                },
                kind: falseEdge -> [real: bb100, imaginary: bb99],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_228),
            _228 = ((_218 as Continue).0: ()),
            _217 = _228,
            StorageDead(_228),
            StorageDead(_222),
            StorageDead(_218),
            StorageDead(_217),
            StorageLive(_229),
            StorageLive(_230),
            StorageLive(_231),
            _231 = &(*_181),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:832:30: 832:41 (#0),
                    scope: scope[27],
                },
                kind: _230 = core::slice::<impl [u8]>::iter(move _231) -> [return: bb102, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_225),
            _225 = ((_218 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_227),
            _227 = _225,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:831:21: 831:95 (#352),
                    scope: scope[31],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _227) -> [return: bb101, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_227),
            StorageDead(_225),
            StorageDead(_222),
            StorageDead(_218),
            StorageDead(_217),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[27],
                },
                kind: goto -> bb523,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_231),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:832:30: 832:41 (#355),
                    scope: scope[27],
                },
                kind: _229 = <core::slice::Iter<'_, u8> as core::iter::IntoIterator>::into_iter(move _230) -> [return: bb103, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_230),
            PlaceMention(_229),
            StorageLive(_232),
            _232 = move _229,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:832:21: 834:22 (#354),
                    scope: scope[34],
                },
                kind: goto -> bb104,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:832:21: 834:22 (#354),
                    scope: scope[34],
                },
                kind: falseUnwind -> [real: bb105, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_233),
            StorageLive(_234),
            StorageLive(_235),
            StorageLive(_236),
            _236 = &mut _232,
            _235 = &mut (*_236),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:832:30: 832:41 (#355),
                    scope: scope[34],
                },
                kind: _234 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::next(move _235) -> [return: bb106, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_235),
            PlaceMention(_234),
            _237 = discriminant(_234),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:832:30: 832:41 (#355),
                    scope: scope[34],
                },
                kind: switchInt(move _237) -> [0: bb108, 1: bb109, otherwise: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _234),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:832:30: 832:41 (#355),
                    scope: scope[34],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:832:21: 834:22 (#354),
                    scope: scope[34],
                },
                kind: falseEdge -> [real: bb110, imaginary: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_239),
            _239 = ((_234 as Some).0: &u8),
            StorageLive(_240),
            StorageLive(_241),
            StorageLive(_242),
            StorageLive(_243),
            _243 = &mut (*_7),
            StorageLive(_244),
            StorageLive(_245),
            StorageLive(_246),
            _246 = &(*_239),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:833:52: 833:74 (#0),
                    scope: scope[35],
                },
                kind: _245 = core::num::<impl u8>::to_ascii_lowercase(move _246) -> [return: bb111, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _172 = const (),
            StorageDead(_236),
            StorageDead(_234),
            StorageDead(_233),
            StorageDead(_232),
            StorageDead(_229),
            StorageDead(_213),
            StorageDead(_185),
            StorageDead(_181),
            StorageDead(_180),
            StorageDead(_179),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:818:17: 844:18 (#0),
                    scope: scope[24],
                },
                kind: goto -> bb142,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_246),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:833:41: 833:75 (#0),
                    scope: scope[35],
                },
                kind: _244 = <char as core::convert::From<u8>>::from(move _245) -> [return: bb112, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_245),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:833:25: 833:76 (#0),
                    scope: scope[35],
                },
                kind: _242 = <W as core::fmt::Write>::write_char(move _243, move _244) -> [return: bb113, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_244),
            StorageDead(_243),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:833:25: 833:77 (#357),
                    scope: scope[35],
                },
                kind: _241 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _242) -> [return: bb114, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_242),
            PlaceMention(_241),
            _247 = discriminant(_241),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:833:25: 833:77 (#357),
                    scope: scope[35],
                },
                kind: switchInt(move _247) -> [0: bb117, 1: bb116, otherwise: bb115],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _241),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:833:25: 833:77 (#357),
                    scope: scope[35],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:833:76: 833:77 (#358),
                    scope: scope[35],
                },
                kind: falseEdge -> [real: bb118, imaginary: bb117],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_251),
            _251 = ((_241 as Continue).0: ()),
            _240 = _251,
            StorageDead(_251),
            StorageDead(_241),
            StorageDead(_240),
            _233 = const (),
            StorageDead(_239),
            StorageDead(_236),
            StorageDead(_234),
            StorageDead(_233),
            _108 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:832:21: 834:22 (#354),
                    scope: scope[34],
                },
                kind: goto -> bb104,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_248),
            _248 = ((_241 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_250),
            _250 = _248,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:833:25: 833:77 (#357),
                    scope: scope[37],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _250) -> [return: bb119, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_250),
            StorageDead(_248),
            StorageDead(_241),
            StorageDead(_240),
            StorageDead(_239),
            StorageDead(_236),
            StorageDead(_234),
            StorageDead(_233),
            StorageDead(_232),
            StorageDead(_229),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[27],
                },
                kind: goto -> bb523,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_252),
            _252 = _99,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:835:27: 835:41 (#0),
                    scope: scope[24],
                },
                kind: switchInt(move _252) -> [0: bb130, otherwise: bb121],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_253),
            StorageLive(_254),
            StorageLive(_255),
            StorageLive(_256),
            _256 = &mut (*_7),
            StorageLive(_257),
            StorageLive(_258),
            StorageLive(_259),
            _259 = &(*_170),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:837:45: 837:87 (#0),
                    scope: scope[24],
                },
                kind: _258 = core::str::from_utf8_unchecked(move _259) -> [return: bb122, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _257 = &(*_258),
            StorageDead(_259),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:837:21: 837:90 (#0),
                    scope: scope[24],
                },
                kind: _255 = <W as core::fmt::Write>::write_str(move _256, move _257) -> [return: bb123, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_257),
            StorageDead(_256),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:837:21: 837:91 (#360),
                    scope: scope[24],
                },
                kind: _254 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _255) -> [return: bb124, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_255),
            PlaceMention(_254),
            _260 = discriminant(_254),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:837:21: 837:91 (#360),
                    scope: scope[24],
                },
                kind: switchInt(move _260) -> [0: bb127, 1: bb126, otherwise: bb125],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _254),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:837:21: 837:91 (#360),
                    scope: scope[24],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:837:90: 837:91 (#361),
                    scope: scope[24],
                },
                kind: falseEdge -> [real: bb128, imaginary: bb127],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_264),
            _264 = ((_254 as Continue).0: ()),
            _253 = _264,
            StorageDead(_264),
            StorageDead(_258),
            StorageDead(_254),
            StorageDead(_253),
            _172 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:835:24: 844:18 (#0),
                    scope: scope[24],
                },
                kind: goto -> bb141,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_261),
            _261 = ((_254 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_263),
            _263 = _261,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:837:21: 837:91 (#360),
                    scope: scope[41],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _263) -> [return: bb129, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_263),
            StorageDead(_261),
            StorageDead(_258),
            StorageDead(_254),
            StorageDead(_253),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[24],
                },
                kind: goto -> bb522,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_265),
            StorageLive(_266),
            _266 = &(*_170),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:839:51: 839:67 (#0),
                    scope: scope[24],
                },
                kind: _265 = core::slice::<impl [u8]>::len(move _266) -> [return: bb131, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_266),
            _267 = AddWithOverflow(_98, _265),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:839:21: 839:67 (#0),
                    scope: scope[24],
                },
                kind: assert(!move (_267.1: bool), "attempt to compute `{} + {}`, which would overflow", _98, move _265) -> [success: bb132, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _98 = move (_267.0: usize),
            StorageDead(_265),
            StorageLive(_268),
            StorageLive(_269),
            _269 = _98,
            StorageLive(_270),
            StorageLive(_271),
            _271 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:840:54: 840:71 (#0),
                    scope: scope[24],
                },
                kind: _270 = core::slice::<impl [u8]>::len(move _271) -> [return: bb133, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_271),
            _268 = Eq(move _269, move _270),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:840:24: 840:71 (#0),
                    scope: scope[24],
                },
                kind: switchInt(move _268) -> [0: bb140, otherwise: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_270),
            StorageDead(_269),
            StorageLive(_273),
            StorageLive(_274),
            _274 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#124),
                    scope: scope[24],
                },
                kind: switchInt(move _274) -> [0: bb138, otherwise: bb135],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_275),
            StorageLive(_276),
            _276 = _17,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:841:40: 841:50 (#0),
                    scope: scope[24],
                },
                kind: switchInt(move _276) -> [0: bb137, otherwise: bb136],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_277),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#125),
                    scope: scope[24],
                },
                kind: _277 = core::panicking::panic(const "assertion failed: !had_errors") -> bb532,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _275 = const (),
            StorageDead(_276),
            StorageDead(_275),
            _273 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#123),
                    scope: scope[24],
                },
                kind: goto -> bb139,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _273 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#123),
                    scope: scope[24],
                },
                kind: goto -> bb139,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_274),
            StorageDead(_273),
            StorageLive(_278),
            _278 = uts46::ProcessingSuccess::Passthrough,
            _0 = core::result::Result::<uts46::ProcessingSuccess, uts46::ProcessingError>::Ok(move _278),
            StorageDead(_278),
            StorageDead(_268),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[24],
                },
                kind: goto -> bb522,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_270),
            StorageDead(_269),
            _172 = const (),
            StorageDead(_268),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:835:24: 844:18 (#0),
                    scope: scope[24],
                },
                kind: goto -> bb141,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_252),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:818:17: 844:18 (#0),
                    scope: scope[24],
                },
                kind: goto -> bb142,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_175),
            StorageDead(_173),
            StorageDead(_172),
            StorageDead(_170),
            StorageDead(_168),
            StorageDead(_116),
            StorageDead(_115),
            StorageDead(_112),
            StorageDead(_110),
            StorageDead(_109),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[15],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _168 = const (),
            StorageDead(_168),
            StorageLive(_279),
            StorageLive(_280),
            _280 = _9,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:848:43: 848:52 (#0),
                    scope: scope[17],
                },
                kind: switchInt(move _280) -> [0: bb145, otherwise: bb144],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_281),
            StorageLive(_282),
            _282 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#128),
                    scope: scope[17],
                },
                kind: switchInt(move _282) -> [0: bb151, otherwise: bb146],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_293),
            StorageLive(_294),
            StorageLive(_295),
            _295 = &(*_115),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:852:17: 852:45 (#0),
                    scope: scope[17],
                },
                kind: _294 = uts46::classify_for_punycode(move _295) -> [return: bb154, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_283),
            StorageLive(_284),
            StorageLive(_285),
            StorageLive(_286),
            StorageLive(_287),
            _287 = &(*_115),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:849:31: 849:59 (#0),
                    scope: scope[17],
                },
                kind: _286 = uts46::classify_for_punycode(move _287) -> [return: bb147, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _285 = &_286,
            StorageDead(_287),
            StorageLive(_288),
            StorageLive(_289),
            _289 = uts46::PunycodeClassification::Error,
            _288 = &_289,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:849:31: 849:92 (#0),
                    scope: scope[17],
                },
                kind: _284 = <uts46::PunycodeClassification as core::cmp::PartialEq>::ne(move _285, move _288) -> [return: bb148, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:849:31: 849:92 (#0),
                    scope: scope[17],
                },
                kind: switchInt(move _284) -> [0: bb150, otherwise: bb149],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_288),
            StorageDead(_285),
            StorageDead(_289),
            StorageDead(_286),
            _283 = const (),
            StorageDead(_284),
            StorageDead(_283),
            _281 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#127),
                    scope: scope[17],
                },
                kind: goto -> bb152,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_288),
            StorageDead(_285),
            StorageDead(_289),
            StorageDead(_286),
            StorageLive(_290),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#129),
                    scope: scope[17],
                },
                kind: _290 = core::panicking::panic(const "assertion failed: classify_for_punycode(label) != PunycodeClassification::Error") -> bb532,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _281 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#127),
                    scope: scope[17],
                },
                kind: goto -> bb152,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_282),
            StorageDead(_281),
            StorageLive(_291),
            StorageLive(_292),
            _292 = &(*_115),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:850:18: 850:33 (#0),
                    scope: scope[17],
                },
                kind: _291 = uts46::is_ascii(move _292) -> [return: bb153, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_292),
            _279 = Not(move _291),
            StorageDead(_291),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:848:40: 853:14 (#0),
                    scope: scope[17],
                },
                kind: goto -> bb156,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _293 = &_294,
            StorageDead(_295),
            StorageLive(_296),
            StorageLive(_297),
            _297 = uts46::PunycodeClassification::Unicode,
            _296 = &_297,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:852:17: 852:80 (#0),
                    scope: scope[17],
                },
                kind: _279 = <uts46::PunycodeClassification as core::cmp::PartialEq>::eq(move _293, move _296) -> [return: bb155, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_296),
            StorageDead(_293),
            StorageDead(_297),
            StorageDead(_294),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:848:40: 853:14 (#0),
                    scope: scope[17],
                },
                kind: goto -> bb156,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_280),
            FakeRead(ForLet(None), _279),
            StorageLive(_298),
            StorageLive(_299),
            _299 = _279,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:854:34: 854:54 (#0),
                    scope: scope[44],
                },
                kind: switchInt(move _299) -> [0: bb159, otherwise: bb157],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_300),
            StorageLive(_301),
            _301 = &mut _6,
            StorageLive(_302),
            StorageLive(_303),
            _303 = &(*_115),
            StorageLive(_304),
            _304 = &(*_86),
            StorageLive(_305),
            _305 = _16,
            _302 = (move _303, move _304, move _305),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:855:31: 855:69 (#0),
                    scope: scope[44],
                },
                kind: _300 = <OutputUnicode as core::ops::FnMut<(&[char], &[char], bool)>>::call_mut(move _301, move _302) -> [return: bb158, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_305),
            StorageDead(_304),
            StorageDead(_303),
            StorageDead(_302),
            StorageDead(_301),
            FakeRead(ForLet(None), _300),
            StorageLive(_306),
            _306 = _300,
            _92 = BitOr(_92, move _306),
            StorageDead(_306),
            _298 = _300,
            StorageDead(_300),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:854:31: 860:14 (#0),
                    scope: scope[44],
                },
                kind: goto -> bb160,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _298 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:854:31: 860:14 (#0),
                    scope: scope[44],
                },
                kind: goto -> bb160,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_299),
            FakeRead(ForLet(None), _298),
            StorageLive(_307),
            _307 = _298,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:861:16: 861:27 (#0),
                    scope: scope[45],
                },
                kind: switchInt(move _307) -> [0: bb191, otherwise: bb161],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_308),
            StorageLive(_309),
            _309 = _99,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:862:21: 862:35 (#0),
                    scope: scope[45],
                },
                kind: switchInt(move _309) -> [0: bb162, otherwise: bb172],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _99 = const true,
            StorageLive(_310),
            StorageLive(_311),
            StorageLive(_312),
            StorageLive(_313),
            _313 = &mut (*_7),
            StorageLive(_314),
            StorageLive(_315),
            StorageLive(_316),
            StorageLive(_317),
            StorageLive(_318),
            StorageLive(_319),
            _319 = &(*_2),
            StorageLive(_320),
            StorageLive(_321),
            _321 = _98,
            _320 = core::ops::RangeTo::<usize> { end: move _321 },
            StorageDead(_321),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:866:68: 866:98 (#0),
                    scope: scope[45],
                },
                kind: _318 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _319, move _320) -> [return: bb163, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_320),
            StorageDead(_319),
            _317 = &(*_318),
            _316 = &(*_317),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:866:25: 866:99 (#0),
                    scope: scope[45],
                },
                kind: _315 = core::str::from_utf8_unchecked(move _316) -> [return: bb164, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _314 = &(*_315),
            StorageDead(_316),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:865:21: 867:23 (#0),
                    scope: scope[45],
                },
                kind: _312 = <W as core::fmt::Write>::write_str(move _313, move _314) -> [return: bb165, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_314),
            StorageDead(_313),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:865:21: 867:24 (#377),
                    scope: scope[45],
                },
                kind: _311 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _312) -> [return: bb166, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_312),
            PlaceMention(_311),
            _322 = discriminant(_311),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:865:21: 867:24 (#377),
                    scope: scope[45],
                },
                kind: switchInt(move _322) -> [0: bb169, 1: bb168, otherwise: bb167],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _311),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:865:21: 867:24 (#377),
                    scope: scope[45],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:867:23: 867:24 (#378),
                    scope: scope[45],
                },
                kind: falseEdge -> [real: bb170, imaginary: bb169],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_326),
            _326 = ((_311 as Continue).0: ()),
            _310 = _326,
            StorageDead(_326),
            StorageDead(_318),
            StorageDead(_317),
            StorageDead(_315),
            StorageDead(_311),
            StorageDead(_310),
            _308 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:862:17: 868:18 (#0),
                    scope: scope[45],
                },
                kind: goto -> bb173,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_323),
            _323 = ((_311 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_325),
            _325 = _323,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:865:21: 867:24 (#377),
                    scope: scope[48],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _325) -> [return: bb171, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_325),
            StorageDead(_323),
            StorageDead(_318),
            StorageDead(_317),
            StorageDead(_315),
            StorageDead(_311),
            StorageDead(_310),
            StorageDead(_309),
            StorageDead(_308),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[45],
                },
                kind: goto -> bb521,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _308 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:862:17: 868:18 (#0),
                    scope: scope[45],
                },
                kind: goto -> bb173,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_309),
            StorageDead(_308),
            StorageLive(_327),
            StorageLive(_328),
            StorageLive(_329),
            StorageLive(_330),
            _330 = &(*_115),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:869:26: 869:38 (#0),
                    scope: scope[45],
                },
                kind: _329 = core::slice::<impl [char]>::iter(move _330) -> [return: bb174, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_330),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:869:26: 869:47 (#0),
                    scope: scope[45],
                },
                kind: _328 = <core::slice::Iter<'_, char> as core::iter::Iterator>::copied::<'_, char>(move _329) -> [return: bb175, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_329),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:869:26: 869:47 (#380),
                    scope: scope[45],
                },
                kind: _327 = <core::iter::Copied<core::slice::Iter<'_, char>> as core::iter::IntoIterator>::into_iter(move _328) -> [return: bb176, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_328),
            PlaceMention(_327),
            StorageLive(_331),
            _331 = move _327,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:869:17: 871:18 (#379),
                    scope: scope[51],
                },
                kind: goto -> bb177,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:869:17: 871:18 (#379),
                    scope: scope[51],
                },
                kind: falseUnwind -> [real: bb178, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_332),
            StorageLive(_333),
            StorageLive(_334),
            StorageLive(_335),
            _335 = &mut _331,
            _334 = &mut (*_335),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:869:26: 869:47 (#380),
                    scope: scope[51],
                },
                kind: _333 = <core::iter::Copied<core::slice::Iter<'_, char>> as core::iter::Iterator>::next(move _334) -> [return: bb179, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_334),
            PlaceMention(_333),
            _336 = discriminant(_333),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:869:26: 869:47 (#380),
                    scope: scope[51],
                },
                kind: switchInt(move _336) -> [0: bb181, 1: bb182, otherwise: bb180],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _333),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:869:26: 869:47 (#380),
                    scope: scope[51],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:869:17: 871:18 (#379),
                    scope: scope[51],
                },
                kind: falseEdge -> [real: bb183, imaginary: bb182],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_338),
            _338 = ((_333 as Some).0: char),
            StorageLive(_339),
            StorageLive(_340),
            StorageLive(_341),
            StorageLive(_342),
            _342 = &mut (*_7),
            StorageLive(_343),
            _343 = _338,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:870:21: 870:39 (#0),
                    scope: scope[52],
                },
                kind: _341 = <W as core::fmt::Write>::write_char(move _342, move _343) -> [return: bb184, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _109 = const (),
            StorageDead(_335),
            StorageDead(_333),
            StorageDead(_332),
            StorageDead(_331),
            StorageDead(_327),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:861:13: 909:14 (#0),
                    scope: scope[45],
                },
                kind: goto -> bb280,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_343),
            StorageDead(_342),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:870:21: 870:40 (#382),
                    scope: scope[52],
                },
                kind: _340 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _341) -> [return: bb185, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_341),
            PlaceMention(_340),
            _344 = discriminant(_340),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:870:21: 870:40 (#382),
                    scope: scope[52],
                },
                kind: switchInt(move _344) -> [0: bb188, 1: bb187, otherwise: bb186],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _340),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:870:21: 870:40 (#382),
                    scope: scope[52],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:870:39: 870:40 (#383),
                    scope: scope[52],
                },
                kind: falseEdge -> [real: bb189, imaginary: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_348),
            _348 = ((_340 as Continue).0: ()),
            _339 = _348,
            StorageDead(_348),
            StorageDead(_340),
            StorageDead(_339),
            _332 = const (),
            StorageDead(_338),
            StorageDead(_335),
            StorageDead(_333),
            StorageDead(_332),
            _108 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:869:17: 871:18 (#379),
                    scope: scope[51],
                },
                kind: goto -> bb177,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_345),
            _345 = ((_340 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_347),
            _347 = _345,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:870:21: 870:40 (#382),
                    scope: scope[54],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _347) -> [return: bb190, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_347),
            StorageDead(_345),
            StorageDead(_340),
            StorageDead(_339),
            StorageDead(_338),
            StorageDead(_335),
            StorageDead(_333),
            StorageDead(_332),
            StorageDead(_331),
            StorageDead(_327),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[45],
                },
                kind: goto -> bb521,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            PlaceMention(_116),
            _349 = discriminant(_116),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:872:27: 872:75 (#0),
                    scope: scope[57],
                },
                kind: switchInt(move _349) -> [1: bb192, otherwise: bb260],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:872:27: 872:75 (#0),
                    scope: scope[57],
                },
                kind: falseEdge -> [real: bb193, imaginary: bb260],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_350),
            _350 = ((_116 as MixedCasePunycode).0: &[u8]),
            StorageLive(_351),
            StorageLive(_352),
            StorageLive(_353),
            StorageLive(_354),
            _354 = &(*_350),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:874:21: 874:38 (#0),
                    scope: scope[58],
                },
                kind: _353 = core::slice::<impl [u8]>::iter(move _354) -> [return: bb194, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _352 = &mut _353,
            StorageDead(_354),
            StorageLive(_355),
            _355 = {closure@idna/src/uts46.rs:874:48: 874:51},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:874:21: 874:75 (#0),
                    scope: scope[58],
                },
                kind: _351 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::position::<{closure@idna/src/uts46.rs:874:48: 874:51}>(move _352, move _355) -> [return: bb195, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_355),
            StorageDead(_352),
            PlaceMention(_351),
            _356 = discriminant(_351),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:873:24: 873:46 (#0),
                    scope: scope[58],
                },
                kind: switchInt(move _356) -> [1: bb196, otherwise: bb237],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:873:24: 873:46 (#0),
                    scope: scope[58],
                },
                kind: falseEdge -> [real: bb197, imaginary: bb237],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_357),
            _357 = ((_351 as Some).0: usize),
            StorageLive(_360),
            StorageLive(_361),
            _361 = &(*_350),
            StorageLive(_362),
            _362 = _357,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:876:40: 876:77 (#0),
                    scope: scope[58],
                },
                kind: _360 = core::slice::<impl [u8]>::split_at(move _361, move _362) -> [return: bb198, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_362),
            StorageDead(_361),
            PlaceMention(_360),
            StorageLive(_358),
            _358 = (_360.0: &[u8]),
            StorageLive(_359),
            _359 = (_360.1: &[u8]),
            StorageDead(_360),
            StorageLive(_363),
            StorageLive(_364),
            _364 = _99,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:877:45: 877:59 (#0),
                    scope: scope[59],
                },
                kind: switchInt(move _364) -> [0: bb200, otherwise: bb199],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _363 = _358,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:877:42: 884:22 (#0),
                    scope: scope[59],
                },
                kind: goto -> bb210,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_365),
            _99 = const true,
            StorageLive(_366),
            StorageLive(_367),
            _367 = &(*_358),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:881:55: 881:65 (#0),
                    scope: scope[59],
                },
                kind: _366 = core::slice::<impl [u8]>::len(move _367) -> [return: bb201, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_367),
            _368 = AddWithOverflow(_98, _366),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:881:25: 881:65 (#0),
                    scope: scope[59],
                },
                kind: assert(!move (_368.1: bool), "attempt to compute `{} + {}`, which would overflow", _98, move _366) -> [success: bb202, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _98 = move (_368.0: usize),
            StorageDead(_366),
            StorageLive(_369),
            StorageLive(_370),
            _370 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:12: 376:42 (#132),
                    scope: scope[59],
                },
                kind: switchInt(move _370) -> [0: bb207, otherwise: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_371),
            StorageLive(_372),
            StorageLive(_373),
            _373 = &_98,
            StorageLive(_374),
            StorageLive(_375),
            StorageLive(_376),
            _376 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:882:70: 882:87 (#0),
                    scope: scope[59],
                },
                kind: _375 = core::slice::<impl [u8]>::len(move _376) -> [return: bb204, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_376),
            _374 = &_375,
            _372 = (move _373, move _374),
            StorageDead(_374),
            StorageDead(_373),
            PlaceMention(_372),
            StorageLive(_377),
            _377 = (_372.0: &usize),
            StorageLive(_378),
            _378 = (_372.1: &usize),
            StorageLive(_379),
            StorageLive(_380),
            _380 = (*_377),
            StorageLive(_381),
            _381 = (*_378),
            _379 = Eq(move _380, move _381),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:20: 90:43 (#133),
                    scope: scope[61],
                },
                kind: switchInt(move _379) -> [0: bb206, otherwise: bb205],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_381),
            StorageDead(_380),
            StorageLive(_383),
            _383 = core::panicking::AssertKind::Ne,
            FakeRead(ForLet(None), _383),
            StorageLive(_384),
            StorageLive(_385),
            _385 = move _383,
            StorageLive(_386),
            StorageLive(_387),
            _387 = &(*_377),
            _386 = &(*_387),
            StorageLive(_388),
            StorageLive(_389),
            _389 = &(*_378),
            _388 = &(*_389),
            StorageLive(_390),
            _390 = core::option::Option::<core::fmt::Arguments<'_>>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:21: 95:114 (#133),
                    scope: scope[62],
                },
                kind: _384 = core::panicking::assert_failed::<usize, usize>(move _385, move _386, move _388, move _390) -> bb532,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_381),
            StorageDead(_380),
            _371 = const (),
            StorageDead(_379),
            StorageDead(_378),
            StorageDead(_377),
            StorageDead(_375),
            StorageDead(_372),
            StorageDead(_371),
            _369 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:9: 378:10 (#131),
                    scope: scope[59],
                },
                kind: goto -> bb208,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _369 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:9: 378:10 (#131),
                    scope: scope[59],
                },
                kind: goto -> bb208,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_370),
            StorageDead(_369),
            StorageLive(_391),
            StorageLive(_392),
            _392 = &(*_2),
            StorageLive(_393),
            StorageLive(_394),
            _394 = _98,
            _393 = core::ops::RangeTo::<usize> { end: move _394 },
            StorageDead(_394),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:883:37: 883:67 (#0),
                    scope: scope[59],
                },
                kind: _391 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _392, move _393) -> [return: bb209, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_393),
            StorageDead(_392),
            _365 = &(*_391),
            _363 = &(*_365),
            StorageDead(_365),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:877:42: 884:22 (#0),
                    scope: scope[59],
                },
                kind: goto -> bb210,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_364),
            FakeRead(ForLet(None), _363),
            StorageLive(_395),
            StorageLive(_396),
            StorageLive(_397),
            StorageLive(_398),
            _398 = &mut (*_7),
            StorageLive(_399),
            StorageLive(_400),
            StorageLive(_401),
            _401 = &(*_363),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:886:45: 886:91 (#0),
                    scope: scope[60],
                },
                kind: _400 = core::str::from_utf8_unchecked(move _401) -> [return: bb211, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _399 = &(*_400),
            StorageDead(_401),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:886:21: 886:94 (#0),
                    scope: scope[60],
                },
                kind: _397 = <W as core::fmt::Write>::write_str(move _398, move _399) -> [return: bb212, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_399),
            StorageDead(_398),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:886:21: 886:95 (#389),
                    scope: scope[60],
                },
                kind: _396 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _397) -> [return: bb213, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_397),
            PlaceMention(_396),
            _402 = discriminant(_396),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:886:21: 886:95 (#389),
                    scope: scope[60],
                },
                kind: switchInt(move _402) -> [0: bb216, 1: bb215, otherwise: bb214],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _396),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:886:21: 886:95 (#389),
                    scope: scope[60],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:886:94: 886:95 (#390),
                    scope: scope[60],
                },
                kind: falseEdge -> [real: bb217, imaginary: bb216],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_406),
            _406 = ((_396 as Continue).0: ()),
            _395 = _406,
            StorageDead(_406),
            StorageDead(_400),
            StorageDead(_396),
            StorageDead(_395),
            StorageLive(_407),
            StorageLive(_408),
            StorageLive(_409),
            _409 = &(*_359),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:887:30: 887:41 (#0),
                    scope: scope[60],
                },
                kind: _408 = core::slice::<impl [u8]>::iter(move _409) -> [return: bb219, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_403),
            _403 = ((_396 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_405),
            _405 = _403,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:886:21: 886:95 (#389),
                    scope: scope[64],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _405) -> [return: bb218, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_405),
            StorageDead(_403),
            StorageDead(_400),
            StorageDead(_396),
            StorageDead(_395),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[60],
                },
                kind: goto -> bb519,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_409),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:887:30: 887:41 (#392),
                    scope: scope[60],
                },
                kind: _407 = <core::slice::Iter<'_, u8> as core::iter::IntoIterator>::into_iter(move _408) -> [return: bb220, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_408),
            PlaceMention(_407),
            StorageLive(_410),
            _410 = move _407,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:887:21: 889:22 (#391),
                    scope: scope[67],
                },
                kind: goto -> bb221,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:887:21: 889:22 (#391),
                    scope: scope[67],
                },
                kind: falseUnwind -> [real: bb222, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_411),
            StorageLive(_412),
            StorageLive(_413),
            StorageLive(_414),
            _414 = &mut _410,
            _413 = &mut (*_414),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:887:30: 887:41 (#392),
                    scope: scope[67],
                },
                kind: _412 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::next(move _413) -> [return: bb223, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_413),
            PlaceMention(_412),
            _415 = discriminant(_412),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:887:30: 887:41 (#392),
                    scope: scope[67],
                },
                kind: switchInt(move _415) -> [0: bb225, 1: bb226, otherwise: bb224],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _412),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:887:30: 887:41 (#392),
                    scope: scope[67],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:887:21: 889:22 (#391),
                    scope: scope[67],
                },
                kind: falseEdge -> [real: bb227, imaginary: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_417),
            _417 = ((_412 as Some).0: &u8),
            StorageLive(_418),
            StorageLive(_419),
            StorageLive(_420),
            StorageLive(_421),
            _421 = &mut (*_7),
            StorageLive(_422),
            StorageLive(_423),
            StorageLive(_424),
            _424 = &(*_417),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:888:52: 888:74 (#0),
                    scope: scope[68],
                },
                kind: _423 = core::num::<impl u8>::to_ascii_lowercase(move _424) -> [return: bb228, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _109 = const (),
            StorageDead(_414),
            StorageDead(_412),
            StorageDead(_411),
            StorageDead(_410),
            StorageDead(_407),
            StorageDead(_391),
            StorageDead(_363),
            StorageDead(_359),
            StorageDead(_358),
            StorageDead(_357),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:873:17: 899:18 (#0),
                    scope: scope[57],
                },
                kind: goto -> bb259,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_424),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:888:41: 888:75 (#0),
                    scope: scope[68],
                },
                kind: _422 = <char as core::convert::From<u8>>::from(move _423) -> [return: bb229, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_423),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:888:25: 888:76 (#0),
                    scope: scope[68],
                },
                kind: _420 = <W as core::fmt::Write>::write_char(move _421, move _422) -> [return: bb230, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_422),
            StorageDead(_421),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:888:25: 888:77 (#394),
                    scope: scope[68],
                },
                kind: _419 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _420) -> [return: bb231, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_420),
            PlaceMention(_419),
            _425 = discriminant(_419),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:888:25: 888:77 (#394),
                    scope: scope[68],
                },
                kind: switchInt(move _425) -> [0: bb234, 1: bb233, otherwise: bb232],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _419),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:888:25: 888:77 (#394),
                    scope: scope[68],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:888:76: 888:77 (#395),
                    scope: scope[68],
                },
                kind: falseEdge -> [real: bb235, imaginary: bb234],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_429),
            _429 = ((_419 as Continue).0: ()),
            _418 = _429,
            StorageDead(_429),
            StorageDead(_419),
            StorageDead(_418),
            _411 = const (),
            StorageDead(_417),
            StorageDead(_414),
            StorageDead(_412),
            StorageDead(_411),
            _108 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:887:21: 889:22 (#391),
                    scope: scope[67],
                },
                kind: goto -> bb221,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_426),
            _426 = ((_419 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_428),
            _428 = _426,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:888:25: 888:77 (#394),
                    scope: scope[70],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _428) -> [return: bb236, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_428),
            StorageDead(_426),
            StorageDead(_419),
            StorageDead(_418),
            StorageDead(_417),
            StorageDead(_414),
            StorageDead(_412),
            StorageDead(_411),
            StorageDead(_410),
            StorageDead(_407),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[60],
                },
                kind: goto -> bb519,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_430),
            _430 = _99,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:890:27: 890:41 (#0),
                    scope: scope[57],
                },
                kind: switchInt(move _430) -> [0: bb247, otherwise: bb238],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_431),
            StorageLive(_432),
            StorageLive(_433),
            StorageLive(_434),
            _434 = &mut (*_7),
            StorageLive(_435),
            StorageLive(_436),
            StorageLive(_437),
            _437 = &(*_350),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:892:45: 892:87 (#0),
                    scope: scope[57],
                },
                kind: _436 = core::str::from_utf8_unchecked(move _437) -> [return: bb239, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _435 = &(*_436),
            StorageDead(_437),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:892:21: 892:90 (#0),
                    scope: scope[57],
                },
                kind: _433 = <W as core::fmt::Write>::write_str(move _434, move _435) -> [return: bb240, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_435),
            StorageDead(_434),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:892:21: 892:91 (#397),
                    scope: scope[57],
                },
                kind: _432 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _433) -> [return: bb241, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_433),
            PlaceMention(_432),
            _438 = discriminant(_432),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:892:21: 892:91 (#397),
                    scope: scope[57],
                },
                kind: switchInt(move _438) -> [0: bb244, 1: bb243, otherwise: bb242],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _432),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:892:21: 892:91 (#397),
                    scope: scope[57],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:892:90: 892:91 (#398),
                    scope: scope[57],
                },
                kind: falseEdge -> [real: bb245, imaginary: bb244],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_442),
            _442 = ((_432 as Continue).0: ()),
            _431 = _442,
            StorageDead(_442),
            StorageDead(_436),
            StorageDead(_432),
            StorageDead(_431),
            _109 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:890:24: 899:18 (#0),
                    scope: scope[57],
                },
                kind: goto -> bb258,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_439),
            _439 = ((_432 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_441),
            _441 = _439,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:892:21: 892:91 (#397),
                    scope: scope[74],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _441) -> [return: bb246, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_441),
            StorageDead(_439),
            StorageDead(_436),
            StorageDead(_432),
            StorageDead(_431),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[57],
                },
                kind: goto -> bb518,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_443),
            StorageLive(_444),
            _444 = &(*_350),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:894:51: 894:67 (#0),
                    scope: scope[57],
                },
                kind: _443 = core::slice::<impl [u8]>::len(move _444) -> [return: bb248, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_444),
            _445 = AddWithOverflow(_98, _443),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:894:21: 894:67 (#0),
                    scope: scope[57],
                },
                kind: assert(!move (_445.1: bool), "attempt to compute `{} + {}`, which would overflow", _98, move _443) -> [success: bb249, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _98 = move (_445.0: usize),
            StorageDead(_443),
            StorageLive(_446),
            StorageLive(_447),
            _447 = _98,
            StorageLive(_448),
            StorageLive(_449),
            _449 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:895:54: 895:71 (#0),
                    scope: scope[57],
                },
                kind: _448 = core::slice::<impl [u8]>::len(move _449) -> [return: bb250, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_449),
            _446 = Eq(move _447, move _448),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:895:24: 895:71 (#0),
                    scope: scope[57],
                },
                kind: switchInt(move _446) -> [0: bb257, otherwise: bb251],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_448),
            StorageDead(_447),
            StorageLive(_451),
            StorageLive(_452),
            _452 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#135),
                    scope: scope[57],
                },
                kind: switchInt(move _452) -> [0: bb255, otherwise: bb252],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_453),
            StorageLive(_454),
            _454 = _17,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:896:40: 896:50 (#0),
                    scope: scope[57],
                },
                kind: switchInt(move _454) -> [0: bb254, otherwise: bb253],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_455),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#136),
                    scope: scope[57],
                },
                kind: _455 = core::panicking::panic(const "assertion failed: !had_errors") -> bb532,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _453 = const (),
            StorageDead(_454),
            StorageDead(_453),
            _451 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#134),
                    scope: scope[57],
                },
                kind: goto -> bb256,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _451 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#134),
                    scope: scope[57],
                },
                kind: goto -> bb256,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_452),
            StorageDead(_451),
            StorageLive(_456),
            _456 = uts46::ProcessingSuccess::Passthrough,
            _0 = core::result::Result::<uts46::ProcessingSuccess, uts46::ProcessingError>::Ok(move _456),
            StorageDead(_456),
            StorageDead(_446),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[57],
                },
                kind: goto -> bb518,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_448),
            StorageDead(_447),
            _109 = const (),
            StorageDead(_446),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:890:24: 899:18 (#0),
                    scope: scope[57],
                },
                kind: goto -> bb258,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_430),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:873:17: 899:18 (#0),
                    scope: scope[57],
                },
                kind: goto -> bb259,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_353),
            StorageDead(_351),
            StorageDead(_350),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:872:20: 909:14 (#0),
                    scope: scope[45],
                },
                kind: goto -> bb280,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_457),
            StorageLive(_458),
            _458 = _99,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:901:21: 901:35 (#0),
                    scope: scope[45],
                },
                kind: switchInt(move _458) -> [0: bb261, otherwise: bb271],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _99 = const true,
            StorageLive(_459),
            StorageLive(_460),
            StorageLive(_461),
            StorageLive(_462),
            _462 = &mut (*_7),
            StorageLive(_463),
            StorageLive(_464),
            StorageLive(_465),
            StorageLive(_466),
            StorageLive(_467),
            StorageLive(_468),
            _468 = &(*_2),
            StorageLive(_469),
            StorageLive(_470),
            _470 = _98,
            _469 = core::ops::RangeTo::<usize> { end: move _470 },
            StorageDead(_470),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:905:68: 905:98 (#0),
                    scope: scope[45],
                },
                kind: _467 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _468, move _469) -> [return: bb262, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_469),
            StorageDead(_468),
            _466 = &(*_467),
            _465 = &(*_466),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:905:25: 905:99 (#0),
                    scope: scope[45],
                },
                kind: _464 = core::str::from_utf8_unchecked(move _465) -> [return: bb263, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _463 = &(*_464),
            StorageDead(_465),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:904:21: 906:23 (#0),
                    scope: scope[45],
                },
                kind: _461 = <W as core::fmt::Write>::write_str(move _462, move _463) -> [return: bb264, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_463),
            StorageDead(_462),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:904:21: 906:24 (#406),
                    scope: scope[45],
                },
                kind: _460 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _461) -> [return: bb265, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_461),
            PlaceMention(_460),
            _471 = discriminant(_460),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:904:21: 906:24 (#406),
                    scope: scope[45],
                },
                kind: switchInt(move _471) -> [0: bb268, 1: bb267, otherwise: bb266],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _460),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:904:21: 906:24 (#406),
                    scope: scope[45],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:906:23: 906:24 (#407),
                    scope: scope[45],
                },
                kind: falseEdge -> [real: bb269, imaginary: bb268],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_475),
            _475 = ((_460 as Continue).0: ()),
            _459 = _475,
            StorageDead(_475),
            StorageDead(_467),
            StorageDead(_466),
            StorageDead(_464),
            StorageDead(_460),
            StorageDead(_459),
            _457 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:901:17: 907:18 (#0),
                    scope: scope[45],
                },
                kind: goto -> bb272,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_472),
            _472 = ((_460 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_474),
            _474 = _472,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:904:21: 906:24 (#406),
                    scope: scope[78],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _474) -> [return: bb270, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_474),
            StorageDead(_472),
            StorageDead(_467),
            StorageDead(_466),
            StorageDead(_464),
            StorageDead(_460),
            StorageDead(_459),
            StorageDead(_458),
            StorageDead(_457),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[45],
                },
                kind: goto -> bb521,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _457 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:901:17: 907:18 (#0),
                    scope: scope[45],
                },
                kind: goto -> bb272,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_458),
            StorageDead(_457),
            StorageLive(_476),
            StorageLive(_477),
            StorageLive(_478),
            StorageLive(_479),
            _479 = &(*_115),
            StorageLive(_480),
            _480 = &mut (*_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:908:17: 908:50 (#0),
                    scope: scope[45],
                },
                kind: _478 = uts46::write_punycode_label::<W>(move _479, move _480) -> [return: bb273, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_480),
            StorageDead(_479),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:908:17: 908:51 (#408),
                    scope: scope[45],
                },
                kind: _477 = <core::result::Result<(), uts46::ProcessingError> as core::ops::Try>::branch(move _478) -> [return: bb274, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_478),
            PlaceMention(_477),
            _481 = discriminant(_477),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:908:17: 908:51 (#408),
                    scope: scope[45],
                },
                kind: switchInt(move _481) -> [0: bb277, 1: bb276, otherwise: bb275],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _477),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:908:17: 908:51 (#408),
                    scope: scope[45],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:908:50: 908:51 (#409),
                    scope: scope[45],
                },
                kind: falseEdge -> [real: bb278, imaginary: bb277],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_485),
            _485 = ((_477 as Continue).0: ()),
            _476 = _485,
            StorageDead(_485),
            StorageDead(_477),
            StorageDead(_476),
            _109 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:861:13: 909:14 (#0),
                    scope: scope[45],
                },
                kind: goto -> bb280,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_482),
            _482 = ((_477 as Break).0: core::result::Result<core::convert::Infallible, uts46::ProcessingError>),
            StorageLive(_484),
            _484 = _482,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:908:17: 908:51 (#408),
                    scope: scope[82],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, uts46::ProcessingError>>>::from_residual(move _484) -> [return: bb279, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_484),
            StorageDead(_482),
            StorageDead(_477),
            StorageDead(_476),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[45],
                },
                kind: goto -> bb521,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_307),
            StorageDead(_298),
            StorageDead(_279),
            StorageDead(_116),
            StorageDead(_115),
            StorageDead(_112),
            StorageDead(_110),
            StorageDead(_109),
            _108 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:799:9: 910:10 (#330),
                    scope: scope[15],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_489),
            _489 = uts46::ProcessingError::ValidityError,
            _0 = core::result::Result::<uts46::ProcessingSuccess, uts46::ProcessingError>::Err(move _489),
            StorageDead(_489),
            StorageDead(_487),
            StorageDead(_486),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[14],
                },
                kind: goto -> bb527,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _486 = const (),
            StorageDead(_487),
            StorageDead(_486),
            StorageLive(_490),
            StorageLive(_491),
            _491 = _92,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:916:12: 916:30 (#0),
                    scope: scope[14],
                },
                kind: switchInt(move _491) -> [0: bb284, otherwise: bb283],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            PlaceMention(_8),
            _492 = discriminant(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:917:20: 917:30 (#0),
                    scope: scope[85],
                },
                kind: switchInt(move _492) -> [1: bb285, otherwise: bb507],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _490 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:916:9: 1025:10 (#0),
                    scope: scope[14],
                },
                kind: goto -> bb508,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:917:20: 917:30 (#0),
                    scope: scope[85],
                },
                kind: falseEdge -> [real: bb286, imaginary: bb507],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_493),
            _493 = move ((_8 as Some).0: &mut W),
            StorageLive(_494),
            _494 = const false,
            FakeRead(ForLet(None), _494),
            StorageLive(_495),
            StorageLive(_496),
            StorageLive(_497),
            StorageLive(_498),
            _498 = &_14,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:919:49: 919:72 (#0),
                    scope: scope[86],
                },
                kind: _497 = <smallvec::SmallVec<[uts46::AlreadyAsciiLabel<'_>; 8]> as core::ops::Deref>::deref(move _498) -> [return: bb287, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _496 = &(*_497),
            StorageDead(_498),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:919:49: 919:72 (#0),
                    scope: scope[86],
                },
                kind: _495 = core::slice::<impl [uts46::AlreadyAsciiLabel<'_>]>::iter(move _496) -> [return: bb288, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_496),
            FakeRead(ForLet(None), _495),
            StorageDead(_497),
            StorageLive(_499),
            _499 = _15,
            FakeRead(ForLet(None), _499),
            StorageLive(_500),
            _500 = const false,
            FakeRead(ForLet(None), _500),
            StorageLive(_501),
            StorageLive(_502),
            StorageLive(_503),
            StorageLive(_504),
            StorageLive(_505),
            StorageLive(_506),
            _506 = &_13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:922:30: 922:64 (#0),
                    scope: scope[89],
                },
                kind: _505 = <smallvec::SmallVec<[char; 253]> as core::ops::Deref>::deref(move _506) -> [return: bb289, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _504 = &(*_505),
            StorageDead(_506),
            StorageLive(_507),
            _507 = {closure@idna/src/uts46.rs:922:50: 922:53},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:922:30: 922:64 (#0),
                    scope: scope[89],
                },
                kind: _503 = core::slice::<impl [char]>::split::<{closure@idna/src/uts46.rs:922:50: 922:53}>(move _504, move _507) -> [return: bb290, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_507),
            StorageDead(_504),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:922:30: 922:64 (#413),
                    scope: scope[89],
                },
                kind: _502 = <core::slice::Split<'_, char, {closure@idna/src/uts46.rs:922:50: 922:53}> as core::iter::IntoIterator>::into_iter(move _503) -> [return: bb291, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_503),
            PlaceMention(_502),
            StorageLive(_508),
            _508 = move _502,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:922:17: 1017:18 (#412),
                    scope: scope[90],
                },
                kind: goto -> bb292,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:922:17: 1017:18 (#412),
                    scope: scope[90],
                },
                kind: falseUnwind -> [real: bb293, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_509),
            StorageLive(_510),
            StorageLive(_511),
            StorageLive(_512),
            _512 = &mut _508,
            _511 = &mut (*_512),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:922:30: 922:64 (#413),
                    scope: scope[90],
                },
                kind: _510 = <core::slice::Split<'_, char, {closure@idna/src/uts46.rs:922:50: 922:53}> as core::iter::Iterator>::next(move _511) -> [return: bb294, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_511),
            PlaceMention(_510),
            _513 = discriminant(_510),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:922:30: 922:64 (#413),
                    scope: scope[90],
                },
                kind: switchInt(move _513) -> [0: bb296, 1: bb297, otherwise: bb295],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _510),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:922:30: 922:64 (#413),
                    scope: scope[90],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:922:17: 1017:18 (#412),
                    scope: scope[90],
                },
                kind: falseEdge -> [real: bb298, imaginary: bb297],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_515),
            _515 = ((_510 as Some).0: &[char]),
            StorageLive(_516),
            StorageLive(_517),
            StorageLive(_518),
            StorageLive(_519),
            _519 = &mut _495,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:925:43: 925:71 (#0),
                    scope: scope[91],
                },
                kind: _518 = <core::slice::Iter<'_, uts46::AlreadyAsciiLabel<'_>> as core::iter::Iterator>::next(move _519) -> [return: bb299, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _501 = const (),
            StorageDead(_512),
            StorageDead(_510),
            StorageDead(_509),
            StorageDead(_508),
            StorageDead(_505),
            StorageDead(_502),
            StorageDead(_501),
            StorageLive(_826),
            _826 = _500,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1018:21: 1018:35 (#0),
                    scope: scope[89],
                },
                kind: switchInt(move _826) -> [0: bb496, otherwise: bb495],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_519),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:925:43: 925:80 (#0),
                    scope: scope[91],
                },
                kind: _517 = core::option::Option::<&uts46::AlreadyAsciiLabel<'_>>::unwrap(move _518) -> [return: bb300, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_518),
            _516 = (*_517),
            FakeRead(ForLet(None), _516),
            StorageDead(_517),
            StorageLive(_520),
            StorageLive(_521),
            _521 = _494,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:926:24: 926:34 (#0),
                    scope: scope[92],
                },
                kind: switchInt(move _521) -> [0: bb319, otherwise: bb301],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_522),
            _522 = _500,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:927:28: 927:42 (#0),
                    scope: scope[92],
                },
                kind: switchInt(move _522) -> [0: bb310, otherwise: bb302],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_523),
            StorageLive(_524),
            StorageLive(_525),
            StorageLive(_526),
            _526 = &mut (*_493),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:928:29: 928:49 (#0),
                    scope: scope[92],
                },
                kind: _525 = <W as core::fmt::Write>::write_char(move _526, const '.') -> [return: bb303, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_526),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:928:29: 928:50 (#417),
                    scope: scope[92],
                },
                kind: _524 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _525) -> [return: bb304, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_525),
            PlaceMention(_524),
            _527 = discriminant(_524),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:928:29: 928:50 (#417),
                    scope: scope[92],
                },
                kind: switchInt(move _527) -> [0: bb307, 1: bb306, otherwise: bb305],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _524),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:928:29: 928:50 (#417),
                    scope: scope[92],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:928:49: 928:50 (#418),
                    scope: scope[92],
                },
                kind: falseEdge -> [real: bb308, imaginary: bb307],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_531),
            _531 = ((_524 as Continue).0: ()),
            _523 = _531,
            StorageDead(_531),
            StorageDead(_524),
            StorageDead(_523),
            _520 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:927:25: 932:26 (#0),
                    scope: scope[92],
                },
                kind: goto -> bb318,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_528),
            _528 = ((_524 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_530),
            _530 = _528,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:928:29: 928:50 (#417),
                    scope: scope[94],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _530) -> [return: bb309, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_530),
            StorageDead(_528),
            StorageDead(_524),
            StorageDead(_523),
            StorageDead(_522),
            StorageDead(_521),
            StorageDead(_520),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[92],
                },
                kind: goto -> bb516,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_532),
            StorageLive(_533),
            _533 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12: 346:42 (#139),
                    scope: scope[92],
                },
                kind: switchInt(move _533) -> [0: bb315, otherwise: bb311],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_534),
            StorageLive(_535),
            StorageLive(_536),
            StorageLive(_537),
            _537 = _499,
            _538 = Len((*_2)),
            _539 = Lt(_537, _538),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:930:46: 930:85 (#0),
                    scope: scope[92],
                },
                kind: assert(move _539, "index out of bounds: the length is {} but the index is {}", move _538, _537) -> [success: bb312, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _536 = &(*_2)[_537],
            StorageLive(_540),
            StorageLive(_541),
            _541 = const 46_u8,
            _540 = &_541,
            _535 = (move _536, move _540),
            StorageDead(_540),
            StorageDead(_536),
            PlaceMention(_535),
            StorageLive(_542),
            _542 = (_535.0: &u8),
            StorageLive(_543),
            _543 = (_535.1: &u8),
            StorageLive(_544),
            StorageLive(_545),
            _545 = (*_542),
            StorageLive(_546),
            _546 = (*_543),
            _544 = Eq(move _545, move _546),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21: 40:46 (#140),
                    scope: scope[97],
                },
                kind: switchInt(move _544) -> [0: bb314, otherwise: bb313],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_546),
            StorageDead(_545),
            _534 = const (),
            StorageDead(_544),
            StorageDead(_543),
            StorageDead(_542),
            StorageDead(_541),
            StorageDead(_537),
            StorageDead(_535),
            StorageDead(_534),
            _532 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9: 348:10 (#138),
                    scope: scope[92],
                },
                kind: goto -> bb316,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_546),
            StorageDead(_545),
            StorageLive(_548),
            _548 = core::panicking::AssertKind::Eq,
            FakeRead(ForLet(None), _548),
            StorageLive(_549),
            StorageLive(_550),
            _550 = move _548,
            StorageLive(_551),
            StorageLive(_552),
            _552 = &(*_542),
            _551 = &(*_552),
            StorageLive(_553),
            StorageLive(_554),
            _554 = &(*_543),
            _553 = &(*_554),
            StorageLive(_555),
            _555 = core::option::Option::<core::fmt::Arguments<'_>>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21: 45:114 (#140),
                    scope: scope[98],
                },
                kind: _549 = core::panicking::assert_failed::<u8, u8>(move _550, move _551, move _553, move _555) -> bb532,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _532 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9: 348:10 (#138),
                    scope: scope[92],
                },
                kind: goto -> bb316,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_533),
            StorageDead(_532),
            _556 = AddWithOverflow(_499, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:931:29: 931:60 (#0),
                    scope: scope[92],
                },
                kind: assert(!move (_556.1: bool), "attempt to compute `{} + {}`, which would overflow", _499, const 1_usize) -> [success: bb317, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _499 = move (_556.0: usize),
            _520 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:927:25: 932:26 (#0),
                    scope: scope[92],
                },
                kind: goto -> bb318,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_522),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:926:21: 933:22 (#0),
                    scope: scope[92],
                },
                kind: goto -> bb320,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _520 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:926:21: 933:22 (#0),
                    scope: scope[92],
                },
                kind: goto -> bb320,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_521),
            StorageDead(_520),
            _494 = const true,
            StorageLive(_557),
            PlaceMention(_516),
            _558 = discriminant(_516),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:936:28: 936:73 (#0),
                    scope: scope[99],
                },
                kind: switchInt(move _558) -> [0: bb321, otherwise: bb381],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:936:28: 936:73 (#0),
                    scope: scope[99],
                },
                kind: falseEdge -> [real: bb322, imaginary: bb381],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_559),
            _559 = ((_516 as MixedCaseAscii).0: &[u8]),
            StorageLive(_561),
            StorageLive(_562),
            StorageLive(_563),
            StorageLive(_564),
            StorageLive(_565),
            _565 = &(*_559),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:938:29: 938:46 (#0),
                    scope: scope[100],
                },
                kind: _564 = core::slice::<impl [u8]>::iter(move _565) -> [return: bb323, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _563 = &mut _564,
            StorageDead(_565),
            StorageLive(_566),
            _566 = {closure@idna/src/uts46.rs:938:56: 938:59},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:938:29: 938:83 (#0),
                    scope: scope[100],
                },
                kind: _562 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::position::<{closure@idna/src/uts46.rs:938:56: 938:59}>(move _563, move _566) -> [return: bb324, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_566),
            StorageDead(_563),
            PlaceMention(_562),
            _567 = discriminant(_562),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:937:32: 937:54 (#0),
                    scope: scope[100],
                },
                kind: switchInt(move _567) -> [1: bb325, otherwise: bb366],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:937:32: 937:54 (#0),
                    scope: scope[100],
                },
                kind: falseEdge -> [real: bb326, imaginary: bb366],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_568),
            _568 = ((_562 as Some).0: usize),
            StorageLive(_571),
            StorageLive(_572),
            _572 = &(*_559),
            StorageLive(_573),
            _573 = _568,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:940:48: 940:85 (#0),
                    scope: scope[100],
                },
                kind: _571 = core::slice::<impl [u8]>::split_at(move _572, move _573) -> [return: bb327, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_573),
            StorageDead(_572),
            PlaceMention(_571),
            StorageLive(_569),
            _569 = (_571.0: &[u8]),
            StorageLive(_570),
            _570 = (_571.1: &[u8]),
            StorageDead(_571),
            StorageLive(_574),
            StorageLive(_575),
            _575 = _500,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:941:53: 941:67 (#0),
                    scope: scope[101],
                },
                kind: switchInt(move _575) -> [0: bb329, otherwise: bb328],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _574 = _569,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:941:50: 948:30 (#0),
                    scope: scope[101],
                },
                kind: goto -> bb339,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_576),
            _500 = const true,
            StorageLive(_577),
            StorageLive(_578),
            _578 = &(*_569),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:945:63: 945:73 (#0),
                    scope: scope[101],
                },
                kind: _577 = core::slice::<impl [u8]>::len(move _578) -> [return: bb330, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_578),
            _579 = AddWithOverflow(_499, _577),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:945:33: 945:73 (#0),
                    scope: scope[101],
                },
                kind: assert(!move (_579.1: bool), "attempt to compute `{} + {}`, which would overflow", _499, move _577) -> [success: bb331, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _499 = move (_579.0: usize),
            StorageDead(_577),
            StorageLive(_580),
            StorageLive(_581),
            _581 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:12: 376:42 (#142),
                    scope: scope[101],
                },
                kind: switchInt(move _581) -> [0: bb336, otherwise: bb332],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_582),
            StorageLive(_583),
            StorageLive(_584),
            _584 = &_499,
            StorageLive(_585),
            StorageLive(_586),
            StorageLive(_587),
            _587 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:946:78: 946:95 (#0),
                    scope: scope[101],
                },
                kind: _586 = core::slice::<impl [u8]>::len(move _587) -> [return: bb333, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_587),
            _585 = &_586,
            _583 = (move _584, move _585),
            StorageDead(_585),
            StorageDead(_584),
            PlaceMention(_583),
            StorageLive(_588),
            _588 = (_583.0: &usize),
            StorageLive(_589),
            _589 = (_583.1: &usize),
            StorageLive(_590),
            StorageLive(_591),
            _591 = (*_588),
            StorageLive(_592),
            _592 = (*_589),
            _590 = Eq(move _591, move _592),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:20: 90:43 (#143),
                    scope: scope[103],
                },
                kind: switchInt(move _590) -> [0: bb335, otherwise: bb334],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_592),
            StorageDead(_591),
            StorageLive(_594),
            _594 = core::panicking::AssertKind::Ne,
            FakeRead(ForLet(None), _594),
            StorageLive(_595),
            StorageLive(_596),
            _596 = move _594,
            StorageLive(_597),
            StorageLive(_598),
            _598 = &(*_588),
            _597 = &(*_598),
            StorageLive(_599),
            StorageLive(_600),
            _600 = &(*_589),
            _599 = &(*_600),
            StorageLive(_601),
            _601 = core::option::Option::<core::fmt::Arguments<'_>>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:21: 95:114 (#143),
                    scope: scope[104],
                },
                kind: _595 = core::panicking::assert_failed::<usize, usize>(move _596, move _597, move _599, move _601) -> bb532,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_592),
            StorageDead(_591),
            _582 = const (),
            StorageDead(_590),
            StorageDead(_589),
            StorageDead(_588),
            StorageDead(_586),
            StorageDead(_583),
            StorageDead(_582),
            _580 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:9: 378:10 (#141),
                    scope: scope[101],
                },
                kind: goto -> bb337,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _580 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:9: 378:10 (#141),
                    scope: scope[101],
                },
                kind: goto -> bb337,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_581),
            StorageDead(_580),
            StorageLive(_602),
            StorageLive(_603),
            _603 = &(*_2),
            StorageLive(_604),
            StorageLive(_605),
            _605 = _499,
            _604 = core::ops::RangeTo::<usize> { end: move _605 },
            StorageDead(_605),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:947:45: 947:75 (#0),
                    scope: scope[101],
                },
                kind: _602 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _603, move _604) -> [return: bb338, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_604),
            StorageDead(_603),
            _576 = &(*_602),
            _574 = &(*_576),
            StorageDead(_576),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:941:50: 948:30 (#0),
                    scope: scope[101],
                },
                kind: goto -> bb339,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_575),
            FakeRead(ForLet(None), _574),
            StorageLive(_606),
            StorageLive(_607),
            StorageLive(_608),
            StorageLive(_609),
            _609 = &mut (*_493),
            StorageLive(_610),
            StorageLive(_611),
            StorageLive(_612),
            _612 = &(*_574),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:951:33: 951:79 (#0),
                    scope: scope[102],
                },
                kind: _611 = core::str::from_utf8_unchecked(move _612) -> [return: bb340, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _610 = &(*_611),
            StorageDead(_612),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:950:29: 952:31 (#0),
                    scope: scope[102],
                },
                kind: _608 = <W as core::fmt::Write>::write_str(move _609, move _610) -> [return: bb341, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_610),
            StorageDead(_609),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:950:29: 952:32 (#428),
                    scope: scope[102],
                },
                kind: _607 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _608) -> [return: bb342, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_608),
            PlaceMention(_607),
            _613 = discriminant(_607),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:950:29: 952:32 (#428),
                    scope: scope[102],
                },
                kind: switchInt(move _613) -> [0: bb345, 1: bb344, otherwise: bb343],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _607),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:950:29: 952:32 (#428),
                    scope: scope[102],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:952:31: 952:32 (#429),
                    scope: scope[102],
                },
                kind: falseEdge -> [real: bb346, imaginary: bb345],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_617),
            _617 = ((_607 as Continue).0: ()),
            _606 = _617,
            StorageDead(_617),
            StorageDead(_611),
            StorageDead(_607),
            StorageDead(_606),
            StorageLive(_618),
            StorageLive(_619),
            StorageLive(_620),
            _620 = &(*_570),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:953:38: 953:49 (#0),
                    scope: scope[102],
                },
                kind: _619 = core::slice::<impl [u8]>::iter(move _620) -> [return: bb348, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_614),
            _614 = ((_607 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_616),
            _616 = _614,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:950:29: 952:32 (#428),
                    scope: scope[106],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _616) -> [return: bb347, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_616),
            StorageDead(_614),
            StorageDead(_611),
            StorageDead(_607),
            StorageDead(_606),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[102],
                },
                kind: goto -> bb514,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_620),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:953:38: 953:49 (#431),
                    scope: scope[102],
                },
                kind: _618 = <core::slice::Iter<'_, u8> as core::iter::IntoIterator>::into_iter(move _619) -> [return: bb349, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_619),
            PlaceMention(_618),
            StorageLive(_621),
            _621 = move _618,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:953:29: 955:30 (#430),
                    scope: scope[109],
                },
                kind: goto -> bb350,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:953:29: 955:30 (#430),
                    scope: scope[109],
                },
                kind: falseUnwind -> [real: bb351, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_622),
            StorageLive(_623),
            StorageLive(_624),
            StorageLive(_625),
            _625 = &mut _621,
            _624 = &mut (*_625),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:953:38: 953:49 (#431),
                    scope: scope[109],
                },
                kind: _623 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::next(move _624) -> [return: bb352, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_624),
            PlaceMention(_623),
            _626 = discriminant(_623),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:953:38: 953:49 (#431),
                    scope: scope[109],
                },
                kind: switchInt(move _626) -> [0: bb354, 1: bb355, otherwise: bb353],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _623),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:953:38: 953:49 (#431),
                    scope: scope[109],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:953:29: 955:30 (#430),
                    scope: scope[109],
                },
                kind: falseEdge -> [real: bb356, imaginary: bb355],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_628),
            _628 = ((_623 as Some).0: &u8),
            StorageLive(_629),
            StorageLive(_630),
            StorageLive(_631),
            StorageLive(_632),
            _632 = &mut (*_493),
            StorageLive(_633),
            StorageLive(_634),
            StorageLive(_635),
            _635 = &(*_628),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:954:60: 954:82 (#0),
                    scope: scope[110],
                },
                kind: _634 = core::num::<impl u8>::to_ascii_lowercase(move _635) -> [return: bb357, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _561 = const (),
            StorageDead(_625),
            StorageDead(_623),
            StorageDead(_622),
            StorageDead(_621),
            StorageDead(_618),
            StorageDead(_602),
            StorageDead(_574),
            StorageDead(_570),
            StorageDead(_569),
            StorageDead(_568),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:937:25: 961:26 (#0),
                    scope: scope[99],
                },
                kind: goto -> bb380,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_635),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:954:49: 954:83 (#0),
                    scope: scope[110],
                },
                kind: _633 = <char as core::convert::From<u8>>::from(move _634) -> [return: bb358, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_634),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:954:33: 954:84 (#0),
                    scope: scope[110],
                },
                kind: _631 = <W as core::fmt::Write>::write_char(move _632, move _633) -> [return: bb359, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_633),
            StorageDead(_632),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:954:33: 954:85 (#433),
                    scope: scope[110],
                },
                kind: _630 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _631) -> [return: bb360, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_631),
            PlaceMention(_630),
            _636 = discriminant(_630),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:954:33: 954:85 (#433),
                    scope: scope[110],
                },
                kind: switchInt(move _636) -> [0: bb363, 1: bb362, otherwise: bb361],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _630),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:954:33: 954:85 (#433),
                    scope: scope[110],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:954:84: 954:85 (#434),
                    scope: scope[110],
                },
                kind: falseEdge -> [real: bb364, imaginary: bb363],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_640),
            _640 = ((_630 as Continue).0: ()),
            _629 = _640,
            StorageDead(_640),
            StorageDead(_630),
            StorageDead(_629),
            _622 = const (),
            StorageDead(_628),
            StorageDead(_625),
            StorageDead(_623),
            StorageDead(_622),
            _108 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:953:29: 955:30 (#430),
                    scope: scope[109],
                },
                kind: goto -> bb350,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_637),
            _637 = ((_630 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_639),
            _639 = _637,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:954:33: 954:85 (#433),
                    scope: scope[112],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _639) -> [return: bb365, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_639),
            StorageDead(_637),
            StorageDead(_630),
            StorageDead(_629),
            StorageDead(_628),
            StorageDead(_625),
            StorageDead(_623),
            StorageDead(_622),
            StorageDead(_621),
            StorageDead(_618),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[102],
                },
                kind: goto -> bb514,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_641),
            _641 = _500,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:956:35: 956:49 (#0),
                    scope: scope[99],
                },
                kind: switchInt(move _641) -> [0: bb376, otherwise: bb367],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_642),
            StorageLive(_643),
            StorageLive(_644),
            StorageLive(_645),
            _645 = &mut (*_493),
            StorageLive(_646),
            StorageLive(_647),
            StorageLive(_648),
            _648 = &(*_559),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:958:53: 958:95 (#0),
                    scope: scope[99],
                },
                kind: _647 = core::str::from_utf8_unchecked(move _648) -> [return: bb368, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _646 = &(*_647),
            StorageDead(_648),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:958:29: 958:98 (#0),
                    scope: scope[99],
                },
                kind: _644 = <W as core::fmt::Write>::write_str(move _645, move _646) -> [return: bb369, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_646),
            StorageDead(_645),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:958:29: 958:99 (#436),
                    scope: scope[99],
                },
                kind: _643 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _644) -> [return: bb370, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_644),
            PlaceMention(_643),
            _649 = discriminant(_643),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:958:29: 958:99 (#436),
                    scope: scope[99],
                },
                kind: switchInt(move _649) -> [0: bb373, 1: bb372, otherwise: bb371],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _643),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:958:29: 958:99 (#436),
                    scope: scope[99],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:958:98: 958:99 (#437),
                    scope: scope[99],
                },
                kind: falseEdge -> [real: bb374, imaginary: bb373],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_653),
            _653 = ((_643 as Continue).0: ()),
            _642 = _653,
            StorageDead(_653),
            StorageDead(_647),
            StorageDead(_643),
            StorageDead(_642),
            _561 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:956:32: 961:26 (#0),
                    scope: scope[99],
                },
                kind: goto -> bb379,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_650),
            _650 = ((_643 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_652),
            _652 = _650,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:958:29: 958:99 (#436),
                    scope: scope[116],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _652) -> [return: bb375, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_652),
            StorageDead(_650),
            StorageDead(_647),
            StorageDead(_643),
            StorageDead(_642),
            StorageDead(_641),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[99],
                },
                kind: goto -> bb515,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_654),
            StorageLive(_655),
            _655 = &(*_559),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:960:59: 960:75 (#0),
                    scope: scope[99],
                },
                kind: _654 = core::slice::<impl [u8]>::len(move _655) -> [return: bb377, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_655),
            _656 = AddWithOverflow(_499, _654),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:960:29: 960:75 (#0),
                    scope: scope[99],
                },
                kind: assert(!move (_656.1: bool), "attempt to compute `{} + {}`, which would overflow", _499, move _654) -> [success: bb378, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _499 = move (_656.0: usize),
            StorageDead(_654),
            _561 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:956:32: 961:26 (#0),
                    scope: scope[99],
                },
                kind: goto -> bb379,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_641),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:937:25: 961:26 (#0),
                    scope: scope[99],
                },
                kind: goto -> bb380,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_564),
            StorageDead(_562),
            StorageDead(_561),
            StorageDead(_559),
            StorageDead(_557),
            StorageDead(_516),
            StorageDead(_515),
            StorageDead(_512),
            StorageDead(_510),
            StorageDead(_509),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[90],
                },
                kind: goto -> bb292,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _557 = const (),
            StorageDead(_557),
            StorageLive(_657),
            StorageLive(_658),
            _658 = &(*_515),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:965:24: 965:39 (#0),
                    scope: scope[92],
                },
                kind: _657 = uts46::is_ascii(move _658) -> [return: bb382, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:965:24: 965:39 (#0),
                    scope: scope[92],
                },
                kind: switchInt(move _657) -> [0: bb413, otherwise: bb383],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_658),
            StorageLive(_659),
            StorageLive(_660),
            _660 = _500,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:966:29: 966:43 (#0),
                    scope: scope[92],
                },
                kind: switchInt(move _660) -> [0: bb384, otherwise: bb394],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _500 = const true,
            StorageLive(_661),
            StorageLive(_662),
            StorageLive(_663),
            StorageLive(_664),
            _664 = &mut (*_493),
            StorageLive(_665),
            StorageLive(_666),
            StorageLive(_667),
            StorageLive(_668),
            StorageLive(_669),
            StorageLive(_670),
            _670 = &(*_2),
            StorageLive(_671),
            StorageLive(_672),
            _672 = _499,
            _671 = core::ops::RangeTo::<usize> { end: move _672 },
            StorageDead(_672),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:971:49: 971:79 (#0),
                    scope: scope[92],
                },
                kind: _669 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _670, move _671) -> [return: bb385, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_671),
            StorageDead(_670),
            _668 = &(*_669),
            _667 = &(*_668),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:970:33: 972:34 (#0),
                    scope: scope[92],
                },
                kind: _666 = core::str::from_utf8_unchecked(move _667) -> [return: bb386, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _665 = &(*_666),
            StorageDead(_667),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:969:29: 973:31 (#0),
                    scope: scope[92],
                },
                kind: _663 = <W as core::fmt::Write>::write_str(move _664, move _665) -> [return: bb387, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_665),
            StorageDead(_664),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:969:29: 973:32 (#440),
                    scope: scope[92],
                },
                kind: _662 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _663) -> [return: bb388, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_663),
            PlaceMention(_662),
            _673 = discriminant(_662),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:969:29: 973:32 (#440),
                    scope: scope[92],
                },
                kind: switchInt(move _673) -> [0: bb391, 1: bb390, otherwise: bb389],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _662),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:969:29: 973:32 (#440),
                    scope: scope[92],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:973:31: 973:32 (#441),
                    scope: scope[92],
                },
                kind: falseEdge -> [real: bb392, imaginary: bb391],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_677),
            _677 = ((_662 as Continue).0: ()),
            _661 = _677,
            StorageDead(_677),
            StorageDead(_669),
            StorageDead(_668),
            StorageDead(_666),
            StorageDead(_662),
            StorageDead(_661),
            _659 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:966:25: 974:26 (#0),
                    scope: scope[92],
                },
                kind: goto -> bb395,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_674),
            _674 = ((_662 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_676),
            _676 = _674,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:969:29: 973:32 (#440),
                    scope: scope[120],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _676) -> [return: bb393, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_676),
            StorageDead(_674),
            StorageDead(_669),
            StorageDead(_668),
            StorageDead(_666),
            StorageDead(_662),
            StorageDead(_661),
            StorageDead(_660),
            StorageDead(_659),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[92],
                },
                kind: goto -> bb513,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _659 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:966:25: 974:26 (#0),
                    scope: scope[92],
                },
                kind: goto -> bb395,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_660),
            StorageDead(_659),
            StorageLive(_678),
            StorageLive(_679),
            StorageLive(_680),
            StorageLive(_681),
            _681 = &(*_515),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:975:34: 975:46 (#0),
                    scope: scope[92],
                },
                kind: _680 = core::slice::<impl [char]>::iter(move _681) -> [return: bb396, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_681),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:975:34: 975:55 (#0),
                    scope: scope[92],
                },
                kind: _679 = <core::slice::Iter<'_, char> as core::iter::Iterator>::copied::<'_, char>(move _680) -> [return: bb397, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_680),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:975:34: 975:55 (#443),
                    scope: scope[92],
                },
                kind: _678 = <core::iter::Copied<core::slice::Iter<'_, char>> as core::iter::IntoIterator>::into_iter(move _679) -> [return: bb398, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_679),
            PlaceMention(_678),
            StorageLive(_682),
            _682 = move _678,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:975:25: 977:26 (#442),
                    scope: scope[123],
                },
                kind: goto -> bb399,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:975:25: 977:26 (#442),
                    scope: scope[123],
                },
                kind: falseUnwind -> [real: bb400, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_683),
            StorageLive(_684),
            StorageLive(_685),
            StorageLive(_686),
            _686 = &mut _682,
            _685 = &mut (*_686),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:975:34: 975:55 (#443),
                    scope: scope[123],
                },
                kind: _684 = <core::iter::Copied<core::slice::Iter<'_, char>> as core::iter::Iterator>::next(move _685) -> [return: bb401, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_685),
            PlaceMention(_684),
            _687 = discriminant(_684),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:975:34: 975:55 (#443),
                    scope: scope[123],
                },
                kind: switchInt(move _687) -> [0: bb403, 1: bb404, otherwise: bb402],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _684),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:975:34: 975:55 (#443),
                    scope: scope[123],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:975:25: 977:26 (#442),
                    scope: scope[123],
                },
                kind: falseEdge -> [real: bb405, imaginary: bb404],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_689),
            _689 = ((_684 as Some).0: char),
            StorageLive(_690),
            StorageLive(_691),
            StorageLive(_692),
            StorageLive(_693),
            _693 = &mut (*_493),
            StorageLive(_694),
            _694 = _689,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:976:29: 976:47 (#0),
                    scope: scope[124],
                },
                kind: _692 = <W as core::fmt::Write>::write_char(move _693, move _694) -> [return: bb406, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _509 = const (),
            StorageDead(_686),
            StorageDead(_684),
            StorageDead(_683),
            StorageDead(_682),
            StorageDead(_678),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:965:21: 1016:22 (#0),
                    scope: scope[92],
                },
                kind: goto -> bb494,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_694),
            StorageDead(_693),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:976:29: 976:48 (#445),
                    scope: scope[124],
                },
                kind: _691 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _692) -> [return: bb407, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_692),
            PlaceMention(_691),
            _695 = discriminant(_691),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:976:29: 976:48 (#445),
                    scope: scope[124],
                },
                kind: switchInt(move _695) -> [0: bb410, 1: bb409, otherwise: bb408],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _691),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:976:29: 976:48 (#445),
                    scope: scope[124],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:976:47: 976:48 (#446),
                    scope: scope[124],
                },
                kind: falseEdge -> [real: bb411, imaginary: bb410],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_699),
            _699 = ((_691 as Continue).0: ()),
            _690 = _699,
            StorageDead(_699),
            StorageDead(_691),
            StorageDead(_690),
            _683 = const (),
            StorageDead(_689),
            StorageDead(_686),
            StorageDead(_684),
            StorageDead(_683),
            _108 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:975:25: 977:26 (#442),
                    scope: scope[123],
                },
                kind: goto -> bb399,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_696),
            _696 = ((_691 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_698),
            _698 = _696,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:976:29: 976:48 (#445),
                    scope: scope[126],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _698) -> [return: bb412, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_698),
            StorageDead(_696),
            StorageDead(_691),
            StorageDead(_690),
            StorageDead(_689),
            StorageDead(_686),
            StorageDead(_684),
            StorageDead(_683),
            StorageDead(_682),
            StorageDead(_678),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[92],
                },
                kind: goto -> bb513,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_658),
            PlaceMention(_516),
            _700 = discriminant(_516),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:978:35: 978:83 (#0),
                    scope: scope[129],
                },
                kind: switchInt(move _700) -> [1: bb414, otherwise: bb474],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:978:35: 978:83 (#0),
                    scope: scope[129],
                },
                kind: falseEdge -> [real: bb415, imaginary: bb474],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_701),
            _701 = ((_516 as MixedCasePunycode).0: &[u8]),
            StorageLive(_702),
            StorageLive(_703),
            StorageLive(_704),
            StorageLive(_705),
            _705 = &(*_701),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:981:29: 981:46 (#0),
                    scope: scope[130],
                },
                kind: _704 = core::slice::<impl [u8]>::iter(move _705) -> [return: bb416, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _703 = &mut _704,
            StorageDead(_705),
            StorageLive(_706),
            _706 = {closure@idna/src/uts46.rs:981:56: 981:59},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:981:29: 981:83 (#0),
                    scope: scope[130],
                },
                kind: _702 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::position::<{closure@idna/src/uts46.rs:981:56: 981:59}>(move _703, move _706) -> [return: bb417, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_706),
            StorageDead(_703),
            PlaceMention(_702),
            _707 = discriminant(_702),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:980:32: 980:54 (#0),
                    scope: scope[130],
                },
                kind: switchInt(move _707) -> [1: bb418, otherwise: bb459],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:980:32: 980:54 (#0),
                    scope: scope[130],
                },
                kind: falseEdge -> [real: bb419, imaginary: bb459],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_708),
            _708 = ((_702 as Some).0: usize),
            StorageLive(_711),
            StorageLive(_712),
            _712 = &(*_701),
            StorageLive(_713),
            _713 = _708,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:983:48: 983:85 (#0),
                    scope: scope[130],
                },
                kind: _711 = core::slice::<impl [u8]>::split_at(move _712, move _713) -> [return: bb420, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_713),
            StorageDead(_712),
            PlaceMention(_711),
            StorageLive(_709),
            _709 = (_711.0: &[u8]),
            StorageLive(_710),
            _710 = (_711.1: &[u8]),
            StorageDead(_711),
            StorageLive(_714),
            StorageLive(_715),
            _715 = _500,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:984:53: 984:67 (#0),
                    scope: scope[131],
                },
                kind: switchInt(move _715) -> [0: bb422, otherwise: bb421],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _714 = _709,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:984:50: 991:30 (#0),
                    scope: scope[131],
                },
                kind: goto -> bb432,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_716),
            _500 = const true,
            StorageLive(_717),
            StorageLive(_718),
            _718 = &(*_709),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:988:63: 988:73 (#0),
                    scope: scope[131],
                },
                kind: _717 = core::slice::<impl [u8]>::len(move _718) -> [return: bb423, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_718),
            _719 = AddWithOverflow(_499, _717),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:988:33: 988:73 (#0),
                    scope: scope[131],
                },
                kind: assert(!move (_719.1: bool), "attempt to compute `{} + {}`, which would overflow", _499, move _717) -> [success: bb424, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _499 = move (_719.0: usize),
            StorageDead(_717),
            StorageLive(_720),
            StorageLive(_721),
            _721 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:12: 376:42 (#145),
                    scope: scope[131],
                },
                kind: switchInt(move _721) -> [0: bb429, otherwise: bb425],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_722),
            StorageLive(_723),
            StorageLive(_724),
            _724 = &_499,
            StorageLive(_725),
            StorageLive(_726),
            StorageLive(_727),
            _727 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:989:78: 989:95 (#0),
                    scope: scope[131],
                },
                kind: _726 = core::slice::<impl [u8]>::len(move _727) -> [return: bb426, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_727),
            _725 = &_726,
            _723 = (move _724, move _725),
            StorageDead(_725),
            StorageDead(_724),
            PlaceMention(_723),
            StorageLive(_728),
            _728 = (_723.0: &usize),
            StorageLive(_729),
            _729 = (_723.1: &usize),
            StorageLive(_730),
            StorageLive(_731),
            _731 = (*_728),
            StorageLive(_732),
            _732 = (*_729),
            _730 = Eq(move _731, move _732),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:20: 90:43 (#146),
                    scope: scope[133],
                },
                kind: switchInt(move _730) -> [0: bb428, otherwise: bb427],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_732),
            StorageDead(_731),
            StorageLive(_734),
            _734 = core::panicking::AssertKind::Ne,
            FakeRead(ForLet(None), _734),
            StorageLive(_735),
            StorageLive(_736),
            _736 = move _734,
            StorageLive(_737),
            StorageLive(_738),
            _738 = &(*_728),
            _737 = &(*_738),
            StorageLive(_739),
            StorageLive(_740),
            _740 = &(*_729),
            _739 = &(*_740),
            StorageLive(_741),
            _741 = core::option::Option::<core::fmt::Arguments<'_>>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:21: 95:114 (#146),
                    scope: scope[134],
                },
                kind: _735 = core::panicking::assert_failed::<usize, usize>(move _736, move _737, move _739, move _741) -> bb532,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_732),
            StorageDead(_731),
            _722 = const (),
            StorageDead(_730),
            StorageDead(_729),
            StorageDead(_728),
            StorageDead(_726),
            StorageDead(_723),
            StorageDead(_722),
            _720 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:9: 378:10 (#144),
                    scope: scope[131],
                },
                kind: goto -> bb430,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _720 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:9: 378:10 (#144),
                    scope: scope[131],
                },
                kind: goto -> bb430,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_721),
            StorageDead(_720),
            StorageLive(_742),
            StorageLive(_743),
            _743 = &(*_2),
            StorageLive(_744),
            StorageLive(_745),
            _745 = _499,
            _744 = core::ops::RangeTo::<usize> { end: move _745 },
            StorageDead(_745),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:990:45: 990:75 (#0),
                    scope: scope[131],
                },
                kind: _742 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _743, move _744) -> [return: bb431, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_744),
            StorageDead(_743),
            _716 = &(*_742),
            _714 = &(*_716),
            StorageDead(_716),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:984:50: 991:30 (#0),
                    scope: scope[131],
                },
                kind: goto -> bb432,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_715),
            FakeRead(ForLet(None), _714),
            StorageLive(_746),
            StorageLive(_747),
            StorageLive(_748),
            StorageLive(_749),
            _749 = &mut (*_493),
            StorageLive(_750),
            StorageLive(_751),
            StorageLive(_752),
            _752 = &(*_714),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:994:33: 994:79 (#0),
                    scope: scope[132],
                },
                kind: _751 = core::str::from_utf8_unchecked(move _752) -> [return: bb433, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _750 = &(*_751),
            StorageDead(_752),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:993:29: 995:31 (#0),
                    scope: scope[132],
                },
                kind: _748 = <W as core::fmt::Write>::write_str(move _749, move _750) -> [return: bb434, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_750),
            StorageDead(_749),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:993:29: 995:32 (#452),
                    scope: scope[132],
                },
                kind: _747 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _748) -> [return: bb435, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_748),
            PlaceMention(_747),
            _753 = discriminant(_747),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:993:29: 995:32 (#452),
                    scope: scope[132],
                },
                kind: switchInt(move _753) -> [0: bb438, 1: bb437, otherwise: bb436],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _747),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:993:29: 995:32 (#452),
                    scope: scope[132],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:995:31: 995:32 (#453),
                    scope: scope[132],
                },
                kind: falseEdge -> [real: bb439, imaginary: bb438],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_757),
            _757 = ((_747 as Continue).0: ()),
            _746 = _757,
            StorageDead(_757),
            StorageDead(_751),
            StorageDead(_747),
            StorageDead(_746),
            StorageLive(_758),
            StorageLive(_759),
            StorageLive(_760),
            _760 = &(*_710),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:996:38: 996:49 (#0),
                    scope: scope[132],
                },
                kind: _759 = core::slice::<impl [u8]>::iter(move _760) -> [return: bb441, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_754),
            _754 = ((_747 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_756),
            _756 = _754,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:993:29: 995:32 (#452),
                    scope: scope[136],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _756) -> [return: bb440, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_756),
            StorageDead(_754),
            StorageDead(_751),
            StorageDead(_747),
            StorageDead(_746),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[132],
                },
                kind: goto -> bb511,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_760),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:996:38: 996:49 (#455),
                    scope: scope[132],
                },
                kind: _758 = <core::slice::Iter<'_, u8> as core::iter::IntoIterator>::into_iter(move _759) -> [return: bb442, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_759),
            PlaceMention(_758),
            StorageLive(_761),
            _761 = move _758,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:996:29: 998:30 (#454),
                    scope: scope[139],
                },
                kind: goto -> bb443,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:996:29: 998:30 (#454),
                    scope: scope[139],
                },
                kind: falseUnwind -> [real: bb444, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_762),
            StorageLive(_763),
            StorageLive(_764),
            StorageLive(_765),
            _765 = &mut _761,
            _764 = &mut (*_765),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:996:38: 996:49 (#455),
                    scope: scope[139],
                },
                kind: _763 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::next(move _764) -> [return: bb445, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_764),
            PlaceMention(_763),
            _766 = discriminant(_763),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:996:38: 996:49 (#455),
                    scope: scope[139],
                },
                kind: switchInt(move _766) -> [0: bb447, 1: bb448, otherwise: bb446],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _763),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:996:38: 996:49 (#455),
                    scope: scope[139],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:996:29: 998:30 (#454),
                    scope: scope[139],
                },
                kind: falseEdge -> [real: bb449, imaginary: bb448],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_768),
            _768 = ((_763 as Some).0: &u8),
            StorageLive(_769),
            StorageLive(_770),
            StorageLive(_771),
            StorageLive(_772),
            _772 = &mut (*_493),
            StorageLive(_773),
            StorageLive(_774),
            StorageLive(_775),
            _775 = &(*_768),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:997:60: 997:82 (#0),
                    scope: scope[140],
                },
                kind: _774 = core::num::<impl u8>::to_ascii_lowercase(move _775) -> [return: bb450, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _509 = const (),
            StorageDead(_765),
            StorageDead(_763),
            StorageDead(_762),
            StorageDead(_761),
            StorageDead(_758),
            StorageDead(_742),
            StorageDead(_714),
            StorageDead(_710),
            StorageDead(_709),
            StorageDead(_708),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:980:25: 1004:26 (#0),
                    scope: scope[129],
                },
                kind: goto -> bb473,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_775),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:997:49: 997:83 (#0),
                    scope: scope[140],
                },
                kind: _773 = <char as core::convert::From<u8>>::from(move _774) -> [return: bb451, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_774),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:997:33: 997:84 (#0),
                    scope: scope[140],
                },
                kind: _771 = <W as core::fmt::Write>::write_char(move _772, move _773) -> [return: bb452, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_773),
            StorageDead(_772),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:997:33: 997:85 (#457),
                    scope: scope[140],
                },
                kind: _770 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _771) -> [return: bb453, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_771),
            PlaceMention(_770),
            _776 = discriminant(_770),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:997:33: 997:85 (#457),
                    scope: scope[140],
                },
                kind: switchInt(move _776) -> [0: bb456, 1: bb455, otherwise: bb454],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _770),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:997:33: 997:85 (#457),
                    scope: scope[140],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:997:84: 997:85 (#458),
                    scope: scope[140],
                },
                kind: falseEdge -> [real: bb457, imaginary: bb456],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_780),
            _780 = ((_770 as Continue).0: ()),
            _769 = _780,
            StorageDead(_780),
            StorageDead(_770),
            StorageDead(_769),
            _762 = const (),
            StorageDead(_768),
            StorageDead(_765),
            StorageDead(_763),
            StorageDead(_762),
            _108 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:996:29: 998:30 (#454),
                    scope: scope[139],
                },
                kind: goto -> bb443,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_777),
            _777 = ((_770 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_779),
            _779 = _777,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:997:33: 997:85 (#457),
                    scope: scope[142],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _779) -> [return: bb458, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_779),
            StorageDead(_777),
            StorageDead(_770),
            StorageDead(_769),
            StorageDead(_768),
            StorageDead(_765),
            StorageDead(_763),
            StorageDead(_762),
            StorageDead(_761),
            StorageDead(_758),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[132],
                },
                kind: goto -> bb511,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_781),
            _781 = _500,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:999:35: 999:49 (#0),
                    scope: scope[129],
                },
                kind: switchInt(move _781) -> [0: bb469, otherwise: bb460],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_782),
            StorageLive(_783),
            StorageLive(_784),
            StorageLive(_785),
            _785 = &mut (*_493),
            StorageLive(_786),
            StorageLive(_787),
            StorageLive(_788),
            _788 = &(*_701),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1001:53: 1001:95 (#0),
                    scope: scope[129],
                },
                kind: _787 = core::str::from_utf8_unchecked(move _788) -> [return: bb461, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _786 = &(*_787),
            StorageDead(_788),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1001:29: 1001:98 (#0),
                    scope: scope[129],
                },
                kind: _784 = <W as core::fmt::Write>::write_str(move _785, move _786) -> [return: bb462, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_786),
            StorageDead(_785),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1001:29: 1001:99 (#460),
                    scope: scope[129],
                },
                kind: _783 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _784) -> [return: bb463, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_784),
            PlaceMention(_783),
            _789 = discriminant(_783),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1001:29: 1001:99 (#460),
                    scope: scope[129],
                },
                kind: switchInt(move _789) -> [0: bb466, 1: bb465, otherwise: bb464],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _783),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1001:29: 1001:99 (#460),
                    scope: scope[129],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1001:98: 1001:99 (#461),
                    scope: scope[129],
                },
                kind: falseEdge -> [real: bb467, imaginary: bb466],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_793),
            _793 = ((_783 as Continue).0: ()),
            _782 = _793,
            StorageDead(_793),
            StorageDead(_787),
            StorageDead(_783),
            StorageDead(_782),
            _509 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:999:32: 1004:26 (#0),
                    scope: scope[129],
                },
                kind: goto -> bb472,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_790),
            _790 = ((_783 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_792),
            _792 = _790,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1001:29: 1001:99 (#460),
                    scope: scope[146],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _792) -> [return: bb468, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_792),
            StorageDead(_790),
            StorageDead(_787),
            StorageDead(_783),
            StorageDead(_782),
            StorageDead(_781),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[129],
                },
                kind: goto -> bb512,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_794),
            StorageLive(_795),
            _795 = &(*_701),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1003:59: 1003:75 (#0),
                    scope: scope[129],
                },
                kind: _794 = core::slice::<impl [u8]>::len(move _795) -> [return: bb470, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_795),
            _796 = AddWithOverflow(_499, _794),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1003:29: 1003:75 (#0),
                    scope: scope[129],
                },
                kind: assert(!move (_796.1: bool), "attempt to compute `{} + {}`, which would overflow", _499, move _794) -> [success: bb471, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _499 = move (_796.0: usize),
            StorageDead(_794),
            _509 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:999:32: 1004:26 (#0),
                    scope: scope[129],
                },
                kind: goto -> bb472,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_781),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:980:25: 1004:26 (#0),
                    scope: scope[129],
                },
                kind: goto -> bb473,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_704),
            StorageDead(_702),
            StorageDead(_701),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:978:28: 1016:22 (#0),
                    scope: scope[92],
                },
                kind: goto -> bb494,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_797),
            StorageLive(_798),
            _798 = _500,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1006:29: 1006:43 (#0),
                    scope: scope[92],
                },
                kind: switchInt(move _798) -> [0: bb475, otherwise: bb485],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _500 = const true,
            StorageLive(_799),
            StorageLive(_800),
            StorageLive(_801),
            StorageLive(_802),
            _802 = &mut (*_493),
            StorageLive(_803),
            StorageLive(_804),
            StorageLive(_805),
            StorageLive(_806),
            StorageLive(_807),
            StorageLive(_808),
            _808 = &(*_2),
            StorageLive(_809),
            StorageLive(_810),
            _810 = _499,
            _809 = core::ops::RangeTo::<usize> { end: move _810 },
            StorageDead(_810),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1011:49: 1011:79 (#0),
                    scope: scope[92],
                },
                kind: _807 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _808, move _809) -> [return: bb476, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_809),
            StorageDead(_808),
            _806 = &(*_807),
            _805 = &(*_806),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1010:33: 1012:34 (#0),
                    scope: scope[92],
                },
                kind: _804 = core::str::from_utf8_unchecked(move _805) -> [return: bb477, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _803 = &(*_804),
            StorageDead(_805),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1009:29: 1013:31 (#0),
                    scope: scope[92],
                },
                kind: _801 = <W as core::fmt::Write>::write_str(move _802, move _803) -> [return: bb478, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_803),
            StorageDead(_802),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1009:29: 1013:32 (#463),
                    scope: scope[92],
                },
                kind: _800 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _801) -> [return: bb479, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_801),
            PlaceMention(_800),
            _811 = discriminant(_800),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1009:29: 1013:32 (#463),
                    scope: scope[92],
                },
                kind: switchInt(move _811) -> [0: bb482, 1: bb481, otherwise: bb480],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _800),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1009:29: 1013:32 (#463),
                    scope: scope[92],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1013:31: 1013:32 (#464),
                    scope: scope[92],
                },
                kind: falseEdge -> [real: bb483, imaginary: bb482],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_815),
            _815 = ((_800 as Continue).0: ()),
            _799 = _815,
            StorageDead(_815),
            StorageDead(_807),
            StorageDead(_806),
            StorageDead(_804),
            StorageDead(_800),
            StorageDead(_799),
            _797 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1006:25: 1014:26 (#0),
                    scope: scope[92],
                },
                kind: goto -> bb486,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_812),
            _812 = ((_800 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_814),
            _814 = _812,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1009:29: 1013:32 (#463),
                    scope: scope[150],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _814) -> [return: bb484, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_814),
            StorageDead(_812),
            StorageDead(_807),
            StorageDead(_806),
            StorageDead(_804),
            StorageDead(_800),
            StorageDead(_799),
            StorageDead(_798),
            StorageDead(_797),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[92],
                },
                kind: goto -> bb513,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _797 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1006:25: 1014:26 (#0),
                    scope: scope[92],
                },
                kind: goto -> bb486,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_798),
            StorageDead(_797),
            StorageLive(_816),
            StorageLive(_817),
            StorageLive(_818),
            StorageLive(_819),
            _819 = &(*_515),
            StorageLive(_820),
            _820 = &mut (*_493),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1015:25: 1015:58 (#0),
                    scope: scope[92],
                },
                kind: _818 = uts46::write_punycode_label::<W>(move _819, move _820) -> [return: bb487, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_820),
            StorageDead(_819),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1015:25: 1015:59 (#465),
                    scope: scope[92],
                },
                kind: _817 = <core::result::Result<(), uts46::ProcessingError> as core::ops::Try>::branch(move _818) -> [return: bb488, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_818),
            PlaceMention(_817),
            _821 = discriminant(_817),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1015:25: 1015:59 (#465),
                    scope: scope[92],
                },
                kind: switchInt(move _821) -> [0: bb491, 1: bb490, otherwise: bb489],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _817),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1015:25: 1015:59 (#465),
                    scope: scope[92],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1015:58: 1015:59 (#466),
                    scope: scope[92],
                },
                kind: falseEdge -> [real: bb492, imaginary: bb491],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_825),
            _825 = ((_817 as Continue).0: ()),
            _816 = _825,
            StorageDead(_825),
            StorageDead(_817),
            StorageDead(_816),
            _509 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:965:21: 1016:22 (#0),
                    scope: scope[92],
                },
                kind: goto -> bb494,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_822),
            _822 = ((_817 as Break).0: core::result::Result<core::convert::Infallible, uts46::ProcessingError>),
            StorageLive(_824),
            _824 = _822,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1015:25: 1015:59 (#465),
                    scope: scope[154],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, uts46::ProcessingError>>>::from_residual(move _824) -> [return: bb493, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_824),
            StorageDead(_822),
            StorageDead(_817),
            StorageDead(_816),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[92],
                },
                kind: goto -> bb513,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_657),
            StorageDead(_516),
            StorageDead(_515),
            StorageDead(_512),
            StorageDead(_510),
            StorageDead(_509),
            _108 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:922:17: 1017:18 (#412),
                    scope: scope[90],
                },
                kind: goto -> bb292,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _490 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1018:17: 1023:18 (#0),
                    scope: scope[89],
                },
                kind: goto -> bb506,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_827),
            StorageLive(_828),
            StorageLive(_829),
            StorageLive(_830),
            _830 = &mut (*_493),
            StorageLive(_831),
            StorageLive(_832),
            StorageLive(_833),
            StorageLive(_834),
            StorageLive(_835),
            StorageLive(_836),
            _836 = &(*_2),
            StorageLive(_837),
            StorageLive(_838),
            _838 = _499,
            _837 = core::ops::RangeTo::<usize> { end: move _838 },
            StorageDead(_838),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1021:68: 1021:98 (#0),
                    scope: scope[89],
                },
                kind: _835 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _836, move _837) -> [return: bb497, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_837),
            StorageDead(_836),
            _834 = &(*_835),
            _833 = &(*_834),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1021:25: 1021:99 (#0),
                    scope: scope[89],
                },
                kind: _832 = core::str::from_utf8_unchecked(move _833) -> [return: bb498, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _831 = &(*_832),
            StorageDead(_833),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1020:21: 1022:23 (#0),
                    scope: scope[89],
                },
                kind: _829 = <W as core::fmt::Write>::write_str(move _830, move _831) -> [return: bb499, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_831),
            StorageDead(_830),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1020:21: 1022:24 (#468),
                    scope: scope[89],
                },
                kind: _828 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _829) -> [return: bb500, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_829),
            PlaceMention(_828),
            _839 = discriminant(_828),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1020:21: 1022:24 (#468),
                    scope: scope[89],
                },
                kind: switchInt(move _839) -> [0: bb503, 1: bb502, otherwise: bb501],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _828),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1020:21: 1022:24 (#468),
                    scope: scope[89],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1022:23: 1022:24 (#469),
                    scope: scope[89],
                },
                kind: falseEdge -> [real: bb504, imaginary: bb503],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_843),
            _843 = ((_828 as Continue).0: ()),
            _827 = _843,
            StorageDead(_843),
            StorageDead(_835),
            StorageDead(_834),
            StorageDead(_832),
            StorageDead(_828),
            StorageDead(_827),
            _490 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1018:17: 1023:18 (#0),
                    scope: scope[89],
                },
                kind: goto -> bb506,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_840),
            _840 = ((_828 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_842),
            _842 = _840,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1020:21: 1022:24 (#468),
                    scope: scope[158],
                },
                kind: _0 = <core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _842) -> [return: bb505, unwind: bb532],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_842),
            StorageDead(_840),
            StorageDead(_835),
            StorageDead(_834),
            StorageDead(_832),
            StorageDead(_828),
            StorageDead(_827),
            StorageDead(_826),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[89],
                },
                kind: goto -> bb517,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_826),
            StorageDead(_500),
            StorageDead(_499),
            StorageDead(_495),
            StorageDead(_494),
            StorageDead(_493),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:917:13: 1024:14 (#0),
                    scope: scope[14],
                },
                kind: goto -> bb508,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _490 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:917:13: 1024:14 (#0),
                    scope: scope[14],
                },
                kind: goto -> bb508,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_491),
            StorageDead(_490),
            StorageLive(_844),
            _844 = uts46::ProcessingSuccess::WroteToSink,
            _0 = core::result::Result::<uts46::ProcessingSuccess, uts46::ProcessingError>::Ok(move _844),
            StorageDead(_844),
            StorageDead(_99),
            StorageDead(_98),
            StorageDead(_94),
            StorageDead(_93),
            StorageDead(_92),
            StorageDead(_86),
            StorageDead(_83),
            StorageDead(_72),
            StorageDead(_17),
            StorageDead(_16),
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1027:5: 1027:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_14) -> [return: bb509, unwind: bb533],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1027:5: 1027:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_13) -> [return: bb510, unwind: bb534],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1027:5: 1027:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb531, unwind: bb535],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_742),
            StorageDead(_714),
            StorageDead(_710),
            StorageDead(_709),
            StorageDead(_708),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[129],
                },
                kind: goto -> bb512,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_704),
            StorageDead(_702),
            StorageDead(_701),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[92],
                },
                kind: goto -> bb513,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_657),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[92],
                },
                kind: goto -> bb516,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_602),
            StorageDead(_574),
            StorageDead(_570),
            StorageDead(_569),
            StorageDead(_568),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[99],
                },
                kind: goto -> bb515,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_564),
            StorageDead(_562),
            StorageDead(_561),
            StorageDead(_559),
            StorageDead(_557),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[92],
                },
                kind: goto -> bb516,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_516),
            StorageDead(_515),
            StorageDead(_512),
            StorageDead(_510),
            StorageDead(_509),
            StorageDead(_508),
            StorageDead(_505),
            StorageDead(_502),
            StorageDead(_501),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[89],
                },
                kind: goto -> bb517,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_500),
            StorageDead(_499),
            StorageDead(_495),
            StorageDead(_494),
            StorageDead(_493),
            StorageDead(_491),
            StorageDead(_490),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[14],
                },
                kind: goto -> bb527,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_430),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[57],
                },
                kind: goto -> bb520,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_391),
            StorageDead(_363),
            StorageDead(_359),
            StorageDead(_358),
            StorageDead(_357),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[57],
                },
                kind: goto -> bb520,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_353),
            StorageDead(_351),
            StorageDead(_350),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[45],
                },
                kind: goto -> bb521,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_307),
            StorageDead(_298),
            StorageDead(_279),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[17],
                },
                kind: goto -> bb526,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_252),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[24],
                },
                kind: goto -> bb524,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_213),
            StorageDead(_185),
            StorageDead(_181),
            StorageDead(_180),
            StorageDead(_179),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[24],
                },
                kind: goto -> bb524,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_175),
            StorageDead(_173),
            StorageDead(_172),
            StorageDead(_170),
            StorageDead(_168),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[17],
                },
                kind: goto -> bb526,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_122),
            StorageDead(_121),
            StorageDead(_120),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[17],
                },
                kind: goto -> bb526,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_116),
            StorageDead(_115),
            StorageDead(_112),
            StorageDead(_110),
            StorageDead(_109),
            StorageDead(_107),
            StorageDead(_104),
            StorageDead(_101),
            StorageDead(_100),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[14],
                },
                kind: goto -> bb527,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_99),
            StorageDead(_98),
            StorageDead(_94),
            StorageDead(_93),
            StorageDead(_92),
            StorageDead(_86),
            StorageDead(_83),
            StorageDead(_72),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[4],
                },
                kind: goto -> bb528,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            StorageDead(_16),
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1027:5: 1027:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_14) -> [return: bb529, unwind: bb533],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1027:5: 1027:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_13) -> [return: bb530, unwind: bb534],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1027:5: 1027:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb531, unwind: bb535],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1027:6: 1027:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1027:5: 1027:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_14) -> [return: bb533, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1027:5: 1027:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_13) -> [return: bb534, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:1027:5: 1027:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb535, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/uts46.rs:755:5: 1027:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:764:10: 764:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} uts46::Uts46,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:756:9: 756:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:757:22: 757:27 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:757:9: 757:20 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:757:9: 757:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:757:9: 757:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:758:26: 758:39 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:758:9: 758:24 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:758:9: 758:24 (#0),
                    },
                ),
            ),
        ),
        ty: uts46::AsciiDenyList,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:758:9: 758:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:759:18: 759:25 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:759:9: 759:16 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:759:9: 759:16 (#0),
                    },
                ),
            ),
        ),
        ty: uts46::Hyphens,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:759:9: 759:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:760:23: 760:34 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:760:9: 760:21 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:760:9: 760:21 (#0),
                    },
                ),
            ),
        ),
        ty: uts46::ErrorPolicy,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:760:9: 760:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:761:32: 761:45 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:761:9: 761:30 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:761:9: 761:30 (#0),
                    },
                ),
            ),
        ),
        ty: OutputUnicode/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:761:9: 761:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:762:15: 762:21 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:762:9: 762:13 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:762:9: 762:13 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:762:9: 762:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/uts46.rs:763:21: 763:35 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:763:9: 763:19 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:763:9: 763:19 (#0),
                    },
                ),
            ),
        ),
        ty: core::option::Option<&'{erased} mut W/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:763:9: 763:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:765:25: 765:62 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:765:13: 765:22 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:765:13: 765:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} uts46::ErrorPolicy,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:765:25: 765:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} uts46::ErrorPolicy,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:765:41: 765:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: uts46::ErrorPolicy,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:765:41: 765:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:766:33: 766:63 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:766:13: 766:30 (#0),
                    },
                ),
            ),
        ),
        ty: smallvec::SmallVec<[char; 253_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:766:13: 766:30 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:767:36: 767:77 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:767:13: 767:33 (#0),
                    },
                ),
            ),
        ),
        ty: smallvec::SmallVec<[uts46::AlreadyAsciiLabel<'{erased}>; 8_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:767:13: 767:33 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _18,
                                ),
                                idna/src/uts46.rs:770:56: 777:10 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:770:13: 770:53 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:770:14: 770:31 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _18,
                                ),
                                idna/src/uts46.rs:770:56: 777:10 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:770:13: 770:53 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:770:33: 770:40 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _18,
                                ),
                                idna/src/uts46.rs:770:56: 777:10 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:770:13: 770:53 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:770:42: 770:52 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:770:56: 777:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} uts46::Uts46,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:770:56: 770:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:771:13: 771:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: uts46::AsciiDenyList,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:772:13: 772:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: uts46::Hyphens,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:773:13: 773:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:774:13: 774:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut smallvec::SmallVec<[char; 253_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:775:13: 775:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut smallvec::SmallVec<[char; 253_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:775:13: 775:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut smallvec::SmallVec<[uts46::AlreadyAsciiLabel<'{erased}>; 8_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:776:13: 776:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut smallvec::SmallVec<[uts46::AlreadyAsciiLabel<'{erased}>; 8_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:776:13: 776:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:778:9: 781:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:778:12: 778:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:778:12: 778:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:778:33: 778:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:778:33: 778:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:778:51: 781:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#106),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#107),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#108),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:779:28: 779:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#108),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#108),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: uts46::ProcessingSuccess,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:780:23: 780:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:783:9: 785:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:783:12: 783:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:783:25: 783:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:783:36: 785:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: uts46::ProcessingError,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:784:24: 784:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9: 348:10 (#110),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12: 346:42 (#111),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9: 48:10 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} bool, &'{erased} bool),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16: 38:22 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24: 38:31 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:786:38: 786:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:786:38: 786:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:786:38: 786:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} smallvec::SmallVec<[char; 253_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:786:38: 786:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:786:61: 786:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:786:61: 786:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:786:62: 786:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _48,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#112),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13: 39:34 (#112),
                    },
                ),
            ),
        ),
        ty: &'{erased} bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14: 39:22 (#112),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _48,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#112),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13: 39:34 (#112),
                    },
                ),
            ),
        ),
        ty: &'{erased} bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24: 39:33 (#112),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#112),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21: 40:46 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#112),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22: 40:31 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#112),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35: 40:45 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#112),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:47: 46:18 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:32: 41:65 (#112),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25: 41:29 (#112),
                    },
                ),
            ),
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25: 41:29 (#112),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21: 45:114 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54: 45:58 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60: 45:70 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60: 45:70 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72: 45:83 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72: 45:83 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<core::fmt::Arguments<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85: 45:113 (#112),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:787:27: 791:10 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:787:13: 787:24 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:787:13: 787:24 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} [char]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:787:54: 787:88 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:787:54: 787:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:787:54: 787:88 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} smallvec::SmallVec<[char; 253_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:787:54: 787:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:787:81: 787:87 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:787:81: 787:87 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [char; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:787:82: 787:87 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:787:34: 787:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _73,
                                ),
                                idna/src/uts46.rs:787:54: 787:88 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:787:34: 787:51 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:787:39: 787:50 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:790:13: 790:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:790:13: 790:31 (#0),
                },
            ),
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:790:27: 790:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:790:13: 790:31 (#0),
                },
            ),
        ),
        ty: &'{erased} smallvec::SmallVec<[char; 253_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:790:14: 790:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:790:13: 790:31 (#0),
                },
            ),
        ),
        ty: core::ops::RangeFull,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:790:28: 790:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:793:19: 793:68 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:793:13: 793:16 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:793:13: 793:16 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} [char]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:793:19: 793:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::RSplit<'{erased}, char, Closure(DefId(0:188 ~ idna[9561]::uts46::{impl#4}::process::{closure#0}), [W/#0, OutputUnicode/#1, i16, Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:793:19: 793:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::RSplit<'{erased}, char, Closure(DefId(0:188 ~ idna[9561]::uts46::{impl#4}::process::{closure#0}), [W/#0, OutputUnicode/#1, i16, Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:793:19: 793:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:793:19: 793:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:188 ~ idna[9561]::uts46::{impl#4}::process::{closure#0}),
            [
                W/#0,
                OutputUnicode/#1,
                i16,
                Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:793:38: 793:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:794:38: 794:43 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:794:13: 794:35 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:794:13: 794:35 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:795:30: 795:35 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:795:13: 795:27 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:795:13: 795:27 (#0),
            scope: scope[10],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:796:41: 796:64 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:796:13: 796:38 (#0),
                    },
                ),
            ),
        ),
        ty: core::slice::Iter<'{erased}, uts46::AlreadyAsciiLabel<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:796:13: 796:38 (#0),
            scope: scope[11],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [uts46::AlreadyAsciiLabel<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:796:41: 796:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [uts46::AlreadyAsciiLabel<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:796:41: 796:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} smallvec::SmallVec<[uts46::AlreadyAsciiLabel<'{erased}>; 8_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:796:41: 796:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:797:46: 797:63 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:797:13: 797:43 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:797:13: 797:43 (#0),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:798:34: 798:39 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:798:13: 798:31 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:798:13: 798:31 (#0),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:9: 910:10 (#330),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Split<'{erased}, char, Closure(DefId(0:189 ~ idna[9561]::uts46::{impl#4}::process::{closure#1}), [W/#0, OutputUnicode/#1, i16, Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:22: 799:56 (#331),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Split<'{erased}, char, Closure(DefId(0:189 ~ idna[9561]::uts46::{impl#4}::process::{closure#1}), [W/#0, OutputUnicode/#1, i16, Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:22: 799:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:22: 799:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:22: 799:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} smallvec::SmallVec<[char; 253_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:22: 799:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:189 ~ idna[9561]::uts46::{impl#4}::process::{closure#1}),
            [
                W/#0,
                OutputUnicode/#1,
                i16,
                Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:42: 799:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _101,
                                ),
                                idna/src/uts46.rs:799:22: 799:56 (#331),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:799:22: 799:56 (#331),
                    },
                ),
            ),
        ),
        ty: core::slice::Split<'{erased}, char, Closure(DefId(0:189 ~ idna[9561]::uts46::{impl#4}::process::{closure#1}), [W/#0, OutputUnicode/#1, i16, Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:22: 799:56 (#331),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:755:5: 1027:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:22: 799:56 (#331),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} [char]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:22: 799:56 (#331),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Split<'{erased}, char, Closure(DefId(0:189 ~ idna[9561]::uts46::{impl#4}::process::{closure#1}), [W/#0, OutputUnicode/#1, i16, Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:22: 799:56 (#331),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Split<'{erased}, char, Closure(DefId(0:189 ~ idna[9561]::uts46::{impl#4}::process::{closure#1}), [W/#0, OutputUnicode/#1, i16, Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:22: 799:56 (#331),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:9: 910:10 (#330),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:9: 910:10 (#330),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _110,
                                ),
                                idna/src/uts46.rs:799:22: 799:56 (#331),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:799:13: 799:18 (#332),
                    },
                ),
            ),
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:799:13: 799:18 (#0),
            scope: scope[15],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:802:34: 802:72 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:802:17: 802:31 (#0),
                    },
                ),
            ),
        ),
        ty: uts46::AlreadyAsciiLabel<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:802:17: 802:31 (#0),
            scope: scope[16],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} uts46::AlreadyAsciiLabel<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:802:35: 802:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} uts46::AlreadyAsciiLabel<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:802:35: 802:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, uts46::AlreadyAsciiLabel<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:802:35: 802:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:803:13: 814:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:803:16: 803:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:804:17: 813:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:804:20: 804:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:805:21: 805:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:805:21: 805:42 (#335),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:805:21: 805:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:805:21: 805:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:805:41: 805:42 (#336),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _124,
                                ),
                                idna/src/uts46.rs:805:21: 805:42 (#335),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:805:41: 805:42 (#336),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:805:41: 805:42 (#336),
            scope: scope[17],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:805:41: 805:42 (#336),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:805:41: 805:42 (#336),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _124,
                                ),
                                idna/src/uts46.rs:805:21: 805:42 (#335),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:805:21: 805:42 (#335),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:805:21: 805:42 (#0),
            scope: scope[17],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9: 348:10 (#113),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12: 346:42 (#114),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9: 48:10 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} u8, &'{erased} u8),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16: 38:22 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:807:50: 807:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:807:38: 807:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:807:38: 807:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24: 38:31 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:807:79: 807:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _135,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#115),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13: 39:34 (#115),
                    },
                ),
            ),
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14: 39:22 (#115),
            scope: scope[17],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _135,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#115),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13: 39:34 (#115),
                    },
                ),
            ),
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24: 39:33 (#115),
            scope: scope[17],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#115),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21: 40:46 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#115),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22: 40:31 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#115),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35: 40:45 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#115),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:47: 46:18 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:32: 41:65 (#115),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25: 41:29 (#115),
                    },
                ),
            ),
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25: 41:29 (#115),
            scope: scope[22],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21: 45:114 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54: 45:58 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60: 45:70 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60: 45:70 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72: 45:83 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72: 45:83 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<core::fmt::Arguments<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85: 45:113 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:808:21: 808:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:809:21: 812:22 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:809:24: 809:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:809:21: 812:22 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:809:24: 809:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:809:21: 812:22 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:809:54: 809:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:809:21: 812:22 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:809:54: 809:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:809:21: 812:22 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:809:72: 812:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#116),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#117),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#118),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:810:40: 810:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#118),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#118),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: uts46::ProcessingSuccess,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:811:35: 811:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:817:13: 846:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:817:20: 817:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _116,
                                ),
                                idna/src/uts46.rs:817:68: 817:82 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:817:20: 817:65 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:817:54: 817:64 (#0),
            scope: scope[24],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:817:83: 846:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:818:17: 844:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:819:21: 819:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:819:21: 819:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:819:21: 819:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:819:21: 819:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:190 ~ idna[9561]::uts46::{impl#4}::process::{closure#2}),
            [
                W/#0,
                OutputUnicode/#1,
                i16,
                Binder { value: extern "RustCall" fn((&'{erased} u8,)) -> bool, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:819:48: 819:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:818:24: 818:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _173,
                                ),
                                idna/src/uts46.rs:819:21: 819:75 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:818:24: 818:46 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:818:29: 818:45 (#0),
            scope: scope[25],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _182,
                                ),
                                idna/src/uts46.rs:821:40: 821:77 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:821:25: 821:37 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:821:26: 821:30 (#0),
            scope: scope[25],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _182,
                                ),
                                idna/src/uts46.rs:821:40: 821:77 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:821:25: 821:37 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:821:32: 821:36 (#0),
            scope: scope[25],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} [u8], &'{erased} [u8]),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:821:40: 821:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:821:40: 821:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:821:60: 821:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:822:42: 829:22 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:822:25: 822:39 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:822:25: 822:39 (#0),
            scope: scope[26],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:822:45: 822:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:828:25: 828:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:826:55: 826:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:826:55: 826:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:826:25: 826:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:9: 378:10 (#120),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:12: 376:42 (#121),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:9: 98:10 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} usize, &'{erased} usize),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15: 88:32 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:16: 88:22 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:24: 88:31 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:827:70: 827:87 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:827:70: 827:81 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _194,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15: 88:32 (#122),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:13: 89:34 (#122),
                    },
                ),
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:14: 89:22 (#122),
            scope: scope[26],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _194,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15: 88:32 (#122),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:13: 89:34 (#122),
                    },
                ),
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:24: 89:33 (#122),
            scope: scope[26],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#122),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:20: 90:43 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#122),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:20: 90:29 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#122),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:33: 90:43 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#122),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:44: 96:18 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:91:32: 91:65 (#122),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:91:25: 91:29 (#122),
                    },
                ),
            ),
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:91:25: 91:29 (#122),
            scope: scope[28],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:21: 95:114 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:54: 95:58 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:60: 95:70 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:60: 95:70 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:72: 95:83 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:72: 95:83 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<core::fmt::Arguments<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:85: 95:113 (#122),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:828:25: 828:67 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:828:37: 828:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:828:25: 828:67 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:828:26: 828:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:828:25: 828:67 (#0),
                },
            ),
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:828:38: 828:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:828:40: 828:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:831:21: 831:95 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:831:21: 831:95 (#352),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:831:21: 831:94 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:831:21: 831:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:831:36: 831:93 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:831:45: 831:91 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:831:45: 831:91 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:831:45: 831:91 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:831:76: 831:90 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:831:94: 831:95 (#353),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _218,
                                ),
                                idna/src/uts46.rs:831:21: 831:95 (#352),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:831:94: 831:95 (#353),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:831:94: 831:95 (#353),
            scope: scope[27],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:831:94: 831:95 (#353),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:831:94: 831:95 (#353),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _218,
                                ),
                                idna/src/uts46.rs:831:21: 831:95 (#352),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:831:21: 831:95 (#352),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:831:21: 831:95 (#0),
            scope: scope[27],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:832:21: 834:22 (#354),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:832:30: 832:41 (#355),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:832:21: 834:22 (#354),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:832:30: 832:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:832:21: 834:22 (#354),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:832:30: 832:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _229,
                                ),
                                idna/src/uts46.rs:832:30: 832:41 (#355),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:832:30: 832:41 (#355),
                    },
                ),
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:832:30: 832:41 (#355),
            scope: scope[27],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:832:30: 832:41 (#355),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:832:30: 832:41 (#355),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:832:30: 832:41 (#355),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:832:30: 832:41 (#355),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:832:21: 834:22 (#354),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:832:21: 834:22 (#354),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _234,
                                ),
                                idna/src/uts46.rs:832:30: 832:41 (#355),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:832:25: 832:26 (#356),
                    },
                ),
            ),
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:832:25: 832:26 (#0),
            scope: scope[34],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:833:25: 833:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:833:25: 833:77 (#357),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:833:25: 833:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:833:25: 833:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:833:41: 833:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:833:52: 833:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:833:52: 833:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:833:76: 833:77 (#358),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _241,
                                ),
                                idna/src/uts46.rs:833:25: 833:77 (#357),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:833:76: 833:77 (#358),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:833:76: 833:77 (#358),
            scope: scope[35],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:833:76: 833:77 (#358),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:833:76: 833:77 (#358),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _241,
                                ),
                                idna/src/uts46.rs:833:25: 833:77 (#357),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:833:25: 833:77 (#357),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:833:25: 833:77 (#0),
            scope: scope[35],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:835:27: 835:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:837:21: 837:91 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:837:21: 837:91 (#360),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:837:21: 837:90 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:837:21: 837:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:837:36: 837:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:837:45: 837:87 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:837:45: 837:87 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:837:45: 837:87 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:837:76: 837:86 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:837:90: 837:91 (#361),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _254,
                                ),
                                idna/src/uts46.rs:837:21: 837:91 (#360),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:837:90: 837:91 (#361),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:837:90: 837:91 (#361),
            scope: scope[24],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:837:90: 837:91 (#361),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:837:90: 837:91 (#361),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _254,
                                ),
                                idna/src/uts46.rs:837:21: 837:91 (#360),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:837:21: 837:91 (#360),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:837:21: 837:91 (#0),
            scope: scope[24],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:839:51: 839:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:839:51: 839:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:839:21: 839:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:840:21: 843:22 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:840:24: 840:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:840:21: 843:22 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:840:24: 840:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:840:21: 843:22 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:840:54: 840:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:840:21: 843:22 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:840:54: 840:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:840:21: 843:22 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:840:72: 843:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#123),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#124),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#125),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:841:40: 841:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#125),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#125),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: uts46::ProcessingSuccess,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:842:35: 842:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:848:40: 853:14 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:848:17: 848:37 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:848:17: 848:37 (#0),
            scope: scope[17],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:848:43: 848:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#127),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#128),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#129),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:849:31: 849:92 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} uts46::PunycodeClassification,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:849:31: 849:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: uts46::PunycodeClassification,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:849:31: 849:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:849:53: 849:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} uts46::PunycodeClassification,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:849:63: 849:92 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: uts46::PunycodeClassification,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:849:63: 849:92 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#129),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#129),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:850:17: 850:33 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:850:18: 850:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:850:17: 850:33 (#0),
                },
            ),
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:850:27: 850:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:852:17: 852:80 (#0),
                },
            ),
        ),
        ty: &'{erased} uts46::PunycodeClassification,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:852:17: 852:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:852:17: 852:80 (#0),
                },
            ),
        ),
        ty: uts46::PunycodeClassification,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:852:17: 852:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:852:17: 852:80 (#0),
                },
            ),
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:852:39: 852:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:852:17: 852:80 (#0),
                },
            ),
        ),
        ty: &'{erased} uts46::PunycodeClassification,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:852:49: 852:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:852:17: 852:80 (#0),
                },
            ),
        ),
        ty: uts46::PunycodeClassification,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:852:49: 852:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:854:31: 860:14 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:854:17: 854:28 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:854:17: 854:28 (#0),
            scope: scope[44],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:854:34: 854:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:855:31: 855:69 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:855:21: 855:28 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:855:21: 855:28 (#0),
            scope: scope[44],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut OutputUnicode/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:855:31: 855:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} [char], &'{erased} [char], bool),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:855:31: 855:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:855:49: 855:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:855:56: 855:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:855:61: 855:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:856:39: 856:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:861:13: 909:14 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:861:16: 861:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:862:17: 868:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:862:21: 862:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:865:21: 867:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:865:21: 867:24 (#377),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:865:21: 867:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:865:21: 865:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:865:36: 867:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:866:25: 866:99 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:866:25: 866:99 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:866:25: 866:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:866:56: 866:98 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:866:25: 866:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:866:56: 866:98 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:866:25: 866:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:866:68: 866:98 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:866:25: 866:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:866:57: 866:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:866:25: 866:99 (#0),
                },
            ),
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:866:69: 866:97 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:866:71: 866:97 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:867:23: 867:24 (#378),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _311,
                                ),
                                idna/src/uts46.rs:865:21: 867:24 (#377),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:867:23: 867:24 (#378),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:867:23: 867:24 (#378),
            scope: scope[45],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:867:23: 867:24 (#378),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:867:23: 867:24 (#378),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _311,
                                ),
                                idna/src/uts46.rs:865:21: 867:24 (#377),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:865:21: 867:24 (#377),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:865:21: 867:24 (#0),
            scope: scope[45],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:869:17: 871:18 (#379),
                },
            ),
        ),
        ty: core::iter::Copied<core::slice::Iter<'{erased}, char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:869:26: 869:47 (#380),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:869:17: 871:18 (#379),
                },
            ),
        ),
        ty: core::iter::Copied<core::slice::Iter<'{erased}, char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:869:26: 869:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:869:17: 871:18 (#379),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, char>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:869:26: 869:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:869:17: 871:18 (#379),
                },
            ),
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:869:26: 869:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _327,
                                ),
                                idna/src/uts46.rs:869:26: 869:47 (#380),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:869:26: 869:47 (#380),
                    },
                ),
            ),
        ),
        ty: core::iter::Copied<core::slice::Iter<'{erased}, char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:869:26: 869:47 (#380),
            scope: scope[45],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:869:26: 869:47 (#380),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<char>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:869:26: 869:47 (#380),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Copied<core::slice::Iter<'{erased}, char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:869:26: 869:47 (#380),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Copied<core::slice::Iter<'{erased}, char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:869:26: 869:47 (#380),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:869:17: 871:18 (#379),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:869:17: 871:18 (#379),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _333,
                                ),
                                idna/src/uts46.rs:869:26: 869:47 (#380),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:869:21: 869:22 (#381),
                    },
                ),
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:869:21: 869:22 (#0),
            scope: scope[51],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:870:21: 870:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:870:21: 870:40 (#382),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:870:21: 870:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:870:21: 870:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:870:37: 870:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:870:39: 870:40 (#383),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _340,
                                ),
                                idna/src/uts46.rs:870:21: 870:40 (#382),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:870:39: 870:40 (#383),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:870:39: 870:40 (#383),
            scope: scope[52],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:870:39: 870:40 (#383),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:870:39: 870:40 (#383),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _340,
                                ),
                                idna/src/uts46.rs:870:21: 870:40 (#382),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:870:21: 870:40 (#382),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:870:21: 870:40 (#0),
            scope: scope[52],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:872:27: 872:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _116,
                                ),
                                idna/src/uts46.rs:872:78: 872:92 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:872:27: 872:75 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:872:64: 872:74 (#0),
            scope: scope[57],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:873:17: 899:18 (#0),
                },
            ),
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:874:21: 874:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:873:17: 899:18 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:874:21: 874:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:873:17: 899:18 (#0),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:874:21: 874:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:873:17: 899:18 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:874:21: 874:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:873:17: 899:18 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:191 ~ idna[9561]::uts46::{impl#4}::process::{closure#3}),
            [
                W/#0,
                OutputUnicode/#1,
                i16,
                Binder { value: extern "RustCall" fn((&'{erased} u8,)) -> bool, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:874:48: 874:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:873:24: 873:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _351,
                                ),
                                idna/src/uts46.rs:874:21: 874:75 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:873:24: 873:46 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:873:29: 873:45 (#0),
            scope: scope[58],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _360,
                                ),
                                idna/src/uts46.rs:876:40: 876:77 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:876:25: 876:37 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:876:26: 876:30 (#0),
            scope: scope[58],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _360,
                                ),
                                idna/src/uts46.rs:876:40: 876:77 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:876:25: 876:37 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:876:32: 876:36 (#0),
            scope: scope[58],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} [u8], &'{erased} [u8]),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:876:40: 876:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:876:40: 876:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:876:60: 876:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:877:42: 884:22 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:877:25: 877:39 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:877:25: 877:39 (#0),
            scope: scope[59],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:877:45: 877:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:883:25: 883:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:881:55: 881:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:881:55: 881:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:881:25: 881:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:9: 378:10 (#131),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:12: 376:42 (#132),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:9: 98:10 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} usize, &'{erased} usize),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15: 88:32 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:16: 88:22 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:24: 88:31 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:882:70: 882:87 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:882:70: 882:81 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _372,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15: 88:32 (#133),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:13: 89:34 (#133),
                    },
                ),
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:14: 89:22 (#133),
            scope: scope[59],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _372,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15: 88:32 (#133),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:13: 89:34 (#133),
                    },
                ),
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:24: 89:33 (#133),
            scope: scope[59],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#133),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:20: 90:43 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#133),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:20: 90:29 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#133),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:33: 90:43 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#133),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:44: 96:18 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:91:32: 91:65 (#133),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:91:25: 91:29 (#133),
                    },
                ),
            ),
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:91:25: 91:29 (#133),
            scope: scope[61],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:21: 95:114 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:54: 95:58 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:60: 95:70 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:60: 95:70 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:72: 95:83 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:72: 95:83 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<core::fmt::Arguments<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:85: 95:113 (#133),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:883:25: 883:67 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:883:37: 883:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:883:25: 883:67 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:883:26: 883:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:883:25: 883:67 (#0),
                },
            ),
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:883:38: 883:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:883:40: 883:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:886:21: 886:95 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:886:21: 886:95 (#389),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:886:21: 886:94 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:886:21: 886:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:886:36: 886:93 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:886:45: 886:91 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:886:45: 886:91 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:886:45: 886:91 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:886:76: 886:90 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:886:94: 886:95 (#390),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _396,
                                ),
                                idna/src/uts46.rs:886:21: 886:95 (#389),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:886:94: 886:95 (#390),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:886:94: 886:95 (#390),
            scope: scope[60],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:886:94: 886:95 (#390),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:886:94: 886:95 (#390),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _396,
                                ),
                                idna/src/uts46.rs:886:21: 886:95 (#389),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:886:21: 886:95 (#389),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:886:21: 886:95 (#0),
            scope: scope[60],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:887:21: 889:22 (#391),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:887:30: 887:41 (#392),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:887:21: 889:22 (#391),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:887:30: 887:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:887:21: 889:22 (#391),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:887:30: 887:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _407,
                                ),
                                idna/src/uts46.rs:887:30: 887:41 (#392),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:887:30: 887:41 (#392),
                    },
                ),
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:887:30: 887:41 (#392),
            scope: scope[60],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:887:30: 887:41 (#392),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:887:30: 887:41 (#392),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:887:30: 887:41 (#392),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:887:30: 887:41 (#392),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:887:21: 889:22 (#391),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:887:21: 889:22 (#391),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _412,
                                ),
                                idna/src/uts46.rs:887:30: 887:41 (#392),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:887:25: 887:26 (#393),
                    },
                ),
            ),
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:887:25: 887:26 (#0),
            scope: scope[67],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:888:25: 888:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:888:25: 888:77 (#394),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:888:25: 888:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:888:25: 888:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:888:41: 888:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:888:52: 888:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:888:52: 888:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:888:76: 888:77 (#395),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _419,
                                ),
                                idna/src/uts46.rs:888:25: 888:77 (#394),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:888:76: 888:77 (#395),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:888:76: 888:77 (#395),
            scope: scope[68],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:888:76: 888:77 (#395),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:888:76: 888:77 (#395),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _419,
                                ),
                                idna/src/uts46.rs:888:25: 888:77 (#394),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:888:25: 888:77 (#394),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:888:25: 888:77 (#0),
            scope: scope[68],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:873:17: 899:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:890:27: 890:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:892:21: 892:91 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:892:21: 892:91 (#397),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:892:21: 892:90 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:892:21: 892:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:892:36: 892:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:892:45: 892:87 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:892:45: 892:87 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:892:45: 892:87 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:892:76: 892:86 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:892:90: 892:91 (#398),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _432,
                                ),
                                idna/src/uts46.rs:892:21: 892:91 (#397),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:892:90: 892:91 (#398),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:892:90: 892:91 (#398),
            scope: scope[57],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:892:90: 892:91 (#398),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:892:90: 892:91 (#398),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _432,
                                ),
                                idna/src/uts46.rs:892:21: 892:91 (#397),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:892:21: 892:91 (#397),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:892:21: 892:91 (#0),
            scope: scope[57],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:894:51: 894:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:894:51: 894:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:894:21: 894:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:895:21: 898:22 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:895:24: 895:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:895:21: 898:22 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:895:24: 895:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:895:21: 898:22 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:895:54: 895:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:895:21: 898:22 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:895:54: 895:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:895:21: 898:22 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:895:72: 898:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#134),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#135),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#136),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:896:40: 896:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#136),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#136),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: uts46::ProcessingSuccess,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:897:35: 897:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:901:17: 907:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:901:21: 901:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:904:21: 906:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:904:21: 906:24 (#406),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:904:21: 906:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:904:21: 904:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:904:36: 906:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:905:25: 905:99 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:905:25: 905:99 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:905:25: 905:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:905:56: 905:98 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:905:25: 905:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:905:56: 905:98 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:905:25: 905:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:905:68: 905:98 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:905:25: 905:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:905:57: 905:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:905:25: 905:99 (#0),
                },
            ),
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:905:69: 905:97 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:905:71: 905:97 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:906:23: 906:24 (#407),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _460,
                                ),
                                idna/src/uts46.rs:904:21: 906:24 (#406),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:906:23: 906:24 (#407),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:906:23: 906:24 (#407),
            scope: scope[45],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:906:23: 906:24 (#407),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:906:23: 906:24 (#407),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _460,
                                ),
                                idna/src/uts46.rs:904:21: 906:24 (#406),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:904:21: 906:24 (#406),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:904:21: 906:24 (#0),
            scope: scope[45],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:908:17: 908:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, uts46::ProcessingError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:908:17: 908:51 (#408),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), uts46::ProcessingError>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:908:17: 908:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:908:38: 908:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:908:45: 908:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:908:50: 908:51 (#409),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _477,
                                ),
                                idna/src/uts46.rs:908:17: 908:51 (#408),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:908:50: 908:51 (#409),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, uts46::ProcessingError>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:908:50: 908:51 (#409),
            scope: scope[45],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:908:50: 908:51 (#409),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, uts46::ProcessingError>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:908:50: 908:51 (#409),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _477,
                                ),
                                idna/src/uts46.rs:908:17: 908:51 (#408),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:908:17: 908:51 (#408),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:908:17: 908:51 (#0),
            scope: scope[45],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:912:9: 914:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:912:12: 912:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:912:23: 914:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: uts46::ProcessingError,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:913:24: 913:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:916:9: 1025:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:916:12: 916:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:917:20: 917:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _8,
                                ),
                                idna/src/uts46.rs:917:33: 917:43 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:917:20: 917:30 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:917:25: 917:29 (#0),
            scope: scope[85],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:918:38: 918:43 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:918:21: 918:35 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:918:21: 918:35 (#0),
            scope: scope[85],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:919:49: 919:72 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:919:21: 919:46 (#0),
                    },
                ),
            ),
        ),
        ty: core::slice::Iter<'{erased}, uts46::AlreadyAsciiLabel<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:919:21: 919:46 (#0),
            scope: scope[86],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [uts46::AlreadyAsciiLabel<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:919:49: 919:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [uts46::AlreadyAsciiLabel<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:919:49: 919:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} smallvec::SmallVec<[uts46::AlreadyAsciiLabel<'{erased}>; 8_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:919:49: 919:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:920:54: 920:71 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:920:21: 920:51 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:920:21: 920:51 (#0),
            scope: scope[87],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:921:42: 921:47 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:921:21: 921:39 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:921:21: 921:39 (#0),
            scope: scope[88],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:17: 1017:18 (#412),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Split<'{erased}, char, Closure(DefId(0:192 ~ idna[9561]::uts46::{impl#4}::process::{closure#4}), [W/#0, OutputUnicode/#1, i16, Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:30: 922:64 (#413),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Split<'{erased}, char, Closure(DefId(0:192 ~ idna[9561]::uts46::{impl#4}::process::{closure#4}), [W/#0, OutputUnicode/#1, i16, Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:30: 922:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:30: 922:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:30: 922:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} smallvec::SmallVec<[char; 253_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:30: 922:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:192 ~ idna[9561]::uts46::{impl#4}::process::{closure#4}),
            [
                W/#0,
                OutputUnicode/#1,
                i16,
                Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:50: 922:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _502,
                                ),
                                idna/src/uts46.rs:922:30: 922:64 (#413),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:922:30: 922:64 (#413),
                    },
                ),
            ),
        ),
        ty: core::slice::Split<'{erased}, char, Closure(DefId(0:192 ~ idna[9561]::uts46::{impl#4}::process::{closure#4}), [W/#0, OutputUnicode/#1, i16, Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:30: 922:64 (#413),
            scope: scope[89],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:30: 922:64 (#413),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} [char]>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:30: 922:64 (#413),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Split<'{erased}, char, Closure(DefId(0:192 ~ idna[9561]::uts46::{impl#4}::process::{closure#4}), [W/#0, OutputUnicode/#1, i16, Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:30: 922:64 (#413),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Split<'{erased}, char, Closure(DefId(0:192 ~ idna[9561]::uts46::{impl#4}::process::{closure#4}), [W/#0, OutputUnicode/#1, i16, Binder { value: extern "RustCall" fn((&'^0 char,)) -> bool, bound_vars: [Region(BrAnon)] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:30: 922:64 (#413),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:17: 1017:18 (#412),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:17: 1017:18 (#412),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _510,
                                ),
                                idna/src/uts46.rs:922:30: 922:64 (#413),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:922:21: 922:26 (#414),
                    },
                ),
            ),
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:922:21: 922:26 (#0),
            scope: scope[90],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:925:42: 925:80 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:925:25: 925:39 (#0),
                    },
                ),
            ),
        ),
        ty: uts46::AlreadyAsciiLabel<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:925:25: 925:39 (#0),
            scope: scope[91],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} uts46::AlreadyAsciiLabel<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:925:43: 925:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} uts46::AlreadyAsciiLabel<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:925:43: 925:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, uts46::AlreadyAsciiLabel<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:925:43: 925:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:926:21: 933:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:926:24: 926:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:927:25: 932:26 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:927:28: 927:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:928:29: 928:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:928:29: 928:50 (#417),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:928:29: 928:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:928:29: 928:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:928:49: 928:50 (#418),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _524,
                                ),
                                idna/src/uts46.rs:928:29: 928:50 (#417),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:928:49: 928:50 (#418),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:928:49: 928:50 (#418),
            scope: scope[92],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:928:49: 928:50 (#418),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:928:49: 928:50 (#418),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _524,
                                ),
                                idna/src/uts46.rs:928:29: 928:50 (#417),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:928:29: 928:50 (#417),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:928:29: 928:50 (#0),
            scope: scope[92],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9: 348:10 (#138),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12: 346:42 (#139),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9: 48:10 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} u8, &'{erased} u8),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16: 38:22 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:930:58: 930:84 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:930:46: 930:85 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:930:46: 930:85 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24: 38:31 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:930:87: 930:91 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _535,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#140),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13: 39:34 (#140),
                    },
                ),
            ),
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14: 39:22 (#140),
            scope: scope[92],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _535,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#140),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13: 39:34 (#140),
                    },
                ),
            ),
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24: 39:33 (#140),
            scope: scope[92],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#140),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21: 40:46 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#140),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22: 40:31 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#140),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35: 40:45 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#140),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:47: 46:18 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:32: 41:65 (#140),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25: 41:29 (#140),
                    },
                ),
            ),
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25: 41:29 (#140),
            scope: scope[97],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21: 45:114 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54: 45:58 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60: 45:70 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60: 45:70 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72: 45:83 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72: 45:83 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<core::fmt::Arguments<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85: 45:113 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:931:29: 931:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:936:21: 963:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:936:28: 936:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _516,
                                ),
                                idna/src/uts46.rs:936:76: 936:90 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:936:28: 936:73 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:936:62: 936:72 (#0),
            scope: scope[99],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:936:91: 963:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:937:25: 961:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:938:29: 938:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:938:29: 938:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:938:29: 938:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:938:29: 938:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:193 ~ idna[9561]::uts46::{impl#4}::process::{closure#5}),
            [
                W/#0,
                OutputUnicode/#1,
                i16,
                Binder { value: extern "RustCall" fn((&'{erased} u8,)) -> bool, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:938:56: 938:82 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:937:32: 937:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _562,
                                ),
                                idna/src/uts46.rs:938:29: 938:83 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:937:32: 937:54 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:937:37: 937:53 (#0),
            scope: scope[100],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _571,
                                ),
                                idna/src/uts46.rs:940:48: 940:85 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:940:33: 940:45 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:940:34: 940:38 (#0),
            scope: scope[100],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _571,
                                ),
                                idna/src/uts46.rs:940:48: 940:85 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:940:33: 940:45 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:940:40: 940:44 (#0),
            scope: scope[100],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} [u8], &'{erased} [u8]),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:940:48: 940:85 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:940:48: 940:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:940:68: 940:84 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:941:50: 948:30 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:941:33: 941:47 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:941:33: 941:47 (#0),
            scope: scope[101],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:941:53: 941:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:947:33: 947:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:945:63: 945:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:945:63: 945:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:945:33: 945:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:9: 378:10 (#141),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:12: 376:42 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:9: 98:10 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} usize, &'{erased} usize),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15: 88:32 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:16: 88:22 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:24: 88:31 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:946:78: 946:95 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:946:78: 946:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _583,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15: 88:32 (#143),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:13: 89:34 (#143),
                    },
                ),
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:14: 89:22 (#143),
            scope: scope[101],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _583,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15: 88:32 (#143),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:13: 89:34 (#143),
                    },
                ),
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:24: 89:33 (#143),
            scope: scope[101],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#143),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:20: 90:43 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#143),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:20: 90:29 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#143),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:33: 90:43 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#143),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:44: 96:18 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:91:32: 91:65 (#143),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:91:25: 91:29 (#143),
                    },
                ),
            ),
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:91:25: 91:29 (#143),
            scope: scope[103],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:21: 95:114 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:54: 95:58 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:60: 95:70 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:60: 95:70 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:72: 95:83 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:72: 95:83 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<core::fmt::Arguments<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:85: 95:113 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:947:33: 947:75 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:947:45: 947:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:947:33: 947:75 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:947:34: 947:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:947:33: 947:75 (#0),
                },
            ),
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:947:46: 947:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:947:48: 947:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:950:29: 952:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:950:29: 952:32 (#428),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:950:29: 952:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:950:29: 950:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:950:44: 952:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:951:33: 951:79 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:951:33: 951:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:951:33: 951:79 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:951:64: 951:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:952:31: 952:32 (#429),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _607,
                                ),
                                idna/src/uts46.rs:950:29: 952:32 (#428),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:952:31: 952:32 (#429),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:952:31: 952:32 (#429),
            scope: scope[102],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:952:31: 952:32 (#429),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:952:31: 952:32 (#429),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _607,
                                ),
                                idna/src/uts46.rs:950:29: 952:32 (#428),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:950:29: 952:32 (#428),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:950:29: 952:32 (#0),
            scope: scope[102],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:953:29: 955:30 (#430),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:953:38: 953:49 (#431),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:953:29: 955:30 (#430),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:953:38: 953:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:953:29: 955:30 (#430),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:953:38: 953:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _618,
                                ),
                                idna/src/uts46.rs:953:38: 953:49 (#431),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:953:38: 953:49 (#431),
                    },
                ),
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:953:38: 953:49 (#431),
            scope: scope[102],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:953:38: 953:49 (#431),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:953:38: 953:49 (#431),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:953:38: 953:49 (#431),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:953:38: 953:49 (#431),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:953:29: 955:30 (#430),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:953:29: 955:30 (#430),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _623,
                                ),
                                idna/src/uts46.rs:953:38: 953:49 (#431),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:953:33: 953:34 (#432),
                    },
                ),
            ),
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:953:33: 953:34 (#0),
            scope: scope[109],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:954:33: 954:85 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:954:33: 954:85 (#433),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:954:33: 954:84 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:954:33: 954:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:954:49: 954:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:954:60: 954:82 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:954:60: 954:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:954:84: 954:85 (#434),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _630,
                                ),
                                idna/src/uts46.rs:954:33: 954:85 (#433),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:954:84: 954:85 (#434),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:954:84: 954:85 (#434),
            scope: scope[110],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:954:84: 954:85 (#434),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:954:84: 954:85 (#434),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _630,
                                ),
                                idna/src/uts46.rs:954:33: 954:85 (#433),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:954:33: 954:85 (#433),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:954:33: 954:85 (#0),
            scope: scope[110],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:956:35: 956:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:958:29: 958:99 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:958:29: 958:99 (#436),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:958:29: 958:98 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:958:29: 958:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:958:44: 958:97 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:958:53: 958:95 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:958:53: 958:95 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:958:53: 958:95 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:958:84: 958:94 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:958:98: 958:99 (#437),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _643,
                                ),
                                idna/src/uts46.rs:958:29: 958:99 (#436),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:958:98: 958:99 (#437),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:958:98: 958:99 (#437),
            scope: scope[99],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:958:98: 958:99 (#437),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:958:98: 958:99 (#437),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _643,
                                ),
                                idna/src/uts46.rs:958:29: 958:99 (#436),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:958:29: 958:99 (#436),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:958:29: 958:99 (#0),
            scope: scope[99],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:960:59: 960:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:960:59: 960:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:960:29: 960:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:965:21: 1016:22 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:965:24: 965:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:965:21: 1016:22 (#0),
                },
            ),
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:965:33: 965:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:966:25: 974:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:966:29: 966:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:969:29: 973:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:969:29: 973:32 (#440),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:969:29: 973:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:969:29: 969:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:969:44: 973:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:970:33: 972:34 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:970:33: 972:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:970:33: 972:34 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:971:37: 971:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:970:33: 972:34 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:971:37: 971:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:970:33: 972:34 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:971:49: 971:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:970:33: 972:34 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:971:38: 971:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:970:33: 972:34 (#0),
                },
            ),
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:971:50: 971:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:971:52: 971:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:973:31: 973:32 (#441),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _662,
                                ),
                                idna/src/uts46.rs:969:29: 973:32 (#440),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:973:31: 973:32 (#441),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:973:31: 973:32 (#441),
            scope: scope[92],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:973:31: 973:32 (#441),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:973:31: 973:32 (#441),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _662,
                                ),
                                idna/src/uts46.rs:969:29: 973:32 (#440),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:969:29: 973:32 (#440),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:969:29: 973:32 (#0),
            scope: scope[92],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:975:25: 977:26 (#442),
                },
            ),
        ),
        ty: core::iter::Copied<core::slice::Iter<'{erased}, char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:975:34: 975:55 (#443),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:975:25: 977:26 (#442),
                },
            ),
        ),
        ty: core::iter::Copied<core::slice::Iter<'{erased}, char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:975:34: 975:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:975:25: 977:26 (#442),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, char>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:975:34: 975:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:975:25: 977:26 (#442),
                },
            ),
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:975:34: 975:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _678,
                                ),
                                idna/src/uts46.rs:975:34: 975:55 (#443),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:975:34: 975:55 (#443),
                    },
                ),
            ),
        ),
        ty: core::iter::Copied<core::slice::Iter<'{erased}, char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:975:34: 975:55 (#443),
            scope: scope[92],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:975:34: 975:55 (#443),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<char>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:975:34: 975:55 (#443),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Copied<core::slice::Iter<'{erased}, char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:975:34: 975:55 (#443),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Copied<core::slice::Iter<'{erased}, char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:975:34: 975:55 (#443),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:975:25: 977:26 (#442),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:975:25: 977:26 (#442),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _684,
                                ),
                                idna/src/uts46.rs:975:34: 975:55 (#443),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:975:29: 975:30 (#444),
                    },
                ),
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:975:29: 975:30 (#0),
            scope: scope[123],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:976:29: 976:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:976:29: 976:48 (#445),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:976:29: 976:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:976:29: 976:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:976:45: 976:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:976:47: 976:48 (#446),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _691,
                                ),
                                idna/src/uts46.rs:976:29: 976:48 (#445),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:976:47: 976:48 (#446),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:976:47: 976:48 (#446),
            scope: scope[124],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:976:47: 976:48 (#446),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:976:47: 976:48 (#446),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _691,
                                ),
                                idna/src/uts46.rs:976:29: 976:48 (#445),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:976:29: 976:48 (#445),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:976:29: 976:48 (#0),
            scope: scope[124],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:978:35: 978:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _516,
                                ),
                                idna/src/uts46.rs:978:86: 978:100 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:978:35: 978:83 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:978:72: 978:82 (#0),
            scope: scope[129],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:980:25: 1004:26 (#0),
                },
            ),
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:981:29: 981:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:980:25: 1004:26 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:981:29: 981:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:980:25: 1004:26 (#0),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:981:29: 981:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:980:25: 1004:26 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:981:29: 981:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:980:25: 1004:26 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:194 ~ idna[9561]::uts46::{impl#4}::process::{closure#6}),
            [
                W/#0,
                OutputUnicode/#1,
                i16,
                Binder { value: extern "RustCall" fn((&'{erased} u8,)) -> bool, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:981:56: 981:82 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:980:32: 980:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _702,
                                ),
                                idna/src/uts46.rs:981:29: 981:83 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:980:32: 980:54 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:980:37: 980:53 (#0),
            scope: scope[130],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _711,
                                ),
                                idna/src/uts46.rs:983:48: 983:85 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:983:33: 983:45 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:983:34: 983:38 (#0),
            scope: scope[130],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _711,
                                ),
                                idna/src/uts46.rs:983:48: 983:85 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:983:33: 983:45 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:983:40: 983:44 (#0),
            scope: scope[130],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} [u8], &'{erased} [u8]),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:983:48: 983:85 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:983:48: 983:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:983:68: 983:84 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/uts46.rs:984:50: 991:30 (#0),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:984:33: 984:47 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:984:33: 984:47 (#0),
            scope: scope[131],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:984:53: 984:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:990:33: 990:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:988:63: 988:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:988:63: 988:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:988:33: 988:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:9: 378:10 (#144),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:12: 376:42 (#145),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:9: 98:10 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} usize, &'{erased} usize),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15: 88:32 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:16: 88:22 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:24: 88:31 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:989:78: 989:95 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:989:78: 989:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _723,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15: 88:32 (#146),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:13: 89:34 (#146),
                    },
                ),
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:14: 89:22 (#146),
            scope: scope[131],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _723,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15: 88:32 (#146),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:13: 89:34 (#146),
                    },
                ),
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:24: 89:33 (#146),
            scope: scope[131],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#146),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:20: 90:43 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#146),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:20: 90:29 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#146),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:33: 90:43 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:17: 96:18 (#146),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:44: 96:18 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:91:32: 91:65 (#146),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:91:25: 91:29 (#146),
                    },
                ),
            ),
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:91:25: 91:29 (#146),
            scope: scope[133],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:21: 95:114 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:54: 95:58 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:60: 95:70 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:60: 95:70 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:72: 95:83 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:72: 95:83 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<core::fmt::Arguments<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:95:85: 95:113 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:990:33: 990:75 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:990:45: 990:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:990:33: 990:75 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:990:34: 990:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:990:33: 990:75 (#0),
                },
            ),
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:990:46: 990:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:990:48: 990:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:993:29: 995:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:993:29: 995:32 (#452),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:993:29: 995:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:993:29: 993:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:993:44: 995:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:994:33: 994:79 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:994:33: 994:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:994:33: 994:79 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:994:64: 994:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:995:31: 995:32 (#453),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _747,
                                ),
                                idna/src/uts46.rs:993:29: 995:32 (#452),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:995:31: 995:32 (#453),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:995:31: 995:32 (#453),
            scope: scope[132],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:995:31: 995:32 (#453),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:995:31: 995:32 (#453),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _747,
                                ),
                                idna/src/uts46.rs:993:29: 995:32 (#452),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:993:29: 995:32 (#452),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:993:29: 995:32 (#0),
            scope: scope[132],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:996:29: 998:30 (#454),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:996:38: 996:49 (#455),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:996:29: 998:30 (#454),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:996:38: 996:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:996:29: 998:30 (#454),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:996:38: 996:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _758,
                                ),
                                idna/src/uts46.rs:996:38: 996:49 (#455),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:996:38: 996:49 (#455),
                    },
                ),
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:996:38: 996:49 (#455),
            scope: scope[132],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:996:38: 996:49 (#455),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:996:38: 996:49 (#455),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:996:38: 996:49 (#455),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:996:38: 996:49 (#455),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:996:29: 998:30 (#454),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:996:29: 998:30 (#454),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _763,
                                ),
                                idna/src/uts46.rs:996:38: 996:49 (#455),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:996:33: 996:34 (#456),
                    },
                ),
            ),
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:996:33: 996:34 (#0),
            scope: scope[139],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:997:33: 997:85 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:997:33: 997:85 (#457),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:997:33: 997:84 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:997:33: 997:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:997:49: 997:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:997:60: 997:82 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:997:60: 997:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:997:84: 997:85 (#458),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _770,
                                ),
                                idna/src/uts46.rs:997:33: 997:85 (#457),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:997:84: 997:85 (#458),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:997:84: 997:85 (#458),
            scope: scope[140],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:997:84: 997:85 (#458),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:997:84: 997:85 (#458),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _770,
                                ),
                                idna/src/uts46.rs:997:33: 997:85 (#457),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:997:33: 997:85 (#457),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:997:33: 997:85 (#0),
            scope: scope[140],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:980:25: 1004:26 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:999:35: 999:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1001:29: 1001:99 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1001:29: 1001:99 (#460),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1001:29: 1001:98 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1001:29: 1001:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1001:44: 1001:97 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1001:53: 1001:95 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1001:53: 1001:95 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1001:53: 1001:95 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1001:84: 1001:94 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1001:98: 1001:99 (#461),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _783,
                                ),
                                idna/src/uts46.rs:1001:29: 1001:99 (#460),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1001:98: 1001:99 (#461),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1001:98: 1001:99 (#461),
            scope: scope[129],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1001:98: 1001:99 (#461),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1001:98: 1001:99 (#461),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _783,
                                ),
                                idna/src/uts46.rs:1001:29: 1001:99 (#460),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1001:29: 1001:99 (#460),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1001:29: 1001:99 (#0),
            scope: scope[129],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1003:59: 1003:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1003:59: 1003:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1003:29: 1003:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1006:25: 1014:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1006:29: 1006:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1009:29: 1013:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1009:29: 1013:32 (#463),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1009:29: 1013:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1009:29: 1009:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1009:44: 1013:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1010:33: 1012:34 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1010:33: 1012:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1010:33: 1012:34 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1011:37: 1011:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1010:33: 1012:34 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1011:37: 1011:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1010:33: 1012:34 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1011:49: 1011:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1010:33: 1012:34 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1011:38: 1011:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1010:33: 1012:34 (#0),
                },
            ),
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1011:50: 1011:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1011:52: 1011:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1013:31: 1013:32 (#464),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _800,
                                ),
                                idna/src/uts46.rs:1009:29: 1013:32 (#463),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1013:31: 1013:32 (#464),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1013:31: 1013:32 (#464),
            scope: scope[92],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1013:31: 1013:32 (#464),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1013:31: 1013:32 (#464),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _800,
                                ),
                                idna/src/uts46.rs:1009:29: 1013:32 (#463),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1009:29: 1013:32 (#463),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1009:29: 1013:32 (#0),
            scope: scope[92],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1015:25: 1015:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, uts46::ProcessingError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1015:25: 1015:59 (#465),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), uts46::ProcessingError>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1015:25: 1015:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [char],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1015:46: 1015:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1015:53: 1015:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1015:58: 1015:59 (#466),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _817,
                                ),
                                idna/src/uts46.rs:1015:25: 1015:59 (#465),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1015:58: 1015:59 (#466),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, uts46::ProcessingError>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1015:58: 1015:59 (#466),
            scope: scope[92],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1015:58: 1015:59 (#466),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, uts46::ProcessingError>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1015:58: 1015:59 (#466),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _817,
                                ),
                                idna/src/uts46.rs:1015:25: 1015:59 (#465),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1015:25: 1015:59 (#465),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1015:25: 1015:59 (#0),
            scope: scope[92],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/uts46.rs:1018:17: 1023:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1018:21: 1018:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1020:21: 1022:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1020:21: 1022:24 (#468),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1020:21: 1022:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut W/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1020:21: 1020:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1020:36: 1022:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1021:25: 1021:99 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1021:25: 1021:99 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1021:25: 1021:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1021:56: 1021:98 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1021:25: 1021:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1021:56: 1021:98 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1021:25: 1021:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1021:68: 1021:98 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1021:25: 1021:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1021:57: 1021:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/uts46.rs:1021:25: 1021:99 (#0),
                },
            ),
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1021:69: 1021:97 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1021:71: 1021:97 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1022:23: 1022:24 (#469),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _828,
                                ),
                                idna/src/uts46.rs:1020:21: 1022:24 (#468),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1022:23: 1022:24 (#469),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1022:23: 1022:24 (#469),
            scope: scope[89],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1022:23: 1022:24 (#469),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1022:23: 1022:24 (#469),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _828,
                                ),
                                idna/src/uts46.rs:1020:21: 1022:24 (#468),
                            ),
                        ),
                        pat_span: idna/src/uts46.rs:1020:21: 1022:24 (#468),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1020:21: 1022:24 (#0),
            scope: scope[89],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: uts46::ProcessingSuccess,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/uts46.rs:1026:12: 1026:42 (#0),
            scope: scope[0],
        },
    },
]