[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:26:9: 26:21 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb1, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_6),
            _6 = &(*_1),
            _0 = std::borrow::Cow::<'_, str>::Borrowed(move _6),
            StorageDead(_6),
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb44,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = const (),
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:29:21: 29:35 (#0),
                    scope: scope[0],
                },
                kind: _7 = core::str::<impl str>::chars(move _8) -> [return: bb3, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            FakeRead(ForLet(None), _7),
            StorageLive(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:30:5: 60:6 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb4,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:30:5: 60:6 (#0),
                    scope: scope[1],
                },
                kind: falseUnwind -> [real: bb5, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_11),
            StorageLive(_12),
            _12 = &_7,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:31:20: 31:33 (#0),
                    scope: scope[1],
                },
                kind: _11 = <core::str::Chars<'_> as core::clone::Clone>::clone(move _12) -> [return: bb6, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            FakeRead(ForLet(None), _11),
            StorageLive(_13),
            StorageLive(_14),
            _14 = &mut _7,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:32:26: 32:38 (#0),
                    scope: scope[3],
                },
                kind: _13 = <core::str::Chars<'_> as core::iter::Iterator>::next(move _14) -> [return: bb7, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            PlaceMention(_13),
            _15 = discriminant(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:32:16: 32:23 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _15) -> [1: bb8, otherwise: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:32:16: 32:23 (#0),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb9, imaginary: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_16),
            _16 = ((_13 as Some).0: char),
            PlaceMention(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:33:13: 33:20 (#0),
                    scope: scope[3],
                },
                kind: switchInt(_16) -> [223: bb11, 7838: bb11, 962: bb11, 8204: bb11, 8205: bb11, otherwise: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _10 = const (),
            StorageDead(_16),
            StorageDead(_11),
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:30:5: 60:6 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb4,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:34:17: 34:58 (#0),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:35:55: 35:67 (#0),
                    scope: scope[3],
                },
                kind: _19 = core::str::<impl str>::len(move _20) -> [return: bb13, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:35:33: 35:68 (#0),
                    scope: scope[3],
                },
                kind: _18 = std::string::String::with_capacity(move _19) -> [return: bb14, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            FakeRead(ForLet(None), _18),
            StorageLive(_21),
            StorageLive(_22),
            _22 = &_11,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:36:32: 36:45 (#0),
                    scope: scope[4],
                },
                kind: _21 = core::str::Chars::<'_>::as_str(move _22) -> [return: bb15, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            FakeRead(ForLet(None), _21),
            StorageLive(_23),
            StorageLive(_24),
            StorageLive(_25),
            _25 = &(*_1),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            StorageLive(_29),
            _29 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:37:42: 37:54 (#0),
                    scope: scope[5],
                },
                kind: _28 = core::str::<impl str>::len(move _29) -> [return: bb16, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            StorageLive(_30),
            StorageLive(_31),
            _31 = &(*_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:37:57: 37:67 (#0),
                    scope: scope[5],
                },
                kind: _30 = core::str::<impl str>::len(move _31) -> [return: bb17, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            _32 = SubWithOverflow(_28, _30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:37:42: 37:67 (#0),
                    scope: scope[5],
                },
                kind: assert(!move (_32.1: bool), "attempt to compute `{} - {}`, which would overflow", move _28, move _30) -> [success: bb18, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _27 = move (_32.0: usize),
            StorageDead(_30),
            StorageDead(_28),
            _26 = core::ops::RangeTo::<usize> { end: move _27 },
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:37:39: 37:68 (#0),
                    scope: scope[5],
                },
                kind: _24 = <str as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _25, move _26) -> [return: bb19, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            StorageDead(_25),
            _23 = &(*_24),
            FakeRead(ForLet(None), _23),
            StorageLive(_33),
            StorageLive(_34),
            _34 = &mut _18,
            StorageLive(_35),
            _35 = &(*_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:38:21: 38:37 (#0),
                    scope: scope[6],
                },
                kind: _33 = std::string::String::push_str(move _34, move _35) -> [return: bb20, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
            StorageDead(_34),
            StorageDead(_33),
            StorageLive(_36),
            StorageLive(_37),
            StorageLive(_38),
            StorageLive(_39),
            _39 = &(*_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:39:30: 39:42 (#0),
                    scope: scope[6],
                },
                kind: _38 = core::str::<impl str>::chars(move _39) -> [return: bb21, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:39:30: 39:42 (#177),
                    scope: scope[6],
                },
                kind: _37 = <core::str::Chars<'_> as core::iter::IntoIterator>::into_iter(move _38) -> [return: bb22, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            PlaceMention(_37),
            StorageLive(_40),
            _40 = move _37,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:39:21: 52:22 (#176),
                    scope: scope[7],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:39:21: 52:22 (#176),
                    scope: scope[7],
                },
                kind: falseUnwind -> [real: bb24, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_41),
            StorageLive(_42),
            StorageLive(_43),
            StorageLive(_44),
            _44 = &mut _40,
            _43 = &mut (*_44),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:39:30: 39:42 (#177),
                    scope: scope[7],
                },
                kind: _42 = <core::str::Chars<'_> as core::iter::Iterator>::next(move _43) -> [return: bb25, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            PlaceMention(_42),
            _45 = discriminant(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:39:30: 39:42 (#177),
                    scope: scope[7],
                },
                kind: switchInt(move _45) -> [0: bb27, 1: bb28, otherwise: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:39:30: 39:42 (#177),
                    scope: scope[7],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:39:21: 52:22 (#176),
                    scope: scope[7],
                },
                kind: falseEdge -> [real: bb29, imaginary: bb28],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_47),
            _47 = ((_42 as Some).0: char),
            PlaceMention(_47),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:40:25: 40:32 (#0),
                    scope: scope[8],
                },
                kind: switchInt(_47) -> [223: bb32, 7838: bb32, 962: bb31, 8204: bb33, 8205: bb33, otherwise: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _36 = const (),
            StorageDead(_44),
            StorageDead(_42),
            StorageDead(_41),
            StorageDead(_40),
            StorageDead(_37),
            StorageDead(_36),
            StorageLive(_57),
            _57 = move _18,
            _0 = std::borrow::Cow::<'_, str>::Owned(move _57),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:53:40: 53:41 (#0),
                    scope: scope[6],
                },
                kind: drop(_57) -> [return: bb41, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_54),
            StorageLive(_55),
            _55 = &mut _18,
            StorageLive(_56),
            _56 = _47,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:49:33: 49:42 (#0),
                    scope: scope[8],
                },
                kind: _54 = std::string::String::push(move _55, move _56) -> [return: bb39, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:44:29: 44:32 (#0),
                    scope: scope[8],
                },
                kind: falseEdge -> [real: bb36, imaginary: bb33],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:41:29: 41:38 (#0),
                    scope: scope[8],
                },
                kind: falseEdge -> [real: bb34, imaginary: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:47:29: 47:52 (#0),
                    scope: scope[8],
                },
                kind: falseEdge -> [real: bb38, imaginary: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_48),
            StorageLive(_49),
            _49 = &mut _18,
            StorageLive(_50),
            StorageLive(_51),
            _51 = const "ss",
            _50 = &(*_51),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:42:33: 42:49 (#0),
                    scope: scope[8],
                },
                kind: _48 = std::string::String::push_str(move _49, move _50) -> [return: bb35, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_50),
            StorageDead(_49),
            StorageDead(_51),
            StorageDead(_48),
            _41 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:41:42: 43:30 (#0),
                    scope: scope[8],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_52),
            StorageLive(_53),
            _53 = &mut _18,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:45:33: 45:44 (#0),
                    scope: scope[8],
                },
                kind: _52 = std::string::String::push(move _53, const 'σ') -> [return: bb37, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_53),
            StorageDead(_52),
            _41 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:44:36: 46:30 (#0),
                    scope: scope[8],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _41 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:47:56: 47:58 (#0),
                    scope: scope[8],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
            StorageDead(_55),
            StorageDead(_54),
            _41 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:48:34: 50:30 (#0),
                    scope: scope[8],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_47),
            StorageDead(_44),
            StorageDead(_42),
            StorageDead(_41),
            _10 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:39:21: 52:22 (#176),
                    scope: scope[7],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_57),
            StorageDead(_24),
            StorageDead(_23),
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:54:17: 54:18 (#0),
                    scope: scope[3],
                },
                kind: drop(_18) -> [return: bb43, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _9 = const (),
            StorageDead(_11),
            StorageDead(_13),
            StorageDead(_9),
            StorageLive(_59),
            _59 = &(*_1),
            _0 = std::borrow::Cow::<'_, str>::Borrowed(move _59),
            StorageDead(_59),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:62:2: 62:2 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb44,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            StorageDead(_16),
            StorageDead(_11),
            StorageDead(_13),
            StorageDead(_9),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb44,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:62:2: 62:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:54:17: 54:18 (#0),
                    scope: scope[3],
                },
                kind: drop(_18) -> [return: bb46, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:25:1: 62:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:25:58: 25:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/deprecated.rs:25:29: 25:33 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/deprecated.rs:25:21: 25:27 (#0),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:25:21: 25:27 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:25:21: 25:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/deprecated.rs:25:49: 25:53 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/deprecated.rs:25:35: 25:47 (#0),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:25:35: 25:47 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:25:35: 25:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:26:5: 28:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:26:9: 26:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:26:22: 28:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:27:30: 27:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/deprecated.rs:29:21: 29:35 (#0),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:29:9: 29:18 (#0),
                    },
                ),
            ),
        ),
        ty: core::str::Chars<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:29:9: 29:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:29:21: 29:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:30:5: 60:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:25:1: 62:2 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/deprecated.rs:31:20: 31:33 (#0),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:31:13: 31:17 (#0),
                    },
                ),
            ),
        ),
        ty: core::str::Chars<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:31:13: 31:17 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::str::Chars<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:31:20: 31:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/deprecated.rs:32:9: 59:10 (#0),
                },
            ),
        ),
        ty: core::option::Option<char>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:32:26: 32:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/deprecated.rs:32:9: 59:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::str::Chars<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:32:26: 32:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:32:16: 32:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _13,
                                ),
                                idna/src/deprecated.rs:32:26: 32:38 (#0),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:32:16: 32:23 (#0),
                    },
                ),
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:32:21: 32:22 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/deprecated.rs:33:13: 56:14 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:34:62: 54:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/deprecated.rs:35:33: 35:68 (#0),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:35:25: 35:30 (#0),
                    },
                ),
            ),
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:35:25: 35:30 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:35:55: 35:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:35:55: 35:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/deprecated.rs:36:32: 36:45 (#0),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:36:25: 36:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:36:25: 36:29 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::str::Chars<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:36:32: 36:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/deprecated.rs:37:32: 37:68 (#0),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:37:25: 37:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:37:25: 37:29 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:37:39: 37:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:37:33: 37:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:37:40: 37:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:37:42: 37:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:37:42: 37:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:37:42: 37:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:37:57: 37:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:37:57: 37:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:37:42: 37:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:38:21: 38:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:38:21: 38:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:38:32: 38:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:39:21: 52:22 (#176),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::str::Chars<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:39:30: 39:42 (#177),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::str::Chars<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:39:30: 39:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:39:30: 39:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _37,
                                ),
                                idna/src/deprecated.rs:39:30: 39:42 (#177),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:39:30: 39:42 (#177),
                    },
                ),
            ),
        ),
        ty: core::str::Chars<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:39:30: 39:42 (#177),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:39:30: 39:42 (#177),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<char>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:39:30: 39:42 (#177),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::str::Chars<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:39:30: 39:42 (#177),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::str::Chars<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:39:30: 39:42 (#177),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:39:21: 52:22 (#176),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:39:21: 52:22 (#176),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _42,
                                ),
                                idna/src/deprecated.rs:39:30: 39:42 (#177),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:39:25: 39:26 (#178),
                    },
                ),
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:39:25: 39:26 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:42:33: 42:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:42:33: 42:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:42:44: 42:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:42:44: 42:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:45:33: 45:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:45:33: 45:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:49:33: 49:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:49:33: 49:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:49:40: 49:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:53:39: 53:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: idna/src/deprecated.rs:32:9: 59:10 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:57:16: 59:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:61:19: 61:25 (#0),
            scope: scope[0],
        },
    },
]