[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_2),
            StorageLive(_6),
            _6 = (((*_1).0: deprecated::Config).1: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:110:22: 110:83 (#0),
                    scope: scope[0],
                },
                kind: _4 = deprecated::map_transitional(move _5, move _6) -> [return: bb1, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            FakeRead(ForLet(None), _4),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:111:15: 111:27 (#0),
                    scope: scope[1],
                },
                kind: _9 = uts46::Uts46::new() -> [return: bb2, unwind: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _8 = &_9,
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = &_4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:112:13: 112:30 (#0),
                    scope: scope[1],
                },
                kind: _13 = <std::borrow::Cow<'_, str> as core::ops::Deref>::deref(move _14) -> [return: bb3, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _12 = &(*_13),
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:112:13: 112:30 (#0),
                    scope: scope[1],
                },
                kind: _11 = core::str::<impl str>::as_bytes(move _12) -> [return: bb4, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _10 = &(*_11),
            StorageDead(_12),
            StorageLive(_15),
            StorageLive(_16),
            _16 = &((*_1).0: deprecated::Config),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:113:13: 113:36 (#0),
                    scope: scope[1],
                },
                kind: _15 = deprecated::Config::deny_list(move _16) -> [return: bb5, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageLive(_17),
            StorageLive(_18),
            _18 = &((*_1).0: deprecated::Config),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:114:13: 114:34 (#0),
                    scope: scope[1],
                },
                kind: _17 = deprecated::Config::hyphens(move _18) -> [return: bb6, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            StorageLive(_19),
            _19 = uts46::ErrorPolicy::MarkErrors,
            StorageLive(_20),
            _20 = {closure@idna/src/deprecated.rs:116:13: 116:22},
            StorageLive(_21),
            _21 = &mut (*_3),
            StorageLive(_22),
            _22 = core::option::Option::<&mut std::string::String>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:111:15: 119:10 (#0),
                    scope: scope[1],
                },
                kind: _7 = uts46::Uts46::process::<std::string::String, {closure@idna/src/deprecated.rs:116:13: 116:22}>(move _8, move _10, move _15, move _17, move _19, move _20, move _21, move _22) -> [return: bb7, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_19),
            StorageDead(_17),
            StorageDead(_15),
            StorageDead(_10),
            StorageDead(_8),
            PlaceMention(_7),
            _25 = discriminant(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:111:9: 119:10 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _25) -> [0: bb9, 1: bb12, otherwise: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:111:15: 119:10 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _23 = discriminant(((_7 as Ok).0: uts46::ProcessingSuccess)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:111:9: 119:10 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _23) -> [0: bb10, 1: bb11, otherwise: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:120:13: 120:47 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb15, imaginary: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:124:13: 124:47 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb18, imaginary: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _24 = discriminant(((_7 as Err).0: uts46::ProcessingError)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:111:9: 119:10 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _24) -> [0: bb13, 1: bb14, otherwise: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:125:13: 125:48 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb19, imaginary: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:119:9: 119:77 (#13),
                    scope: scope[1],
                },
                kind: _35 = core::panicking::panic(const "internal error: entered unreachable code") -> bb24,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_26),
            StorageLive(_27),
            _27 = &mut (*_3),
            StorageLive(_28),
            StorageLive(_29),
            StorageLive(_30),
            StorageLive(_31),
            _31 = &_4,
            _30 = &(*_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:121:30: 121:37 (#0),
                    scope: scope[1],
                },
                kind: _29 = <std::borrow::Cow<'_, str> as core::ops::Deref>::deref(move _30) -> [return: bb16, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _28 = &(*_29),
            StorageDead(_30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:121:17: 121:38 (#0),
                    scope: scope[1],
                },
                kind: _26 = std::string::String::push_str(move _27, move _28) -> [return: bb17, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_27),
            StorageDead(_31),
            StorageDead(_29),
            StorageDead(_26),
            StorageLive(_32),
            _32 = (),
            _0 = core::result::Result::<(), Errors>::Ok(move _32),
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:122:22: 122:23 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb21,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_33),
            _33 = (),
            _0 = core::result::Result::<(), Errors>::Ok(move _33),
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:124:56: 124:57 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb21,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:125:56: 125:80 (#0),
                    scope: scope[1],
                },
                kind: _34 = <Errors as core::default::Default>::default() -> [return: bb20, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::result::Result::<(), Errors>::Err(move _34),
            StorageDead(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:125:80: 125:81 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb21,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:128:5: 128:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb22, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_13),
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:128:5: 128:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb23, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:128:6: 128:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:128:5: 128:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb25, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:128:5: 128:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb27, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:128:5: 128:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb27, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: idna/src/deprecated.rs:109:5: 128:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), Errors>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:109:69: 109:87 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut deprecated::Idna,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:109:23: 109:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/deprecated.rs:109:42: 109:46 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/deprecated.rs:109:34: 109:40 (#0),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:109:34: 109:40 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:109:34: 109:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            idna/src/deprecated.rs:109:53: 109:64 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/deprecated.rs:109:48: 109:51 (#0),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:109:48: 109:51 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:109:48: 109:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                idna/src/deprecated.rs:110:22: 110:83 (#0),
                            ),
                        ),
                        pat_span: idna/src/deprecated.rs:110:13: 110:19 (#0),
                    },
                ),
            ),
        ),
        ty: std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:110:13: 110:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:110:39: 110:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:110:47: 110:82 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: core::result::Result<uts46::ProcessingSuccess, uts46::ProcessingError>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:111:15: 119:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} uts46::Uts46,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:111:15: 111:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: uts46::Uts46,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:111:15: 111:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:112:13: 112:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:112:13: 112:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:112:13: 112:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:112:13: 112:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:112:13: 112:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: uts46::AsciiDenyList,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:113:13: 113:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} deprecated::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:113:13: 113:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: uts46::Hyphens,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:114:13: 114:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} deprecated::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:114:13: 114:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: uts46::ErrorPolicy,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:115:13: 115:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:21 ~ idna[9561]::deprecated::{impl#0}::to_unicode::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn((&'^0 [char], &'^1 [char], bool)) -> bool, bound_vars: [Region(BrAnon), Region(BrAnon)] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:116:13: 116:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:117:13: 117:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: core::option::Option<&'{erased} mut std::string::String>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:118:13: 118:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:120:16: 120:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:125:17: 125:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:120:13: 120:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:121:17: 121:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:121:17: 121:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:121:30: 121:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:121:30: 121:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:121:30: 121:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:121:30: 121:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:122:20: 122:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:124:54: 124:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: Errors,
        user_ty: None,
        source_info: SourceInfo {
            span: idna/src/deprecated.rs:125:56: 125:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: idna/src/deprecated.rs:111:9: 127:10 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:119:9: 119:77 (#13),
            scope: scope[0],
        },
    },
]