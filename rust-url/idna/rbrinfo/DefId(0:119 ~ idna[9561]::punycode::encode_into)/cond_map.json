{
  "idna/src/punycode.rs:435:25:435:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "k - bias",
          "lhs": "k",
          "rhs": "bias",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:380:28:382:51": [
    {
      "Try": "input_length\n            .checked_add(1)\n            .ok_or(PunycodeEncodeError::Overflow)?"
    }
  ],
  "idna/src/punycode.rs:441:21:441:62": [
    {
      "Try": "output.write_char(value_to_digit(value))?"
    }
  ],
  "idna/src/punycode.rs:375:9:375:27": [
    {
      "Bool": {
        "Other": "C::EXTERNAL_CALLER"
      }
    }
  ],
  "idna/src/punycode.rs:383:9:385:51": [
    {
      "Try": "len_plus_one\n            .checked_mul(u32::from(char::MAX) - INITIAL_N)\n            .ok_or(PunycodeEncodeError::Overflow)?"
    }
  ],
  "idna/src/punycode.rs:388:8:388:24": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "basic_length > 0",
          "lhs": "basic_length",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "idna/src/punycode.rs:425:16:425:31": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == code_point",
          "lhs": "c",
          "rhs": "code_point",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:440:38:440:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(q - t)",
          "lhs": "q",
          "rhs": "t",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:413:54:413:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(processed + 1)",
          "lhs": "processed",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "idna/src/punycode.rs:418:16:418:30": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "c < code_point",
          "lhs": "c",
          "rhs": "code_point",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:420:29:420:87": [
    {
      "Try": "delta.checked_add(1).ok_or(PunycodeEncodeError::Overflow)?"
    }
  ],
  "idna/src/punycode.rs:432:31:432:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "k >= bias + T_MAX",
          "lhs": "k",
          "rhs": "bias + T_MAX",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:370:13:370:34": [
    {
      "Try": "output.write_char(c)?"
    }
  ],
  "idna/src/punycode.rs:446:37:446:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "processed + 1",
          "lhs": "processed",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "idna/src/punycode.rs:442:25:442:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(q - t) / (BASE - t)",
          "lhs": "(q - t)",
          "rhs": "(BASE - t)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:406:27:406:56": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(min_code_point - code_point)",
          "lhs": "min_code_point",
          "rhs": "code_point",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:440:48:440:58": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(BASE - t)",
          "lhs": "BASE",
          "rhs": "t",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:419:20:419:38": [
    {
      "Bool": {
        "Other": "C::EXTERNAL_CALLER"
      }
    }
  ],
  "idna/src/punycode.rs:409:21:411:55": [
    {
      "Try": "delta\n                .checked_add(product)\n                .ok_or(PunycodeEncodeError::Overflow)?"
    }
  ],
  "idna/src/punycode.rs:416:18:416:31": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "input.clone()"
      }
    }
  ],
  "idna/src/punycode.rs:437:24:437:29": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "q < t",
          "lhs": "q",
          "rhs": "t",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:440:37:440:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "((q - t) % (BASE - t))",
          "lhs": "(q - t)",
          "rhs": "(BASE - t)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:407:30:407:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "processed + 1",
          "lhs": "processed",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "idna/src/punycode.rs:413:22:413:51": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(min_code_point - code_point)",
          "lhs": "min_code_point",
          "rhs": "code_point",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:445:17:445:54": [
    {
      "Try": "output.write_char(value_to_digit(q))?"
    }
  ],
  "idna/src/punycode.rs:365:14:365:27": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "input.clone()"
      }
    }
  ],
  "idna/src/punycode.rs:440:33:440:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "t + ((q - t) % (BASE - t))",
          "lhs": "t",
          "rhs": "((q - t) % (BASE - t))",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:389:9:389:32": [
    {
      "Try": "output.write_char('-')?"
    }
  ],
  "idna/src/punycode.rs:432:36:432:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "bias + T_MAX",
          "lhs": "bias",
          "rhs": "T_MAX",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:446:52:446:77": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "processed == basic_length",
          "lhs": "processed",
          "rhs": "basic_length",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:406:27:408:55": [
    {
      "Try": "(min_code_point - code_point)\n                .checked_mul(processed + 1)\n                .ok_or(PunycodeEncodeError::Overflow)?"
    }
  ],
  "idna/src/punycode.rs:369:12:369:24": [
    {
      "Bool": {
        "Other": "c.is_ascii()"
      }
    }
  ],
  "idna/src/punycode.rs:366:24:368:51": [
    {
      "Try": "input_length\n            .checked_add(1)\n            .ok_or(PunycodeEncodeError::Overflow)?"
    }
  ],
  "idna/src/punycode.rs:395:11:395:35": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "processed < input_length",
          "lhs": "processed",
          "rhs": "input_length",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:405:12:405:30": [
    {
      "Bool": {
        "Other": "C::EXTERNAL_CALLER"
      }
    }
  ],
  "idna/src/punycode.rs:442:35:442:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(BASE - t)",
          "lhs": "BASE",
          "rhs": "t",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:442:25:442:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(q - t)",
          "lhs": "q",
          "rhs": "t",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:413:22:413:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(min_code_point - code_point) * (processed + 1)",
          "lhs": "(min_code_point - code_point)",
          "rhs": "(processed + 1)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:384:26:384:58": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "u32::from(char::MAX) - INITIAL_N",
          "lhs": "u32::from(char::MAX)",
          "rhs": "INITIAL_N",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/punycode.rs:430:32:430:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "k <= bias",
          "lhs": "k",
          "rhs": "bias",
          "cmp_with_int": false
        }
      }
    }
  ]
}