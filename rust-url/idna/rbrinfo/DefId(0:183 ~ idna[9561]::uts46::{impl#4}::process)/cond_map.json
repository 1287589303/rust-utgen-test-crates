{
  "idna/src/uts46.rs:926:24:926:34": [
    {
      "Bool": {
        "Other": "seen_label"
      }
    }
  ],
  "idna/src/uts46.rs:870:21:870:40": [
    {
      "Try": "sink.write_char(c)?"
    }
  ],
  "idna/src/uts46.rs:865:21:867:24": [
    {
      "Try": "sink.write_str(unsafe {\n                        core::str::from_utf8_unchecked(&domain_name[..passthrough_up_to_extended])\n                    })?"
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "idna/src/uts46.rs:833:25:833:77": [
    {
      "Try": "sink.write_char(char::from(c.to_ascii_lowercase()))?"
    }
  ],
  "idna/src/uts46.rs:1018:21:1018:35": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:917:16:917:43": [
    {
      "Bool": {
        "Other": "let Some(sink) = ascii_sink"
      }
    }
  ],
  "idna/src/uts46.rs:854:34:854:54": [
    {
      "Bool": {
        "Other": "potentially_punycode"
      }
    }
  ],
  "idna/src/uts46.rs:975:34:975:55": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "label.iter().copied()"
      }
    }
  ],
  "idna/src/uts46.rs:787:30:787:88": [
    {
      "Bool": {
        "Other": "let Some(without_dot) = domain_buffer.strip_suffix(&['.'])"
      }
    }
  ],
  "idna/src/uts46.rs:892:21:892:91": [
    {
      "Try": "sink.write_str(unsafe { core::str::from_utf8_unchecked(mixed_case) })?"
    }
  ],
  "idna/src/uts46.rs:922:30:922:64": [
    {
      "For": {
        "iter_var": "label",
        "iter_range": "domain_buffer.split(|c| *c == '.')"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21:40:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "(*left_val == *right_val)",
          "lhs": "*left_val",
          "rhs": "*right_val",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:886:21:886:95": [
    {
      "Try": "sink.write_str(unsafe { core::str::from_utf8_unchecked(slice_to_write) })?"
    }
  ],
  "idna/src/uts46.rs:912:12:912:22": [
    {
      "Bool": {
        "Other": "had_errors"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9:48:10": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ],
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "idna/src/uts46.rs:965:24:965:39": [
    {
      "Bool": {
        "Other": "is_ascii(label)"
      }
    }
  ],
  "idna/src/uts46.rs:997:33:997:85": [
    {
      "Try": "sink.write_char(char::from(c.to_ascii_lowercase()))?"
    }
  ],
  "idna/src/uts46.rs:936:24:936:90": [
    {
      "Bool": {
        "Other": "let AlreadyAsciiLabel::MixedCaseAscii(mixed_case) = input_punycode"
      }
    }
  ],
  "idna/src/uts46.rs:956:35:956:49": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:928:29:928:50": [
    {
      "Try": "sink.write_char('.')?"
    }
  ],
  "idna/src/uts46.rs:908:17:908:51": [
    {
      "Try": "write_punycode_label(label, sink)?"
    }
  ],
  "idna/src/uts46.rs:896:40:896:50": [
    {
      "Bool": {
        "Other": "had_errors"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ],
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "idna/src/uts46.rs:803:16:803:26": [
    {
      "Bool": {
        "Other": "seen_label"
      }
    }
  ],
  "idna/src/uts46.rs:996:38:996:49": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "tail.iter()"
      }
    }
  ],
  "idna/src/uts46.rs:765:25:765:62": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "error_policy == ErrorPolicy::FailFast",
          "lhs": "error_policy",
          "rhs": "ErrorPolicy::FailFast",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:861:16:861:27": [
    {
      "Bool": {
        "Other": "passthrough"
      }
    }
  ],
  "idna/src/uts46.rs:978:31:978:100": [
    {
      "Bool": {
        "Other": "let AlreadyAsciiLabel::MixedCasePunycode(mixed_case) = input_punycode"
      }
    }
  ],
  "idna/src/uts46.rs:1009:29:1013:32": [
    {
      "Try": "sink.write_str(unsafe {\n                                core::str::from_utf8_unchecked(\n                                    &domain_name[..passthrough_up_to_extended],\n                                )\n                            })?"
    }
  ],
  "idna/src/uts46.rs:887:30:887:41": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "tail.iter()"
      }
    }
  ],
  "idna/src/uts46.rs:1020:21:1022:24": [
    {
      "Try": "sink.write_str(unsafe {\n                        core::str::from_utf8_unchecked(&domain_name[..passthrough_up_to_extended])\n                    })?"
    }
  ],
  "idna/src/uts46.rs:890:27:890:41": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:804:20:804:34": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:835:27:835:41": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:873:20:874:75": [
    {
      "Bool": {
        "Other": "let Some(first_upper_case) =\n                    mixed_case.iter().position(|c| c.is_ascii_uppercase())"
      }
    }
  ],
  "idna/src/uts46.rs:1006:29:1006:43": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:937:28:938:83": [
    {
      "Bool": {
        "Other": "let Some(first_upper_case) =\n                            mixed_case.iter().position(|c| c.is_ascii_uppercase())"
      }
    }
  ],
  "idna/src/uts46.rs:954:33:954:85": [
    {
      "Try": "sink.write_char(char::from(c.to_ascii_lowercase()))?"
    }
  ],
  "idna/src/uts46.rs:1001:29:1001:99": [
    {
      "Try": "sink.write_str(unsafe { core::str::from_utf8_unchecked(mixed_case) })?"
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:90:20:90:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "*left_val == *right_val",
          "lhs": "*left_val",
          "rhs": "*right_val",
          "cmp_with_int": false
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12:346:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "idna/src/uts46.rs:953:38:953:49": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "tail.iter()"
      }
    }
  ],
  "idna/src/uts46.rs:901:21:901:35": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:809:24:809:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "passthrough_up_to_extended == domain_name.len()",
          "lhs": "passthrough_up_to_extended",
          "rhs": "domain_name.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:848:43:848:52": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:805:21:805:42": [
    {
      "Try": "sink.write_char('.')?"
    }
  ],
  "idna/src/uts46.rs:818:20:819:75": [
    {
      "Bool": {
        "Other": "let Some(first_upper_case) =\n                    mixed_case.iter().position(|c| c.is_ascii_uppercase())"
      }
    }
  ],
  "idna/src/uts46.rs:976:29:976:48": [
    {
      "Try": "sink.write_char(c)?"
    }
  ],
  "idna/src/uts46.rs:783:12:783:21": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:993:29:995:32": [
    {
      "Try": "sink.write_str(unsafe {\n                                core::str::from_utf8_unchecked(slice_to_write)\n                            })?"
    }
  ],
  "idna/src/uts46.rs:969:29:973:32": [
    {
      "Try": "sink.write_str(unsafe {\n                                core::str::from_utf8_unchecked(\n                                    &domain_name[..passthrough_up_to_extended],\n                                )\n                            })?"
    }
  ],
  "idna/src/uts46.rs:837:21:837:91": [
    {
      "Try": "sink.write_str(unsafe { core::str::from_utf8_unchecked(mixed_case) })?"
    }
  ],
  "idna/src/uts46.rs:783:25:783:35": [
    {
      "Bool": {
        "Other": "had_errors"
      }
    }
  ],
  "idna/src/uts46.rs:984:53:984:67": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:779:28:779:38": [
    {
      "Bool": {
        "Other": "had_errors"
      }
    }
  ],
  "idna/src/uts46.rs:831:21:831:95": [
    {
      "Try": "sink.write_str(unsafe { core::str::from_utf8_unchecked(slice_to_write) })?"
    }
  ],
  "idna/src/uts46.rs:895:24:895:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "passthrough_up_to_extended == domain_name.len()",
          "lhs": "passthrough_up_to_extended",
          "rhs": "domain_name.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:1015:25:1015:59": [
    {
      "Try": "write_punycode_label(label, sink)?"
    }
  ],
  "idna/src/uts46.rs:927:28:927:42": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:877:45:877:59": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:999:35:999:49": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:799:22:799:56": [
    {
      "For": {
        "iter_var": "label",
        "iter_range": "domain_buffer.split(|c| *c == '.')"
      }
    }
  ],
  "idna/src/uts46.rs:872:23:872:92": [
    {
      "Bool": {
        "Other": "let AlreadyAsciiLabel::MixedCasePunycode(mixed_case) = input_punycode"
      }
    }
  ],
  "idna/src/uts46.rs:840:24:840:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "passthrough_up_to_extended == domain_name.len()",
          "lhs": "passthrough_up_to_extended",
          "rhs": "domain_name.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:841:40:841:50": [
    {
      "Bool": {
        "Other": "had_errors"
      }
    }
  ],
  "idna/src/uts46.rs:778:12:778:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "passthrough_up_to == domain_name.len()",
          "lhs": "passthrough_up_to",
          "rhs": "domain_name.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:958:29:958:99": [
    {
      "Try": "sink.write_str(unsafe { core::str::from_utf8_unchecked(mixed_case) })?"
    }
  ],
  "idna/src/uts46.rs:832:30:832:41": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "tail.iter()"
      }
    }
  ],
  "idna/src/uts46.rs:817:16:817:82": [
    {
      "Bool": {
        "Other": "let AlreadyAsciiLabel::MixedCaseAscii(mixed_case) = input_punycode"
      }
    }
  ],
  "idna/src/uts46.rs:904:21:906:24": [
    {
      "Try": "sink.write_str(unsafe {\n                        core::str::from_utf8_unchecked(&domain_name[..passthrough_up_to_extended])\n                    })?"
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15:88:32": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15:88:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:13:89:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:24:89:33"
                  ],
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:14:89:22"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15:88:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:13:89:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:14:89:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:24:89:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "idna/src/uts46.rs:822:45:822:59": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:810:40:810:50": [
    {
      "Bool": {
        "Other": "had_errors"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:9:98:10": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15:88:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:13:89:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:24:89:33"
                  ],
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:14:89:22"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:88:15:88:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:13:89:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:14:89:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:89:24:89:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "idna/src/uts46.rs:941:53:941:67": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:862:21:862:35": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:376:12:376:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "idna/src/uts46.rs:849:31:849:92": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "classify_for_punycode(label) != PunycodeClassification::Error",
          "lhs": "classify_for_punycode(label)",
          "rhs": "PunycodeClassification::Error",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:950:29:952:32": [
    {
      "Try": "sink.write_str(unsafe {\n                                core::str::from_utf8_unchecked(slice_to_write)\n                            })?"
    }
  ],
  "idna/src/uts46.rs:852:17:852:80": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "classify_for_punycode(label) == PunycodeClassification::Unicode",
          "lhs": "classify_for_punycode(label)",
          "rhs": "PunycodeClassification::Unicode",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:966:29:966:43": [
    {
      "Bool": {
        "Other": "flushed_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:869:26:869:47": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "label.iter().copied()"
      }
    }
  ],
  "idna/src/uts46.rs:980:28:981:83": [
    {
      "Bool": {
        "Other": "let Some(first_upper_case) =\n                            mixed_case.iter().position(|c| c.is_ascii_uppercase())"
      }
    }
  ],
  "idna/src/uts46.rs:888:25:888:77": [
    {
      "Try": "sink.write_char(char::from(c.to_ascii_lowercase()))?"
    }
  ],
  "idna/src/uts46.rs:916:12:916:30": [
    {
      "Bool": {
        "Other": "had_unicode_output"
      }
    }
  ]
}