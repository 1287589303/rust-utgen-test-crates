bb0
  0: StorageLive(_3)
    SourceInfo(idna/src/uts46.rs:295:13-295:21)
  1: _3 = const uts46::UPPER_CASE_MASK
    SourceInfo(idna/src/uts46.rs:295:24-295:39)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(idna/src/uts46.rs:295:13-295:21)
  3: StorageLive(_4)
    SourceInfo(idna/src/uts46.rs:296:9-298:10)
  4: StorageLive(_5)
    SourceInfo(idna/src/uts46.rs:296:12-296:26)
  5: _5 = _1
    SourceInfo(idna/src/uts46.rs:296:12-296:26)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:296:12-296:26)
      kind: switchInt(move _5) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _3 = BitOr(_3, const uts46::GLYPHLESS_MASK)
    SourceInfo(idna/src/uts46.rs:297:13-297:35)
  1: _4 = const ()
    SourceInfo(idna/src/uts46.rs:296:27-298:10)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:296:9-298:10)
      kind: goto -> bb3
  }
  preds [bb0]
  succs [bb3]

bb2
  0: _4 = const ()
    SourceInfo(idna/src/uts46.rs:298:10-298:10)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:296:9-298:10)
      kind: goto -> bb3
  }
  preds [bb0]
  succs [bb3]

bb3
  0: StorageDead(_5)
    SourceInfo(idna/src/uts46.rs:298:9-298:10)
  1: StorageDead(_4)
    SourceInfo(idna/src/uts46.rs:298:9-298:10)
  2: StorageLive(_6)
    SourceInfo(idna/src/uts46.rs:299:13-299:18)
  3: _6 = const 0_usize
    SourceInfo(idna/src/uts46.rs:299:21-299:22)
  4: FakeRead(ForLet(None), _6)
    SourceInfo(idna/src/uts46.rs:299:13-299:18)
  5: StorageLive(_7)
    SourceInfo(idna/src/uts46.rs:300:13-300:18)
  6: StorageLive(_8)
    SourceInfo(idna/src/uts46.rs:300:21-300:30)
  7: _8 = &(*_2)
    SourceInfo(idna/src/uts46.rs:300:21-300:30)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:300:21-300:41)
      kind: _7 = core::str::<impl str>::as_bytes(move _8) -> [return: bb4, unwind: bb34]
  }
  preds [bb1, bb2]
  succs [bb4, bb34]

bb4
  0: StorageDead(_8)
    SourceInfo(idna/src/uts46.rs:300:40-300:41)
  1: FakeRead(ForLet(None), _7)
    SourceInfo(idna/src/uts46.rs:300:13-300:18)
  2: StorageLive(_9)
    SourceInfo(idna/src/uts46.rs:301:9-321:10)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:301:9-321:10)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:301:9-321:10)
      kind: falseUnwind -> [real: bb6, unwind: bb34]
  }
  preds [bb4, bb32]
  succs [bb6, bb34]

bb6
  0: StorageLive(_11)
    SourceInfo(idna/src/uts46.rs:301:15-301:30)
  1: StorageLive(_12)
    SourceInfo(idna/src/uts46.rs:301:15-301:16)
  2: _12 = _6
    SourceInfo(idna/src/uts46.rs:301:15-301:16)
  3: StorageLive(_13)
    SourceInfo(idna/src/uts46.rs:301:19-301:30)
  4: StorageLive(_14)
    SourceInfo(idna/src/uts46.rs:301:19-301:24)
  5: _14 = &(*_7)
    SourceInfo(idna/src/uts46.rs:301:19-301:24)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:301:19-301:30)
      kind: _13 = core::slice::<impl [u8]>::len(move _14) -> [return: bb7, unwind: bb34]
  }
  preds [bb5]
  succs [bb7, bb34]

bb7
  0: StorageDead(_14)
    SourceInfo(idna/src/uts46.rs:301:29-301:30)
  1: _11 = Lt(move _12, move _13)
    SourceInfo(idna/src/uts46.rs:301:15-301:30)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:301:15-301:30)
      kind: switchInt(move _11) -> [0: bb33, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb33]

bb8
  0: StorageDead(_13)
    SourceInfo(idna/src/uts46.rs:301:29-301:30)
  1: StorageDead(_12)
    SourceInfo(idna/src/uts46.rs:301:29-301:30)
  2: StorageLive(_15)
    SourceInfo(idna/src/uts46.rs:302:17-302:18)
  3: StorageLive(_16)
    SourceInfo(idna/src/uts46.rs:302:27-302:28)
  4: _16 = _6
    SourceInfo(idna/src/uts46.rs:302:27-302:28)
  5: _17 = Len((*_7))
    SourceInfo(idna/src/uts46.rs:302:21-302:29)
  6: _18 = Lt(_16, _17)
    SourceInfo(idna/src/uts46.rs:302:21-302:29)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:302:21-302:29)
      kind: assert(move _18, "index out of bounds: the length is {} but the index is {}", move _17, _16) -> [success: bb9, unwind: bb34]
  }
  preds [bb7]
  succs [bb9, bb34]

bb9
  0: _15 = (*_7)[_16]
    SourceInfo(idna/src/uts46.rs:302:21-302:29)
  1: FakeRead(ForLet(None), _15)
    SourceInfo(idna/src/uts46.rs:302:17-302:18)
  2: StorageDead(_16)
    SourceInfo(idna/src/uts46.rs:302:29-302:30)
  3: StorageLive(_19)
    SourceInfo(idna/src/uts46.rs:303:13-303:64)
  4: StorageLive(_20)
    SourceInfo(idna/src/uts46.rs:303:21-303:29)
  5: StorageLive(_21)
    SourceInfo(idna/src/uts46.rs:303:21-303:22)
  6: _21 = _15
    SourceInfo(idna/src/uts46.rs:303:21-303:22)
  7: _20 = Lt(move _21, const 128_u8)
    SourceInfo(idna/src/uts46.rs:303:21-303:29)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:303:21-303:29)
      kind: switchInt(move _20) -> [0: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11]

bb10
  0: StorageDead(_21)
    SourceInfo(idna/src/uts46.rs:303:28-303:29)
  1: _19 = const ()
    SourceInfo(idna/src/uts46.rs:303:64-303:64)
  2: StorageDead(_20)
    SourceInfo(idna/src/uts46.rs:303:63-303:64)
  3: StorageDead(_19)
    SourceInfo(idna/src/uts46.rs:303:63-303:64)
  4: StorageLive(_23)
    SourceInfo(idna/src/uts46.rs:305:13-305:76)
  5: StorageLive(_24)
    SourceInfo(idna/src/uts46.rs:305:21-305:30)
  6: StorageLive(_25)
    SourceInfo(idna/src/uts46.rs:305:21-305:22)
  7: _25 = _15
    SourceInfo(idna/src/uts46.rs:305:21-305:22)
  8: _24 = Ne(move _25, const 46_u8)
    SourceInfo(idna/src/uts46.rs:305:21-305:30)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:305:21-305:30)
      kind: switchInt(move _24) -> [0: bb13, otherwise: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb11
  0: StorageDead(_21)
    SourceInfo(idna/src/uts46.rs:303:28-303:29)
  1: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
      kind: _22 = core::panicking::panic(const "ASCII deny list must be ASCII.") -> bb34
  }
  preds [bb9]
  succs [bb34]

bb12
  0: StorageDead(_25)
    SourceInfo(idna/src/uts46.rs:305:29-305:30)
  1: _23 = const ()
    SourceInfo(idna/src/uts46.rs:305:76-305:76)
  2: StorageDead(_24)
    SourceInfo(idna/src/uts46.rs:305:75-305:76)
  3: StorageDead(_23)
    SourceInfo(idna/src/uts46.rs:305:75-305:76)
  4: StorageLive(_27)
    SourceInfo(idna/src/uts46.rs:306:13-306:79)
  5: StorageLive(_28)
    SourceInfo(idna/src/uts46.rs:306:21-306:30)
  6: StorageLive(_29)
    SourceInfo(idna/src/uts46.rs:306:21-306:22)
  7: _29 = _15
    SourceInfo(idna/src/uts46.rs:306:21-306:22)
  8: _28 = Ne(move _29, const 45_u8)
    SourceInfo(idna/src/uts46.rs:306:21-306:30)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:306:21-306:30)
      kind: switchInt(move _28) -> [0: bb15, otherwise: bb14]
  }
  preds [bb10]
  succs [bb14, bb15]

bb13
  0: StorageDead(_25)
    SourceInfo(idna/src/uts46.rs:305:29-305:30)
  1: StorageLive(_26)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
      kind: _26 = core::panicking::panic(const "ASCII deny list must not contain the dot.") -> bb34
  }
  preds [bb10]
  succs [bb34]

bb14
  0: StorageDead(_29)
    SourceInfo(idna/src/uts46.rs:306:29-306:30)
  1: _27 = const ()
    SourceInfo(idna/src/uts46.rs:306:79-306:79)
  2: StorageDead(_28)
    SourceInfo(idna/src/uts46.rs:306:78-306:79)
  3: StorageDead(_27)
    SourceInfo(idna/src/uts46.rs:306:78-306:79)
  4: StorageLive(_31)
    SourceInfo(idna/src/uts46.rs:307:13-310:14)
  5: StorageLive(_32)
    SourceInfo(idna/src/uts46.rs:308:19-308:30)
  6: StorageLive(_33)
    SourceInfo(idna/src/uts46.rs:308:20-308:21)
  7: _33 = _15
    SourceInfo(idna/src/uts46.rs:308:20-308:21)
  8: _32 = Ge(move _33, const 48_u8)
    SourceInfo(idna/src/uts46.rs:308:19-308:30)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:308:19-308:30)
      kind: switchInt(move _32) -> [0: bb17, otherwise: bb16]
  }
  preds [bb12]
  succs [bb16, bb17]

bb15
  0: StorageDead(_29)
    SourceInfo(idna/src/uts46.rs:306:29-306:30)
  1: StorageLive(_30)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
      kind: _30 = core::panicking::panic(const "ASCII deny list must not contain the hyphen.") -> bb34
  }
  preds [bb12]
  succs [bb34]

bb16
  0: StorageDead(_33)
    SourceInfo(idna/src/uts46.rs:308:29-308:30)
  1: StorageLive(_34)
    SourceInfo(idna/src/uts46.rs:308:34-308:45)
  2: StorageLive(_35)
    SourceInfo(idna/src/uts46.rs:308:35-308:36)
  3: _35 = _15
    SourceInfo(idna/src/uts46.rs:308:35-308:36)
  4: _34 = Le(move _35, const 57_u8)
    SourceInfo(idna/src/uts46.rs:308:34-308:45)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:308:34-308:45)
      kind: switchInt(move _34) -> [0: bb19, otherwise: bb18]
  }
  preds [bb14]
  succs [bb18, bb19]

bb17
  0: StorageDead(_33)
    SourceInfo(idna/src/uts46.rs:308:29-308:30)
  Terminator {
      source_info: SourceInfo(idna/src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb14]
  succs [bb20]

bb18
  0: StorageDead(_35)
    SourceInfo(idna/src/uts46.rs:308:44-308:45)
  1: StorageLive(_36)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
      kind: _36 = core::panicking::panic(const "ASCII deny list must not contain digits.") -> bb34
  }
  preds [bb16]
  succs [bb34]

bb19
  0: StorageDead(_35)
    SourceInfo(idna/src/uts46.rs:308:44-308:45)
  Terminator {
      source_info: SourceInfo(idna/src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb16]
  succs [bb20]

bb20
  0: _31 = const ()
    SourceInfo(idna/src/uts46.rs:310:14-310:14)
  1: StorageDead(_34)
    SourceInfo(idna/src/uts46.rs:310:13-310:14)
  2: StorageDead(_32)
    SourceInfo(idna/src/uts46.rs:310:13-310:14)
  3: StorageDead(_31)
    SourceInfo(idna/src/uts46.rs:310:13-310:14)
  4: StorageLive(_37)
    SourceInfo(idna/src/uts46.rs:311:13-314:14)
  5: StorageLive(_38)
    SourceInfo(idna/src/uts46.rs:312:19-312:30)
  6: StorageLive(_39)
    SourceInfo(idna/src/uts46.rs:312:20-312:21)
  7: _39 = _15
    SourceInfo(idna/src/uts46.rs:312:20-312:21)
  8: _38 = Ge(move _39, const 97_u8)
    SourceInfo(idna/src/uts46.rs:312:19-312:30)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:312:19-312:30)
      kind: switchInt(move _38) -> [0: bb22, otherwise: bb21]
  }
  preds [bb17, bb19]
  succs [bb21, bb22]

bb21
  0: StorageDead(_39)
    SourceInfo(idna/src/uts46.rs:312:29-312:30)
  1: StorageLive(_40)
    SourceInfo(idna/src/uts46.rs:312:34-312:45)
  2: StorageLive(_41)
    SourceInfo(idna/src/uts46.rs:312:35-312:36)
  3: _41 = _15
    SourceInfo(idna/src/uts46.rs:312:35-312:36)
  4: _40 = Le(move _41, const 122_u8)
    SourceInfo(idna/src/uts46.rs:312:34-312:45)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:312:34-312:45)
      kind: switchInt(move _40) -> [0: bb24, otherwise: bb23]
  }
  preds [bb20]
  succs [bb23, bb24]

bb22
  0: StorageDead(_39)
    SourceInfo(idna/src/uts46.rs:312:29-312:30)
  Terminator {
      source_info: SourceInfo(idna/src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb20]
  succs [bb25]

bb23
  0: StorageDead(_41)
    SourceInfo(idna/src/uts46.rs:312:44-312:45)
  1: StorageLive(_42)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
      kind: _42 = core::panicking::panic(const "ASCII deny list must not contain letters.") -> bb34
  }
  preds [bb21]
  succs [bb34]

bb24
  0: StorageDead(_41)
    SourceInfo(idna/src/uts46.rs:312:44-312:45)
  Terminator {
      source_info: SourceInfo(idna/src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb21]
  succs [bb25]

bb25
  0: _37 = const ()
    SourceInfo(idna/src/uts46.rs:314:14-314:14)
  1: StorageDead(_40)
    SourceInfo(idna/src/uts46.rs:314:13-314:14)
  2: StorageDead(_38)
    SourceInfo(idna/src/uts46.rs:314:13-314:14)
  3: StorageDead(_37)
    SourceInfo(idna/src/uts46.rs:314:13-314:14)
  4: StorageLive(_43)
    SourceInfo(idna/src/uts46.rs:315:13-318:14)
  5: StorageLive(_44)
    SourceInfo(idna/src/uts46.rs:316:19-316:30)
  6: StorageLive(_45)
    SourceInfo(idna/src/uts46.rs:316:20-316:21)
  7: _45 = _15
    SourceInfo(idna/src/uts46.rs:316:20-316:21)
  8: _44 = Ge(move _45, const 65_u8)
    SourceInfo(idna/src/uts46.rs:316:19-316:30)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:316:19-316:30)
      kind: switchInt(move _44) -> [0: bb27, otherwise: bb26]
  }
  preds [bb22, bb24]
  succs [bb26, bb27]

bb26
  0: StorageDead(_45)
    SourceInfo(idna/src/uts46.rs:316:29-316:30)
  1: StorageLive(_46)
    SourceInfo(idna/src/uts46.rs:316:34-316:45)
  2: StorageLive(_47)
    SourceInfo(idna/src/uts46.rs:316:35-316:36)
  3: _47 = _15
    SourceInfo(idna/src/uts46.rs:316:35-316:36)
  4: _46 = Le(move _47, const 90_u8)
    SourceInfo(idna/src/uts46.rs:316:34-316:45)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:316:34-316:45)
      kind: switchInt(move _46) -> [0: bb29, otherwise: bb28]
  }
  preds [bb25]
  succs [bb28, bb29]

bb27
  0: StorageDead(_45)
    SourceInfo(idna/src/uts46.rs:316:29-316:30)
  Terminator {
      source_info: SourceInfo(idna/src/lib.rs:1:1-1:1)
      kind: goto -> bb30
  }
  preds [bb25]
  succs [bb30]

bb28
  0: StorageDead(_47)
    SourceInfo(idna/src/uts46.rs:316:44-316:45)
  1: StorageLive(_48)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
      kind: _48 = core::panicking::panic(const "ASCII deny list must not contain letters.") -> bb34
  }
  preds [bb26]
  succs [bb34]

bb29
  0: StorageDead(_47)
    SourceInfo(idna/src/uts46.rs:316:44-316:45)
  Terminator {
      source_info: SourceInfo(idna/src/lib.rs:1:1-1:1)
      kind: goto -> bb30
  }
  preds [bb26]
  succs [bb30]

bb30
  0: _43 = const ()
    SourceInfo(idna/src/uts46.rs:318:14-318:14)
  1: StorageDead(_46)
    SourceInfo(idna/src/uts46.rs:318:13-318:14)
  2: StorageDead(_44)
    SourceInfo(idna/src/uts46.rs:318:13-318:14)
  3: StorageDead(_43)
    SourceInfo(idna/src/uts46.rs:318:13-318:14)
  4: StorageLive(_49)
    SourceInfo(idna/src/uts46.rs:319:21-319:31)
  5: StorageLive(_50)
    SourceInfo(idna/src/uts46.rs:319:30-319:31)
  6: _50 = _15
    SourceInfo(idna/src/uts46.rs:319:30-319:31)
  7: _51 = Lt(_50, const 128_u8)
    SourceInfo(idna/src/uts46.rs:319:21-319:31)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:319:21-319:31)
      kind: assert(move _51, "attempt to shift left by `{}`, which would overflow", _50) -> [success: bb31, unwind: bb34]
  }
  preds [bb27, bb29]
  succs [bb31, bb34]

bb31
  0: _49 = Shl(const 1_u128, move _50)
    SourceInfo(idna/src/uts46.rs:319:21-319:31)
  1: StorageDead(_50)
    SourceInfo(idna/src/uts46.rs:319:30-319:31)
  2: _3 = BitOr(_3, move _49)
    SourceInfo(idna/src/uts46.rs:319:13-319:31)
  3: StorageDead(_49)
    SourceInfo(idna/src/uts46.rs:319:30-319:31)
  4: _52 = AddWithOverflow(_6, const 1_usize)
    SourceInfo(idna/src/uts46.rs:320:13-320:19)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:320:13-320:19)
      kind: assert(!move (_52.1: bool), "attempt to compute `{} + {}`, which would overflow", _6, const 1_usize) -> [success: bb32, unwind: bb34]
  }
  preds [bb30]
  succs [bb32, bb34]

bb32
  0: _6 = move (_52.0: usize)
    SourceInfo(idna/src/uts46.rs:320:13-320:19)
  1: _10 = const ()
    SourceInfo(idna/src/uts46.rs:301:31-321:10)
  2: StorageDead(_15)
    SourceInfo(idna/src/uts46.rs:321:9-321:10)
  3: StorageDead(_11)
    SourceInfo(idna/src/uts46.rs:321:9-321:10)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:301:9-321:10)
      kind: goto -> bb5
  }
  preds [bb31]
  succs [bb5]

bb33
  0: StorageDead(_13)
    SourceInfo(idna/src/uts46.rs:301:29-301:30)
  1: StorageDead(_12)
    SourceInfo(idna/src/uts46.rs:301:29-301:30)
  2: StorageLive(_54)
    SourceInfo(idna/src/uts46.rs:301:9-321:10)
  3: _9 = const ()
    SourceInfo(idna/src/uts46.rs:301:9-321:10)
  4: StorageDead(_54)
    SourceInfo(idna/src/uts46.rs:321:9-321:10)
  5: StorageDead(_11)
    SourceInfo(idna/src/uts46.rs:321:9-321:10)
  6: StorageDead(_9)
    SourceInfo(idna/src/uts46.rs:321:9-321:10)
  7: StorageLive(_56)
    SourceInfo(idna/src/uts46.rs:322:25-322:29)
  8: _56 = _3
    SourceInfo(idna/src/uts46.rs:322:25-322:29)
  9: _0 = uts46::AsciiDenyList { bits: move _56 }
    SourceInfo(idna/src/uts46.rs:322:9-322:31)
  10: StorageDead(_56)
    SourceInfo(idna/src/uts46.rs:322:30-322:31)
  11: StorageDead(_7)
    SourceInfo(idna/src/uts46.rs:323:5-323:6)
  12: StorageDead(_6)
    SourceInfo(idna/src/uts46.rs:323:5-323:6)
  13: StorageDead(_3)
    SourceInfo(idna/src/uts46.rs:323:5-323:6)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:323:6-323:6)
      kind: return
  }
  preds [bb7]
  succs []

bb34
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:294:5-323:6)
      kind: resume
  }
  preds [bb3, bb5, bb6, bb8, bb11, bb13, bb15, bb18, bb23, bb28, bb30, bb31]
  succs []

