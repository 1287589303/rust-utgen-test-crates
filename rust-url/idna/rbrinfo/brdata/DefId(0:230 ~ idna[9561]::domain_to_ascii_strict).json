{
  "name": "idna::domain_to_ascii_strict",
  "mod_info": {
    "name": "",
    "loc": "idna/src/lib.rs:9:1:171:2"
  },
  "visible": true,
  "loc": "idna/src/lib.rs:139:1:148:2",
  "doc": "/// The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm,\n/// with the `beStrict` flag set.\n///\n/// Note that this rejects various real-world names including:\n/// * YouTube CDN nodes\n/// * Some GitHub user pages\n/// * Pseudo-hosts used by various TXT record-based protocols.\n",
  "code": [
    "pub fn domain_to_ascii_strict(domain: &str) -> Result<String, Errors> {",
    "    Uts46::new()",
    "        .to_ascii(",
    "            domain.as_bytes(),",
    "            uts46::AsciiDenyList::STD3,",
    "            uts46::Hyphens::Check,",
    "            uts46::DnsLength::Verify,",
    "        )",
    "        .map(|cow| cow.into_owned())",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}