{
  "name": "idna::domain_to_ascii",
  "mod_info": {
    "name": "",
    "loc": "idna/src/lib.rs:9:1:171:2"
  },
  "visible": true,
  "loc": "idna/src/lib.rs:128:1:130:2",
  "doc": "/// The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm;\n/// version returning `String` and no ASCII deny list (i.e. _UseSTD3ASCIIRules=false_).\n///\n/// This function exists for backward-compatibility. Consider using [`domain_to_ascii_cow`]\n/// instead.\n///\n/// Return the ASCII representation a domain name,\n/// normalizing characters (upper-case to lower-case and other kinds of equivalence)\n/// and using Punycode as necessary.\n///\n/// This process may fail.\n",
  "code": [
    "pub fn domain_to_ascii(domain: &str) -> Result<String, Errors> {",
    "    domain_to_ascii_cow(domain.as_bytes(), AsciiDenyList::EMPTY).map(|cow| cow.into_owned())",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}