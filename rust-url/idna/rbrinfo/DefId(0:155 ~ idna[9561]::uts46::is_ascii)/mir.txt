bb0
  0: StorageLive(_2)
    SourceInfo(idna/src/uts46.rs:232:5-236:6)
  1: StorageLive(_3)
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  2: StorageLive(_4)
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  3: StorageLive(_5)
    SourceInfo(idna/src/uts46.rs:232:14-232:19)
  4: _5 = &(*_1)
    SourceInfo(idna/src/uts46.rs:232:14-232:19)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:232:14-232:26)
      kind: _4 = core::slice::<impl [char]>::iter(move _5) -> [return: bb1, unwind: bb14]
  }
  preds []
  succs [bb1, bb14]

bb1
  0: StorageDead(_5)
    SourceInfo(idna/src/uts46.rs:232:25-232:26)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:232:14-232:26)
      kind: _3 = <core::slice::Iter<'_, char> as core::iter::IntoIterator>::into_iter(move _4) -> [return: bb2, unwind: bb14]
  }
  preds [bb0]
  succs [bb2, bb14]

bb2
  0: StorageDead(_4)
    SourceInfo(idna/src/uts46.rs:232:25-232:26)
  1: PlaceMention(_3)
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  2: StorageLive(_6)
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  3: _6 = move _3
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:232:5-236:6)
      kind: goto -> bb3
  }
  preds [bb1]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:232:5-236:6)
      kind: falseUnwind -> [real: bb4, unwind: bb14]
  }
  preds [bb2, bb11]
  succs [bb4, bb14]

bb4
  0: StorageLive(_8)
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  1: StorageLive(_9)
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  2: StorageLive(_10)
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  3: StorageLive(_11)
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  4: _11 = &mut _6
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  5: _10 = &mut (*_11)
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:232:14-232:26)
      kind: _9 = <core::slice::Iter<'_, char> as core::iter::Iterator>::next(move _10) -> [return: bb5, unwind: bb14]
  }
  preds [bb3]
  succs [bb5, bb14]

bb5
  0: StorageDead(_10)
    SourceInfo(idna/src/uts46.rs:232:25-232:26)
  1: PlaceMention(_9)
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  2: _12 = discriminant(_9)
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:232:14-232:26)
      kind: switchInt(move _12) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _9)
    SourceInfo(idna/src/uts46.rs:232:14-232:26)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:232:14-232:26)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:232:5-236:6)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_14)
    SourceInfo(idna/src/uts46.rs:232:9-232:10)
  1: _14 = ((_9 as Some).0: &char)
    SourceInfo(idna/src/uts46.rs:232:9-232:10)
  2: StorageLive(_15)
    SourceInfo(idna/src/uts46.rs:233:13-233:25)
  3: StorageLive(_16)
    SourceInfo(idna/src/uts46.rs:233:13-233:14)
  4: _16 = &(*_14)
    SourceInfo(idna/src/uts46.rs:233:13-233:14)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:233:13-233:25)
      kind: _15 = core::char::methods::<impl char>::is_ascii(move _16) -> [return: bb10, unwind: bb14]
  }
  preds [bb5, bb7]
  succs [bb10, bb14]

bb9
  0: _2 = const ()
    SourceInfo(idna/src/uts46.rs:232:5-236:6)
  1: StorageDead(_11)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  2: StorageDead(_9)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  3: StorageDead(_8)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  4: StorageDead(_6)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  5: StorageDead(_3)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  6: StorageDead(_2)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  7: _0 = const true
    SourceInfo(idna/src/uts46.rs:237:5-237:9)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:238:2-238:2)
      kind: goto -> bb13
  }
  preds [bb7]
  succs [bb13]

bb10
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:233:13-233:25)
      kind: switchInt(move _15) -> [0: bb12, otherwise: bb11]
  }
  preds [bb8]
  succs [bb11, bb12]

bb11
  0: StorageDead(_16)
    SourceInfo(idna/src/uts46.rs:233:24-233:25)
  1: _8 = const ()
    SourceInfo(idna/src/uts46.rs:235:10-235:10)
  2: StorageDead(_15)
    SourceInfo(idna/src/uts46.rs:235:9-235:10)
  3: StorageDead(_14)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  4: StorageDead(_11)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  5: StorageDead(_9)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  6: StorageDead(_8)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  7: _7 = const ()
    SourceInfo(idna/src/uts46.rs:232:5-236:6)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:232:5-236:6)
      kind: goto -> bb3
  }
  preds [bb10]
  succs [bb3]

bb12
  0: StorageDead(_16)
    SourceInfo(idna/src/uts46.rs:233:24-233:25)
  1: _0 = const false
    SourceInfo(idna/src/uts46.rs:234:20-234:25)
  2: StorageDead(_15)
    SourceInfo(idna/src/uts46.rs:235:9-235:10)
  3: StorageDead(_14)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  4: StorageDead(_11)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  5: StorageDead(_9)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  6: StorageDead(_8)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  7: StorageDead(_6)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  8: StorageDead(_3)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  9: StorageDead(_2)
    SourceInfo(idna/src/uts46.rs:236:5-236:6)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:238:2-238:2)
      kind: goto -> bb13
  }
  preds [bb10]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:238:2-238:2)
      kind: return
  }
  preds [bb9, bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:231:1-238:2)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4, bb8]
  succs []

