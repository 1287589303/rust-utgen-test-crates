bb0
  0: StorageLive(_1)
    SourceInfo(idna/src/uts46.rs:73:9-73:17)
  1: _1 = const 0_u128
    SourceInfo(idna/src/uts46.rs:73:20-73:25)
  2: FakeRead(ForLet(None), _1)
    SourceInfo(idna/src/uts46.rs:73:9-73:17)
  3: StorageLive(_2)
    SourceInfo(idna/src/uts46.rs:74:9-74:14)
  4: _2 = const 0_u8
    SourceInfo(idna/src/uts46.rs:74:17-74:20)
  5: FakeRead(ForLet(None), _2)
    SourceInfo(idna/src/uts46.rs:74:9-74:14)
  6: StorageLive(_3)
    SourceInfo(idna/src/uts46.rs:75:5-80:6)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:75:5-80:6)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:75:5-80:6)
      kind: falseUnwind -> [real: bb2, unwind: bb13]
  }
  preds [bb0, bb11]
  succs [bb2, bb13]

bb2
  0: StorageLive(_5)
    SourceInfo(idna/src/uts46.rs:75:11-75:18)
  1: StorageLive(_6)
    SourceInfo(idna/src/uts46.rs:75:11-75:12)
  2: _6 = _2
    SourceInfo(idna/src/uts46.rs:75:11-75:12)
  3: _5 = Lt(move _6, const 128_u8)
    SourceInfo(idna/src/uts46.rs:75:11-75:18)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:75:11-75:18)
      kind: switchInt(move _5) -> [0: bb12, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb12]

bb3
  0: StorageDead(_6)
    SourceInfo(idna/src/uts46.rs:75:17-75:18)
  1: StorageLive(_7)
    SourceInfo(idna/src/uts46.rs:76:9-78:10)
  2: StorageLive(_8)
    SourceInfo(idna/src/uts46.rs:76:12-76:23)
  3: StorageLive(_9)
    SourceInfo(idna/src/uts46.rs:76:13-76:14)
  4: _9 = _2
    SourceInfo(idna/src/uts46.rs:76:13-76:14)
  5: _8 = Le(move _9, const 32_u8)
    SourceInfo(idna/src/uts46.rs:76:12-76:23)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:76:12-76:23)
      kind: switchInt(move _8) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_9)
    SourceInfo(idna/src/uts46.rs:76:22-76:23)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:76:39-78:10)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb5
  0: StorageDead(_9)
    SourceInfo(idna/src/uts46.rs:76:22-76:23)
  1: StorageLive(_10)
    SourceInfo(idna/src/uts46.rs:76:27-76:38)
  2: StorageLive(_11)
    SourceInfo(idna/src/uts46.rs:76:28-76:29)
  3: _11 = _2
    SourceInfo(idna/src/uts46.rs:76:28-76:29)
  4: _10 = Eq(move _11, const 127_u8)
    SourceInfo(idna/src/uts46.rs:76:27-76:38)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:76:27-76:38)
      kind: switchInt(move _10) -> [0: bb9, otherwise: bb6]
  }
  preds [bb3]
  succs [bb6, bb9]

bb6
  0: StorageDead(_11)
    SourceInfo(idna/src/uts46.rs:76:37-76:38)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:76:39-78:10)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageLive(_12)
    SourceInfo(idna/src/uts46.rs:77:21-77:31)
  1: StorageLive(_13)
    SourceInfo(idna/src/uts46.rs:77:30-77:31)
  2: _13 = _2
    SourceInfo(idna/src/uts46.rs:77:30-77:31)
  3: _14 = Lt(_13, const 128_u8)
    SourceInfo(idna/src/uts46.rs:77:21-77:31)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:77:21-77:31)
      kind: assert(move _14, "attempt to shift left by `{}`, which would overflow", _13) -> [success: bb8, unwind: bb13]
  }
  preds [bb4, bb6]
  succs [bb8, bb13]

bb8
  0: _12 = Shl(const 1_u128, move _13)
    SourceInfo(idna/src/uts46.rs:77:21-77:31)
  1: StorageDead(_13)
    SourceInfo(idna/src/uts46.rs:77:30-77:31)
  2: _1 = BitOr(_1, move _12)
    SourceInfo(idna/src/uts46.rs:77:13-77:31)
  3: StorageDead(_12)
    SourceInfo(idna/src/uts46.rs:77:30-77:31)
  4: _7 = const ()
    SourceInfo(idna/src/uts46.rs:76:39-78:10)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:76:9-78:10)
      kind: goto -> bb10
  }
  preds [bb7]
  succs [bb10]

bb9
  0: StorageDead(_11)
    SourceInfo(idna/src/uts46.rs:76:37-76:38)
  1: _7 = const ()
    SourceInfo(idna/src/uts46.rs:78:10-78:10)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:76:9-78:10)
      kind: goto -> bb10
  }
  preds [bb5]
  succs [bb10]

bb10
  0: StorageDead(_10)
    SourceInfo(idna/src/uts46.rs:78:9-78:10)
  1: StorageDead(_8)
    SourceInfo(idna/src/uts46.rs:78:9-78:10)
  2: StorageDead(_7)
    SourceInfo(idna/src/uts46.rs:78:9-78:10)
  3: _15 = AddWithOverflow(_2, const 1_u8)
    SourceInfo(idna/src/uts46.rs:79:9-79:15)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:79:9-79:15)
      kind: assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", _2, const 1_u8) -> [success: bb11, unwind: bb13]
  }
  preds [bb8, bb9]
  succs [bb11, bb13]

bb11
  0: _2 = move (_15.0: u8)
    SourceInfo(idna/src/uts46.rs:79:9-79:15)
  1: _4 = const ()
    SourceInfo(idna/src/uts46.rs:75:19-80:6)
  2: StorageDead(_5)
    SourceInfo(idna/src/uts46.rs:80:5-80:6)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:75:5-80:6)
      kind: goto -> bb1
  }
  preds [bb10]
  succs [bb1]

bb12
  0: StorageDead(_6)
    SourceInfo(idna/src/uts46.rs:75:17-75:18)
  1: StorageLive(_17)
    SourceInfo(idna/src/uts46.rs:75:5-80:6)
  2: _3 = const ()
    SourceInfo(idna/src/uts46.rs:75:5-80:6)
  3: StorageDead(_17)
    SourceInfo(idna/src/uts46.rs:80:5-80:6)
  4: StorageDead(_5)
    SourceInfo(idna/src/uts46.rs:80:5-80:6)
  5: StorageDead(_3)
    SourceInfo(idna/src/uts46.rs:80:5-80:6)
  6: _0 = _1
    SourceInfo(idna/src/uts46.rs:81:5-81:9)
  7: StorageDead(_2)
    SourceInfo(idna/src/uts46.rs:82:1-82:2)
  8: StorageDead(_1)
    SourceInfo(idna/src/uts46.rs:82:1-82:2)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:82:2-82:2)
      kind: return
  }
  preds [bb2]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:72:1-82:2)
      kind: resume
  }
  preds [bb1, bb7, bb10]
  succs []

