bb0
  0: StorageLive(_2)
    SourceInfo(idna/src/punycode.rs:116:13-116:17)
  1: _2 = (*_1)
    SourceInfo(idna/src/punycode.rs:116:20-116:25)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(idna/src/punycode.rs:116:13-116:17)
  3: StorageLive(_3)
    SourceInfo(idna/src/punycode.rs:117:14-122:17)
  4: StorageLive(_4)
    SourceInfo(idna/src/punycode.rs:117:14-122:10)
  5: PlaceMention(_2)
    SourceInfo(idna/src/punycode.rs:117:20-117:24)
  6: _9 = Le(const 48_u8, _2)
    SourceInfo(idna/src/punycode.rs:118:20-118:31)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:118:20-118:31)
      kind: switchInt(move _9) -> [0: bb3, otherwise: bb9]
  }
  preds []
  succs [bb3, bb9]

bb1
  0: _0 = core::option::Option::<u32>::None
    SourceInfo(idna/src/punycode.rs:121:25-121:29)
  1: StorageDead(_4)
    SourceInfo(idna/src/punycode.rs:122:16-122:17)
  2: StorageDead(_3)
    SourceInfo(idna/src/punycode.rs:122:17-122:18)
  3: StorageDead(_2)
    SourceInfo(idna/src/punycode.rs:123:5-123:6)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:123:6-123:6)
      kind: goto -> bb18
  }
  preds [bb5, bb6, bb7]
  succs [bb18]

bb2
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:118:13-118:17)
      kind: falseEdge -> [real: bb10, imaginary: bb3]
  }
  preds [bb9]
  succs [bb3, bb10]

bb3
  0: _7 = Le(const 65_u8, _2)
    SourceInfo(idna/src/punycode.rs:119:20-119:31)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:119:20-119:31)
      kind: switchInt(move _7) -> [0: bb5, otherwise: bb8]
  }
  preds [bb0, bb2, bb9]
  succs [bb5, bb8]

bb4
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:119:13-119:17)
      kind: falseEdge -> [real: bb13, imaginary: bb5]
  }
  preds [bb8]
  succs [bb5, bb13]

bb5
  0: _5 = Le(const 97_u8, _2)
    SourceInfo(idna/src/punycode.rs:120:20-120:31)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:120:20-120:31)
      kind: switchInt(move _5) -> [0: bb1, otherwise: bb7]
  }
  preds [bb3, bb4, bb8]
  succs [bb1, bb7]

bb6
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:120:13-120:17)
      kind: falseEdge -> [real: bb15, imaginary: bb1]
  }
  preds [bb7]
  succs [bb1, bb15]

bb7
  0: _6 = Le(_2, const 122_u8)
    SourceInfo(idna/src/punycode.rs:120:20-120:31)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:120:20-120:31)
      kind: switchInt(move _6) -> [0: bb1, otherwise: bb6]
  }
  preds [bb5]
  succs [bb1, bb6]

bb8
  0: _8 = Le(_2, const 90_u8)
    SourceInfo(idna/src/punycode.rs:119:20-119:31)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:119:20-119:31)
      kind: switchInt(move _8) -> [0: bb5, otherwise: bb4]
  }
  preds [bb3]
  succs [bb4, bb5]

bb9
  0: _10 = Le(_2, const 57_u8)
    SourceInfo(idna/src/punycode.rs:118:20-118:31)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:118:20-118:31)
      kind: switchInt(move _10) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb10
  0: StorageLive(_11)
    SourceInfo(idna/src/punycode.rs:118:13-118:17)
  1: _11 = _2
    SourceInfo(idna/src/punycode.rs:118:13-118:17)
  2: StorageLive(_12)
    SourceInfo(idna/src/punycode.rs:118:35-118:46)
  3: StorageLive(_13)
    SourceInfo(idna/src/punycode.rs:118:35-118:39)
  4: _13 = _11
    SourceInfo(idna/src/punycode.rs:118:35-118:39)
  5: _14 = SubWithOverflow(_13, const 48_u8)
    SourceInfo(idna/src/punycode.rs:118:35-118:46)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:118:35-118:46)
      kind: assert(!move (_14.1: bool), "attempt to compute `{} - {}`, which would overflow", move _13, const 48_u8) -> [success: bb11, unwind: bb19]
  }
  preds [bb2]
  succs [bb11, bb19]

bb11
  0: _12 = move (_14.0: u8)
    SourceInfo(idna/src/punycode.rs:118:35-118:46)
  1: StorageDead(_13)
    SourceInfo(idna/src/punycode.rs:118:45-118:46)
  2: _15 = AddWithOverflow(_12, const 26_u8)
    SourceInfo(idna/src/punycode.rs:118:35-118:51)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:118:35-118:51)
      kind: assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", move _12, const 26_u8) -> [success: bb12, unwind: bb19]
  }
  preds [bb10]
  succs [bb12, bb19]

bb12
  0: _4 = move (_15.0: u8)
    SourceInfo(idna/src/punycode.rs:118:35-118:51)
  1: StorageDead(_12)
    SourceInfo(idna/src/punycode.rs:118:50-118:51)
  2: StorageDead(_11)
    SourceInfo(idna/src/punycode.rs:118:50-118:51)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:118:50-118:51)
      kind: goto -> bb17
  }
  preds [bb11]
  succs [bb17]

bb13
  0: StorageLive(_16)
    SourceInfo(idna/src/punycode.rs:119:13-119:17)
  1: _16 = _2
    SourceInfo(idna/src/punycode.rs:119:13-119:17)
  2: StorageLive(_17)
    SourceInfo(idna/src/punycode.rs:119:35-119:39)
  3: _17 = _16
    SourceInfo(idna/src/punycode.rs:119:35-119:39)
  4: _18 = SubWithOverflow(_17, const 65_u8)
    SourceInfo(idna/src/punycode.rs:119:35-119:46)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:119:35-119:46)
      kind: assert(!move (_18.1: bool), "attempt to compute `{} - {}`, which would overflow", move _17, const 65_u8) -> [success: bb14, unwind: bb19]
  }
  preds [bb4]
  succs [bb14, bb19]

bb14
  0: _4 = move (_18.0: u8)
    SourceInfo(idna/src/punycode.rs:119:35-119:46)
  1: StorageDead(_17)
    SourceInfo(idna/src/punycode.rs:119:45-119:46)
  2: StorageDead(_16)
    SourceInfo(idna/src/punycode.rs:119:45-119:46)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:119:45-119:46)
      kind: goto -> bb17
  }
  preds [bb13]
  succs [bb17]

bb15
  0: StorageLive(_19)
    SourceInfo(idna/src/punycode.rs:120:13-120:17)
  1: _19 = _2
    SourceInfo(idna/src/punycode.rs:120:13-120:17)
  2: StorageLive(_20)
    SourceInfo(idna/src/punycode.rs:120:35-120:39)
  3: _20 = _19
    SourceInfo(idna/src/punycode.rs:120:35-120:39)
  4: _21 = SubWithOverflow(_20, const 97_u8)
    SourceInfo(idna/src/punycode.rs:120:35-120:46)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:120:35-120:46)
      kind: assert(!move (_21.1: bool), "attempt to compute `{} - {}`, which would overflow", move _20, const 97_u8) -> [success: bb16, unwind: bb19]
  }
  preds [bb6]
  succs [bb16, bb19]

bb16
  0: _4 = move (_21.0: u8)
    SourceInfo(idna/src/punycode.rs:120:35-120:46)
  1: StorageDead(_20)
    SourceInfo(idna/src/punycode.rs:120:45-120:46)
  2: StorageDead(_19)
    SourceInfo(idna/src/punycode.rs:120:45-120:46)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:120:45-120:46)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  0: _3 = move _4 as u32 (IntToInt)
    SourceInfo(idna/src/punycode.rs:117:14-122:17)
  1: StorageDead(_4)
    SourceInfo(idna/src/punycode.rs:122:16-122:17)
  2: _0 = core::option::Option::<u32>::Some(move _3)
    SourceInfo(idna/src/punycode.rs:117:9-122:18)
  3: StorageDead(_3)
    SourceInfo(idna/src/punycode.rs:122:17-122:18)
  4: StorageDead(_2)
    SourceInfo(idna/src/punycode.rs:123:5-123:6)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:123:6-123:6)
      kind: goto -> bb18
  }
  preds [bb12, bb14, bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:123:6-123:6)
      kind: return
  }
  preds [bb1, bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:115:5-123:6)
      kind: resume
  }
  preds [bb10, bb11, bb13, bb15]
  succs []

