bb0
  0: PlaceMention(_1)
    SourceInfo(idna/src/punycode.rs:459:11-459:16)
  1: _4 = Le(const 0_u32, _1)
    SourceInfo(idna/src/punycode.rs:460:9-460:15)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:460:9-460:15)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb6]
  }
  preds []
  succs [bb3, bb6]

bb1
  0: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:27:9-27:51)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:27:9-27:51)
      kind: _16 = core::panicking::panic(const "explicit panic") -> bb13
  }
  preds [bb3, bb4, bb5]
  succs [bb13]

bb2
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:460:9-460:15)
      kind: falseEdge -> [real: bb7, imaginary: bb3]
  }
  preds [bb6]
  succs [bb3, bb7]

bb3
  0: _2 = Le(const 26_u32, _1)
    SourceInfo(idna/src/punycode.rs:461:9-461:16)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:461:9-461:16)
      kind: switchInt(move _2) -> [0: bb1, otherwise: bb5]
  }
  preds [bb0, bb2, bb6]
  succs [bb1, bb5]

bb4
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:461:9-461:16)
      kind: falseEdge -> [real: bb9, imaginary: bb1]
  }
  preds [bb5]
  succs [bb1, bb9]

bb5
  0: _3 = Le(_1, const 35_u32)
    SourceInfo(idna/src/punycode.rs:461:9-461:16)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:461:9-461:16)
      kind: switchInt(move _3) -> [0: bb1, otherwise: bb4]
  }
  preds [bb3]
  succs [bb1, bb4]

bb6
  0: _5 = Le(_1, const 25_u32)
    SourceInfo(idna/src/punycode.rs:460:9-460:15)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:460:9-460:15)
      kind: switchInt(move _5) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb7
  0: StorageLive(_6)
    SourceInfo(idna/src/punycode.rs:460:19-460:39)
  1: StorageLive(_7)
    SourceInfo(idna/src/punycode.rs:460:20-460:31)
  2: StorageLive(_8)
    SourceInfo(idna/src/punycode.rs:460:20-460:25)
  3: _8 = _1
    SourceInfo(idna/src/punycode.rs:460:20-460:25)
  4: _7 = move _8 as u8 (IntToInt)
    SourceInfo(idna/src/punycode.rs:460:20-460:31)
  5: StorageDead(_8)
    SourceInfo(idna/src/punycode.rs:460:30-460:31)
  6: _9 = AddWithOverflow(_7, const 97_u8)
    SourceInfo(idna/src/punycode.rs:460:19-460:39)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:460:19-460:39)
      kind: assert(!move (_9.1: bool), "attempt to compute `{} + {}`, which would overflow", move _7, const 97_u8) -> [success: bb8, unwind: bb13]
  }
  preds [bb2]
  succs [bb8, bb13]

bb8
  0: _6 = move (_9.0: u8)
    SourceInfo(idna/src/punycode.rs:460:19-460:39)
  1: StorageDead(_7)
    SourceInfo(idna/src/punycode.rs:460:38-460:39)
  2: _0 = move _6 as char (IntToInt)
    SourceInfo(idna/src/punycode.rs:460:19-460:47)
  3: StorageDead(_6)
    SourceInfo(idna/src/punycode.rs:460:46-460:47)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:460:46-460:47)
      kind: goto -> bb12
  }
  preds [bb7]
  succs [bb12]

bb9
  0: StorageLive(_10)
    SourceInfo(idna/src/punycode.rs:461:20-461:45)
  1: StorageLive(_11)
    SourceInfo(idna/src/punycode.rs:461:21-461:37)
  2: StorageLive(_12)
    SourceInfo(idna/src/punycode.rs:461:21-461:32)
  3: StorageLive(_13)
    SourceInfo(idna/src/punycode.rs:461:21-461:26)
  4: _13 = _1
    SourceInfo(idna/src/punycode.rs:461:21-461:26)
  5: _12 = move _13 as u8 (IntToInt)
    SourceInfo(idna/src/punycode.rs:461:21-461:32)
  6: StorageDead(_13)
    SourceInfo(idna/src/punycode.rs:461:31-461:32)
  7: _14 = SubWithOverflow(_12, const 26_u8)
    SourceInfo(idna/src/punycode.rs:461:21-461:37)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:461:21-461:37)
      kind: assert(!move (_14.1: bool), "attempt to compute `{} - {}`, which would overflow", move _12, const 26_u8) -> [success: bb10, unwind: bb13]
  }
  preds [bb4]
  succs [bb10, bb13]

bb10
  0: _11 = move (_14.0: u8)
    SourceInfo(idna/src/punycode.rs:461:21-461:37)
  1: StorageDead(_12)
    SourceInfo(idna/src/punycode.rs:461:36-461:37)
  2: _15 = AddWithOverflow(_11, const 48_u8)
    SourceInfo(idna/src/punycode.rs:461:20-461:45)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:461:20-461:45)
      kind: assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", move _11, const 48_u8) -> [success: bb11, unwind: bb13]
  }
  preds [bb9]
  succs [bb11, bb13]

bb11
  0: _10 = move (_15.0: u8)
    SourceInfo(idna/src/punycode.rs:461:20-461:45)
  1: StorageDead(_11)
    SourceInfo(idna/src/punycode.rs:461:44-461:45)
  2: _0 = move _10 as char (IntToInt)
    SourceInfo(idna/src/punycode.rs:461:20-461:53)
  3: StorageDead(_10)
    SourceInfo(idna/src/punycode.rs:461:52-461:53)
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:461:52-461:53)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:464:2-464:2)
      kind: return
  }
  preds [bb8, bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(idna/src/punycode.rs:458:1-464:2)
      kind: resume
  }
  preds [bb1, bb7, bb9, bb10]
  succs []

