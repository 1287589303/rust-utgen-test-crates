bb0
  0: StorageLive(_3)
    SourceInfo(idna/src/uts46.rs:221:5-223:6)
  1: StorageLive(_4)
    SourceInfo(idna/src/uts46.rs:221:8-221:39)
  2: StorageLive(_5)
    SourceInfo(idna/src/uts46.rs:221:8-221:34)
  3: StorageLive(_6)
    SourceInfo(idna/src/uts46.rs:221:9-221:18)
  4: _6 = _2
    SourceInfo(idna/src/uts46.rs:221:9-221:18)
  5: StorageLive(_7)
    SourceInfo(idna/src/uts46.rs:221:21-221:33)
  6: StorageLive(_8)
    SourceInfo(idna/src/uts46.rs:221:31-221:32)
  7: _8 = _1
    SourceInfo(idna/src/uts46.rs:221:31-221:32)
  8: _9 = Lt(_8, const 128_u8)
    SourceInfo(idna/src/uts46.rs:221:21-221:33)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:221:21-221:33)
      kind: assert(move _9, "attempt to shift left by `{}`, which would overflow", _8) -> [success: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  0: _7 = Shl(const 1_u128, move _8)
    SourceInfo(idna/src/uts46.rs:221:21-221:33)
  1: StorageDead(_8)
    SourceInfo(idna/src/uts46.rs:221:32-221:33)
  2: _5 = BitAnd(move _6, move _7)
    SourceInfo(idna/src/uts46.rs:221:8-221:34)
  3: StorageDead(_7)
    SourceInfo(idna/src/uts46.rs:221:33-221:34)
  4: StorageDead(_6)
    SourceInfo(idna/src/uts46.rs:221:33-221:34)
  5: _4 = Eq(move _5, const 0_u128)
    SourceInfo(idna/src/uts46.rs:221:8-221:39)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:221:8-221:39)
      kind: switchInt(move _4) -> [0: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_5)
    SourceInfo(idna/src/uts46.rs:221:38-221:39)
  1: StorageLive(_11)
    SourceInfo(idna/src/uts46.rs:222:27-222:28)
  2: _11 = _1
    SourceInfo(idna/src/uts46.rs:222:27-222:28)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:222:16-222:29)
      kind: _0 = <char as core::convert::From<u8>>::from(move _11) -> [return: bb3, unwind: bb11]
  }
  preds [bb1]
  succs [bb3, bb11]

bb3
  0: StorageDead(_11)
    SourceInfo(idna/src/uts46.rs:222:28-222:29)
  1: StorageDead(_4)
    SourceInfo(idna/src/uts46.rs:223:5-223:6)
  2: StorageDead(_3)
    SourceInfo(idna/src/uts46.rs:223:5-223:6)
  Terminator {
      source_info: SourceInfo(idna/src/lib.rs:1:1-1:1)
      kind: goto -> bb10
  }
  preds [bb2]
  succs [bb10]

bb4
  0: StorageDead(_5)
    SourceInfo(idna/src/uts46.rs:221:38-221:39)
  1: _3 = const ()
    SourceInfo(idna/src/uts46.rs:223:6-223:6)
  2: StorageDead(_4)
    SourceInfo(idna/src/uts46.rs:223:5-223:6)
  3: StorageDead(_3)
    SourceInfo(idna/src/uts46.rs:223:5-223:6)
  4: StorageLive(_12)
    SourceInfo(idna/src/uts46.rs:224:5-226:6)
  5: StorageLive(_13)
    SourceInfo(idna/src/uts46.rs:224:8-224:42)
  6: StorageLive(_14)
    SourceInfo(idna/src/uts46.rs:224:28-224:29)
  7: _14 = _1
    SourceInfo(idna/src/uts46.rs:224:28-224:29)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:224:8-224:42)
      kind: _13 = uts46::in_inclusive_range8(move _14, const 65_u8, const 90_u8) -> [return: bb5, unwind: bb11]
  }
  preds [bb1]
  succs [bb5, bb11]

bb5
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:224:8-224:42)
      kind: switchInt(move _13) -> [0: bb9, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: StorageDead(_14)
    SourceInfo(idna/src/uts46.rs:224:41-224:42)
  1: StorageLive(_16)
    SourceInfo(idna/src/uts46.rs:225:27-225:35)
  2: StorageLive(_17)
    SourceInfo(idna/src/uts46.rs:225:27-225:28)
  3: _17 = _1
    SourceInfo(idna/src/uts46.rs:225:27-225:28)
  4: _18 = AddWithOverflow(_17, const 32_u8)
    SourceInfo(idna/src/uts46.rs:225:27-225:35)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:225:27-225:35)
      kind: assert(!move (_18.1: bool), "attempt to compute `{} + {}`, which would overflow", move _17, const 32_u8) -> [success: bb7, unwind: bb11]
  }
  preds [bb5]
  succs [bb7, bb11]

bb7
  0: _16 = move (_18.0: u8)
    SourceInfo(idna/src/uts46.rs:225:27-225:35)
  1: StorageDead(_17)
    SourceInfo(idna/src/uts46.rs:225:34-225:35)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:225:16-225:36)
      kind: _0 = <char as core::convert::From<u8>>::from(move _16) -> [return: bb8, unwind: bb11]
  }
  preds [bb6]
  succs [bb8, bb11]

bb8
  0: StorageDead(_16)
    SourceInfo(idna/src/uts46.rs:225:35-225:36)
  1: StorageDead(_13)
    SourceInfo(idna/src/uts46.rs:226:5-226:6)
  2: StorageDead(_12)
    SourceInfo(idna/src/uts46.rs:226:5-226:6)
  Terminator {
      source_info: SourceInfo(idna/src/lib.rs:1:1-1:1)
      kind: goto -> bb10
  }
  preds [bb7]
  succs [bb10]

bb9
  0: StorageDead(_14)
    SourceInfo(idna/src/uts46.rs:224:41-224:42)
  1: _12 = const ()
    SourceInfo(idna/src/uts46.rs:226:6-226:6)
  2: StorageDead(_13)
    SourceInfo(idna/src/uts46.rs:226:5-226:6)
  3: StorageDead(_12)
    SourceInfo(idna/src/uts46.rs:226:5-226:6)
  4: _0 = const 'ï¿½'
    SourceInfo(idna/src/uts46.rs:227:5-227:15)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:228:2-228:2)
      kind: goto -> bb10
  }
  preds [bb5]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:228:2-228:2)
      kind: return
  }
  preds [bb3, bb8, bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:220:1-228:2)
      kind: resume
  }
  preds [bb0, bb2, bb4, bb6, bb7]
  succs []

