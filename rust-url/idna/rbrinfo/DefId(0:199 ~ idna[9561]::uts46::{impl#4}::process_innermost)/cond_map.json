{
  "idna/src/uts46.rs:1285:51:1286:44": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "current_label_start\n                                        + 4",
          "lhs": "current_label_start",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "idna/src/uts46.rs:1393:33:1393:72": [
    {
      "Bool": {
        "Other": "last_mask.intersects(last_bc.to_mask())"
      }
    }
  ],
  "idna/src/uts46.rs:1278:36:1278:77": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "domain_buffer.len() - current_label_start",
          "lhs": "domain_buffer.len()",
          "rhs": "current_label_start",
          "cmp_with_int": false
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9:48:10": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ],
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "idna/src/uts46.rs:1246:42:1246:93": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "domain_buffer[current_label_start + 4..].iter_mut()"
      }
    }
  ],
  "idna/src/uts46.rs:1247:41:1247:53": [
    {
      "Bool": {
        "Other": "c.is_ascii()"
      }
    }
  ],
  "idna/src/uts46.rs:1242:32:1243:68": [
    {
      "Bool": {
        "Other": "domain_buffer[current_label_start..]\n                                .starts_with(&['x', 'n', '-', '-'])"
      }
    }
  ],
  "idna/src/uts46.rs:1441:56:1441:65": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1305:44:1312:42": [
    {
      "Bool": {
        "Other": "self.after_punycode_decode(\n                                            domain_buffer,\n                                            current_label_start,\n                                            &label_buffer,\n                                            deny_list_deny_dot,\n                                            fail_fast,\n                                            &mut had_errors,\n                                        )"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12:346:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "idna/src/uts46.rs:1440:52:1440:75": [
    {
      "Bool": {
        "Other": "bc.is_european_number()"
      }
    }
  ],
  "idna/src/uts46.rs:1224:46:1224:56": [
    {
      "Bool": {
        "Other": "had_errors"
      }
    }
  ],
  "idna/src/uts46.rs:1188:35:1188:44": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1278:36:1278:81": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "domain_buffer.len() - current_label_start - 4",
          "lhs": "domain_buffer.len() - current_label_start",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "idna/src/uts46.rs:1422:47:1422:60": [
    {
      "Match": {
        "match_source": "idna/src/uts46.rs:1422:47:1422:60",
        "match_str": "numeral_state",
        "match_kind": {
          "Enum": [
            "Undecided",
            "European",
            "Arabic"
          ]
        },
        "arms": {
          "idna/src/uts46.rs:1430:45:1430:70": {
            "pat": {
              "pat_str": "RtlNumeralState::European",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "idna/src/uts46.rs:1430:74:1438:46"
          },
          "idna/src/uts46.rs:1423:45:1423:71": {
            "pat": {
              "pat_str": "RtlNumeralState::Undecided",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "idna/src/uts46.rs:1423:75:1429:46"
          },
          "idna/src/uts46.rs:1439:45:1439:68": {
            "pat": {
              "pat_str": "RtlNumeralState::Arabic",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "idna/src/uts46.rs:1439:72:1447:46"
          }
        }
      }
    }
  ],
  "idna/src/uts46.rs:1133:24:1133:50": [
    {
      "Bool": {
        "Other": "has_punycode_prefix(ascii)"
      }
    }
  ],
  "idna/src/uts46.rs:1248:44:1248:53": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1096:22:1096:48": [
    {
      "For": {
        "iter_var": "label",
        "iter_range": "tail.split(|b| *b == b'.')"
      }
    }
  ],
  "idna/src/uts46.rs:1213:20:1213:44": [
    {
      "Bool": {
        "Other": "non_punycode_ascii_label"
      }
    }
  ],
  "idna/src/uts46.rs:1264:44:1264:53": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1217:29:1217:63": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "hyphens == Hyphens::CheckFirstLast",
          "lhs": "hyphens",
          "rhs": "Hyphens::CheckFirstLast",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:1278:36:1279:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "domain_buffer.len() - current_label_start - 4\n                                    > PUNYCODE_DECODE_MAX_INPUT_LENGTH",
          "lhs": "domain_buffer.len() - current_label_start - 4",
          "rhs": "PUNYCODE_DECODE_MAX_INPUT_LENGTH",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:1135:32:1135:85": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "(ascii.len() - 4 <= PUNYCODE_DECODE_MAX_INPUT_LENGTH)",
          "lhs": "ascii.len() - 4",
          "rhs": "PUNYCODE_DECODE_MAX_INPUT_LENGTH",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:1372:25:1372:69": [
    {
      "Bool": {
        "Other": "FIRST_BC_MASK.intersects(first_bc.to_mask())"
      }
    }
  ],
  "idna/src/uts46.rs:1426:59:1426:80": [
    {
      "Bool": {
        "Other": "bc.is_arabic_number()"
      }
    }
  ],
  "idna/src/uts46.rs:1168:36:1168:45": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1374:28:1374:37": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1285:51:1287:75": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "current_label_start\n                                        + 4\n                                        + PUNYCODE_DECODE_MAX_INPUT_LENGTH",
          "lhs": "current_label_start\n                                        + 4",
          "rhs": "PUNYCODE_DECODE_MAX_INPUT_LENGTH",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:1258:40:1258:52": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "*last == '-'",
          "lhs": "*last",
          "rhs": "'-'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "idna/src/uts46.rs:1351:32:1351:47": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == '\\u{FFFD}'",
          "lhs": "c",
          "rhs": "'\\u{FFFD}'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "idna/src/uts46.rs:1368:12:1368:19": [
    {
      "Bool": {
        "Other": "is_bidi"
      }
    }
  ],
  "idna/src/uts46.rs:1135:33:1135:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "ascii.len() - 4",
          "lhs": "ascii.len()",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "idna/src/uts46.rs:1369:26:1369:64": [
    {
      "For": {
        "iter_var": "label",
        "iter_range": "domain_buffer.split_mut(|c| *c == '.')"
      }
    }
  ],
  "idna/src/uts46.rs:1215:28:1220:26": [
    {
      "Bool": {
        "Other": "check_hyphens(\n                            &mut domain_buffer[current_label_start..],\n                            hyphens == Hyphens::CheckFirstLast,\n                            fail_fast,\n                            &mut had_errors,\n                        )"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ],
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "idna/src/uts46.rs:1432:56:1432:65": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1200:26:1204:19": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "ascii.iter().map(|c| {\n                    // Can't have dot here, so `deny_list` vs `deny_list_deny_dot` does\n                    // not matter.\n                    apply_ascii_deny_list_to_potentially_upper_case_ascii(*c, deny_list)\n                })"
      }
    }
  ],
  "idna/src/uts46.rs:1416:44:1416:53": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1317:44:1317:53": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1214:24:1214:49": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "hyphens != Hyphens::Allow",
          "lhs": "hyphens",
          "rhs": "Hyphens::Allow",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:1156:36:1163:34": [
    {
      "Bool": {
        "Other": "self.check_label(\n                                    hyphens,\n                                    &mut domain_buffer[current_label_start..],\n                                    fail_fast,\n                                    &mut had_errors,\n                                    true,\n                                    true,\n                                )"
      }
    }
  ],
  "idna/src/uts46.rs:1090:37:1090:67": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "domain_name.len() - tail.len()",
          "lhs": "domain_name.len()",
          "rhs": "tail.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:1086:34:1086:54": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "deny_list | DOT_MASK",
          "lhs": "deny_list",
          "rhs": "DOT_MASK",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:1400:32:1400:38": [
    {
      "Bool": {
        "Other": "is_ltr"
      }
    }
  ],
  "idna/src/uts46.rs:1130:17:1130:33": [
    {
      "Bool": {
        "Other": "label.is_empty()"
      }
    }
  ],
  "idna/src/uts46.rs:1394:36:1394:45": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1403:41:1403:81": [
    {
      "Bool": {
        "Other": "MIDDLE_LTR_MASK.intersects(bc.to_mask())"
      }
    }
  ],
  "idna/src/uts46.rs:1205:24:1205:39": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == '\\u{FFFD}'",
          "lhs": "c",
          "rhs": "'\\u{FFFD}'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "idna/src/uts46.rs:1454:44:1454:72": [
    {
      "Bool": {
        "Other": "last_bc.is_european_number()"
      }
    }
  ],
  "idna/src/uts46.rs:1341:32:1341:43": [
    {
      "Bool": {
        "Other": "n.is_none()"
      }
    }
  ],
  "idna/src/uts46.rs:1452:40:1452:66": [
    {
      "Bool": {
        "Other": "last_bc.is_arabic_number()"
      }
    }
  ],
  "idna/src/uts46.rs:1352:36:1352:45": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1456:40:1456:49": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1392:48:1392:54": [
    {
      "Bool": {
        "Other": "is_ltr"
      }
    }
  ],
  "idna/src/uts46.rs:1388:32:1388:60": [
    {
      "Bool": {
        "Other": "last_bc.is_nonspacing_mark()"
      }
    }
  ],
  "idna/src/uts46.rs:1401:42:1401:58": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "prior.iter_mut()"
      }
    }
  ],
  "idna/src/uts46.rs:1119:16:1119:26": [
    {
      "Bool": {
        "Other": "seen_label"
      }
    }
  ],
  "idna/src/uts46.rs:1257:36:1257:77": [
    {
      "Bool": {
        "Other": "let Some(last) = domain_buffer.last_mut()"
      }
    }
  ],
  "idna/src/uts46.rs:1451:37:1451:79": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "numeral_state == RtlNumeralState::European",
          "lhs": "numeral_state",
          "rhs": "RtlNumeralState::European",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:1404:44:1404:53": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1240:27:1240:28": [
    {
      "Match": {
        "match_source": "idna/src/uts46.rs:1240:27:1240:28",
        "match_str": "n",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "idna/src/uts46.rs:1241:32:1241:41": {
            "pat": {
              "pat_str": "Some('.')",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "idna/src/uts46.rs:1241:45:1349:26"
          },
          "idna/src/uts46.rs:1350:25:1350:32": {
            "pat": {
              "pat_str": "Some(c)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "idna/src/uts46.rs:1350:36:1358:26"
          },
          "idna/src/uts46.rs:1241:25:1241:29": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "idna/src/uts46.rs:1241:45:1349:26"
          }
        }
      }
    }
  ],
  "idna/src/uts46.rs:1132:51:1132:71": [
    {
      "Bool": {
        "Other": "non_ascii.is_empty()"
      }
    }
  ],
  "idna/src/uts46.rs:1137:32:1138:93": [
    {
      "Bool": {
        "Other": "let Ok(decode) =\n                                Decoder::default().decode::<u8, InternalCaller>(&ascii[4..])"
      }
    }
  ],
  "idna/src/uts46.rs:1431:52:1431:73": [
    {
      "Bool": {
        "Other": "bc.is_arabic_number()"
      }
    }
  ],
  "idna/src/uts46.rs:1120:20:1120:29": [
    {
      "Bool": {
        "Other": "in_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:1330:32:1337:30": [
    {
      "Bool": {
        "Other": "self.check_label(\n                                hyphens,\n                                &mut domain_buffer[current_label_start..],\n                                fail_fast,\n                                &mut had_errors,\n                                first_needs_combining_mark_check,\n                                needs_contextj_check,\n                            )"
      }
    }
  ],
  "idna/src/uts46.rs:1453:41:1453:81": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "numeral_state == RtlNumeralState::Arabic",
          "lhs": "numeral_state",
          "rhs": "RtlNumeralState::Arabic",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:1424:52:1424:75": [
    {
      "Bool": {
        "Other": "bc.is_european_number()"
      }
    }
  ],
  "idna/src/uts46.rs:1206:28:1206:37": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1292:40:1295:42": [
    {
      "Bool": {
        "Other": "let Ok(decode) = Decoder::default()\n                                        .decode::<char, InternalCaller>(\n                                            &domain_buffer[current_label_start + 4..],\n                                        )"
      }
    }
  ],
  "idna/src/uts46.rs:1246:56:1246:79": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "current_label_start + 4",
          "lhs": "current_label_start",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "idna/src/uts46.rs:1291:37:1291:65": [
    {
      "Bool": {
        "Other": "punycode_precondition_failed"
      }
    }
  ],
  "idna/src/uts46.rs:1109:16:1109:25": [
    {
      "Bool": {
        "Other": "in_prefix"
      }
    }
  ],
  "idna/src/uts46.rs:1145:36:1152:34": [
    {
      "Bool": {
        "Other": "self.after_punycode_decode(\n                                    domain_buffer,\n                                    current_label_start,\n                                    &label_buffer,\n                                    deny_list_deny_dot,\n                                    fail_fast,\n                                    &mut had_errors,\n                                )"
      }
    }
  ],
  "idna/src/uts46.rs:1110:20:1110:30": [
    {
      "Bool": {
        "Other": "seen_label"
      }
    }
  ],
  "idna/src/uts46.rs:1386:28:1386:77": [
    {
      "Bool": {
        "Other": "let Some((last, prior)) = middle.split_last_mut()"
      }
    }
  ],
  "idna/src/uts46.rs:1109:29:1109:62": [
    {
      "Bool": {
        "Other": "is_passthrough_ascii_label(label)"
      }
    }
  ],
  "idna/src/uts46.rs:1370:20:1370:69": [
    {
      "Bool": {
        "Other": "let Some((first, tail)) = label.split_first_mut()"
      }
    }
  ],
  "idna/src/uts46.rs:1415:41:1415:81": [
    {
      "Bool": {
        "Other": "MIDDLE_RTL_MASK.intersects(bc.to_mask())"
      }
    }
  ],
  "idna/src/uts46.rs:1281:40:1281:49": [
    {
      "Bool": {
        "Other": "fail_fast"
      }
    }
  ],
  "idna/src/uts46.rs:1413:42:1413:58": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "prior.iter_mut()"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21:40:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "(*left_val == *right_val)",
          "lhs": "*left_val",
          "rhs": "*right_val",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:1134:28:1134:57": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "(ascii.last() != Some(&b'-'))",
          "lhs": "ascii.last()",
          "rhs": "Some(&b'-')",
          "cmp_with_int": false
        }
      }
    }
  ],
  "idna/src/uts46.rs:1294:60:1294:83": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "current_label_start + 4",
          "lhs": "current_label_start",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ]
}