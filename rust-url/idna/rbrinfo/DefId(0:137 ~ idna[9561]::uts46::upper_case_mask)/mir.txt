bb0
  0: StorageLive(_1)
    SourceInfo(idna/src/uts46.rs:57:9-57:17)
  1: _1 = const 0_u128
    SourceInfo(idna/src/uts46.rs:57:20-57:25)
  2: FakeRead(ForLet(None), _1)
    SourceInfo(idna/src/uts46.rs:57:9-57:17)
  3: StorageLive(_2)
    SourceInfo(idna/src/uts46.rs:58:9-58:14)
  4: _2 = const 0_u8
    SourceInfo(idna/src/uts46.rs:58:17-58:20)
  5: FakeRead(ForLet(None), _2)
    SourceInfo(idna/src/uts46.rs:58:9-58:14)
  6: StorageLive(_3)
    SourceInfo(idna/src/uts46.rs:59:5-64:6)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:59:5-64:6)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:59:5-64:6)
      kind: falseUnwind -> [real: bb2, unwind: bb13]
  }
  preds [bb0, bb11]
  succs [bb2, bb13]

bb2
  0: StorageLive(_5)
    SourceInfo(idna/src/uts46.rs:59:11-59:18)
  1: StorageLive(_6)
    SourceInfo(idna/src/uts46.rs:59:11-59:12)
  2: _6 = _2
    SourceInfo(idna/src/uts46.rs:59:11-59:12)
  3: _5 = Lt(move _6, const 128_u8)
    SourceInfo(idna/src/uts46.rs:59:11-59:18)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:59:11-59:18)
      kind: switchInt(move _5) -> [0: bb12, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb12]

bb3
  0: StorageDead(_6)
    SourceInfo(idna/src/uts46.rs:59:17-59:18)
  1: StorageLive(_7)
    SourceInfo(idna/src/uts46.rs:60:9-62:10)
  2: StorageLive(_8)
    SourceInfo(idna/src/uts46.rs:60:12-60:23)
  3: StorageLive(_9)
    SourceInfo(idna/src/uts46.rs:60:13-60:14)
  4: _9 = _2
    SourceInfo(idna/src/uts46.rs:60:13-60:14)
  5: _8 = Ge(move _9, const 65_u8)
    SourceInfo(idna/src/uts46.rs:60:12-60:23)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:60:12-60:23)
      kind: switchInt(move _8) -> [0: bb8, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_9)
    SourceInfo(idna/src/uts46.rs:60:22-60:23)
  1: StorageLive(_10)
    SourceInfo(idna/src/uts46.rs:60:27-60:38)
  2: StorageLive(_11)
    SourceInfo(idna/src/uts46.rs:60:28-60:29)
  3: _11 = _2
    SourceInfo(idna/src/uts46.rs:60:28-60:29)
  4: _10 = Le(move _11, const 90_u8)
    SourceInfo(idna/src/uts46.rs:60:27-60:38)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:60:27-60:38)
      kind: switchInt(move _10) -> [0: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_11)
    SourceInfo(idna/src/uts46.rs:60:37-60:38)
  1: StorageLive(_12)
    SourceInfo(idna/src/uts46.rs:61:21-61:31)
  2: StorageLive(_13)
    SourceInfo(idna/src/uts46.rs:61:30-61:31)
  3: _13 = _2
    SourceInfo(idna/src/uts46.rs:61:30-61:31)
  4: _14 = Lt(_13, const 128_u8)
    SourceInfo(idna/src/uts46.rs:61:21-61:31)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:61:21-61:31)
      kind: assert(move _14, "attempt to shift left by `{}`, which would overflow", _13) -> [success: bb6, unwind: bb13]
  }
  preds [bb4]
  succs [bb6, bb13]

bb6
  0: _12 = Shl(const 1_u128, move _13)
    SourceInfo(idna/src/uts46.rs:61:21-61:31)
  1: StorageDead(_13)
    SourceInfo(idna/src/uts46.rs:61:30-61:31)
  2: _1 = BitOr(_1, move _12)
    SourceInfo(idna/src/uts46.rs:61:13-61:31)
  3: StorageDead(_12)
    SourceInfo(idna/src/uts46.rs:61:30-61:31)
  4: _7 = const ()
    SourceInfo(idna/src/uts46.rs:60:39-62:10)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:60:9-62:10)
      kind: goto -> bb10
  }
  preds [bb5]
  succs [bb10]

bb7
  0: StorageDead(_11)
    SourceInfo(idna/src/uts46.rs:60:37-60:38)
  Terminator {
      source_info: SourceInfo(idna/src/lib.rs:1:1-1:1)
      kind: goto -> bb9
  }
  preds [bb4]
  succs [bb9]

bb8
  0: StorageDead(_9)
    SourceInfo(idna/src/uts46.rs:60:22-60:23)
  Terminator {
      source_info: SourceInfo(idna/src/lib.rs:1:1-1:1)
      kind: goto -> bb9
  }
  preds [bb3]
  succs [bb9]

bb9
  0: _7 = const ()
    SourceInfo(idna/src/uts46.rs:62:10-62:10)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:60:9-62:10)
      kind: goto -> bb10
  }
  preds [bb7, bb8]
  succs [bb10]

bb10
  0: StorageDead(_10)
    SourceInfo(idna/src/uts46.rs:62:9-62:10)
  1: StorageDead(_8)
    SourceInfo(idna/src/uts46.rs:62:9-62:10)
  2: StorageDead(_7)
    SourceInfo(idna/src/uts46.rs:62:9-62:10)
  3: _15 = AddWithOverflow(_2, const 1_u8)
    SourceInfo(idna/src/uts46.rs:63:9-63:15)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:63:9-63:15)
      kind: assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", _2, const 1_u8) -> [success: bb11, unwind: bb13]
  }
  preds [bb6, bb9]
  succs [bb11, bb13]

bb11
  0: _2 = move (_15.0: u8)
    SourceInfo(idna/src/uts46.rs:63:9-63:15)
  1: _4 = const ()
    SourceInfo(idna/src/uts46.rs:59:19-64:6)
  2: StorageDead(_5)
    SourceInfo(idna/src/uts46.rs:64:5-64:6)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:59:5-64:6)
      kind: goto -> bb1
  }
  preds [bb10]
  succs [bb1]

bb12
  0: StorageDead(_6)
    SourceInfo(idna/src/uts46.rs:59:17-59:18)
  1: StorageLive(_17)
    SourceInfo(idna/src/uts46.rs:59:5-64:6)
  2: _3 = const ()
    SourceInfo(idna/src/uts46.rs:59:5-64:6)
  3: StorageDead(_17)
    SourceInfo(idna/src/uts46.rs:64:5-64:6)
  4: StorageDead(_5)
    SourceInfo(idna/src/uts46.rs:64:5-64:6)
  5: StorageDead(_3)
    SourceInfo(idna/src/uts46.rs:64:5-64:6)
  6: _0 = _1
    SourceInfo(idna/src/uts46.rs:65:5-65:9)
  7: StorageDead(_2)
    SourceInfo(idna/src/uts46.rs:66:1-66:2)
  8: StorageDead(_1)
    SourceInfo(idna/src/uts46.rs:66:1-66:2)
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:66:2-66:2)
      kind: return
  }
  preds [bb2]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(idna/src/uts46.rs:56:1-66:2)
      kind: resume
  }
  preds [bb1, bb5, bb10]
  succs []

