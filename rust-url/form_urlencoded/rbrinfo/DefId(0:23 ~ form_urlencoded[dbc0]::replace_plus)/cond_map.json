{
  "form_urlencoded/src/lib.rs:86:20:86:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "*byte == b'+'",
          "lhs": "*byte",
          "rhs": "b'+'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "form_urlencoded/src/lib.rs:85:25:85:60": [
    {
      "For": {
        "iter_var": "byte",
        "iter_range": "&mut replaced[first_position + 1..]"
      }
    }
  ],
  "form_urlencoded/src/lib.rs:85:39:85:57": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "first_position + 1",
          "lhs": "first_position",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "form_urlencoded/src/lib.rs:80:11:80:48": [
    {
      "Match": {
        "match_source": "form_urlencoded/src/lib.rs:80:11:80:48",
        "match_str": "input.iter().position(|&b| b == b'+')",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "form_urlencoded/src/lib.rs:81:9:81:13": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "form_urlencoded/src/lib.rs:81:17:81:37"
          },
          "form_urlencoded/src/lib.rs:82:9:82:29": {
            "pat": {
              "pat_str": "Some(first_position)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "form_urlencoded/src/lib.rs:82:33:91:10"
          }
        }
      }
    }
  ]
}