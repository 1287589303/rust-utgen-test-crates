{
  "form_urlencoded/src/lib.rs:404:11:404:16": [
    {
      "Match": {
        "match_source": "form_urlencoded/src/lib.rs:404:11:404:16",
        "match_str": "input",
        "match_kind": {
          "Enum": [
            "Borrowed",
            "Owned"
          ]
        },
        "arms": {
          "form_urlencoded/src/lib.rs:405:9:405:29": {
            "pat": {
              "pat_str": "Cow::Borrowed(bytes)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "form_urlencoded/src/lib.rs:405:33:405:63"
          },
          "form_urlencoded/src/lib.rs:406:9:406:26": {
            "pat": {
              "pat_str": "Cow::Owned(bytes)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "form_urlencoded/src/lib.rs:406:30:426:10"
          }
        }
      }
    }
  ],
  "form_urlencoded/src/lib.rs:407:19:407:50": [
    {
      "Match": {
        "match_source": "form_urlencoded/src/lib.rs:407:19:407:50",
        "match_str": "String::from_utf8_lossy(&bytes)",
        "match_kind": {
          "Enum": [
            "Borrowed",
            "Owned"
          ]
        },
        "arms": {
          "form_urlencoded/src/lib.rs:408:17:408:36": {
            "pat": {
              "pat_str": "Cow::Borrowed(utf8)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "form_urlencoded/src/lib.rs:408:40:423:18"
          },
          "form_urlencoded/src/lib.rs:424:17:424:30": {
            "pat": {
              "pat_str": "Cow::Owned(s)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "form_urlencoded/src/lib.rs:424:34:424:47"
          }
        }
      }
    }
  ],
  "form_urlencoded/src/lib.rs:417:35:417:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "raw_utf8 == &*bytes as *const [u8]",
          "lhs": "raw_utf8",
          "rhs": "&*bytes as *const [u8]",
          "cmp_with_int": false
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ]
}