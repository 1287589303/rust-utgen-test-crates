[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:71:20: 71:39 (#0),
                    scope: scope[0],
                },
                kind: _2 = replace_plus(move _3) -> [return: bb1, unwind: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            FakeRead(ForLet(None), _2),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &_2,
            _9 = &(*_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:72:44: 72:53 (#0),
                    scope: scope[1],
                },
                kind: _8 = <_::borrow::Cow<'_, [u8]> as core::ops::Deref>::deref(move _9) -> [return: bb2, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = &(*_8),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:72:29: 72:54 (#0),
                    scope: scope[1],
                },
                kind: _6 = percent_encoding::percent_decode(move _7) -> [return: bb3, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:72:29: 72:61 (#0),
                    scope: scope[1],
                },
                kind: _5 = <percent_encoding::PercentDecode<'_> as core::convert::Into<_::borrow::Cow<'_, [u8]>>>::into(move _6) -> [return: bb4, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            PlaceMention(_5),
            _11 = discriminant(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:72:23: 72:61 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _11) -> [0: bb7, 1: bb6, otherwise: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:72:29: 72:61 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:73:9: 73:24 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb8, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _4 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:74:29: 74:37 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb11,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_12),
            _12 = move ((_5 as Owned).0: _::vec::Vec<u8>),
            StorageLive(_13),
            _13 = move _12,
            _4 = _::borrow::Cow::<'_, [u8]>::Owned(move _13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:73:42: 73:43 (#0),
                    scope: scope[2],
                },
                kind: drop(_13) -> [return: bb9, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:73:42: 73:43 (#0),
                    scope: scope[1],
                },
                kind: drop(_12) -> [return: bb10, unwind: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:73:42: 73:43 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb11,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:72:5: 75:7 (#0),
                    scope: scope[1],
                },
                kind: _0 = decode_utf8_lossy(move _4) -> [return: bb12, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:76:1: 76:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb13, unwind: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:76:1: 76:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb14, unwind: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_8),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:76:2: 76:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:75:6: 75:7 (#0),
                    scope: scope[1],
                },
                kind: drop(_4) -> [return: bb17, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:73:42: 73:43 (#0),
                    scope: scope[1],
                },
                kind: drop(_12) -> [return: bb17, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:76:1: 76:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb18, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:76:1: 76:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb20, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:76:1: 76:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb20, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:70:1: 76:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: _::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:70:28: 70:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            form_urlencoded/src/lib.rs:70:18: 70:23 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                form_urlencoded/src/lib.rs:70:11: 70:16 (#0),
                            ),
                        ),
                        pat_span: form_urlencoded/src/lib.rs:70:11: 70:16 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:70:11: 70:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                form_urlencoded/src/lib.rs:71:20: 71:39 (#0),
                            ),
                        ),
                        pat_span: form_urlencoded/src/lib.rs:71:9: 71:17 (#0),
                    },
                ),
            ),
        ),
        ty: _::borrow::Cow<'{erased}, [u8]>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:71:9: 71:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:71:33: 71:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:72:5: 75:7 (#0),
                },
            ),
        ),
        ty: _::borrow::Cow<'{erased}, [u8]>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:72:23: 75:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:72:5: 75:7 (#0),
                },
            ),
        ),
        ty: _::borrow::Cow<'{erased}, [u8]>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:72:29: 72:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:72:5: 75:7 (#0),
                },
            ),
        ),
        ty: percent_encoding::PercentDecode<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:72:29: 72:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:72:5: 75:7 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:72:44: 72:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:72:5: 75:7 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:72:44: 72:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:72:5: 75:7 (#0),
                },
            ),
        ),
        ty: &'{erased} _::borrow::Cow<'{erased}, [u8]>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:72:44: 72:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:72:5: 75:7 (#0),
                },
            ),
        ),
        ty: &'{erased} _::borrow::Cow<'{erased}, [u8]>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:72:44: 72:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:73:9: 73:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _5,
                                ),
                                form_urlencoded/src/lib.rs:72:29: 72:61 (#0),
                            ),
                        ),
                        pat_span: form_urlencoded/src/lib.rs:73:9: 73:24 (#0),
                    },
                ),
            ),
        ),
        ty: _::vec::Vec<u8, _::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:73:20: 73:23 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: _::vec::Vec<u8, _::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:73:39: 73:42 (#0),
            scope: scope[0],
        },
    },
]