[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:359:5: 360:18 (#0),
                    scope: scope[0],
                },
                kind: _6 = core::option::Option::<T>::as_mut(move _7) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageLive(_8),
            StorageLive(_9),
            _9 = const "url::form_urlencoded::Serializer finished",
            _8 = &(*_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:359:5: 361:61 (#0),
                    scope: scope[0],
                },
                kind: _5 = core::option::Option::<&mut T>::expect(move _6, move _8) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _4 = &mut (*_5),
            StorageDead(_8),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:359:5: 362:25 (#0),
                    scope: scope[0],
                },
                kind: _3 = <T as Target>::as_mut_string(move _4) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _2 = &mut (*_3),
            StorageDead(_4),
            _0 = &mut (*_2),
            StorageDead(_9),
            StorageDead(_5),
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:363:2: 363:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:358:1: 363:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut _::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:358:49: 358:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            form_urlencoded/src/lib.rs:358:30: 358:44 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                form_urlencoded/src/lib.rs:358:22: 358:28 (#0),
                            ),
                        ),
                        pat_span: form_urlencoded/src/lib.rs:358:22: 358:28 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::option::Option<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:358:22: 358:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut _::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:359:5: 362:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:359:5: 362:25 (#0),
                },
            ),
        ),
        ty: &'{erased} mut _::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:359:5: 362:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:359:5: 362:25 (#0),
                },
            ),
        ),
        ty: &'{erased} mut T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:359:5: 361:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:359:5: 362:25 (#0),
                },
            ),
        ),
        ty: &'{erased} mut T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:359:5: 361:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:359:5: 362:25 (#0),
                },
            ),
        ),
        ty: core::option::Option<&'{erased} mut T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:359:5: 360:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:359:5: 362:25 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::option::Option<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:359:5: 359:11 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:359:5: 362:25 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:361:17: 361:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: form_urlencoded/src/lib.rs:359:5: 362:25 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:361:17: 361:60 (#0),
            scope: scope[0],
        },
    },
]