[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &mut ((*_1).0: core::option::Option<T>),
            _6 = &mut (*_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:242:9: 242:33 (#0),
                    scope: scope[0],
                },
                kind: _5 = string::<T>(move _6) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _4 = &mut (*_5),
            StorageDead(_6),
            StorageLive(_8),
            _8 = ((*_1).1: usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:242:9: 242:63 (#0),
                    scope: scope[0],
                },
                kind: _3 = _::string::String::truncate(move _4, move _8) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_4),
            StorageDead(_7),
            StorageDead(_5),
            StorageDead(_3),
            _2 = &mut (*_1),
            _0 = &mut (*_2),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:244:6: 244:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: form_urlencoded/src/lib.rs:241:5: 244:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut Serializer<'{erased}, T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:241:32: 241:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut Serializer<'{erased}, T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:241:18: 241:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut Serializer<'{erased}, T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:243:9: 243:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:242:9: 242:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut _::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:242:9: 242:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut _::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:242:9: 242:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::option::Option<T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:242:16: 242:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::option::Option<T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:242:16: 242:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: form_urlencoded/src/lib.rs:242:43: 242:62 (#0),
            scope: scope[0],
        },
    },
]