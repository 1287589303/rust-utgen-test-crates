CrateContext {
    crate_name: "form_urlencoded",
    crate_path: "/home/abezbm/rust-utgen-test-crates/rust-url/form_urlencoded",
    entry_file_paths: [
        "/home/abezbm/rust-utgen-test-crates/rust-url/form_urlencoded/src/lib.rs",
    ],
    main_mod_contexts: [
        RefCell {
            value: ModContext {
             mod_info: Mod(
                ModModInfo {
                    mod_name: "form_urlencoded",
                    mod_tree: MyPath {
                        name: "form_urlencoded",
                        next: None,
                    },
                    file_path: "/home/abezbm/rust-utgen-test-crates/rust-url/form_urlencoded/src/lib.rs",
                    parent_directory_path: "/home/abezbm/rust-utgen-test-crates/rust-url/form_urlencoded/src",
                    mod_file_directory_path: None,
                    visibility: PubT,
                },
            ),
             syntax_context: SyntaxContext {
                consts: [],
                trait_aliases: [],
                uses: [
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: alloc,
                                            span: bytes(849..854),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: borrow,
                                                    span: bytes(856..862),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Borrow,
                                                                        span: bytes(865..871),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Cow,
                                                                        span: bytes(873..876),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: ToOwned,
                                                                        span: bytes(878..885),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: alloc,
                                            span: bytes(892..897),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: string,
                                                    span: bytes(899..905),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: String,
                                                            span: bytes(907..913),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: core,
                                            span: bytes(919..923),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Name(
                                            UseName {
                                                ident: Ident {
                                                    sym: str,
                                                    span: bytes(925..928),
                                                },
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: percent_encoding,
                                            span: bytes(934..950),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Group(
                                            UseGroup {
                                                brace_token: Brace,
                                                items: [
                                                    UseTree::Name(
                                                        UseName {
                                                            ident: Ident {
                                                                sym: percent_decode,
                                                                span: bytes(953..967),
                                                            },
                                                        },
                                                    ),
                                                    Comma,
                                                    UseTree::Name(
                                                        UseName {
                                                            ident: Ident {
                                                                sym: percent_encode_byte,
                                                                span: bytes(969..988),
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                ],
                mods: [],
                statics: [],
                types: [
                    TypeItem {
                        item: Some(
                            ItemType {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                type_token: Type,
                                ident: Ident {
                                    sym: EncodingOverride,
                                    span: bytes(13426..13442),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(13443..13444),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(13444..13445),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                eq_token: Eq,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Option,
                                                    span: bytes(13449..13455),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Reference {
                                                                and_token: And,
                                                                lifetime: Some(
                                                                    Lifetime {
                                                                        apostrophe: bytes(13457..13458),
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(13458..13459),
                                                                        },
                                                                    },
                                                                ),
                                                                mutability: None,
                                                                elem: Type::TraitObject {
                                                                    dyn_token: Some(
                                                                        Dyn,
                                                                    ),
                                                                    bounds: [
                                                                        TypeParamBound::Trait(
                                                                            TraitBound {
                                                                                paren_token: None,
                                                                                modifier: TraitBoundModifier::None,
                                                                                lifetimes: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Fn,
                                                                                                span: bytes(13464..13466),
                                                                                            },
                                                                                            arguments: PathArguments::Parenthesized {
                                                                                                paren_token: Paren,
                                                                                                inputs: [
                                                                                                    Type::Reference {
                                                                                                        and_token: And,
                                                                                                        lifetime: None,
                                                                                                        mutability: None,
                                                                                                        elem: Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: str,
                                                                                                                            span: bytes(13468..13471),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                                output: ReturnType::Type(
                                                                                                    RArrow,
                                                                                                    Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Cow,
                                                                                                                        span: bytes(13476..13479),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                                                        colon2_token: None,
                                                                                                                        lt_token: Lt,
                                                                                                                        args: [
                                                                                                                            GenericArgument::Lifetime(
                                                                                                                                Lifetime {
                                                                                                                                    apostrophe: bytes(13480..13481),
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: _,
                                                                                                                                        span: bytes(13481..13482),
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            ),
                                                                                                                            Comma,
                                                                                                                            GenericArgument::Type(
                                                                                                                                Type::Slice {
                                                                                                                                    bracket_token: Bracket,
                                                                                                                                    elem: Type::Path {
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: u8,
                                                                                                                                                        span: bytes(13485..13487),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                        gt_token: Gt,
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                semi_token: Semi,
                            },
                        ),
                        visibility: PubT,
                    },
                ],
                structs: [
                    StructItem {
                        struct_name: Name {
                            name: "Parse",
                            complete_name: "form_urlencoded::Parse",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "Parse",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: derive,
                                                            span: bytes(1421..1427),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: Copy,
                                                    span: bytes(1428..1432),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(1432..1433),
                                                },
                                                Ident {
                                                    sym: Clone,
                                                    span: bytes(1434..1439),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                struct_token: Struct,
                                ident: Ident {
                                    sym: Parse,
                                    span: bytes(1453..1458),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(1459..1460),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(1460..1461),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                fields: Fields::Named {
                                    brace_token: Brace,
                                    named: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: input,
                                                    span: bytes(1469..1474),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: Some(
                                                    Lifetime {
                                                        apostrophe: bytes(1477..1478),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(1478..1479),
                                                        },
                                                    },
                                                ),
                                                mutability: None,
                                                elem: Type::Slice {
                                                    bracket_token: Bracket,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(1481..1483),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                        Comma,
                                    ],
                                },
                                semi_token: None,
                            },
                        ),
                        visibility: PubT,
                        relative_types: [
                            "u8",
                        ],
                    },
                    StructItem {
                        struct_name: Name {
                            name: "ParseIntoOwned",
                            complete_name: "form_urlencoded::ParseIntoOwned",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "ParseIntoOwned",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                struct_token: Struct,
                                ident: Ident {
                                    sym: ParseIntoOwned,
                                    span: bytes(3260..3274),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(3275..3276),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(3276..3277),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                fields: Fields::Named {
                                    brace_token: Brace,
                                    named: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: inner,
                                                    span: bytes(3285..3290),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Parse,
                                                                span: bytes(3292..3297),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(3298..3299),
                                                                            ident: Ident {
                                                                                sym: a,
                                                                                span: bytes(3299..3300),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                    ],
                                },
                                semi_token: None,
                            },
                        ),
                        visibility: PubT,
                        relative_types: [
                            "Parse",
                        ],
                    },
                    StructItem {
                        struct_name: Name {
                            name: "ByteSerialize",
                            complete_name: "form_urlencoded::ByteSerialize",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "ByteSerialize",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: derive,
                                                            span: bytes(3852..3858),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: Debug,
                                                    span: bytes(3859..3864),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                struct_token: Struct,
                                ident: Ident {
                                    sym: ByteSerialize,
                                    span: bytes(3878..3891),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(3892..3893),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(3893..3894),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                fields: Fields::Named {
                                    brace_token: Brace,
                                    named: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: bytes,
                                                    span: bytes(3902..3907),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: Some(
                                                    Lifetime {
                                                        apostrophe: bytes(3910..3911),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(3911..3912),
                                                        },
                                                    },
                                                ),
                                                mutability: None,
                                                elem: Type::Slice {
                                                    bracket_token: Bracket,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(3914..3916),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                        Comma,
                                    ],
                                },
                                semi_token: None,
                            },
                        ),
                        visibility: PubT,
                        relative_types: [
                            "u8",
                        ],
                    },
                    StructItem {
                        struct_name: Name {
                            name: "Serializer",
                            complete_name: "form_urlencoded::Serializer",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "Serializer",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                struct_token: Struct,
                                ident: Ident {
                                    sym: Serializer,
                                    span: bytes(5598..5608),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(5609..5610),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(5610..5611),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                        Comma,
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: T,
                                                    span: bytes(5613..5614),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Target,
                                                                            span: bytes(5616..5622),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                fields: Fields::Named {
                                    brace_token: Brace,
                                    named: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: target,
                                                    span: bytes(5630..5636),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Option,
                                                                span: bytes(5638..5644),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: T,
                                                                                            span: bytes(5645..5646),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: start_position,
                                                    span: bytes(5653..5667),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: usize,
                                                                span: bytes(5669..5674),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: encoding,
                                                    span: bytes(5680..5688),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: EncodingOverride,
                                                                span: bytes(5690..5706),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(5707..5708),
                                                                            ident: Ident {
                                                                                sym: a,
                                                                                span: bytes(5708..5709),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                    ],
                                },
                                semi_token: None,
                            },
                        ),
                        visibility: PubT,
                        relative_types: [
                            "EncodingOverride",
                            "Option",
                            "T",
                            "Target",
                            "usize",
                        ],
                    },
                ],
                enums: [],
                unions: [],
                impls: [
                    ImplItem {
                        impl_num: 0,
                        struct_name: Name {
                            name: "Parse",
                            complete_name: "form_urlencoded::Parse",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "Parse",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(1494..1495),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(1495..1496),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Iterator,
                                                        span: bytes(1498..1506),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Parse,
                                                    span: bytes(1511..1516),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(1517..1518),
                                                                ident: Ident {
                                                                    sym: a,
                                                                    span: bytes(1518..1519),
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [
                            ImplTypeItem {
                                item: Some(
                                    ImplItemType {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Item,
                                            span: bytes(1532..1536),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Tuple {
                                            paren_token: Paren,
                                            elems: [
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Cow,
                                                                    span: bytes(1540..1543),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(1544..1545),
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(1545..1546),
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: str,
                                                                                                span: bytes(1548..1551),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                Comma,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Cow,
                                                                    span: bytes(1554..1557),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(1558..1559),
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(1559..1560),
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: str,
                                                                                                span: bytes(1562..1565),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "next",
                                    complete_name: "<form_urlencoded::Parse as >::next",
                                    import_name: MyPath {
                                        name: "<form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Parse as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "next",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#0}::next",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next,
                                                span: bytes(1577..1581),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(1587..1591),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Option,
                                                                    span: bytes(1596..1602),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(1603..1607),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Item,
                                                                                                span: bytes(1609..1613),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Loop {
                                                        attrs: [],
                                                        label: None,
                                                        loop_token: Loop,
                                                        body: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(1647..1651),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: input,
                                                                                        span: bytes(1652..1657),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: is_empty,
                                                                                span: bytes(1658..1666),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Return {
                                                                                        attrs: [],
                                                                                        return_token: Return,
                                                                                        expr: Some(
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: None,
                                                                                                                span: bytes(1694..1698),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: None,
                                                                    },
                                                                    None,
                                                                ),
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        ident: Ident {
                                                                            sym: split2,
                                                                            span: bytes(1734..1740),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(1743..1747),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: input,
                                                                                            span: bytes(1748..1753),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: splitn,
                                                                                    span: bytes(1754..1760),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 2,
                                                                                        },
                                                                                    },
                                                                                    Comma,
                                                                                    Expr::Closure {
                                                                                        attrs: [],
                                                                                        lifetimes: None,
                                                                                        constness: None,
                                                                                        movability: None,
                                                                                        asyncness: None,
                                                                                        capture: None,
                                                                                        or1_token: Or,
                                                                                        inputs: [
                                                                                            Pat::Reference {
                                                                                                attrs: [],
                                                                                                and_token: And,
                                                                                                mutability: None,
                                                                                                pat: Pat::Ident {
                                                                                                    attrs: [],
                                                                                                    by_ref: None,
                                                                                                    mutability: None,
                                                                                                    ident: Ident {
                                                                                                        sym: b,
                                                                                                        span: bytes(1766..1767),
                                                                                                    },
                                                                                                    subpat: None,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                        or2_token: Or,
                                                                                        output: ReturnType::Default,
                                                                                        body: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: b,
                                                                                                                span: bytes(1769..1770),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Eq(
                                                                                                EqEq,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Byte {
                                                                                                    token: b'&',
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: sequence,
                                                                            span: bytes(1797..1805),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: split2,
                                                                                                        span: bytes(1808..1814),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: next,
                                                                                        span: bytes(1815..1819),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: unwrap,
                                                                                    span: bytes(1822..1828),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(1844..1848),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: input,
                                                                                    span: bytes(1849..1854),
                                                                                },
                                                                            ),
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: split2,
                                                                                                    span: bytes(1857..1863),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: next,
                                                                                    span: bytes(1864..1868),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: unwrap_or,
                                                                                span: bytes(1871..1880),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Reference {
                                                                                    attrs: [],
                                                                                    and_token: And,
                                                                                    mutability: None,
                                                                                    expr: Expr::Index {
                                                                                        attrs: [],
                                                                                        expr: Expr::Array {
                                                                                            attrs: [],
                                                                                            bracket_token: Bracket,
                                                                                            elems: [],
                                                                                        },
                                                                                        bracket_token: Bracket,
                                                                                        index: Expr::Range {
                                                                                            attrs: [],
                                                                                            start: None,
                                                                                            limits: RangeLimits::HalfOpen(
                                                                                                DotDot,
                                                                                            ),
                                                                                            end: None,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: sequence,
                                                                                                span: bytes(1906..1914),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: is_empty,
                                                                                span: bytes(1915..1923),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Continue {
                                                                                        attrs: [],
                                                                                        continue_token: Continue,
                                                                                        label: None,
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: None,
                                                                    },
                                                                    None,
                                                                ),
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        ident: Ident {
                                                                            sym: split2,
                                                                            span: bytes(1988..1994),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: sequence,
                                                                                                    span: bytes(1997..2005),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: splitn,
                                                                                    span: bytes(2006..2012),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 2,
                                                                                        },
                                                                                    },
                                                                                    Comma,
                                                                                    Expr::Closure {
                                                                                        attrs: [],
                                                                                        lifetimes: None,
                                                                                        constness: None,
                                                                                        movability: None,
                                                                                        asyncness: None,
                                                                                        capture: None,
                                                                                        or1_token: Or,
                                                                                        inputs: [
                                                                                            Pat::Reference {
                                                                                                attrs: [],
                                                                                                and_token: And,
                                                                                                mutability: None,
                                                                                                pat: Pat::Ident {
                                                                                                    attrs: [],
                                                                                                    by_ref: None,
                                                                                                    mutability: None,
                                                                                                    ident: Ident {
                                                                                                        sym: b,
                                                                                                        span: bytes(2018..2019),
                                                                                                    },
                                                                                                    subpat: None,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                        or2_token: Or,
                                                                                        output: ReturnType::Default,
                                                                                        body: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: b,
                                                                                                                span: bytes(2021..2022),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Eq(
                                                                                                EqEq,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Byte {
                                                                                                    token: b'=',
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: name,
                                                                            span: bytes(2049..2053),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: split2,
                                                                                                        span: bytes(2056..2062),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: next,
                                                                                        span: bytes(2063..2067),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: unwrap,
                                                                                    span: bytes(2070..2076),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: value,
                                                                            span: bytes(2096..2101),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: split2,
                                                                                                        span: bytes(2104..2110),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: next,
                                                                                        span: bytes(2111..2115),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: unwrap_or,
                                                                                    span: bytes(2118..2127),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Reference {
                                                                                        attrs: [],
                                                                                        and_token: And,
                                                                                        mutability: None,
                                                                                        expr: Expr::Index {
                                                                                            attrs: [],
                                                                                            expr: Expr::Array {
                                                                                                attrs: [],
                                                                                                bracket_token: Bracket,
                                                                                                elems: [],
                                                                                            },
                                                                                            bracket_token: Bracket,
                                                                                            index: Expr::Range {
                                                                                                attrs: [],
                                                                                                start: None,
                                                                                                limits: RangeLimits::HalfOpen(
                                                                                                    DotDot,
                                                                                                ),
                                                                                                end: None,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::Return {
                                                                        attrs: [],
                                                                        return_token: Return,
                                                                        expr: Some(
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Some,
                                                                                                    span: bytes(2157..2161),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Tuple {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        elems: [
                                                                                            Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: decode,
                                                                                                                    span: bytes(2163..2169),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: name,
                                                                                                                        span: bytes(2170..2174),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: decode,
                                                                                                                    span: bytes(2177..2183),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: value,
                                                                                                                        span: bytes(2184..2189),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [
                            "Cow",
                            "str",
                        ],
                    },
                    ImplItem {
                        impl_num: 1,
                        struct_name: Name {
                            name: "Parse",
                            complete_name: "form_urlencoded::Parse",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "Parse",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: None,
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(2962..2963),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(2963..2964),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: None,
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Parse,
                                                    span: bytes(2966..2971),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(2972..2973),
                                                                ident: Ident {
                                                                    sym: a,
                                                                    span: bytes(2973..2974),
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "into_owned",
                                    complete_name: "form_urlencoded::Parse::into_owned",
                                    import_name: MyPath {
                                        name: "form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Parse",
                                                next: Some(
                                                    MyPath {
                                                        name: "into_owned",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#1}::into_owned",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: into_owned,
                                                span: bytes(3081..3091),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: None,
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(3092..3096),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: ParseIntoOwned,
                                                                    span: bytes(3101..3115),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(3116..3117),
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(3117..3118),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: ParseIntoOwned,
                                                                        span: bytes(3130..3144),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: inner,
                                                                        span: bytes(3147..3152),
                                                                    },
                                                                ),
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(3154..3158),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [],
                    },
                    ImplItem {
                        impl_num: 2,
                        struct_name: Name {
                            name: "ParseIntoOwned",
                            complete_name: "form_urlencoded::ParseIntoOwned",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "ParseIntoOwned",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Iterator,
                                                        span: bytes(3311..3319),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: ParseIntoOwned,
                                                    span: bytes(3324..3338),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(3339..3340),
                                                                ident: Ident {
                                                                    sym: _,
                                                                    span: bytes(3340..3341),
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [
                            ImplTypeItem {
                                item: Some(
                                    ImplItemType {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Item,
                                            span: bytes(3354..3358),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Tuple {
                                            paren_token: Paren,
                                            elems: [
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: String,
                                                                    span: bytes(3362..3368),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                Comma,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: String,
                                                                    span: bytes(3370..3376),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "next",
                                    complete_name: "<form_urlencoded::ParseIntoOwned as >::next",
                                    import_name: MyPath {
                                        name: "<form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "ParseIntoOwned as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "next",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#2}::next",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next,
                                                span: bytes(3387..3391),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(3397..3401),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Option,
                                                                    span: bytes(3406..3412),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(3413..3417),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Item,
                                                                                                span: bytes(3419..3423),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(3435..3439),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: inner,
                                                                        span: bytes(3440..3445),
                                                                    },
                                                                ),
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: next,
                                                                span: bytes(3459..3463),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: map,
                                                            span: bytes(3479..3482),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Closure {
                                                                attrs: [],
                                                                lifetimes: None,
                                                                constness: None,
                                                                movability: None,
                                                                asyncness: None,
                                                                capture: None,
                                                                or1_token: Or,
                                                                inputs: [
                                                                    Pat::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: k,
                                                                                    span: bytes(3485..3486),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            Comma,
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: v,
                                                                                    span: bytes(3488..3489),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                                or2_token: Or,
                                                                output: ReturnType::Default,
                                                                body: Expr::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: k,
                                                                                                span: bytes(3493..3494),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: into_owned,
                                                                                span: bytes(3495..3505),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        Comma,
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: v,
                                                                                                span: bytes(3509..3510),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: into_owned,
                                                                                span: bytes(3511..3521),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [
                            "String",
                        ],
                    },
                    ImplItem {
                        impl_num: 3,
                        struct_name: Name {
                            name: "ByteSerialize",
                            complete_name: "form_urlencoded::ByteSerialize",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "ByteSerialize",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(4073..4074),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(4074..4075),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Iterator,
                                                        span: bytes(4077..4085),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: ByteSerialize,
                                                    span: bytes(4090..4103),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(4104..4105),
                                                                ident: Ident {
                                                                    sym: a,
                                                                    span: bytes(4105..4106),
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [
                            ImplTypeItem {
                                item: Some(
                                    ImplItemType {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Item,
                                            span: bytes(4119..4123),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: Some(
                                                Lifetime {
                                                    apostrophe: bytes(4127..4128),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(4128..4129),
                                                    },
                                                },
                                            ),
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(4130..4133),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "next",
                                    complete_name: "<form_urlencoded::ByteSerialize as >::next",
                                    import_name: MyPath {
                                        name: "<form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "ByteSerialize as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "next",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#3}::next",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next,
                                                span: bytes(4143..4147),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(4153..4157),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Option,
                                                                    span: bytes(4162..4168),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Reference {
                                                                                and_token: And,
                                                                                lifetime: Some(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(4170..4171),
                                                                                        ident: Ident {
                                                                                            sym: a,
                                                                                            span: bytes(4171..4172),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                mutability: None,
                                                                                elem: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: str,
                                                                                                    span: bytes(4173..4176),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Let {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::TupleStruct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Some,
                                                                                span: bytes(4195..4199),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Pat::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Pat::Reference {
                                                                                attrs: [],
                                                                                and_token: And,
                                                                                mutability: None,
                                                                                pat: Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: first,
                                                                                        span: bytes(4202..4207),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: tail,
                                                                                    span: bytes(4209..4213),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(4218..4222),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: bytes,
                                                                            span: bytes(4223..4228),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: split_first,
                                                                    span: bytes(4229..4240),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Not(
                                                                                Not,
                                                                            ),
                                                                            expr: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: byte_serialized_unchanged,
                                                                                                    span: bytes(4261..4286),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: first,
                                                                                                        span: bytes(4287..4292),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Assign {
                                                                                        attrs: [],
                                                                                        left: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(4312..4316),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: bytes,
                                                                                                    span: bytes(4317..4322),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        eq_token: Eq,
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: tail,
                                                                                                            span: bytes(4325..4329),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::Return {
                                                                                        attrs: [],
                                                                                        return_token: Return,
                                                                                        expr: Some(
                                                                                            Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: Some,
                                                                                                                    span: bytes(4354..4358),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::If {
                                                                                                        attrs: [],
                                                                                                        if_token: If,
                                                                                                        cond: Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: first,
                                                                                                                                span: bytes(4362..4367),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Eq(
                                                                                                                EqEq,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Byte {
                                                                                                                    token: b' ',
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        then_branch: Block {
                                                                                                            brace_token: Brace,
                                                                                                            stmts: [
                                                                                                                Stmt::Expr(
                                                                                                                    Expr::Lit {
                                                                                                                        attrs: [],
                                                                                                                        lit: Lit::Str {
                                                                                                                            token: "+",
                                                                                                                        },
                                                                                                                    },
                                                                                                                    None,
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                        else_branch: Some(
                                                                                                            (
                                                                                                                Else,
                                                                                                                Expr::Block {
                                                                                                                    attrs: [],
                                                                                                                    label: None,
                                                                                                                    block: Block {
                                                                                                                        brace_token: Brace,
                                                                                                                        stmts: [
                                                                                                                            Stmt::Expr(
                                                                                                                                Expr::Call {
                                                                                                                                    attrs: [],
                                                                                                                                    func: Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: percent_encode_byte,
                                                                                                                                                        span: bytes(4447..4466),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    paren_token: Paren,
                                                                                                                                    args: [
                                                                                                                                        Expr::Path {
                                                                                                                                            attrs: [],
                                                                                                                                            qself: None,
                                                                                                                                            path: Path {
                                                                                                                                                leading_colon: None,
                                                                                                                                                segments: [
                                                                                                                                                    PathSegment {
                                                                                                                                                        ident: Ident {
                                                                                                                                                            sym: first,
                                                                                                                                                            span: bytes(4467..4472),
                                                                                                                                                        },
                                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                                    },
                                                                                                                                                ],
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                                None,
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ),
                                                                                                        ),
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: None,
                                                                    },
                                                                    None,
                                                                ),
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: position,
                                                                            span: bytes(4524..4532),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: tail,
                                                                                                        span: bytes(4535..4539),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: iter,
                                                                                        span: bytes(4540..4544),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: position,
                                                                                    span: bytes(4547..4555),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Closure {
                                                                                        attrs: [],
                                                                                        lifetimes: None,
                                                                                        constness: None,
                                                                                        movability: None,
                                                                                        asyncness: None,
                                                                                        capture: None,
                                                                                        or1_token: Or,
                                                                                        inputs: [
                                                                                            Pat::Reference {
                                                                                                attrs: [],
                                                                                                and_token: And,
                                                                                                mutability: None,
                                                                                                pat: Pat::Ident {
                                                                                                    attrs: [],
                                                                                                    by_ref: None,
                                                                                                    mutability: None,
                                                                                                    ident: Ident {
                                                                                                        sym: b,
                                                                                                        span: bytes(4558..4559),
                                                                                                    },
                                                                                                    subpat: None,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                        or2_token: Or,
                                                                                        output: ReturnType::Default,
                                                                                        body: Expr::Unary {
                                                                                            attrs: [],
                                                                                            op: UnOp::Not(
                                                                                                Not,
                                                                                            ),
                                                                                            expr: Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: byte_serialized_unchanged,
                                                                                                                    span: bytes(4562..4587),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: b,
                                                                                                                        span: bytes(4588..4589),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: unchanged_slice,
                                                                                    span: bytes(4610..4625),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            Comma,
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: remaining,
                                                                                    span: bytes(4627..4636),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::Match {
                                                                                attrs: [],
                                                                                match_token: Match,
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: position,
                                                                                                    span: bytes(4646..4654),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                brace_token: Brace,
                                                                                arms: [
                                                                                    Arm {
                                                                                        attrs: [],
                                                                                        pat: Pat::TupleStruct {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Some,
                                                                                                            span: bytes(4731..4735),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            elems: [
                                                                                                Pat::Ident {
                                                                                                    attrs: [],
                                                                                                    by_ref: None,
                                                                                                    mutability: None,
                                                                                                    ident: Ident {
                                                                                                        sym: i,
                                                                                                        span: bytes(4736..4737),
                                                                                                    },
                                                                                                    subpat: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        guard: None,
                                                                                        fat_arrow_token: FatArrow,
                                                                                        body: Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(4742..4746),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: bytes,
                                                                                                        span: bytes(4747..4752),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: split_at,
                                                                                                span: bytes(4753..4761),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 1,
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Add(
                                                                                                        Plus,
                                                                                                    ),
                                                                                                    right: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: i,
                                                                                                                        span: bytes(4766..4767),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        comma: Some(
                                                                                            Comma,
                                                                                        ),
                                                                                    },
                                                                                    Arm {
                                                                                        attrs: [],
                                                                                        pat: Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: None,
                                                                                                span: bytes(4786..4790),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                        guard: None,
                                                                                        fat_arrow_token: FatArrow,
                                                                                        body: Expr::Tuple {
                                                                                            attrs: [],
                                                                                            paren_token: Paren,
                                                                                            elems: [
                                                                                                Expr::Field {
                                                                                                    attrs: [],
                                                                                                    base: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: self,
                                                                                                                        span: bytes(4795..4799),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    member: Member::Named(
                                                                                                        Ident {
                                                                                                            sym: bytes,
                                                                                                            span: bytes(4800..4805),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                                Comma,
                                                                                                Expr::Reference {
                                                                                                    attrs: [],
                                                                                                    and_token: And,
                                                                                                    mutability: None,
                                                                                                    expr: Expr::Index {
                                                                                                        attrs: [],
                                                                                                        expr: Expr::Array {
                                                                                                            attrs: [],
                                                                                                            bracket_token: Bracket,
                                                                                                            elems: [],
                                                                                                        },
                                                                                                        bracket_token: Bracket,
                                                                                                        index: Expr::Range {
                                                                                                            attrs: [],
                                                                                                            start: None,
                                                                                                            limits: RangeLimits::HalfOpen(
                                                                                                                DotDot,
                                                                                                            ),
                                                                                                            end: None,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        comma: Some(
                                                                                            Comma,
                                                                                        ),
                                                                                    },
                                                                                ],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(4844..4848),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: bytes,
                                                                                    span: bytes(4849..4854),
                                                                                },
                                                                            ),
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: remaining,
                                                                                            span: bytes(4857..4866),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Some,
                                                                                            span: bytes(5166..5170),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unsafe {
                                                                                attrs: [],
                                                                                unsafe_token: Unsafe,
                                                                                block: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: str,
                                                                                                                    span: bytes(5180..5183),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                            PathSep,
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: from_utf8_unchecked,
                                                                                                                    span: bytes(5185..5204),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: unchanged_slice,
                                                                                                                        span: bytes(5205..5220),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            None,
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: Some(
                                                            (
                                                                Else,
                                                                Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: None,
                                                                                                    span: bytes(5254..5258),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "size_hint",
                                    complete_name: "<form_urlencoded::ByteSerialize as >::size_hint",
                                    import_name: MyPath {
                                        name: "<form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "ByteSerialize as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "size_hint",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#3}::size_hint",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: size_hint,
                                                span: bytes(5283..5292),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(5294..5298),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Tuple {
                                                    paren_token: Paren,
                                                    elems: [
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(5304..5309),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        Comma,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(5311..5317),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: usize,
                                                                                                        span: bytes(5318..5323),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(5339..5343),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: bytes,
                                                                        span: bytes(5344..5349),
                                                                    },
                                                                ),
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: is_empty,
                                                                span: bytes(5350..5358),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 0,
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Some,
                                                                                                    span: bytes(5379..5383),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 0,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: Some(
                                                            (
                                                                Else,
                                                                Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::Tuple {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    elems: [
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                        Comma,
                                                                                        Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Some,
                                                                                                                span: bytes(5421..5425),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Field {
                                                                                                        attrs: [],
                                                                                                        base: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: self,
                                                                                                                            span: bytes(5426..5430),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        member: Member::Named(
                                                                                                            Ident {
                                                                                                                sym: bytes,
                                                                                                                span: bytes(5431..5436),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: len,
                                                                                                        span: bytes(5437..5440),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [],
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [
                            "str",
                        ],
                    },
                    ImplItem {
                        impl_num: 4,
                        struct_name: Name {
                            name: "String",
                            complete_name: "",
                            import_name: MyPath {
                                name: "alloc",
                                next: Some(
                                    MyPath {
                                        name: "string",
                                        next: Some(
                                            MyPath {
                                                name: "String",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "Target",
                                complete_name: "form_urlencoded::Target",
                                import_name: MyPath {
                                    name: "form_urlencoded",
                                    next: Some(
                                        MyPath {
                                            name: "Target",
                                            next: None,
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Target,
                                                        span: bytes(5848..5854),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: String,
                                                    span: bytes(5859..5865),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [
                            ImplTypeItem {
                                item: Some(
                                    ImplItemType {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Finished,
                                            span: bytes(5994..6002),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(6005..6009),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "as_mut_string",
                                    complete_name: "<alloc::string::String as form_urlencoded::Target>::as_mut_string",
                                    import_name: MyPath {
                                        name: "<alloc",
                                        next: Some(
                                            MyPath {
                                                name: "string",
                                                next: Some(
                                                    MyPath {
                                                        name: "String as form_urlencoded",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Target>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "as_mut_string",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#4}::as_mut_string",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: as_mut_string,
                                                span: bytes(5875..5888),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(5894..5898),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: String,
                                                                        span: bytes(5908..5914),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(5925..5929),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "finish",
                                    complete_name: "<alloc::string::String as form_urlencoded::Target>::finish",
                                    import_name: MyPath {
                                        name: "<alloc",
                                        next: Some(
                                            MyPath {
                                                name: "string",
                                                next: Some(
                                                    MyPath {
                                                        name: "String as form_urlencoded",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Target>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "finish",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#4}::finish",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: finish,
                                                span: bytes(5943..5949),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: None,
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(5950..5954),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(5959..5963),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(5974..5978),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [
                            "Self",
                        ],
                    },
                    ImplItem {
                        impl_num: 5,
                        struct_name: Name {
                            name: "",
                            complete_name: "",
                            import_name: MyPath {
                                name: "",
                                next: None,
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "Target",
                                complete_name: "form_urlencoded::Target",
                                import_name: MyPath {
                                    name: "form_urlencoded",
                                    next: Some(
                                        MyPath {
                                            name: "Target",
                                            next: None,
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Target,
                                                        span: bytes(6019..6025),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Reference {
                                    and_token: And,
                                    lifetime: None,
                                    mutability: Some(
                                        Mut,
                                    ),
                                    elem: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: String,
                                                        span: bytes(6035..6041),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [
                            ImplTypeItem {
                                item: Some(
                                    ImplItemType {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Finished,
                                            span: bytes(6170..6178),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(6181..6185),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "as_mut_string",
                                    complete_name: "< as form_urlencoded::Target>::as_mut_string",
                                    import_name: MyPath {
                                        name: "< as form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Target>",
                                                next: Some(
                                                    MyPath {
                                                        name: "as_mut_string",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#5}::as_mut_string",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: as_mut_string,
                                                span: bytes(6051..6064),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(6070..6074),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: String,
                                                                        span: bytes(6084..6090),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(6101..6105),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "finish",
                                    complete_name: "< as form_urlencoded::Target>::finish",
                                    import_name: MyPath {
                                        name: "< as form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Target>",
                                                next: Some(
                                                    MyPath {
                                                        name: "finish",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#5}::finish",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: finish,
                                                span: bytes(6119..6125),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: None,
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(6126..6130),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(6135..6139),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(6150..6154),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [
                            "Self",
                        ],
                    },
                    ImplItem {
                        impl_num: 6,
                        struct_name: Name {
                            name: "Serializer",
                            complete_name: "form_urlencoded::Serializer",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "Serializer",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: None,
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(6195..6196),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(6196..6197),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                        Comma,
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: T,
                                                    span: bytes(6199..6200),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Target,
                                                                            span: bytes(6202..6208),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: None,
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Serializer,
                                                    span: bytes(6210..6220),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(6221..6222),
                                                                ident: Ident {
                                                                    sym: a,
                                                                    span: bytes(6222..6223),
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: T,
                                                                                span: bytes(6225..6226),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "new",
                                    complete_name: "form_urlencoded::Serializer::new",
                                    import_name: MyPath {
                                        name: "form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Serializer",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#6}::new",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: new,
                                                span: bytes(6467..6470),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: target,
                                                                span: bytes(6471..6477),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: T,
                                                                            span: bytes(6479..6480),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(6485..6489),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(6500..6504),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: for_suffix,
                                                                            span: bytes(6506..6516),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: target,
                                                                                span: bytes(6517..6523),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: true,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "for_suffix",
                                    complete_name: "form_urlencoded::Serializer::for_suffix",
                                    import_name: MyPath {
                                        name: "form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Serializer",
                                                next: Some(
                                                    MyPath {
                                                        name: "for_suffix",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#6}::for_suffix",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: for_suffix,
                                                span: bytes(6793..6803),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            ident: Ident {
                                                                sym: target,
                                                                span: bytes(6808..6814),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: T,
                                                                            span: bytes(6816..6817),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: start_position,
                                                                span: bytes(6819..6833),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(6835..6840),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(6845..6849),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: target,
                                                                                        span: bytes(6863..6869),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_mut_string,
                                                                        span: bytes(6870..6883),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: len,
                                                                    span: bytes(6886..6889),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            op: BinOp::Lt(
                                                                Lt,
                                                            ),
                                                            right: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: start_position,
                                                                                span: bytes(6894..6908),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Macro {
                                                                    attrs: [],
                                                                    mac: Macro {
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: panic,
                                                                                        span: bytes(6923..6928),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        bang_token: Not,
                                                                        delimiter: MacroDelimiter::Paren(
                                                                            Paren,
                                                                        ),
                                                                        tokens: TokenStream [
                                                                            Literal {
                                                                                lit: "invalid length {} for target of length {}",
                                                                                span: bytes(6947..6990),
                                                                            },
                                                                            Punct {
                                                                                char: ',',
                                                                                spacing: Alone,
                                                                                span: bytes(6990..6991),
                                                                            },
                                                                            Ident {
                                                                                sym: start_position,
                                                                                span: bytes(7008..7022),
                                                                            },
                                                                            Punct {
                                                                                char: ',',
                                                                                spacing: Alone,
                                                                                span: bytes(7022..7023),
                                                                            },
                                                                            Ident {
                                                                                sym: target,
                                                                                span: bytes(7040..7046),
                                                                            },
                                                                            Punct {
                                                                                char: '.',
                                                                                spacing: Alone,
                                                                                span: bytes(7046..7047),
                                                                            },
                                                                            Ident {
                                                                                sym: as_mut_string,
                                                                                span: bytes(7047..7060),
                                                                            },
                                                                            Group {
                                                                                delimiter: Parenthesis,
                                                                                stream: TokenStream [],
                                                                                span: bytes(7060..7062),
                                                                            },
                                                                            Punct {
                                                                                char: '.',
                                                                                spacing: Alone,
                                                                                span: bytes(7062..7063),
                                                                            },
                                                                            Ident {
                                                                                sym: len,
                                                                                span: bytes(7063..7066),
                                                                            },
                                                                            Group {
                                                                                delimiter: Parenthesis,
                                                                                stream: TokenStream [],
                                                                                span: bytes(7066..7068),
                                                                            },
                                                                        ],
                                                                    },
                                                                    semi_token: Some(
                                                                        Semi,
                                                                    ),
                                                                },
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Serializer,
                                                                        span: bytes(7103..7113),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: target,
                                                                        span: bytes(7128..7134),
                                                                    },
                                                                ),
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                expr: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Some,
                                                                                        span: bytes(7136..7140),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: target,
                                                                                            span: bytes(7141..7147),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: start_position,
                                                                        span: bytes(7162..7176),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: start_position,
                                                                                    span: bytes(7162..7176),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: encoding,
                                                                        span: bytes(7190..7198),
                                                                    },
                                                                ),
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: None,
                                                                                    span: bytes(7200..7204),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: true,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "clear",
                                    complete_name: "form_urlencoded::Serializer::clear",
                                    import_name: MyPath {
                                        name: "form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Serializer",
                                                next: Some(
                                                    MyPath {
                                                        name: "clear",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#6}::clear",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: clear,
                                                span: bytes(7331..7336),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(7342..7346),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(7356..7360),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: string,
                                                                                span: bytes(7371..7377),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Reference {
                                                                    attrs: [],
                                                                    and_token: And,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(7383..7387),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: target,
                                                                                span: bytes(7388..7394),
                                                                            },
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: truncate,
                                                            span: bytes(7396..7404),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(7405..7409),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: start_position,
                                                                        span: bytes(7410..7424),
                                                                    },
                                                                ),
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(7435..7439),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: true,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "encoding_override",
                                    complete_name: "form_urlencoded::Serializer::encoding_override",
                                    import_name: MyPath {
                                        name: "form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Serializer",
                                                next: Some(
                                                    MyPath {
                                                        name: "encoding_override",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#6}::encoding_override",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: encoding_override,
                                                span: bytes(7550..7567),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(7573..7577),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: new,
                                                                span: bytes(7579..7582),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: EncodingOverride,
                                                                            span: bytes(7584..7600),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Lifetime(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(7601..7602),
                                                                                        ident: Ident {
                                                                                            sym: a,
                                                                                            span: bytes(7602..7603),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(7614..7618),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(7629..7633),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: encoding,
                                                                    span: bytes(7634..7642),
                                                                },
                                                            ),
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: new,
                                                                            span: bytes(7645..7648),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(7658..7662),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: true,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "append_pair",
                                    complete_name: "form_urlencoded::Serializer::append_pair",
                                    import_name: MyPath {
                                        name: "form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Serializer",
                                                next: Some(
                                                    MyPath {
                                                        name: "append_pair",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#6}::append_pair",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: append_pair,
                                                span: bytes(7781..7792),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(7798..7802),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: name,
                                                                span: bytes(7804..7808),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(7811..7814),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: value,
                                                                span: bytes(7816..7821),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(7824..7827),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(7837..7841),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: append_pair,
                                                                            span: bytes(7852..7863),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: string,
                                                                                    span: bytes(7877..7883),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(7889..7893),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: target,
                                                                                    span: bytes(7894..7900),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(7915..7919),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: start_position,
                                                                        span: bytes(7920..7934),
                                                                    },
                                                                ),
                                                            },
                                                            Comma,
                                                            Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(7948..7952),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: encoding,
                                                                        span: bytes(7953..7961),
                                                                    },
                                                                ),
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: name,
                                                                                span: bytes(7975..7979),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: value,
                                                                                span: bytes(7993..7998),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(8019..8023),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: true,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "append_key_only",
                                    complete_name: "form_urlencoded::Serializer::append_key_only",
                                    import_name: MyPath {
                                        name: "form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Serializer",
                                                next: Some(
                                                    MyPath {
                                                        name: "append_key_only",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#6}::append_key_only",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: append_key_only,
                                                span: bytes(8162..8177),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(8183..8187),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: name,
                                                                span: bytes(8189..8193),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(8196..8199),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(8209..8213),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: append_key_only,
                                                                            span: bytes(8224..8239),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: string,
                                                                                    span: bytes(8253..8259),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(8265..8269),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: target,
                                                                                    span: bytes(8270..8276),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(8291..8295),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: start_position,
                                                                        span: bytes(8296..8310),
                                                                    },
                                                                ),
                                                            },
                                                            Comma,
                                                            Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(8324..8328),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: encoding,
                                                                        span: bytes(8329..8337),
                                                                    },
                                                                ),
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: name,
                                                                                span: bytes(8351..8355),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(8376..8380),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: true,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "extend_pairs",
                                    complete_name: "form_urlencoded::Serializer::extend_pairs",
                                    import_name: MyPath {
                                        name: "form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Serializer",
                                                next: Some(
                                                    MyPath {
                                                        name: "extend_pairs",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#6}::extend_pairs",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: extend_pairs,
                                                span: bytes(8720..8732),
                                            },
                                            generics: Generics {
                                                lt_token: Some(
                                                    Lt,
                                                ),
                                                params: [
                                                    GenericParam::Type(
                                                        TypeParam {
                                                            attrs: [],
                                                            ident: Ident {
                                                                sym: I,
                                                                span: bytes(8733..8734),
                                                            },
                                                            colon_token: None,
                                                            bounds: [],
                                                            eq_token: None,
                                                            default: None,
                                                        },
                                                    ),
                                                    Comma,
                                                    GenericParam::Type(
                                                        TypeParam {
                                                            attrs: [],
                                                            ident: Ident {
                                                                sym: K,
                                                                span: bytes(8736..8737),
                                                            },
                                                            colon_token: None,
                                                            bounds: [],
                                                            eq_token: None,
                                                            default: None,
                                                        },
                                                    ),
                                                    Comma,
                                                    GenericParam::Type(
                                                        TypeParam {
                                                            attrs: [],
                                                            ident: Ident {
                                                                sym: V,
                                                                span: bytes(8739..8740),
                                                            },
                                                            colon_token: None,
                                                            bounds: [],
                                                            eq_token: None,
                                                            default: None,
                                                        },
                                                    ),
                                                ],
                                                gt_token: Some(
                                                    Gt,
                                                ),
                                                where_clause: Some(
                                                    WhereClause {
                                                        where_token: Where,
                                                        predicates: [
                                                            WherePredicate::Type(
                                                                PredicateType {
                                                                    lifetimes: None,
                                                                    bounded_ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: I,
                                                                                        span: bytes(8793..8794),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    colon_token: Colon,
                                                                    bounds: [
                                                                        TypeParamBound::Trait(
                                                                            TraitBound {
                                                                                paren_token: None,
                                                                                modifier: TraitBoundModifier::None,
                                                                                lifetimes: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: IntoIterator,
                                                                                                span: bytes(8796..8808),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            Comma,
                                                            WherePredicate::Type(
                                                                PredicateType {
                                                                    lifetimes: None,
                                                                    bounded_ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: I,
                                                                                        span: bytes(8818..8819),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Item,
                                                                                        span: bytes(8821..8825),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    colon_token: Colon,
                                                                    bounds: [
                                                                        TypeParamBound::Trait(
                                                                            TraitBound {
                                                                                paren_token: None,
                                                                                modifier: TraitBoundModifier::None,
                                                                                lifetimes: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Borrow,
                                                                                                span: bytes(8827..8833),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Tuple {
                                                                                                            paren_token: Paren,
                                                                                                            elems: [
                                                                                                                Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: K,
                                                                                                                                    span: bytes(8835..8836),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                Comma,
                                                                                                                Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: V,
                                                                                                                                    span: bytes(8838..8839),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            Comma,
                                                            WherePredicate::Type(
                                                                PredicateType {
                                                                    lifetimes: None,
                                                                    bounded_ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: K,
                                                                                        span: bytes(8851..8852),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    colon_token: Colon,
                                                                    bounds: [
                                                                        TypeParamBound::Trait(
                                                                            TraitBound {
                                                                                paren_token: None,
                                                                                modifier: TraitBoundModifier::None,
                                                                                lifetimes: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: AsRef,
                                                                                                span: bytes(8854..8859),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: str,
                                                                                                                            span: bytes(8860..8863),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            Comma,
                                                            WherePredicate::Type(
                                                                PredicateType {
                                                                    lifetimes: None,
                                                                    bounded_ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: V,
                                                                                        span: bytes(8874..8875),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    colon_token: Colon,
                                                                    bounds: [
                                                                        TypeParamBound::Trait(
                                                                            TraitBound {
                                                                                paren_token: None,
                                                                                modifier: TraitBoundModifier::None,
                                                                                lifetimes: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: AsRef,
                                                                                                span: bytes(8877..8882),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: str,
                                                                                                                            span: bytes(8883..8886),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            Comma,
                                                        ],
                                                    },
                                                ),
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(8747..8751),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: iter,
                                                                span: bytes(8753..8757),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: I,
                                                                            span: bytes(8759..8760),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(8770..8774),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Block {
                                                        attrs: [],
                                                        label: None,
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: string,
                                                                            span: bytes(8921..8927),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: string,
                                                                                                    span: bytes(8930..8936),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Reference {
                                                                                        attrs: [],
                                                                                        and_token: And,
                                                                                        mutability: Some(
                                                                                            Mut,
                                                                                        ),
                                                                                        expr: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(8942..8946),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: target,
                                                                                                    span: bytes(8947..8953),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::ForLoop {
                                                                        attrs: [],
                                                                        label: None,
                                                                        for_token: For,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: pair,
                                                                                span: bytes(8972..8976),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        in_token: In,
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: iter,
                                                                                            span: bytes(8980..8984),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        body: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Local {
                                                                                    attrs: [],
                                                                                    let_token: Let,
                                                                                    pat: Pat::Tuple {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        elems: [
                                                                                            Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: k,
                                                                                                    span: bytes(9008..9009),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                            Comma,
                                                                                            Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: v,
                                                                                                    span: bytes(9011..9012),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    init: Some(
                                                                                        LocalInit {
                                                                                            eq_token: Eq,
                                                                                            expr: Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: pair,
                                                                                                                    span: bytes(9016..9020),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: borrow,
                                                                                                    span: bytes(9021..9027),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [],
                                                                                            },
                                                                                            diverge: None,
                                                                                        },
                                                                                    ),
                                                                                    semi_token: Semi,
                                                                                },
                                                                                Stmt::Expr(
                                                                                    Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: append_pair,
                                                                                                            span: bytes(9047..9058),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: string,
                                                                                                                span: bytes(9080..9086),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(9108..9112),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: start_position,
                                                                                                        span: bytes(9113..9127),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(9149..9153),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: encoding,
                                                                                                        span: bytes(9154..9162),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: k,
                                                                                                                    span: bytes(9184..9185),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: as_ref,
                                                                                                    span: bytes(9186..9192),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [],
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: v,
                                                                                                                    span: bytes(9216..9217),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: as_ref,
                                                                                                    span: bytes(9218..9224),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [],
                                                                                            },
                                                                                            Comma,
                                                                                        ],
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(9279..9283),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: true,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "extend_keys_only",
                                    complete_name: "form_urlencoded::Serializer::extend_keys_only",
                                    import_name: MyPath {
                                        name: "form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Serializer",
                                                next: Some(
                                                    MyPath {
                                                        name: "extend_keys_only",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#6}::extend_keys_only",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: extend_keys_only,
                                                span: bytes(9631..9647),
                                            },
                                            generics: Generics {
                                                lt_token: Some(
                                                    Lt,
                                                ),
                                                params: [
                                                    GenericParam::Type(
                                                        TypeParam {
                                                            attrs: [],
                                                            ident: Ident {
                                                                sym: I,
                                                                span: bytes(9648..9649),
                                                            },
                                                            colon_token: None,
                                                            bounds: [],
                                                            eq_token: None,
                                                            default: None,
                                                        },
                                                    ),
                                                    Comma,
                                                    GenericParam::Type(
                                                        TypeParam {
                                                            attrs: [],
                                                            ident: Ident {
                                                                sym: K,
                                                                span: bytes(9651..9652),
                                                            },
                                                            colon_token: None,
                                                            bounds: [],
                                                            eq_token: None,
                                                            default: None,
                                                        },
                                                    ),
                                                ],
                                                gt_token: Some(
                                                    Gt,
                                                ),
                                                where_clause: Some(
                                                    WhereClause {
                                                        where_token: Where,
                                                        predicates: [
                                                            WherePredicate::Type(
                                                                PredicateType {
                                                                    lifetimes: None,
                                                                    bounded_ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: I,
                                                                                        span: bytes(9705..9706),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    colon_token: Colon,
                                                                    bounds: [
                                                                        TypeParamBound::Trait(
                                                                            TraitBound {
                                                                                paren_token: None,
                                                                                modifier: TraitBoundModifier::None,
                                                                                lifetimes: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: IntoIterator,
                                                                                                span: bytes(9708..9720),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            Comma,
                                                            WherePredicate::Type(
                                                                PredicateType {
                                                                    lifetimes: None,
                                                                    bounded_ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: I,
                                                                                        span: bytes(9730..9731),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Item,
                                                                                        span: bytes(9733..9737),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    colon_token: Colon,
                                                                    bounds: [
                                                                        TypeParamBound::Trait(
                                                                            TraitBound {
                                                                                paren_token: None,
                                                                                modifier: TraitBoundModifier::None,
                                                                                lifetimes: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Borrow,
                                                                                                span: bytes(9739..9745),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: K,
                                                                                                                            span: bytes(9746..9747),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            Comma,
                                                            WherePredicate::Type(
                                                                PredicateType {
                                                                    lifetimes: None,
                                                                    bounded_ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: K,
                                                                                        span: bytes(9758..9759),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    colon_token: Colon,
                                                                    bounds: [
                                                                        TypeParamBound::Trait(
                                                                            TraitBound {
                                                                                paren_token: None,
                                                                                modifier: TraitBoundModifier::None,
                                                                                lifetimes: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: AsRef,
                                                                                                span: bytes(9761..9766),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: str,
                                                                                                                            span: bytes(9767..9770),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            Comma,
                                                        ],
                                                    },
                                                ),
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(9659..9663),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: iter,
                                                                span: bytes(9665..9669),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: I,
                                                                            span: bytes(9671..9672),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(9682..9686),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Block {
                                                        attrs: [],
                                                        label: None,
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: string,
                                                                            span: bytes(9805..9811),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: string,
                                                                                                    span: bytes(9814..9820),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Reference {
                                                                                        attrs: [],
                                                                                        and_token: And,
                                                                                        mutability: Some(
                                                                                            Mut,
                                                                                        ),
                                                                                        expr: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(9826..9830),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: target,
                                                                                                    span: bytes(9831..9837),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::ForLoop {
                                                                        attrs: [],
                                                                        label: None,
                                                                        for_token: For,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: key,
                                                                                span: bytes(9856..9859),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        in_token: In,
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: iter,
                                                                                            span: bytes(9863..9867),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        body: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Local {
                                                                                    attrs: [],
                                                                                    let_token: Let,
                                                                                    pat: Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: k,
                                                                                            span: bytes(9890..9891),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                    init: Some(
                                                                                        LocalInit {
                                                                                            eq_token: Eq,
                                                                                            expr: Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: key,
                                                                                                                        span: bytes(9894..9897),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: borrow,
                                                                                                        span: bytes(9898..9904),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [],
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: as_ref,
                                                                                                    span: bytes(9907..9913),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [],
                                                                                            },
                                                                                            diverge: None,
                                                                                        },
                                                                                    ),
                                                                                    semi_token: Semi,
                                                                                },
                                                                                Stmt::Expr(
                                                                                    Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: append_key_only,
                                                                                                            span: bytes(9933..9948),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: string,
                                                                                                                span: bytes(9949..9955),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(9957..9961),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: start_position,
                                                                                                        span: bytes(9962..9976),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(9978..9982),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: encoding,
                                                                                                        span: bytes(9983..9991),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: k,
                                                                                                                span: bytes(9993..9994),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(10029..10033),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: true,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "finish",
                                    complete_name: "form_urlencoded::Serializer::finish",
                                    import_name: MyPath {
                                        name: "form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Serializer",
                                                next: Some(
                                                    MyPath {
                                                        name: "finish",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#6}::finish",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: finish,
                                                span: bytes(10524..10530),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(10536..10540),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(10545..10546),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Finished,
                                                                    span: bytes(10548..10556),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(10567..10571),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: target,
                                                                            span: bytes(10572..10578),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: take,
                                                                    span: bytes(10592..10596),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: expect,
                                                                span: bytes(10612..10618),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Str {
                                                                        token: "url::form_urlencoded::Serializer double finish",
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: finish,
                                                            span: bytes(10682..10688),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [
                            "Target",
                        ],
                    },
                ],
                functions: [
                    FnItem {
                        fn_name: Name {
                            name: "parse",
                            complete_name: "form_urlencoded::parse",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "parse",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "parse",
                        item: Some(
                            ItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(1313..1319),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: parse,
                                        span: bytes(1328..1333),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(1334..1339),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(1343..1345),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Parse,
                                                            span: bytes(1351..1356),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(1357..1358),
                                                                        ident: Ident {
                                                                            sym: _,
                                                                            span: bytes(1358..1359),
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Parse,
                                                                span: bytes(1367..1372),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: input,
                                                                span: bytes(1375..1380),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: input,
                                                                            span: bytes(1375..1380),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "decode",
                            complete_name: "form_urlencoded::decode",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "decode",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "decode",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: decode,
                                        span: bytes(2216..2222),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(2223..2228),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(2232..2234),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Cow,
                                                            span: bytes(2240..2243),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(2244..2245),
                                                                        ident: Ident {
                                                                            sym: _,
                                                                            span: bytes(2245..2246),
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: str,
                                                                                        span: bytes(2248..2251),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: replaced,
                                                    span: bytes(2263..2271),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: replace_plus,
                                                                            span: bytes(2274..2286),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: input,
                                                                                span: bytes(2287..2292),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: decode_utf8_lossy,
                                                                    span: bytes(2299..2316),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Match {
                                                        attrs: [],
                                                        match_token: Match,
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: percent_decode,
                                                                                    span: bytes(2323..2337),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: None,
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: replaced,
                                                                                            span: bytes(2339..2347),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: into,
                                                                span: bytes(2349..2353),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        brace_token: Brace,
                                                        arms: [
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::TupleStruct {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Cow,
                                                                                    span: bytes(2366..2369),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Owned,
                                                                                    span: bytes(2371..2376),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: vec,
                                                                                span: bytes(2377..2380),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Cow,
                                                                                        span: bytes(2385..2388),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Owned,
                                                                                        span: bytes(2390..2395),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: vec,
                                                                                            span: bytes(2396..2399),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::TupleStruct {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Cow,
                                                                                    span: bytes(2410..2413),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Borrowed,
                                                                                    span: bytes(2415..2423),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Wild {
                                                                            attrs: [],
                                                                            underscore_token: Underscore,
                                                                        },
                                                                    ],
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: replaced,
                                                                                    span: bytes(2430..2438),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "replace_plus",
                            complete_name: "form_urlencoded::replace_plus",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "replace_plus",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "replace_plus",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: replace_plus,
                                        span: bytes(2480..2492),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(2493..2498),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(2502..2504),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Cow,
                                                            span: bytes(2510..2513),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(2514..2515),
                                                                        ident: Ident {
                                                                            sym: _,
                                                                            span: bytes(2515..2516),
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Slice {
                                                                        bracket_token: Bracket,
                                                                        elem: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u8,
                                                                                            span: bytes(2519..2521),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Match {
                                                attrs: [],
                                                match_token: Match,
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: input,
                                                                            span: bytes(2536..2541),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: iter,
                                                            span: bytes(2542..2546),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: position,
                                                        span: bytes(2549..2557),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Closure {
                                                            attrs: [],
                                                            lifetimes: None,
                                                            constness: None,
                                                            movability: None,
                                                            asyncness: None,
                                                            capture: None,
                                                            or1_token: Or,
                                                            inputs: [
                                                                Pat::Reference {
                                                                    attrs: [],
                                                                    and_token: And,
                                                                    mutability: None,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: b,
                                                                            span: bytes(2560..2561),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                },
                                                            ],
                                                            or2_token: Or,
                                                            output: ReturnType::Default,
                                                            body: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: b,
                                                                                    span: bytes(2563..2564),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Eq(
                                                                    EqEq,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Byte {
                                                                        token: b'+',
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                arms: [
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: None,
                                                                span: bytes(2584..2588),
                                                            },
                                                            subpat: None,
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Cow,
                                                                                span: bytes(2592..2595),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Borrowed,
                                                                                span: bytes(2597..2605),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: input,
                                                                                    span: bytes(2606..2611),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::TupleStruct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Some,
                                                                            span: bytes(2622..2626),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: first_position,
                                                                        span: bytes(2627..2641),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Local {
                                                                        attrs: [],
                                                                        let_token: Let,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: Some(
                                                                                Mut,
                                                                            ),
                                                                            ident: Ident {
                                                                                sym: replaced,
                                                                                span: bytes(2668..2676),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        init: Some(
                                                                            LocalInit {
                                                                                eq_token: Eq,
                                                                                expr: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: input,
                                                                                                        span: bytes(2679..2684),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: to_owned,
                                                                                        span: bytes(2685..2693),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                                diverge: None,
                                                                            },
                                                                        ),
                                                                        semi_token: Semi,
                                                                    },
                                                                    Stmt::Expr(
                                                                        Expr::Assign {
                                                                            attrs: [],
                                                                            left: Expr::Index {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: replaced,
                                                                                                    span: bytes(2709..2717),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                bracket_token: Bracket,
                                                                                index: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: first_position,
                                                                                                    span: bytes(2718..2732),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            eq_token: Eq,
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Byte {
                                                                                    token: b' ',
                                                                                },
                                                                            },
                                                                        },
                                                                        Some(
                                                                            Semi,
                                                                        ),
                                                                    ),
                                                                    Stmt::Expr(
                                                                        Expr::ForLoop {
                                                                            attrs: [],
                                                                            label: None,
                                                                            for_token: For,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: byte,
                                                                                    span: bytes(2758..2762),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            in_token: In,
                                                                            expr: Expr::Reference {
                                                                                attrs: [],
                                                                                and_token: And,
                                                                                mutability: Some(
                                                                                    Mut,
                                                                                ),
                                                                                expr: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: replaced,
                                                                                                        span: bytes(2771..2779),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Range {
                                                                                        attrs: [],
                                                                                        start: Some(
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: first_position,
                                                                                                                    span: bytes(2780..2794),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                        limits: RangeLimits::HalfOpen(
                                                                                            DotDot,
                                                                                        ),
                                                                                        end: None,
                                                                                    },
                                                                                },
                                                                            },
                                                                            body: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::If {
                                                                                            attrs: [],
                                                                                            if_token: If,
                                                                                            cond: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Unary {
                                                                                                    attrs: [],
                                                                                                    op: UnOp::Deref(
                                                                                                        Star,
                                                                                                    ),
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: byte,
                                                                                                                        span: bytes(2824..2828),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Eq(
                                                                                                    EqEq,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Byte {
                                                                                                        token: b'+',
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            then_branch: Block {
                                                                                                brace_token: Brace,
                                                                                                stmts: [
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Assign {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Unary {
                                                                                                                attrs: [],
                                                                                                                op: UnOp::Deref(
                                                                                                                    Star,
                                                                                                                ),
                                                                                                                expr: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: byte,
                                                                                                                                    span: bytes(2860..2864),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            eq_token: Eq,
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Byte {
                                                                                                                    token: b' ',
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        Some(
                                                                                                            Semi,
                                                                                                        ),
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                            else_branch: None,
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                        None,
                                                                    ),
                                                                    Stmt::Expr(
                                                                        Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Cow,
                                                                                                span: bytes(2917..2920),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Owned,
                                                                                                span: bytes(2922..2927),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: replaced,
                                                                                                    span: bytes(2928..2936),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                        comma: None,
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "byte_serialize",
                            complete_name: "form_urlencoded::byte_serialize",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "byte_serialize",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "byte_serialize",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: byte_serialize,
                                        span: bytes(3720..3734),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(3735..3740),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(3744..3746),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: ByteSerialize,
                                                            span: bytes(3752..3765),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(3766..3767),
                                                                        ident: Ident {
                                                                            sym: _,
                                                                            span: bytes(3767..3768),
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ByteSerialize,
                                                                span: bytes(3776..3789),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: bytes,
                                                                span: bytes(3792..3797),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: input,
                                                                            span: bytes(3799..3804),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "byte_serialized_unchanged",
                            complete_name: "form_urlencoded::byte_serialized_unchanged",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "byte_serialized_unchanged",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "byte_serialized_unchanged",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: byte_serialized_unchanged,
                                        span: bytes(3925..3950),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: byte,
                                                        span: bytes(3951..3955),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u8,
                                                                    span: bytes(3957..3959),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: bool,
                                                            span: bytes(3964..3968),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Macro {
                                                attrs: [],
                                                mac: Macro {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: matches,
                                                                    span: bytes(3975..3982),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    bang_token: Not,
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: byte,
                                                            span: bytes(3984..3988),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(3988..3989),
                                                        },
                                                        Literal {
                                                            lit: b'*',
                                                            span: bytes(3990..3994),
                                                        },
                                                        Punct {
                                                            char: '|',
                                                            spacing: Alone,
                                                            span: bytes(3995..3996),
                                                        },
                                                        Literal {
                                                            lit: b'-',
                                                            span: bytes(3997..4001),
                                                        },
                                                        Punct {
                                                            char: '|',
                                                            spacing: Alone,
                                                            span: bytes(4002..4003),
                                                        },
                                                        Literal {
                                                            lit: b'.',
                                                            span: bytes(4004..4008),
                                                        },
                                                        Punct {
                                                            char: '|',
                                                            spacing: Alone,
                                                            span: bytes(4009..4010),
                                                        },
                                                        Literal {
                                                            lit: b'0',
                                                            span: bytes(4011..4015),
                                                        },
                                                        Punct {
                                                            char: '.',
                                                            spacing: Joint,
                                                            span: bytes(4016..4017),
                                                        },
                                                        Punct {
                                                            char: '.',
                                                            spacing: Joint,
                                                            span: bytes(4017..4018),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(4018..4019),
                                                        },
                                                        Literal {
                                                            lit: b'9',
                                                            span: bytes(4020..4024),
                                                        },
                                                        Punct {
                                                            char: '|',
                                                            spacing: Alone,
                                                            span: bytes(4025..4026),
                                                        },
                                                        Literal {
                                                            lit: b'A',
                                                            span: bytes(4027..4031),
                                                        },
                                                        Punct {
                                                            char: '.',
                                                            spacing: Joint,
                                                            span: bytes(4032..4033),
                                                        },
                                                        Punct {
                                                            char: '.',
                                                            spacing: Joint,
                                                            span: bytes(4033..4034),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(4034..4035),
                                                        },
                                                        Literal {
                                                            lit: b'Z',
                                                            span: bytes(4036..4040),
                                                        },
                                                        Punct {
                                                            char: '|',
                                                            spacing: Alone,
                                                            span: bytes(4041..4042),
                                                        },
                                                        Literal {
                                                            lit: b'_',
                                                            span: bytes(4043..4047),
                                                        },
                                                        Punct {
                                                            char: '|',
                                                            spacing: Alone,
                                                            span: bytes(4048..4049),
                                                        },
                                                        Literal {
                                                            lit: b'a',
                                                            span: bytes(4050..4054),
                                                        },
                                                        Punct {
                                                            char: '.',
                                                            spacing: Joint,
                                                            span: bytes(4055..4056),
                                                        },
                                                        Punct {
                                                            char: '.',
                                                            spacing: Joint,
                                                            span: bytes(4056..4057),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(4057..4058),
                                                        },
                                                        Literal {
                                                            lit: b'z',
                                                            span: bytes(4059..4063),
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "append_separator_if_needed",
                            complete_name: "form_urlencoded::append_separator_if_needed",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "append_separator_if_needed",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "append_separator_if_needed",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: append_separator_if_needed,
                                        span: bytes(10703..10729),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: string,
                                                        span: bytes(10730..10736),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: String,
                                                                        span: bytes(10743..10749),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: start_position,
                                                        span: bytes(10751..10765),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: usize,
                                                                    span: bytes(10767..10772),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: string,
                                                                            span: bytes(10783..10789),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: len,
                                                            span: bytes(10790..10793),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    op: BinOp::Gt(
                                                        Gt,
                                                    ),
                                                    right: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: start_position,
                                                                        span: bytes(10798..10812),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: string,
                                                                                    span: bytes(10823..10829),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: push,
                                                                    span: bytes(10830..10834),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Char {
                                                                            token: '&',
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                                else_branch: None,
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "string",
                            complete_name: "form_urlencoded::string",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "string",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "string",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: string,
                                        span: bytes(10852..10858),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: T,
                                                        span: bytes(10859..10860),
                                                    },
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    bounds: [
                                                        TypeParamBound::Trait(
                                                            TraitBound {
                                                                paren_token: None,
                                                                modifier: TraitBoundModifier::None,
                                                                lifetimes: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Target,
                                                                                span: bytes(10862..10868),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: target,
                                                        span: bytes(10870..10876),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Option,
                                                                        span: bytes(10883..10889),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Type(
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: T,
                                                                                                    span: bytes(10890..10891),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: String,
                                                                span: bytes(10902..10908),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: target,
                                                                            span: bytes(10915..10921),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: as_mut,
                                                            span: bytes(10931..10937),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: expect,
                                                        span: bytes(10949..10955),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Str {
                                                                token: "url::form_urlencoded::Serializer finished",
                                                            },
                                                        },
                                                    ],
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: as_mut_string,
                                                    span: bytes(11010..11023),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "append_pair",
                            complete_name: "form_urlencoded::append_pair",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "append_pair",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "append_pair",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: append_pair,
                                        span: bytes(11032..11043),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: string,
                                                        span: bytes(11049..11055),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: String,
                                                                        span: bytes(11062..11068),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: start_position,
                                                        span: bytes(11074..11088),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: usize,
                                                                    span: bytes(11090..11095),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: encoding,
                                                        span: bytes(11101..11109),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: EncodingOverride,
                                                                    span: bytes(11111..11127),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(11128..11129),
                                                                                ident: Ident {
                                                                                    sym: _,
                                                                                    span: bytes(11129..11130),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: name,
                                                        span: bytes(11137..11141),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(11144..11147),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: value,
                                                        span: bytes(11153..11158),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(11161..11164),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: append_separator_if_needed,
                                                                    span: bytes(11174..11200),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: string,
                                                                        span: bytes(11201..11207),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: start_position,
                                                                        span: bytes(11209..11223),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: append_encoded,
                                                                    span: bytes(11230..11244),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: name,
                                                                        span: bytes(11245..11249),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: string,
                                                                        span: bytes(11251..11257),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: encoding,
                                                                        span: bytes(11259..11267),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: string,
                                                                    span: bytes(11274..11280),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: push,
                                                    span: bytes(11281..11285),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Char {
                                                            token: '=',
                                                        },
                                                    },
                                                ],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: append_encoded,
                                                                    span: bytes(11296..11310),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: value,
                                                                        span: bytes(11311..11316),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: string,
                                                                        span: bytes(11318..11324),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: encoding,
                                                                        span: bytes(11326..11334),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "append_key_only",
                            complete_name: "form_urlencoded::append_key_only",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "append_key_only",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "append_key_only",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: append_key_only,
                                        span: bytes(11343..11358),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: string,
                                                        span: bytes(11364..11370),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: String,
                                                                        span: bytes(11377..11383),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: start_position,
                                                        span: bytes(11389..11403),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: usize,
                                                                    span: bytes(11405..11410),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: encoding,
                                                        span: bytes(11416..11424),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: EncodingOverride,
                                                                    span: bytes(11426..11442),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: name,
                                                        span: bytes(11448..11452),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(11455..11458),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: append_separator_if_needed,
                                                                    span: bytes(11468..11494),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: string,
                                                                        span: bytes(11495..11501),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: start_position,
                                                                        span: bytes(11503..11517),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: append_encoded,
                                                                    span: bytes(11524..11538),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: name,
                                                                        span: bytes(11539..11543),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: string,
                                                                        span: bytes(11545..11551),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: encoding,
                                                                        span: bytes(11553..11561),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "append_encoded",
                            complete_name: "form_urlencoded::append_encoded",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "append_encoded",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "append_encoded",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: append_encoded,
                                        span: bytes(11570..11584),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: s,
                                                        span: bytes(11585..11586),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(11589..11592),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: string,
                                                        span: bytes(11594..11600),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: String,
                                                                        span: bytes(11607..11613),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: encoding,
                                                        span: bytes(11615..11623),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: EncodingOverride,
                                                                    span: bytes(11625..11641),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(11642..11643),
                                                                                ident: Ident {
                                                                                    sym: _,
                                                                                    span: bytes(11643..11644),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: string,
                                                                    span: bytes(11653..11659),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: extend,
                                                    span: bytes(11660..11666),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: byte_serialize,
                                                                            span: bytes(11667..11681),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Reference {
                                                                attrs: [],
                                                                and_token: And,
                                                                mutability: None,
                                                                expr: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: encode,
                                                                                        span: bytes(11683..11689),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: encoding,
                                                                                            span: bytes(11690..11698),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: s,
                                                                                            span: bytes(11700..11701),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "encode",
                            complete_name: "form_urlencoded::encode",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "encode",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "encode",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Restricted {
                                    pub_token: Pub,
                                    paren_token: Paren,
                                    in_token: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: crate,
                                                    span: bytes(11712..11717),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: encode,
                                        span: bytes(11722..11728),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Lifetime(
                                                LifetimeParam {
                                                    attrs: [],
                                                    lifetime: Lifetime {
                                                        apostrophe: bytes(11729..11730),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(11730..11731),
                                                        },
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: encoding_override,
                                                        span: bytes(11733..11750),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: EncodingOverride,
                                                                    span: bytes(11752..11768),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(11769..11770),
                                                                                ident: Ident {
                                                                                    sym: _,
                                                                                    span: bytes(11770..11771),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(11774..11779),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(11782..11783),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(11783..11784),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(11785..11788),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Cow,
                                                            span: bytes(11793..11796),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(11797..11798),
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(11798..11799),
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Slice {
                                                                        bracket_token: Bracket,
                                                                        elem: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u8,
                                                                                            span: bytes(11802..11804),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Let {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::TupleStruct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Some,
                                                                        span: bytes(11820..11824),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        paren_token: Paren,
                                                        elems: [
                                                            Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: o,
                                                                    span: bytes(11825..11826),
                                                                },
                                                                subpat: None,
                                                            },
                                                        ],
                                                    },
                                                    eq_token: Eq,
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: encoding_override,
                                                                        span: bytes(11830..11847),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Return {
                                                                attrs: [],
                                                                return_token: Return,
                                                                expr: Some(
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: o,
                                                                                            span: bytes(11865..11866),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: input,
                                                                                                span: bytes(11867..11872),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                                else_branch: None,
                                            },
                                            None,
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: input,
                                                                        span: bytes(11885..11890),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: as_bytes,
                                                        span: bytes(11891..11899),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [],
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: into,
                                                    span: bytes(11902..11906),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubS,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "decode_utf8_lossy",
                            complete_name: "form_urlencoded::decode_utf8_lossy",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "decode_utf8_lossy",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "decode_utf8_lossy",
                        item: Some(
                            ItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: allow,
                                                            span: bytes(12026..12031),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: ambiguous_wide_pointer_comparisons,
                                                    span: bytes(12032..12066),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Restricted {
                                    pub_token: Pub,
                                    paren_token: Paren,
                                    in_token: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: crate,
                                                    span: bytes(12073..12078),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: decode_utf8_lossy,
                                        span: bytes(12083..12100),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(12101..12106),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Cow,
                                                                    span: bytes(12108..12111),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(12112..12113),
                                                                                ident: Ident {
                                                                                    sym: _,
                                                                                    span: bytes(12113..12114),
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Slice {
                                                                                bracket_token: Bracket,
                                                                                elem: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u8,
                                                                                                    span: bytes(12117..12119),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Cow,
                                                            span: bytes(12126..12129),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(12130..12131),
                                                                        ident: Ident {
                                                                            sym: _,
                                                                            span: bytes(12131..12132),
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: str,
                                                                                        span: bytes(12134..12137),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Match {
                                                attrs: [],
                                                match_token: Match,
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: input,
                                                                    span: bytes(12222..12227),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                arms: [
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::TupleStruct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Cow,
                                                                            span: bytes(12238..12241),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Borrowed,
                                                                            span: bytes(12243..12251),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: bytes,
                                                                        span: bytes(12252..12257),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: String,
                                                                                span: bytes(12262..12268),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from_utf8_lossy,
                                                                                span: bytes(12270..12285),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: bytes,
                                                                                    span: bytes(12286..12291),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::TupleStruct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Cow,
                                                                            span: bytes(12302..12305),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Owned,
                                                                            span: bytes(12307..12312),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: bytes,
                                                                        span: bytes(12313..12318),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::Match {
                                                                            attrs: [],
                                                                            match_token: Match,
                                                                            expr: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: String,
                                                                                                    span: bytes(12343..12349),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: from_utf8_lossy,
                                                                                                    span: bytes(12351..12366),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Reference {
                                                                                        attrs: [],
                                                                                        and_token: And,
                                                                                        mutability: None,
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: bytes,
                                                                                                            span: bytes(12368..12373),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            brace_token: Brace,
                                                                            arms: [
                                                                                Arm {
                                                                                    attrs: [],
                                                                                    pat: Pat::TupleStruct {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Cow,
                                                                                                        span: bytes(12393..12396),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Borrowed,
                                                                                                        span: bytes(12398..12406),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        elems: [
                                                                                            Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: utf8,
                                                                                                    span: bytes(12407..12411),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    guard: None,
                                                                                    fat_arrow_token: FatArrow,
                                                                                    body: Expr::Block {
                                                                                        attrs: [],
                                                                                        label: None,
                                                                                        block: Block {
                                                                                            brace_token: Brace,
                                                                                            stmts: [
                                                                                                Stmt::Local {
                                                                                                    attrs: [],
                                                                                                    let_token: Let,
                                                                                                    pat: Pat::Type {
                                                                                                        attrs: [],
                                                                                                        pat: Pat::Ident {
                                                                                                            attrs: [],
                                                                                                            by_ref: None,
                                                                                                            mutability: None,
                                                                                                            ident: Ident {
                                                                                                                sym: raw_utf8,
                                                                                                                span: bytes(12919..12927),
                                                                                                            },
                                                                                                            subpat: None,
                                                                                                        },
                                                                                                        colon_token: Colon,
                                                                                                        ty: Type::Ptr {
                                                                                                            star_token: Star,
                                                                                                            const_token: Some(
                                                                                                                Const,
                                                                                                            ),
                                                                                                            mutability: None,
                                                                                                            elem: Type::Slice {
                                                                                                                bracket_token: Bracket,
                                                                                                                elem: Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: u8,
                                                                                                                                    span: bytes(12937..12939),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    init: Some(
                                                                                                        LocalInit {
                                                                                                            eq_token: Eq,
                                                                                                            expr: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: utf8,
                                                                                                                                    span: bytes(12943..12947),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: as_bytes,
                                                                                                                    span: bytes(12948..12956),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [],
                                                                                                            },
                                                                                                            diverge: None,
                                                                                                        },
                                                                                                    ),
                                                                                                    semi_token: Semi,
                                                                                                },
                                                                                                Stmt::Macro {
                                                                                                    attrs: [],
                                                                                                    mac: Macro {
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: debug_assert,
                                                                                                                        span: bytes(12980..12992),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                        bang_token: Not,
                                                                                                        delimiter: MacroDelimiter::Paren(
                                                                                                            Paren,
                                                                                                        ),
                                                                                                        tokens: TokenStream [
                                                                                                            Ident {
                                                                                                                sym: raw_utf8,
                                                                                                                span: bytes(12994..13002),
                                                                                                            },
                                                                                                            Punct {
                                                                                                                char: '=',
                                                                                                                spacing: Joint,
                                                                                                                span: bytes(13003..13004),
                                                                                                            },
                                                                                                            Punct {
                                                                                                                char: '=',
                                                                                                                spacing: Alone,
                                                                                                                span: bytes(13004..13005),
                                                                                                            },
                                                                                                            Punct {
                                                                                                                char: '&',
                                                                                                                spacing: Joint,
                                                                                                                span: bytes(13006..13007),
                                                                                                            },
                                                                                                            Punct {
                                                                                                                char: '*',
                                                                                                                spacing: Alone,
                                                                                                                span: bytes(13007..13008),
                                                                                                            },
                                                                                                            Ident {
                                                                                                                sym: bytes,
                                                                                                                span: bytes(13008..13013),
                                                                                                            },
                                                                                                            Ident {
                                                                                                                sym: as,
                                                                                                                span: bytes(13014..13016),
                                                                                                            },
                                                                                                            Punct {
                                                                                                                char: '*',
                                                                                                                spacing: Alone,
                                                                                                                span: bytes(13017..13018),
                                                                                                            },
                                                                                                            Ident {
                                                                                                                sym: const,
                                                                                                                span: bytes(13018..13023),
                                                                                                            },
                                                                                                            Group {
                                                                                                                delimiter: Bracket,
                                                                                                                stream: TokenStream [
                                                                                                                    Ident {
                                                                                                                        sym: u8,
                                                                                                                        span: bytes(13025..13027),
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: bytes(13024..13028),
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    semi_token: Some(
                                                                                                        Semi,
                                                                                                    ),
                                                                                                },
                                                                                                Stmt::Expr(
                                                                                                    Expr::Call {
                                                                                                        attrs: [],
                                                                                                        func: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: Cow,
                                                                                                                            span: bytes(13260..13263),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                    PathSep,
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: Owned,
                                                                                                                            span: bytes(13265..13270),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Unsafe {
                                                                                                                attrs: [],
                                                                                                                unsafe_token: Unsafe,
                                                                                                                block: Block {
                                                                                                                    brace_token: Brace,
                                                                                                                    stmts: [
                                                                                                                        Stmt::Expr(
                                                                                                                            Expr::Call {
                                                                                                                                attrs: [],
                                                                                                                                func: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: String,
                                                                                                                                                    span: bytes(13280..13286),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                            PathSep,
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: from_utf8_unchecked,
                                                                                                                                                    span: bytes(13288..13307),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                paren_token: Paren,
                                                                                                                                args: [
                                                                                                                                    Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: bytes,
                                                                                                                                                        span: bytes(13308..13313),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                            None,
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    None,
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    comma: None,
                                                                                },
                                                                                Arm {
                                                                                    attrs: [],
                                                                                    pat: Pat::TupleStruct {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Cow,
                                                                                                        span: bytes(13352..13355),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Owned,
                                                                                                        span: bytes(13357..13362),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        elems: [
                                                                                            Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: s,
                                                                                                    span: bytes(13363..13364),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    guard: None,
                                                                                    fat_arrow_token: FatArrow,
                                                                                    body: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Cow,
                                                                                                            span: bytes(13369..13372),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Owned,
                                                                                                            span: bytes(13374..13379),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: s,
                                                                                                                span: bytes(13380..13381),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    comma: Some(
                                                                                        Comma,
                                                                                    ),
                                                                                },
                                                                            ],
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                        comma: None,
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubS,
                    },
                ],
                traits: [
                    TraitItem {
                        trait_name: Name {
                            name: "Target",
                            complete_name: "form_urlencoded::Target",
                            import_name: MyPath {
                                name: "form_urlencoded",
                                next: Some(
                                    MyPath {
                                        name: "Target",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemTrait {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                unsafety: None,
                                auto_token: None,
                                restriction: None,
                                trait_token: Trait,
                                ident: Ident {
                                    sym: Target,
                                    span: bytes(5725..5731),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: None,
                                supertraits: [],
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [
                            TraitTypeItem {
                                item: Some(
                                    TraitItemType {
                                        attrs: [],
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Finished,
                                            span: bytes(5830..5838),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: None,
                                        bounds: [],
                                        default: None,
                                        semi_token: Semi,
                                    },
                                ),
                            },
                        ],
                        consts: [],
                        functions: [
                            TraitFnItem {
                                fn_name: Name {
                                    name: "as_mut_string",
                                    complete_name: "<  as form_urlencoded::Target>::as_mut_string",
                                    import_name: MyPath {
                                        name: "<  as form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Target>",
                                                next: Some(
                                                    MyPath {
                                                        name: "as_mut_string",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "Target::as_mut_string",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: as_mut_string,
                                                span: bytes(5741..5754),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(5760..5764),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: String,
                                                                        span: bytes(5774..5780),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        default: None,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                inside_items: [],
                                is_constructor: false,
                            },
                            TraitFnItem {
                                fn_name: Name {
                                    name: "finish",
                                    complete_name: "<  as form_urlencoded::Target>::finish",
                                    import_name: MyPath {
                                        name: "<  as form_urlencoded",
                                        next: Some(
                                            MyPath {
                                                name: "Target>",
                                                next: Some(
                                                    MyPath {
                                                        name: "finish",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "Target::finish",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: finish,
                                                span: bytes(5789..5795),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: None,
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(5796..5800),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(5805..5809),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Finished,
                                                                    span: bytes(5811..5819),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: None,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                inside_items: [],
                                is_constructor: true,
                            },
                        ],
                        visibility: PubT,
                        relative_types: [],
                    },
                ],
                use_trees: [
                    UseTree {
                        use_name: "Borrow",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "alloc",
                            next: Some(
                                MyPath {
                                    name: "borrow",
                                    next: Some(
                                        MyPath {
                                            name: "Borrow",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "Cow",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "alloc",
                            next: Some(
                                MyPath {
                                    name: "borrow",
                                    next: Some(
                                        MyPath {
                                            name: "Cow",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "ToOwned",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "alloc",
                            next: Some(
                                MyPath {
                                    name: "borrow",
                                    next: Some(
                                        MyPath {
                                            name: "ToOwned",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "String",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "alloc",
                            next: Some(
                                MyPath {
                                    name: "string",
                                    next: Some(
                                        MyPath {
                                            name: "String",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "str",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "core",
                            next: Some(
                                MyPath {
                                    name: "str",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "percent_decode",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "percent_encoding",
                            next: Some(
                                MyPath {
                                    name: "percent_decode",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "percent_encode_byte",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "percent_encoding",
                            next: Some(
                                MyPath {
                                    name: "percent_encode_byte",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                ],
            },
             sub_mods: []
             }
            ,
        },
    ],
}