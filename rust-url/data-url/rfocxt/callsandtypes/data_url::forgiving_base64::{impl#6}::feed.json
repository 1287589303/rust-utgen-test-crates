{"mod_name":"forgiving_base64","calls":["<core::slice::Iter<'_, u8> as core::iter::IntoIterator>::into_iter","core::result::Result::<","<core::slice::Iter<'_, u8> as core::iter::Iterator>::next","<F as core::ops::FnMut<","<forgiving_base64::InvalidBase64Details as core::convert::Into<forgiving_base64::DecodeError<E>>>::into","<core::result::Result<","core::slice::<impl [u8]>::iter","core::num::<impl u8>::saturating_add"],"types":["forgiving_base64::DecodeError<E>","isize","bool","fn(E) -> forgiving_base64::DecodeError<E> {forgiving_base64::DecodeError::<E>::WriteError}","forgiving_base64::Decoder<F, E>","[i8; 256]","core::convert::Infallible","i8","core::result::Result<(), E>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, forgiving_base64::DecodeError<E>>>","!","core::option::Option<&u8>","u8","forgiving_base64::InvalidBase64Details","(&[u8],)","usize","core::result::Result<(), forgiving_base64::DecodeError<E>>","()","u32","core::slice::Iter<'_, u8>","[u8]","E","core::result::Result<core::convert::Infallible, forgiving_base64::DecodeError<E>>","[u8; 3]","(u8, bool)","F"]}