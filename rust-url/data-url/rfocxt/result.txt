fns:
{
    "data_url::forgiving_base64::Decoder::new": FnData {
        fn_name: "new",
        complete_fn_name: "data_url::forgiving_base64::Decoder::new",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "new",
                    complete_name: "data_url::forgiving_base64::Decoder::new",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "Decoder",
                                        next: Some(
                                            MyPath {
                                                name: "new",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#6}::new",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: new,
                                span: bytes(14573..14576),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: write_bytes,
                                                span: bytes(14577..14588),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: F,
                                                            span: bytes(14590..14591),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(14596..14600),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Struct {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Self,
                                                        span: bytes(14611..14615),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        brace_token: Brace,
                                        fields: [
                                            FieldValue {
                                                attrs: [],
                                                member: Member::Named(
                                                    Ident {
                                                        sym: write_bytes,
                                                        span: bytes(14630..14641),
                                                    },
                                                ),
                                                colon_token: None,
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: write_bytes,
                                                                    span: bytes(14630..14641),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Comma,
                                            FieldValue {
                                                attrs: [],
                                                member: Member::Named(
                                                    Ident {
                                                        sym: bit_buffer,
                                                        span: bytes(14655..14665),
                                                    },
                                                ),
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                expr: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                            Comma,
                                            FieldValue {
                                                attrs: [],
                                                member: Member::Named(
                                                    Ident {
                                                        sym: buffer_bit_length,
                                                        span: bytes(14682..14699),
                                                    },
                                                ),
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                expr: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                            Comma,
                                            FieldValue {
                                                attrs: [],
                                                member: Member::Named(
                                                    Ident {
                                                        sym: padding_symbols,
                                                        span: bytes(14716..14731),
                                                    },
                                                ),
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                expr: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                            Comma,
                                        ],
                                        dot2_token: None,
                                        rest: None,
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 6,
                struct_name: Name {
                    name: "Decoder",
                    complete_name: "data_url::forgiving_base64::Decoder",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "Decoder",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: Some(
                                Lt,
                            ),
                            params: [
                                GenericParam::Type(
                                    TypeParam {
                                        attrs: [],
                                        ident: Ident {
                                            sym: F,
                                            span: bytes(14496..14497),
                                        },
                                        colon_token: None,
                                        bounds: [],
                                        eq_token: None,
                                        default: None,
                                    },
                                ),
                                Comma,
                                GenericParam::Type(
                                    TypeParam {
                                        attrs: [],
                                        ident: Ident {
                                            sym: E,
                                            span: bytes(14499..14500),
                                        },
                                        colon_token: None,
                                        bounds: [],
                                        eq_token: None,
                                        default: None,
                                    },
                                ),
                            ],
                            gt_token: Some(
                                Gt,
                            ),
                            where_clause: Some(
                                WhereClause {
                                    where_token: Where,
                                    predicates: [
                                        WherePredicate::Type(
                                            PredicateType {
                                                lifetimes: None,
                                                bounded_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(14526..14527),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                colon_token: Colon,
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: FnMut,
                                                                            span: bytes(14529..14534),
                                                                        },
                                                                        arguments: PathArguments::Parenthesized {
                                                                            paren_token: Paren,
                                                                            inputs: [
                                                                                Type::Reference {
                                                                                    and_token: And,
                                                                                    lifetime: None,
                                                                                    mutability: None,
                                                                                    elem: Type::Slice {
                                                                                        bracket_token: Bracket,
                                                                                        elem: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u8,
                                                                                                            span: bytes(14537..14539),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                            output: ReturnType::Type(
                                                                                RArrow,
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Result,
                                                                                                    span: bytes(14545..14551),
                                                                                                },
                                                                                                arguments: PathArguments::AngleBracketed {
                                                                                                    colon2_token: None,
                                                                                                    lt_token: Lt,
                                                                                                    args: [
                                                                                                        GenericArgument::Type(
                                                                                                            Type::Tuple {
                                                                                                                paren_token: Paren,
                                                                                                                elems: [],
                                                                                                            },
                                                                                                        ),
                                                                                                        Comma,
                                                                                                        GenericArgument::Type(
                                                                                                            Type::Path {
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: E,
                                                                                                                                span: bytes(14556..14557),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                    gt_token: Gt,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                        Comma,
                                    ],
                                },
                            ),
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Decoder,
                                            span: bytes(14502..14509),
                                        },
                                        arguments: PathArguments::AngleBracketed {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                GenericArgument::Type(
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: F,
                                                                        span: bytes(14510..14511),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                GenericArgument::Type(
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: E,
                                                                        span: bytes(14513..14514),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "data_url::forgiving_base64::Decoder::new",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "forgiving_base64",
                                        next: Some(
                                            MyPath {
                                                name: "Decoder",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#6}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(14573..14576),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: write_bytes,
                                                        span: bytes(14577..14588),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(14590..14591),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(14596..14600),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(14611..14615),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: write_bytes,
                                                                span: bytes(14630..14641),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: write_bytes,
                                                                            span: bytes(14630..14641),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: bit_buffer,
                                                                span: bytes(14655..14665),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: buffer_bit_length,
                                                                span: bytes(14682..14699),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: padding_symbols,
                                                                span: bytes(14716..14731),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "feed",
                            complete_name: "data_url::forgiving_base64::Decoder::feed",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "forgiving_base64",
                                        next: Some(
                                            MyPath {
                                                name: "Decoder",
                                                next: Some(
                                                    MyPath {
                                                        name: "feed",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#6}::feed",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: feed,
                                        span: bytes(14838..14842),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(14848..14852),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(14854..14859),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(14863..14865),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(14871..14877),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Tuple {
                                                                        paren_token: Paren,
                                                                        elems: [],
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DecodeError,
                                                                                        span: bytes(14882..14893),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: E,
                                                                                                                    span: bytes(14894..14895),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "finish",
                            complete_name: "data_url::forgiving_base64::Decoder::finish",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "forgiving_base64",
                                        next: Some(
                                            MyPath {
                                                name: "Decoder",
                                                next: Some(
                                                    MyPath {
                                                        name: "finish",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#6}::finish",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: finish,
                                        span: bytes(16556..16562),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(16567..16571),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(16576..16582),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Tuple {
                                                                        paren_token: Paren,
                                                                        elems: [],
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DecodeError,
                                                                                        span: bytes(16587..16598),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: E,
                                                                                                                    span: bytes(16599..16600),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "data_url::decode_with_base64": FnData {
        fn_name: "decode_with_base64",
        complete_fn_name: "data_url::decode_with_base64",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "decode_with_base64",
                    complete_name: "data_url::decode_with_base64",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "decode_with_base64",
                                next: None,
                            },
                        ),
                    },
                },
                complete_name_in_file: "decode_with_base64",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: decode_with_base64,
                                span: bytes(11534..11552),
                            },
                            generics: Generics {
                                lt_token: Some(
                                    Lt,
                                ),
                                params: [
                                    GenericParam::Type(
                                        TypeParam {
                                            attrs: [],
                                            ident: Ident {
                                                sym: F,
                                                span: bytes(11553..11554),
                                            },
                                            colon_token: None,
                                            bounds: [],
                                            eq_token: None,
                                            default: None,
                                        },
                                    ),
                                    Comma,
                                    GenericParam::Type(
                                        TypeParam {
                                            attrs: [],
                                            ident: Ident {
                                                sym: E,
                                                span: bytes(11556..11557),
                                            },
                                            colon_token: None,
                                            bounds: [],
                                            eq_token: None,
                                            default: None,
                                        },
                                    ),
                                ],
                                gt_token: Some(
                                    Gt,
                                ),
                                where_clause: Some(
                                    WhereClause {
                                        where_token: Where,
                                        predicates: [
                                            WherePredicate::Type(
                                                PredicateType {
                                                    lifetimes: None,
                                                    bounded_ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: F,
                                                                        span: bytes(11706..11707),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    colon_token: Colon,
                                                    bounds: [
                                                        TypeParamBound::Trait(
                                                            TraitBound {
                                                                paren_token: None,
                                                                modifier: TraitBoundModifier::None,
                                                                lifetimes: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: FnMut,
                                                                                span: bytes(11709..11714),
                                                                            },
                                                                            arguments: PathArguments::Parenthesized {
                                                                                paren_token: Paren,
                                                                                inputs: [
                                                                                    Type::Reference {
                                                                                        and_token: And,
                                                                                        lifetime: None,
                                                                                        mutability: None,
                                                                                        elem: Type::Slice {
                                                                                            bracket_token: Bracket,
                                                                                            elem: Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: u8,
                                                                                                                span: bytes(11717..11719),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                                output: ReturnType::Type(
                                                                                    RArrow,
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Result,
                                                                                                        span: bytes(11725..11731),
                                                                                                    },
                                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                                        colon2_token: None,
                                                                                                        lt_token: Lt,
                                                                                                        args: [
                                                                                                            GenericArgument::Type(
                                                                                                                Type::Tuple {
                                                                                                                    paren_token: Paren,
                                                                                                                    elems: [],
                                                                                                                },
                                                                                                            ),
                                                                                                            Comma,
                                                                                                            GenericArgument::Type(
                                                                                                                Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: E,
                                                                                                                                    span: bytes(11736..11737),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                        gt_token: Gt,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Comma,
                                        ],
                                    },
                                ),
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: encoded_body_plus_fragment,
                                                span: bytes(11564..11590),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(11593..11596),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: write_bytes,
                                                span: bytes(11602..11613),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: F,
                                                            span: bytes(11615..11616),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(11623..11629),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Option,
                                                                                span: bytes(11630..11636),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: FragmentIdentifier,
                                                                                                            span: bytes(11637..11655),
                                                                                                        },
                                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                                            colon2_token: None,
                                                                                                            lt_token: Lt,
                                                                                                            args: [
                                                                                                                GenericArgument::Lifetime(
                                                                                                                    Lifetime {
                                                                                                                        apostrophe: bytes(11656..11657),
                                                                                                                        ident: Ident {
                                                                                                                            sym: _,
                                                                                                                            span: bytes(11657..11658),
                                                                                                                        },
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                            gt_token: Gt,
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: forgiving_base64,
                                                                                span: bytes(11662..11678),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: DecodeError,
                                                                                span: bytes(11680..11691),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: E,
                                                                                                            span: bytes(11692..11693),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: decoder,
                                            span: bytes(11754..11761),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: forgiving_base64,
                                                                    span: bytes(11764..11780),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Decoder,
                                                                    span: bytes(11782..11789),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: new,
                                                                    span: bytes(11791..11794),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: write_bytes,
                                                                        span: bytes(11795..11806),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: fragment,
                                            span: bytes(11817..11825),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Try {
                                                attrs: [],
                                                expr: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: decode_without_base64,
                                                                        span: bytes(11828..11849),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: encoded_body_plus_fragment,
                                                                            span: bytes(11850..11876),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        Comma,
                                                        Expr::Closure {
                                                            attrs: [],
                                                            lifetimes: None,
                                                            constness: None,
                                                            movability: None,
                                                            asyncness: None,
                                                            capture: None,
                                                            or1_token: Or,
                                                            inputs: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: bytes,
                                                                        span: bytes(11879..11884),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                            or2_token: Or,
                                                            output: ReturnType::Default,
                                                            body: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: decoder,
                                                                                    span: bytes(11886..11893),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: feed,
                                                                    span: bytes(11894..11898),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: bytes,
                                                                                        span: bytes(11899..11904),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                                question_token: Question,
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Try {
                                        attrs: [],
                                        expr: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: decoder,
                                                                span: bytes(11913..11920),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: finish,
                                                span: bytes(11921..11927),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [],
                                        },
                                        question_token: Question,
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Ok,
                                                            span: bytes(11936..11938),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fragment,
                                                                span: bytes(11939..11947),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "data_url::DataUrl::process": FnData {
        fn_name: "process",
        complete_fn_name: "data_url::DataUrl::process",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "process",
                    complete_name: "data_url::DataUrl::process",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "DataUrl",
                                next: Some(
                                    MyPath {
                                        name: "process",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#2}::process",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: process,
                                span: bytes(1845..1852),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: input,
                                                span: bytes(1853..1858),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: Some(
                                                Lifetime {
                                                    apostrophe: bytes(1861..1862),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(1862..1863),
                                                    },
                                                },
                                            ),
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(1864..1867),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(1872..1878),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(1879..1883),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: DataUrlError,
                                                                                span: bytes(1885..1897),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Item(
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                    span: bytes(1913..1918),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: DataUrlError,
                                                            span: bytes(1920..1932),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Glob(
                                                            UseGlob {
                                                                star_token: Star,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: after_colon,
                                            span: bytes(1950..1961),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Try {
                                                attrs: [],
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: pretend_parse_data_url,
                                                                            span: bytes(1964..1986),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: input,
                                                                                span: bytes(1987..1992),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: ok_or,
                                                        span: bytes(1994..1999),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: NotADataUrl,
                                                                            span: bytes(2000..2011),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                                question_token: Question,
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Tuple {
                                        attrs: [],
                                        paren_token: Paren,
                                        elems: [
                                            Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: from_colon_to_comma,
                                                    span: bytes(2029..2048),
                                                },
                                                subpat: None,
                                            },
                                            Comma,
                                            Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: encoded_body_plus_fragment,
                                                    span: bytes(2050..2076),
                                                },
                                                subpat: None,
                                            },
                                        ],
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Try {
                                                attrs: [],
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: find_comma_before_fragment,
                                                                            span: bytes(2092..2118),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: after_colon,
                                                                                span: bytes(2119..2130),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: ok_or,
                                                        span: bytes(2132..2137),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: NoComma,
                                                                            span: bytes(2138..2145),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                                question_token: Question,
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Tuple {
                                        attrs: [],
                                        paren_token: Paren,
                                        elems: [
                                            Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: mime_type,
                                                    span: bytes(2163..2172),
                                                },
                                                subpat: None,
                                            },
                                            Comma,
                                            Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: base64,
                                                    span: bytes(2174..2180),
                                                },
                                                subpat: None,
                                            },
                                        ],
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: parse_header,
                                                                    span: bytes(2184..2196),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: from_colon_to_comma,
                                                                        span: bytes(2197..2216),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Ok,
                                                            span: bytes(2228..2230),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: DataUrl,
                                                                span: bytes(2231..2238),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: mime_type,
                                                                span: bytes(2253..2262),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: mime_type,
                                                                            span: bytes(2253..2262),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: base64,
                                                                span: bytes(2276..2282),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: base64,
                                                                            span: bytes(2276..2282),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: encoded_body_plus_fragment,
                                                                span: bytes(2296..2322),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: encoded_body_plus_fragment,
                                                                            span: bytes(2296..2322),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [
                    Item::Use {
                        attrs: [],
                        vis: Visibility::Inherited,
                        use_token: Use,
                        leading_colon: None,
                        tree: UseTree::Path(
                            UsePath {
                                ident: Ident {
                                    sym: crate,
                                    span: bytes(1913..1918),
                                },
                                colon2_token: PathSep,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: DataUrlError,
                                            span: bytes(1920..1932),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Glob(
                                            UseGlob {
                                                star_token: Star,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_token: Semi,
                    },
                ],
                visibility: PubT,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 2,
                struct_name: Name {
                    name: "DataUrl",
                    complete_name: "data_url::DataUrl",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "DataUrl",
                                next: None,
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: Some(
                                Lt,
                            ),
                            params: [
                                GenericParam::Lifetime(
                                    LifetimeParam {
                                        attrs: [],
                                        lifetime: Lifetime {
                                            apostrophe: bytes(1663..1664),
                                            ident: Ident {
                                                sym: a,
                                                span: bytes(1664..1665),
                                            },
                                        },
                                        colon_token: None,
                                        bounds: [],
                                    },
                                ),
                            ],
                            gt_token: Some(
                                Gt,
                            ),
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: DataUrl,
                                            span: bytes(1667..1674),
                                        },
                                        arguments: PathArguments::AngleBracketed {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                GenericArgument::Lifetime(
                                                    Lifetime {
                                                        apostrophe: bytes(1675..1676),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(1676..1677),
                                                        },
                                                    },
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "process",
                            complete_name: "data_url::DataUrl::process",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "process",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::process",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: process,
                                        span: bytes(1845..1852),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(1853..1858),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(1861..1862),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(1862..1863),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(1864..1867),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(1872..1878),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(1879..1883),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DataUrlError,
                                                                                        span: bytes(1885..1897),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Item(
                                            Item::Use {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: crate,
                                                            span: bytes(1913..1918),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: DataUrlError,
                                                                    span: bytes(1920..1932),
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Glob(
                                                                    UseGlob {
                                                                        star_token: Star,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: after_colon,
                                                    span: bytes(1950..1961),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: pretend_parse_data_url,
                                                                                    span: bytes(1964..1986),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: input,
                                                                                        span: bytes(1987..1992),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: ok_or,
                                                                span: bytes(1994..1999),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: NotADataUrl,
                                                                                    span: bytes(2000..2011),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: from_colon_to_comma,
                                                            span: bytes(2029..2048),
                                                        },
                                                        subpat: None,
                                                    },
                                                    Comma,
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: encoded_body_plus_fragment,
                                                            span: bytes(2050..2076),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: find_comma_before_fragment,
                                                                                    span: bytes(2092..2118),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: after_colon,
                                                                                        span: bytes(2119..2130),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: ok_or,
                                                                span: bytes(2132..2137),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: NoComma,
                                                                                    span: bytes(2138..2145),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: mime_type,
                                                            span: bytes(2163..2172),
                                                        },
                                                        subpat: None,
                                                    },
                                                    Comma,
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: base64,
                                                            span: bytes(2174..2180),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: parse_header,
                                                                            span: bytes(2184..2196),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from_colon_to_comma,
                                                                                span: bytes(2197..2216),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Ok,
                                                                    span: bytes(2228..2230),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: DataUrl,
                                                                        span: bytes(2231..2238),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: mime_type,
                                                                        span: bytes(2253..2262),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: mime_type,
                                                                                    span: bytes(2253..2262),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: base64,
                                                                        span: bytes(2276..2282),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: base64,
                                                                                    span: bytes(2276..2282),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: encoded_body_plus_fragment,
                                                                        span: bytes(2296..2322),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: encoded_body_plus_fragment,
                                                                                    span: bytes(2296..2322),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Use {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: crate,
                                            span: bytes(1913..1918),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: DataUrlError,
                                                    span: bytes(1920..1932),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Glob(
                                                    UseGlob {
                                                        star_token: Star,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "mime_type",
                            complete_name: "data_url::DataUrl::mime_type",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "mime_type",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::mime_type",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: mime_type,
                                        span: bytes(2353..2362),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(2364..2368),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: mime,
                                                                span: bytes(2374..2378),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Mime,
                                                                span: bytes(2380..2384),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "decode",
                            complete_name: "data_url::DataUrl::decode",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "decode",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::decode",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: decode,
                                        span: bytes(2561..2567),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: F,
                                                        span: bytes(2568..2569),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: E,
                                                        span: bytes(2571..2572),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: Some(
                                            WhereClause {
                                                where_token: Where,
                                                predicates: [
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: F,
                                                                                span: bytes(2719..2720),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: FnMut,
                                                                                        span: bytes(2722..2727),
                                                                                    },
                                                                                    arguments: PathArguments::Parenthesized {
                                                                                        paren_token: Paren,
                                                                                        inputs: [
                                                                                            Type::Reference {
                                                                                                and_token: And,
                                                                                                lifetime: None,
                                                                                                mutability: None,
                                                                                                elem: Type::Slice {
                                                                                                    bracket_token: Bracket,
                                                                                                    elem: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: u8,
                                                                                                                        span: bytes(2730..2732),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                        output: ReturnType::Type(
                                                                                            RArrow,
                                                                                            Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Result,
                                                                                                                span: bytes(2738..2744),
                                                                                                            },
                                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                                colon2_token: None,
                                                                                                                lt_token: Lt,
                                                                                                                args: [
                                                                                                                    GenericArgument::Type(
                                                                                                                        Type::Tuple {
                                                                                                                            paren_token: Paren,
                                                                                                                            elems: [],
                                                                                                                        },
                                                                                                                    ),
                                                                                                                    Comma,
                                                                                                                    GenericArgument::Type(
                                                                                                                        Type::Path {
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: E,
                                                                                                                                            span: bytes(2749..2750),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ),
                                                                                                                ],
                                                                                                                gt_token: Gt,
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                ],
                                            },
                                        ),
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(2584..2588),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: write_body_bytes,
                                                        span: bytes(2598..2614),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(2616..2617),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(2628..2634),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Option,
                                                                                        span: bytes(2635..2641),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: FragmentIdentifier,
                                                                                                                    span: bytes(2642..2660),
                                                                                                                },
                                                                                                                arguments: PathArguments::AngleBracketed {
                                                                                                                    colon2_token: None,
                                                                                                                    lt_token: Lt,
                                                                                                                    args: [
                                                                                                                        GenericArgument::Lifetime(
                                                                                                                            Lifetime {
                                                                                                                                apostrophe: bytes(2661..2662),
                                                                                                                                ident: Ident {
                                                                                                                                    sym: a,
                                                                                                                                    span: bytes(2662..2663),
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                    gt_token: Gt,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: forgiving_base64,
                                                                                        span: bytes(2667..2683),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DecodeError,
                                                                                        span: bytes(2685..2696),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: E,
                                                                                                                    span: bytes(2697..2698),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "decode_to_vec",
                            complete_name: "data_url::DataUrl::decode_to_vec",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "decode_to_vec",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::decode_to_vec",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: decode_to_vec,
                                        span: bytes(3146..3159),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(3170..3174),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(3185..3191),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Tuple {
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Vec,
                                                                                                span: bytes(3193..3196),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: u8,
                                                                                                                            span: bytes(3197..3199),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Option,
                                                                                                span: bytes(3202..3208),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: FragmentIdentifier,
                                                                                                                            span: bytes(3209..3227),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                                                            colon2_token: None,
                                                                                                                            lt_token: Lt,
                                                                                                                            args: [
                                                                                                                                GenericArgument::Lifetime(
                                                                                                                                    Lifetime {
                                                                                                                                        apostrophe: bytes(3228..3229),
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: a,
                                                                                                                                            span: bytes(3229..3230),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                            gt_token: Gt,
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: forgiving_base64,
                                                                                        span: bytes(3235..3251),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: InvalidBase64,
                                                                                        span: bytes(3253..3266),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "data_url::mime::http_whitespace": FnData {
        fn_name: "http_whitespace",
        complete_fn_name: "data_url::mime::http_whitespace",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "http_whitespace",
                    complete_name: "data_url::mime::http_whitespace",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "http_whitespace",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "http_whitespace",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: http_whitespace,
                                span: bytes(25197..25212),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: c,
                                                span: bytes(25213..25214),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: char,
                                                            span: bytes(25216..25220),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: bool,
                                                    span: bytes(25225..25229),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Macro {
                                        attrs: [],
                                        mac: Macro {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: matches,
                                                            span: bytes(25236..25243),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            bang_token: Not,
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: c,
                                                    span: bytes(25245..25246),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(25246..25247),
                                                },
                                                Literal {
                                                    lit: ' ',
                                                    span: bytes(25248..25251),
                                                },
                                                Punct {
                                                    char: '|',
                                                    spacing: Alone,
                                                    span: bytes(25252..25253),
                                                },
                                                Literal {
                                                    lit: '\t',
                                                    span: bytes(25254..25258),
                                                },
                                                Punct {
                                                    char: '|',
                                                    spacing: Alone,
                                                    span: bytes(25259..25260),
                                                },
                                                Literal {
                                                    lit: '\n',
                                                    span: bytes(25261..25265),
                                                },
                                                Punct {
                                                    char: '|',
                                                    spacing: Alone,
                                                    span: bytes(25266..25267),
                                                },
                                                Literal {
                                                    lit: '\r',
                                                    span: bytes(25268..25272),
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "data_url::DataUrl::mime_type": FnData {
        fn_name: "mime_type",
        complete_fn_name: "data_url::DataUrl::mime_type",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "mime_type",
                    complete_name: "data_url::DataUrl::mime_type",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "DataUrl",
                                next: Some(
                                    MyPath {
                                        name: "mime_type",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#2}::mime_type",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: mime_type,
                                span: bytes(2353..2362),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(2364..2368),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Reference {
                                    and_token: And,
                                    lifetime: None,
                                    mutability: None,
                                    elem: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: mime,
                                                        span: bytes(2374..2378),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Mime,
                                                        span: bytes(2380..2384),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Reference {
                                        attrs: [],
                                        and_token: And,
                                        mutability: None,
                                        expr: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(2396..2400),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Named(
                                                Ident {
                                                    sym: mime_type,
                                                    span: bytes(2401..2410),
                                                },
                                            ),
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 2,
                struct_name: Name {
                    name: "DataUrl",
                    complete_name: "data_url::DataUrl",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "DataUrl",
                                next: None,
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: Some(
                                Lt,
                            ),
                            params: [
                                GenericParam::Lifetime(
                                    LifetimeParam {
                                        attrs: [],
                                        lifetime: Lifetime {
                                            apostrophe: bytes(1663..1664),
                                            ident: Ident {
                                                sym: a,
                                                span: bytes(1664..1665),
                                            },
                                        },
                                        colon_token: None,
                                        bounds: [],
                                    },
                                ),
                            ],
                            gt_token: Some(
                                Gt,
                            ),
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: DataUrl,
                                            span: bytes(1667..1674),
                                        },
                                        arguments: PathArguments::AngleBracketed {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                GenericArgument::Lifetime(
                                                    Lifetime {
                                                        apostrophe: bytes(1675..1676),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(1676..1677),
                                                        },
                                                    },
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "process",
                            complete_name: "data_url::DataUrl::process",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "process",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::process",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: process,
                                        span: bytes(1845..1852),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(1853..1858),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(1861..1862),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(1862..1863),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(1864..1867),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(1872..1878),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(1879..1883),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DataUrlError,
                                                                                        span: bytes(1885..1897),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Item(
                                            Item::Use {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: crate,
                                                            span: bytes(1913..1918),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: DataUrlError,
                                                                    span: bytes(1920..1932),
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Glob(
                                                                    UseGlob {
                                                                        star_token: Star,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: after_colon,
                                                    span: bytes(1950..1961),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: pretend_parse_data_url,
                                                                                    span: bytes(1964..1986),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: input,
                                                                                        span: bytes(1987..1992),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: ok_or,
                                                                span: bytes(1994..1999),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: NotADataUrl,
                                                                                    span: bytes(2000..2011),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: from_colon_to_comma,
                                                            span: bytes(2029..2048),
                                                        },
                                                        subpat: None,
                                                    },
                                                    Comma,
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: encoded_body_plus_fragment,
                                                            span: bytes(2050..2076),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: find_comma_before_fragment,
                                                                                    span: bytes(2092..2118),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: after_colon,
                                                                                        span: bytes(2119..2130),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: ok_or,
                                                                span: bytes(2132..2137),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: NoComma,
                                                                                    span: bytes(2138..2145),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: mime_type,
                                                            span: bytes(2163..2172),
                                                        },
                                                        subpat: None,
                                                    },
                                                    Comma,
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: base64,
                                                            span: bytes(2174..2180),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: parse_header,
                                                                            span: bytes(2184..2196),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from_colon_to_comma,
                                                                                span: bytes(2197..2216),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Ok,
                                                                    span: bytes(2228..2230),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: DataUrl,
                                                                        span: bytes(2231..2238),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: mime_type,
                                                                        span: bytes(2253..2262),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: mime_type,
                                                                                    span: bytes(2253..2262),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: base64,
                                                                        span: bytes(2276..2282),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: base64,
                                                                                    span: bytes(2276..2282),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: encoded_body_plus_fragment,
                                                                        span: bytes(2296..2322),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: encoded_body_plus_fragment,
                                                                                    span: bytes(2296..2322),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Use {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: crate,
                                            span: bytes(1913..1918),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: DataUrlError,
                                                    span: bytes(1920..1932),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Glob(
                                                    UseGlob {
                                                        star_token: Star,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "mime_type",
                            complete_name: "data_url::DataUrl::mime_type",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "mime_type",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::mime_type",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: mime_type,
                                        span: bytes(2353..2362),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(2364..2368),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: mime,
                                                                span: bytes(2374..2378),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Mime,
                                                                span: bytes(2380..2384),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "decode",
                            complete_name: "data_url::DataUrl::decode",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "decode",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::decode",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: decode,
                                        span: bytes(2561..2567),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: F,
                                                        span: bytes(2568..2569),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: E,
                                                        span: bytes(2571..2572),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: Some(
                                            WhereClause {
                                                where_token: Where,
                                                predicates: [
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: F,
                                                                                span: bytes(2719..2720),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: FnMut,
                                                                                        span: bytes(2722..2727),
                                                                                    },
                                                                                    arguments: PathArguments::Parenthesized {
                                                                                        paren_token: Paren,
                                                                                        inputs: [
                                                                                            Type::Reference {
                                                                                                and_token: And,
                                                                                                lifetime: None,
                                                                                                mutability: None,
                                                                                                elem: Type::Slice {
                                                                                                    bracket_token: Bracket,
                                                                                                    elem: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: u8,
                                                                                                                        span: bytes(2730..2732),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                        output: ReturnType::Type(
                                                                                            RArrow,
                                                                                            Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Result,
                                                                                                                span: bytes(2738..2744),
                                                                                                            },
                                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                                colon2_token: None,
                                                                                                                lt_token: Lt,
                                                                                                                args: [
                                                                                                                    GenericArgument::Type(
                                                                                                                        Type::Tuple {
                                                                                                                            paren_token: Paren,
                                                                                                                            elems: [],
                                                                                                                        },
                                                                                                                    ),
                                                                                                                    Comma,
                                                                                                                    GenericArgument::Type(
                                                                                                                        Type::Path {
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: E,
                                                                                                                                            span: bytes(2749..2750),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ),
                                                                                                                ],
                                                                                                                gt_token: Gt,
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                ],
                                            },
                                        ),
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(2584..2588),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: write_body_bytes,
                                                        span: bytes(2598..2614),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(2616..2617),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(2628..2634),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Option,
                                                                                        span: bytes(2635..2641),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: FragmentIdentifier,
                                                                                                                    span: bytes(2642..2660),
                                                                                                                },
                                                                                                                arguments: PathArguments::AngleBracketed {
                                                                                                                    colon2_token: None,
                                                                                                                    lt_token: Lt,
                                                                                                                    args: [
                                                                                                                        GenericArgument::Lifetime(
                                                                                                                            Lifetime {
                                                                                                                                apostrophe: bytes(2661..2662),
                                                                                                                                ident: Ident {
                                                                                                                                    sym: a,
                                                                                                                                    span: bytes(2662..2663),
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                    gt_token: Gt,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: forgiving_base64,
                                                                                        span: bytes(2667..2683),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DecodeError,
                                                                                        span: bytes(2685..2696),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: E,
                                                                                                                    span: bytes(2697..2698),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "decode_to_vec",
                            complete_name: "data_url::DataUrl::decode_to_vec",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "decode_to_vec",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::decode_to_vec",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: decode_to_vec,
                                        span: bytes(3146..3159),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(3170..3174),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(3185..3191),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Tuple {
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Vec,
                                                                                                span: bytes(3193..3196),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: u8,
                                                                                                                            span: bytes(3197..3199),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Option,
                                                                                                span: bytes(3202..3208),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: FragmentIdentifier,
                                                                                                                            span: bytes(3209..3227),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                                                            colon2_token: None,
                                                                                                                            lt_token: Lt,
                                                                                                                            args: [
                                                                                                                                GenericArgument::Lifetime(
                                                                                                                                    Lifetime {
                                                                                                                                        apostrophe: bytes(3228..3229),
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: a,
                                                                                                                                            span: bytes(3229..3230),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                            gt_token: Gt,
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: forgiving_base64,
                                                                                        span: bytes(3235..3251),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: InvalidBase64,
                                                                                        span: bytes(3253..3266),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "data_url::forgiving_base64::Decoder::feed": FnData {
        fn_name: "feed",
        complete_fn_name: "data_url::forgiving_base64::Decoder::feed",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "feed",
                    complete_name: "data_url::forgiving_base64::Decoder::feed",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "Decoder",
                                        next: Some(
                                            MyPath {
                                                name: "feed",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#6}::feed",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: feed,
                                span: bytes(14838..14842),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(14848..14852),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: input,
                                                span: bytes(14854..14859),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Slice {
                                                bracket_token: Bracket,
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u8,
                                                                    span: bytes(14863..14865),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(14871..14877),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Tuple {
                                                                paren_token: Paren,
                                                                elems: [],
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: DecodeError,
                                                                                span: bytes(14882..14893),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: E,
                                                                                                            span: bytes(14894..14895),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::ForLoop {
                                        attrs: [],
                                        label: None,
                                        for_token: For,
                                        pat: Pat::Reference {
                                            attrs: [],
                                            and_token: And,
                                            mutability: None,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: byte,
                                                    span: bytes(14913..14917),
                                                },
                                                subpat: None,
                                            },
                                        },
                                        in_token: In,
                                        expr: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: input,
                                                                span: bytes(14921..14926),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: iter,
                                                span: bytes(14927..14931),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [],
                                        },
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: value,
                                                            span: bytes(14952..14957),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Index {
                                                                attrs: [],
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: BASE64_DECODE_TABLE,
                                                                                    span: bytes(14960..14979),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                bracket_token: Bracket,
                                                                index: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: byte,
                                                                                        span: bytes(14980..14984),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: usize,
                                                                                        span: bytes(14988..14993),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: value,
                                                                                span: bytes(15011..15016),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Lt(
                                                                Lt,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::Macro {
                                                                            attrs: [],
                                                                            mac: Macro {
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: matches,
                                                                                                span: bytes(15149..15156),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                bang_token: Not,
                                                                                delimiter: MacroDelimiter::Paren(
                                                                                    Paren,
                                                                                ),
                                                                                tokens: TokenStream [
                                                                                    Ident {
                                                                                        sym: byte,
                                                                                        span: bytes(15158..15162),
                                                                                    },
                                                                                    Punct {
                                                                                        char: ',',
                                                                                        spacing: Alone,
                                                                                        span: bytes(15162..15163),
                                                                                    },
                                                                                    Literal {
                                                                                        lit: b' ',
                                                                                        span: bytes(15164..15168),
                                                                                    },
                                                                                    Punct {
                                                                                        char: '|',
                                                                                        spacing: Alone,
                                                                                        span: bytes(15169..15170),
                                                                                    },
                                                                                    Literal {
                                                                                        lit: b'\t',
                                                                                        span: bytes(15171..15176),
                                                                                    },
                                                                                    Punct {
                                                                                        char: '|',
                                                                                        spacing: Alone,
                                                                                        span: bytes(15177..15178),
                                                                                    },
                                                                                    Literal {
                                                                                        lit: b'\n',
                                                                                        span: bytes(15179..15184),
                                                                                    },
                                                                                    Punct {
                                                                                        char: '|',
                                                                                        spacing: Alone,
                                                                                        span: bytes(15185..15186),
                                                                                    },
                                                                                    Literal {
                                                                                        lit: b'\r',
                                                                                        span: bytes(15187..15192),
                                                                                    },
                                                                                    Punct {
                                                                                        char: '|',
                                                                                        spacing: Alone,
                                                                                        span: bytes(15193..15194),
                                                                                    },
                                                                                    Literal {
                                                                                        lit: b'\x0C',
                                                                                        span: bytes(15195..15202),
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Continue {
                                                                                        attrs: [],
                                                                                        continue_token: Continue,
                                                                                        label: None,
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: None,
                                                                    },
                                                                    None,
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: byte,
                                                                                                span: bytes(15274..15278),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Eq(
                                                                                EqEq,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Byte {
                                                                                    token: b'=',
                                                                                },
                                                                            },
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Assign {
                                                                                        attrs: [],
                                                                                        left: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(15309..15313),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: padding_symbols,
                                                                                                    span: bytes(15314..15329),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        eq_token: Eq,
                                                                                        right: Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(15332..15336),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: padding_symbols,
                                                                                                        span: bytes(15337..15352),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: saturating_add,
                                                                                                span: bytes(15353..15367),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::Continue {
                                                                                        attrs: [],
                                                                                        continue_token: Continue,
                                                                                        label: None,
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: None,
                                                                    },
                                                                    None,
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::Return {
                                                                        attrs: [],
                                                                        return_token: Return,
                                                                        expr: Some(
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Err,
                                                                                                    span: bytes(15444..15447),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: InvalidBase64Details,
                                                                                                                span: bytes(15448..15468),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: UnexpectedSymbol,
                                                                                                                span: bytes(15470..15486),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: byte,
                                                                                                                    span: bytes(15487..15491),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: into,
                                                                                            span: bytes(15493..15497),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(15531..15535),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: padding_symbols,
                                                                        span: bytes(15536..15551),
                                                                    },
                                                                ),
                                                            },
                                                            op: BinOp::Gt(
                                                                Gt,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Return {
                                                                        attrs: [],
                                                                        return_token: Return,
                                                                        expr: Some(
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Err,
                                                                                                    span: bytes(15581..15584),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: InvalidBase64Details,
                                                                                                            span: bytes(15585..15605),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: AlphabetSymbolAfterPadding,
                                                                                                            span: bytes(15607..15633),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: into,
                                                                                            span: bytes(15634..15638),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(15669..15673),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: bit_buffer,
                                                                    span: bytes(15674..15684),
                                                                },
                                                            ),
                                                        },
                                                        op: BinOp::ShlAssign(
                                                            ShlEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 6,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(15704..15708),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: bit_buffer,
                                                                    span: bytes(15709..15719),
                                                                },
                                                            ),
                                                        },
                                                        op: BinOp::BitOrAssign(
                                                            OrEq,
                                                        ),
                                                        right: Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: value,
                                                                                span: bytes(15723..15728),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u32,
                                                                                span: bytes(15732..15735),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(15818..15822),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: buffer_bit_length,
                                                                        span: bytes(15823..15840),
                                                                    },
                                                                ),
                                                            },
                                                            op: BinOp::Lt(
                                                                Lt,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 18,
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(15864..15868),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: buffer_bit_length,
                                                                                    span: bytes(15869..15886),
                                                                                },
                                                                            ),
                                                                        },
                                                                        op: BinOp::AddAssign(
                                                                            PlusEq,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 6,
                                                                            },
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: Some(
                                                            (
                                                                Else,
                                                                Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Local {
                                                                                attrs: [],
                                                                                let_token: Let,
                                                                                pat: Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: byte_buffer,
                                                                                        span: bytes(16023..16034),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                                init: Some(
                                                                                    LocalInit {
                                                                                        eq_token: Eq,
                                                                                        expr: Expr::Array {
                                                                                            attrs: [],
                                                                                            bracket_token: Bracket,
                                                                                            elems: [
                                                                                                Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Paren {
                                                                                                        attrs: [],
                                                                                                        paren_token: Paren,
                                                                                                        expr: Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Field {
                                                                                                                attrs: [],
                                                                                                                base: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: self,
                                                                                                                                    span: bytes(16060..16064),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                member: Member::Named(
                                                                                                                    Ident {
                                                                                                                        sym: bit_buffer,
                                                                                                                        span: bytes(16065..16075),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                            op: BinOp::Shr(
                                                                                                                Shr,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 16,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: u8,
                                                                                                                        span: bytes(16086..16088),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                Comma,
                                                                                                Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Paren {
                                                                                                        attrs: [],
                                                                                                        paren_token: Paren,
                                                                                                        expr: Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Field {
                                                                                                                attrs: [],
                                                                                                                base: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: self,
                                                                                                                                    span: bytes(16111..16115),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                member: Member::Named(
                                                                                                                    Ident {
                                                                                                                        sym: bit_buffer,
                                                                                                                        span: bytes(16116..16126),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                            op: BinOp::Shr(
                                                                                                                Shr,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 8,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: u8,
                                                                                                                        span: bytes(16136..16138),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                Comma,
                                                                                                Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Field {
                                                                                                        attrs: [],
                                                                                                        base: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: self,
                                                                                                                            span: bytes(16160..16164),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        member: Member::Named(
                                                                                                            Ident {
                                                                                                                sym: bit_buffer,
                                                                                                                span: bytes(16165..16175),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: u8,
                                                                                                                        span: bytes(16179..16181),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                Comma,
                                                                                            ],
                                                                                        },
                                                                                        diverge: None,
                                                                                    },
                                                                                ),
                                                                                semi_token: Semi,
                                                                            },
                                                                            Stmt::Expr(
                                                                                Expr::Try {
                                                                                    attrs: [],
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Paren {
                                                                                                attrs: [],
                                                                                                paren_token: Paren,
                                                                                                expr: Expr::Field {
                                                                                                    attrs: [],
                                                                                                    base: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: self,
                                                                                                                        span: bytes(16219..16223),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    member: Member::Named(
                                                                                                        Ident {
                                                                                                            sym: write_bytes,
                                                                                                            span: bytes(16224..16235),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Reference {
                                                                                                    attrs: [],
                                                                                                    and_token: And,
                                                                                                    mutability: None,
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: byte_buffer,
                                                                                                                        span: bytes(16238..16249),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: map_err,
                                                                                            span: bytes(16251..16258),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: DecodeError,
                                                                                                                span: bytes(16259..16270),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: WriteError,
                                                                                                                span: bytes(16272..16282),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    question_token: Question,
                                                                                },
                                                                                Some(
                                                                                    Semi,
                                                                                ),
                                                                            ),
                                                                            Stmt::Expr(
                                                                                Expr::Assign {
                                                                                    attrs: [],
                                                                                    left: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(16302..16306),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: buffer_bit_length,
                                                                                                span: bytes(16307..16324),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    eq_token: Eq,
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 0,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                Some(
                                                                                    Semi,
                                                                                ),
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Ok,
                                                            span: bytes(16482..16484),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [],
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 6,
                struct_name: Name {
                    name: "Decoder",
                    complete_name: "data_url::forgiving_base64::Decoder",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "Decoder",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: Some(
                                Lt,
                            ),
                            params: [
                                GenericParam::Type(
                                    TypeParam {
                                        attrs: [],
                                        ident: Ident {
                                            sym: F,
                                            span: bytes(14496..14497),
                                        },
                                        colon_token: None,
                                        bounds: [],
                                        eq_token: None,
                                        default: None,
                                    },
                                ),
                                Comma,
                                GenericParam::Type(
                                    TypeParam {
                                        attrs: [],
                                        ident: Ident {
                                            sym: E,
                                            span: bytes(14499..14500),
                                        },
                                        colon_token: None,
                                        bounds: [],
                                        eq_token: None,
                                        default: None,
                                    },
                                ),
                            ],
                            gt_token: Some(
                                Gt,
                            ),
                            where_clause: Some(
                                WhereClause {
                                    where_token: Where,
                                    predicates: [
                                        WherePredicate::Type(
                                            PredicateType {
                                                lifetimes: None,
                                                bounded_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(14526..14527),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                colon_token: Colon,
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: FnMut,
                                                                            span: bytes(14529..14534),
                                                                        },
                                                                        arguments: PathArguments::Parenthesized {
                                                                            paren_token: Paren,
                                                                            inputs: [
                                                                                Type::Reference {
                                                                                    and_token: And,
                                                                                    lifetime: None,
                                                                                    mutability: None,
                                                                                    elem: Type::Slice {
                                                                                        bracket_token: Bracket,
                                                                                        elem: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u8,
                                                                                                            span: bytes(14537..14539),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                            output: ReturnType::Type(
                                                                                RArrow,
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Result,
                                                                                                    span: bytes(14545..14551),
                                                                                                },
                                                                                                arguments: PathArguments::AngleBracketed {
                                                                                                    colon2_token: None,
                                                                                                    lt_token: Lt,
                                                                                                    args: [
                                                                                                        GenericArgument::Type(
                                                                                                            Type::Tuple {
                                                                                                                paren_token: Paren,
                                                                                                                elems: [],
                                                                                                            },
                                                                                                        ),
                                                                                                        Comma,
                                                                                                        GenericArgument::Type(
                                                                                                            Type::Path {
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: E,
                                                                                                                                span: bytes(14556..14557),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                    gt_token: Gt,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                        Comma,
                                    ],
                                },
                            ),
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Decoder,
                                            span: bytes(14502..14509),
                                        },
                                        arguments: PathArguments::AngleBracketed {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                GenericArgument::Type(
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: F,
                                                                        span: bytes(14510..14511),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                GenericArgument::Type(
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: E,
                                                                        span: bytes(14513..14514),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "data_url::forgiving_base64::Decoder::new",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "forgiving_base64",
                                        next: Some(
                                            MyPath {
                                                name: "Decoder",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#6}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(14573..14576),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: write_bytes,
                                                        span: bytes(14577..14588),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(14590..14591),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(14596..14600),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(14611..14615),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: write_bytes,
                                                                span: bytes(14630..14641),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: write_bytes,
                                                                            span: bytes(14630..14641),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: bit_buffer,
                                                                span: bytes(14655..14665),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: buffer_bit_length,
                                                                span: bytes(14682..14699),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: padding_symbols,
                                                                span: bytes(14716..14731),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "feed",
                            complete_name: "data_url::forgiving_base64::Decoder::feed",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "forgiving_base64",
                                        next: Some(
                                            MyPath {
                                                name: "Decoder",
                                                next: Some(
                                                    MyPath {
                                                        name: "feed",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#6}::feed",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: feed,
                                        span: bytes(14838..14842),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(14848..14852),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(14854..14859),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(14863..14865),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(14871..14877),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Tuple {
                                                                        paren_token: Paren,
                                                                        elems: [],
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DecodeError,
                                                                                        span: bytes(14882..14893),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: E,
                                                                                                                    span: bytes(14894..14895),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "finish",
                            complete_name: "data_url::forgiving_base64::Decoder::finish",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "forgiving_base64",
                                        next: Some(
                                            MyPath {
                                                name: "Decoder",
                                                next: Some(
                                                    MyPath {
                                                        name: "finish",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#6}::finish",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: finish,
                                        span: bytes(16556..16562),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(16567..16571),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(16576..16582),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Tuple {
                                                                        paren_token: Paren,
                                                                        elems: [],
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DecodeError,
                                                                                        span: bytes(16587..16598),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: E,
                                                                                                                    span: bytes(16599..16600),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "data_url::mime::parse_parameters": FnData {
        fn_name: "parse_parameters",
        complete_fn_name: "data_url::mime::parse_parameters",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "parse_parameters",
                    complete_name: "data_url::mime::parse_parameters",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "parse_parameters",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "parse_parameters",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: parse_parameters,
                                span: bytes(21209..21225),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: s,
                                                span: bytes(21226..21227),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(21230..21233),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: parameters,
                                                span: bytes(21235..21245),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Vec,
                                                                span: bytes(21252..21255),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Tuple {
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: String,
                                                                                                    span: bytes(21257..21263),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: String,
                                                                                                    span: bytes(21265..21271),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: semicolon_separated,
                                            span: bytes(21289..21308),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: s,
                                                                    span: bytes(21311..21312),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: split,
                                                    span: bytes(21313..21318),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Char {
                                                            token: ';',
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::While {
                                        attrs: [],
                                        label: None,
                                        while_token: While,
                                        cond: Expr::Let {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::TupleStruct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Some,
                                                                span: bytes(21340..21344),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: piece,
                                                            span: bytes(21345..21350),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: semicolon_separated,
                                                                    span: bytes(21354..21373),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: next,
                                                    span: bytes(21374..21378),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                        },
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: piece,
                                                            span: bytes(21395..21400),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: piece,
                                                                                    span: bytes(21403..21408),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: trim_start_matches,
                                                                    span: bytes(21409..21427),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: http_whitespace,
                                                                                        span: bytes(21428..21443),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [
                                                            Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: name,
                                                                    span: bytes(21459..21463),
                                                                },
                                                                subpat: None,
                                                            },
                                                            Comma,
                                                            Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: value,
                                                                    span: bytes(21465..21470),
                                                                },
                                                                subpat: None,
                                                            },
                                                        ],
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: split2,
                                                                                    span: bytes(21474..21480),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: piece,
                                                                                        span: bytes(21481..21486),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Char {
                                                                            token: '=',
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: name_valid,
                                                            span: bytes(21654..21664),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Not(
                                                                            Not,
                                                                        ),
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: name,
                                                                                                span: bytes(21680..21684),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: is_empty,
                                                                                span: bytes(21685..21693),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                    },
                                                                    op: BinOp::And(
                                                                        AndAnd,
                                                                    ),
                                                                    right: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: only_http_token_code_points,
                                                                                            span: bytes(21699..21726),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: name,
                                                                                                span: bytes(21727..21731),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::And(
                                                                    AndAnd,
                                                                ),
                                                                right: Expr::Unary {
                                                                    attrs: [],
                                                                    op: UnOp::Not(
                                                                        Not,
                                                                    ),
                                                                    expr: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: contains,
                                                                                            span: bytes(21737..21745),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: parameters,
                                                                                                span: bytes(21746..21756),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: name,
                                                                                                span: bytes(21758..21762),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Let {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::TupleStruct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Some,
                                                                                span: bytes(21780..21784),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: value,
                                                                            span: bytes(21785..21790),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                ],
                                                            },
                                                            eq_token: Eq,
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: value,
                                                                                span: bytes(21794..21799),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: value,
                                                                            span: bytes(21818..21823),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::If {
                                                                                attrs: [],
                                                                                if_token: If,
                                                                                cond: Expr::Let {
                                                                                    attrs: [],
                                                                                    let_token: Let,
                                                                                    pat: Pat::TupleStruct {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Some,
                                                                                                        span: bytes(21833..21837),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        elems: [
                                                                                            Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: stripped,
                                                                                                    span: bytes(21838..21846),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: value,
                                                                                                            span: bytes(21850..21855),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: strip_prefix,
                                                                                            span: bytes(21856..21868),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Char {
                                                                                                    token: '"',
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                then_branch: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Local {
                                                                                            attrs: [],
                                                                                            let_token: Let,
                                                                                            pat: Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: max_len,
                                                                                                    span: bytes(21896..21903),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                            init: Some(
                                                                                                LocalInit {
                                                                                                    eq_token: Eq,
                                                                                                    expr: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::MethodCall {
                                                                                                            attrs: [],
                                                                                                            receiver: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: stripped,
                                                                                                                                span: bytes(21906..21914),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            method: Ident {
                                                                                                                sym: len,
                                                                                                                span: bytes(21915..21918),
                                                                                                            },
                                                                                                            turbofish: None,
                                                                                                            paren_token: Paren,
                                                                                                            args: [],
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: saturating_sub,
                                                                                                            span: bytes(21921..21935),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    diverge: None,
                                                                                                },
                                                                                            ),
                                                                                            semi_token: Semi,
                                                                                        },
                                                                                        Stmt::Local {
                                                                                            attrs: [],
                                                                                            let_token: Let,
                                                                                            pat: Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: Some(
                                                                                                    Mut,
                                                                                                ),
                                                                                                ident: Ident {
                                                                                                    sym: unescaped_value,
                                                                                                    span: bytes(21985..22000),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                            init: Some(
                                                                                                LocalInit {
                                                                                                    eq_token: Eq,
                                                                                                    expr: Expr::Call {
                                                                                                        attrs: [],
                                                                                                        func: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: String,
                                                                                                                            span: bytes(22003..22009),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                    PathSep,
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: with_capacity,
                                                                                                                            span: bytes(22011..22024),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: max_len,
                                                                                                                                span: bytes(22025..22032),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    diverge: None,
                                                                                                },
                                                                                            ),
                                                                                            semi_token: Semi,
                                                                                        },
                                                                                        Stmt::Local {
                                                                                            attrs: [],
                                                                                            let_token: Let,
                                                                                            pat: Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: Some(
                                                                                                    Mut,
                                                                                                ),
                                                                                                ident: Ident {
                                                                                                    sym: chars,
                                                                                                    span: bytes(22059..22064),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                            init: Some(
                                                                                                LocalInit {
                                                                                                    eq_token: Eq,
                                                                                                    expr: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: stripped,
                                                                                                                            span: bytes(22067..22075),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: chars,
                                                                                                            span: bytes(22076..22081),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [],
                                                                                                    },
                                                                                                    diverge: None,
                                                                                                },
                                                                                            ),
                                                                                            semi_token: Semi,
                                                                                        },
                                                                                        Stmt::Expr(
                                                                                            Expr::Loop {
                                                                                                attrs: [],
                                                                                                label: Some(
                                                                                                    Label {
                                                                                                        name: Lifetime {
                                                                                                            apostrophe: bytes(22101..22102),
                                                                                                            ident: Ident {
                                                                                                                sym: until_closing_quote,
                                                                                                                span: bytes(22102..22121),
                                                                                                            },
                                                                                                        },
                                                                                                        colon_token: Colon,
                                                                                                    },
                                                                                                ),
                                                                                                loop_token: Loop,
                                                                                                body: Block {
                                                                                                    brace_token: Brace,
                                                                                                    stmts: [
                                                                                                        Stmt::Expr(
                                                                                                            Expr::While {
                                                                                                                attrs: [],
                                                                                                                label: None,
                                                                                                                while_token: While,
                                                                                                                cond: Expr::Let {
                                                                                                                    attrs: [],
                                                                                                                    let_token: Let,
                                                                                                                    pat: Pat::TupleStruct {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Some,
                                                                                                                                        span: bytes(22160..22164),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                        paren_token: Paren,
                                                                                                                        elems: [
                                                                                                                            Pat::Ident {
                                                                                                                                attrs: [],
                                                                                                                                by_ref: None,
                                                                                                                                mutability: None,
                                                                                                                                ident: Ident {
                                                                                                                                    sym: c,
                                                                                                                                    span: bytes(22165..22166),
                                                                                                                                },
                                                                                                                                subpat: None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                    eq_token: Eq,
                                                                                                                    expr: Expr::MethodCall {
                                                                                                                        attrs: [],
                                                                                                                        receiver: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: chars,
                                                                                                                                            span: bytes(22170..22175),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        dot_token: Dot,
                                                                                                                        method: Ident {
                                                                                                                            sym: next,
                                                                                                                            span: bytes(22176..22180),
                                                                                                                        },
                                                                                                                        turbofish: None,
                                                                                                                        paren_token: Paren,
                                                                                                                        args: [],
                                                                                                                    },
                                                                                                                },
                                                                                                                body: Block {
                                                                                                                    brace_token: Brace,
                                                                                                                    stmts: [
                                                                                                                        Stmt::Expr(
                                                                                                                            Expr::Match {
                                                                                                                                attrs: [],
                                                                                                                                match_token: Match,
                                                                                                                                expr: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: c,
                                                                                                                                                    span: bytes(22215..22216),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                brace_token: Brace,
                                                                                                                                arms: [
                                                                                                                                    Arm {
                                                                                                                                        attrs: [],
                                                                                                                                        pat: Pat::Lit {
                                                                                                                                            attrs: [],
                                                                                                                                            lit: Lit::Char {
                                                                                                                                                token: '"',
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        guard: None,
                                                                                                                                        fat_arrow_token: FatArrow,
                                                                                                                                        body: Expr::Break {
                                                                                                                                            attrs: [],
                                                                                                                                            break_token: Break,
                                                                                                                                            label: Some(
                                                                                                                                                Lifetime {
                                                                                                                                                    apostrophe: bytes(22260..22261),
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: until_closing_quote,
                                                                                                                                                        span: bytes(22261..22280),
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                            ),
                                                                                                                                            expr: None,
                                                                                                                                        },
                                                                                                                                        comma: Some(
                                                                                                                                            Comma,
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                    Arm {
                                                                                                                                        attrs: [],
                                                                                                                                        pat: Pat::Lit {
                                                                                                                                            attrs: [],
                                                                                                                                            lit: Lit::Char {
                                                                                                                                                token: '\\',
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        guard: None,
                                                                                                                                        fat_arrow_token: FatArrow,
                                                                                                                                        body: Expr::MethodCall {
                                                                                                                                            attrs: [],
                                                                                                                                            receiver: Expr::Path {
                                                                                                                                                attrs: [],
                                                                                                                                                qself: None,
                                                                                                                                                path: Path {
                                                                                                                                                    leading_colon: None,
                                                                                                                                                    segments: [
                                                                                                                                                        PathSegment {
                                                                                                                                                            ident: Ident {
                                                                                                                                                                sym: unescaped_value,
                                                                                                                                                                span: bytes(22318..22333),
                                                                                                                                                            },
                                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                                        },
                                                                                                                                                    ],
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            dot_token: Dot,
                                                                                                                                            method: Ident {
                                                                                                                                                sym: push,
                                                                                                                                                span: bytes(22334..22338),
                                                                                                                                            },
                                                                                                                                            turbofish: None,
                                                                                                                                            paren_token: Paren,
                                                                                                                                            args: [
                                                                                                                                                Expr::MethodCall {
                                                                                                                                                    attrs: [],
                                                                                                                                                    receiver: Expr::MethodCall {
                                                                                                                                                        attrs: [],
                                                                                                                                                        receiver: Expr::Path {
                                                                                                                                                            attrs: [],
                                                                                                                                                            qself: None,
                                                                                                                                                            path: Path {
                                                                                                                                                                leading_colon: None,
                                                                                                                                                                segments: [
                                                                                                                                                                    PathSegment {
                                                                                                                                                                        ident: Ident {
                                                                                                                                                                            sym: chars,
                                                                                                                                                                            span: bytes(22339..22344),
                                                                                                                                                                        },
                                                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                                                    },
                                                                                                                                                                ],
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                        dot_token: Dot,
                                                                                                                                                        method: Ident {
                                                                                                                                                            sym: next,
                                                                                                                                                            span: bytes(22345..22349),
                                                                                                                                                        },
                                                                                                                                                        turbofish: None,
                                                                                                                                                        paren_token: Paren,
                                                                                                                                                        args: [],
                                                                                                                                                    },
                                                                                                                                                    dot_token: Dot,
                                                                                                                                                    method: Ident {
                                                                                                                                                        sym: unwrap_or_else,
                                                                                                                                                        span: bytes(22352..22366),
                                                                                                                                                    },
                                                                                                                                                    turbofish: None,
                                                                                                                                                    paren_token: Paren,
                                                                                                                                                    args: [
                                                                                                                                                        Expr::Closure {
                                                                                                                                                            attrs: [],
                                                                                                                                                            lifetimes: None,
                                                                                                                                                            constness: None,
                                                                                                                                                            movability: None,
                                                                                                                                                            asyncness: None,
                                                                                                                                                            capture: None,
                                                                                                                                                            or1_token: Or,
                                                                                                                                                            inputs: [],
                                                                                                                                                            or2_token: Or,
                                                                                                                                                            output: ReturnType::Default,
                                                                                                                                                            body: Expr::Block {
                                                                                                                                                                attrs: [],
                                                                                                                                                                label: None,
                                                                                                                                                                block: Block {
                                                                                                                                                                    brace_token: Brace,
                                                                                                                                                                    stmts: [
                                                                                                                                                                        Stmt::Expr(
                                                                                                                                                                            Expr::MethodCall {
                                                                                                                                                                                attrs: [],
                                                                                                                                                                                receiver: Expr::MethodCall {
                                                                                                                                                                                    attrs: [],
                                                                                                                                                                                    receiver: Expr::MethodCall {
                                                                                                                                                                                        attrs: [],
                                                                                                                                                                                        receiver: Expr::Path {
                                                                                                                                                                                            attrs: [],
                                                                                                                                                                                            qself: None,
                                                                                                                                                                                            path: Path {
                                                                                                                                                                                                leading_colon: None,
                                                                                                                                                                                                segments: [
                                                                                                                                                                                                    PathSegment {
                                                                                                                                                                                                        ident: Ident {
                                                                                                                                                                                                            sym: semicolon_separated,
                                                                                                                                                                                                            span: bytes(22404..22423),
                                                                                                                                                                                                        },
                                                                                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                                                                                    },
                                                                                                                                                                                                ],
                                                                                                                                                                                            },
                                                                                                                                                                                        },
                                                                                                                                                                                        dot_token: Dot,
                                                                                                                                                                                        method: Ident {
                                                                                                                                                                                            sym: next,
                                                                                                                                                                                            span: bytes(22461..22465),
                                                                                                                                                                                        },
                                                                                                                                                                                        turbofish: None,
                                                                                                                                                                                        paren_token: Paren,
                                                                                                                                                                                        args: [],
                                                                                                                                                                                    },
                                                                                                                                                                                    dot_token: Dot,
                                                                                                                                                                                    method: Ident {
                                                                                                                                                                                        sym: map,
                                                                                                                                                                                        span: bytes(22505..22508),
                                                                                                                                                                                    },
                                                                                                                                                                                    turbofish: None,
                                                                                                                                                                                    paren_token: Paren,
                                                                                                                                                                                    args: [
                                                                                                                                                                                        Expr::Closure {
                                                                                                                                                                                            attrs: [],
                                                                                                                                                                                            lifetimes: None,
                                                                                                                                                                                            constness: None,
                                                                                                                                                                                            movability: None,
                                                                                                                                                                                            asyncness: None,
                                                                                                                                                                                            capture: None,
                                                                                                                                                                                            or1_token: Or,
                                                                                                                                                                                            inputs: [
                                                                                                                                                                                                Pat::Ident {
                                                                                                                                                                                                    attrs: [],
                                                                                                                                                                                                    by_ref: None,
                                                                                                                                                                                                    mutability: None,
                                                                                                                                                                                                    ident: Ident {
                                                                                                                                                                                                        sym: piece,
                                                                                                                                                                                                        span: bytes(22510..22515),
                                                                                                                                                                                                    },
                                                                                                                                                                                                    subpat: None,
                                                                                                                                                                                                },
                                                                                                                                                                                            ],
                                                                                                                                                                                            or2_token: Or,
                                                                                                                                                                                            output: ReturnType::Default,
                                                                                                                                                                                            body: Expr::Block {
                                                                                                                                                                                                attrs: [],
                                                                                                                                                                                                label: None,
                                                                                                                                                                                                block: Block {
                                                                                                                                                                                                    brace_token: Brace,
                                                                                                                                                                                                    stmts: [
                                                                                                                                                                                                        Stmt::Expr(
                                                                                                                                                                                                            Expr::Assign {
                                                                                                                                                                                                                attrs: [],
                                                                                                                                                                                                                left: Expr::Path {
                                                                                                                                                                                                                    attrs: [],
                                                                                                                                                                                                                    qself: None,
                                                                                                                                                                                                                    path: Path {
                                                                                                                                                                                                                        leading_colon: None,
                                                                                                                                                                                                                        segments: [
                                                                                                                                                                                                                            PathSegment {
                                                                                                                                                                                                                                ident: Ident {
                                                                                                                                                                                                                                    sym: chars,
                                                                                                                                                                                                                                    span: bytes(22745..22750),
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                        ],
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                },
                                                                                                                                                                                                                eq_token: Eq,
                                                                                                                                                                                                                right: Expr::MethodCall {
                                                                                                                                                                                                                    attrs: [],
                                                                                                                                                                                                                    receiver: Expr::Path {
                                                                                                                                                                                                                        attrs: [],
                                                                                                                                                                                                                        qself: None,
                                                                                                                                                                                                                        path: Path {
                                                                                                                                                                                                                            leading_colon: None,
                                                                                                                                                                                                                            segments: [
                                                                                                                                                                                                                                PathSegment {
                                                                                                                                                                                                                                    ident: Ident {
                                                                                                                                                                                                                                        sym: piece,
                                                                                                                                                                                                                                        span: bytes(22753..22758),
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                            ],
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                    dot_token: Dot,
                                                                                                                                                                                                                    method: Ident {
                                                                                                                                                                                                                        sym: chars,
                                                                                                                                                                                                                        span: bytes(22759..22764),
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                    turbofish: None,
                                                                                                                                                                                                                    paren_token: Paren,
                                                                                                                                                                                                                    args: [],
                                                                                                                                                                                                                },
                                                                                                                                                                                                            },
                                                                                                                                                                                                            Some(
                                                                                                                                                                                                                Semi,
                                                                                                                                                                                                            ),
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        Stmt::Expr(
                                                                                                                                                                                                            Expr::Lit {
                                                                                                                                                                                                                attrs: [],
                                                                                                                                                                                                                lit: Lit::Char {
                                                                                                                                                                                                                    token: ';',
                                                                                                                                                                                                                },
                                                                                                                                                                                                            },
                                                                                                                                                                                                            None,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    ],
                                                                                                                                                                                                },
                                                                                                                                                                                            },
                                                                                                                                                                                        },
                                                                                                                                                                                    ],
                                                                                                                                                                                },
                                                                                                                                                                                dot_token: Dot,
                                                                                                                                                                                method: Ident {
                                                                                                                                                                                    sym: unwrap_or,
                                                                                                                                                                                    span: bytes(22888..22897),
                                                                                                                                                                                },
                                                                                                                                                                                turbofish: None,
                                                                                                                                                                                paren_token: Paren,
                                                                                                                                                                                args: [
                                                                                                                                                                                    Expr::Lit {
                                                                                                                                                                                        attrs: [],
                                                                                                                                                                                        lit: Lit::Char {
                                                                                                                                                                                            token: '\\',
                                                                                                                                                                                        },
                                                                                                                                                                                    },
                                                                                                                                                                                ],
                                                                                                                                                                            },
                                                                                                                                                                            None,
                                                                                                                                                                        ),
                                                                                                                                                                    ],
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                    ],
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                        comma: Some(
                                                                                                                                            Comma,
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                    Arm {
                                                                                                                                        attrs: [],
                                                                                                                                        pat: Pat::Wild {
                                                                                                                                            attrs: [],
                                                                                                                                            underscore_token: Underscore,
                                                                                                                                        },
                                                                                                                                        guard: None,
                                                                                                                                        fat_arrow_token: FatArrow,
                                                                                                                                        body: Expr::MethodCall {
                                                                                                                                            attrs: [],
                                                                                                                                            receiver: Expr::Path {
                                                                                                                                                attrs: [],
                                                                                                                                                qself: None,
                                                                                                                                                path: Path {
                                                                                                                                                    leading_colon: None,
                                                                                                                                                    segments: [
                                                                                                                                                        PathSegment {
                                                                                                                                                            ident: Ident {
                                                                                                                                                                sym: unescaped_value,
                                                                                                                                                                span: bytes(22970..22985),
                                                                                                                                                            },
                                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                                        },
                                                                                                                                                    ],
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            dot_token: Dot,
                                                                                                                                            method: Ident {
                                                                                                                                                sym: push,
                                                                                                                                                span: bytes(22986..22990),
                                                                                                                                            },
                                                                                                                                            turbofish: None,
                                                                                                                                            paren_token: Paren,
                                                                                                                                            args: [
                                                                                                                                                Expr::Path {
                                                                                                                                                    attrs: [],
                                                                                                                                                    qself: None,
                                                                                                                                                    path: Path {
                                                                                                                                                        leading_colon: None,
                                                                                                                                                        segments: [
                                                                                                                                                            PathSegment {
                                                                                                                                                                ident: Ident {
                                                                                                                                                                    sym: c,
                                                                                                                                                                    span: bytes(22991..22992),
                                                                                                                                                                },
                                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                        comma: Some(
                                                                                                                                            Comma,
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                            None,
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            None,
                                                                                                        ),
                                                                                                        Stmt::Expr(
                                                                                                            Expr::If {
                                                                                                                attrs: [],
                                                                                                                if_token: If,
                                                                                                                cond: Expr::Let {
                                                                                                                    attrs: [],
                                                                                                                    let_token: Let,
                                                                                                                    pat: Pat::TupleStruct {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Some,
                                                                                                                                        span: bytes(23070..23074),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                        paren_token: Paren,
                                                                                                                        elems: [
                                                                                                                            Pat::Ident {
                                                                                                                                attrs: [],
                                                                                                                                by_ref: None,
                                                                                                                                mutability: None,
                                                                                                                                ident: Ident {
                                                                                                                                    sym: piece,
                                                                                                                                    span: bytes(23075..23080),
                                                                                                                                },
                                                                                                                                subpat: None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                    eq_token: Eq,
                                                                                                                    expr: Expr::MethodCall {
                                                                                                                        attrs: [],
                                                                                                                        receiver: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: semicolon_separated,
                                                                                                                                            span: bytes(23084..23103),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        dot_token: Dot,
                                                                                                                        method: Ident {
                                                                                                                            sym: next,
                                                                                                                            span: bytes(23104..23108),
                                                                                                                        },
                                                                                                                        turbofish: None,
                                                                                                                        paren_token: Paren,
                                                                                                                        args: [],
                                                                                                                    },
                                                                                                                },
                                                                                                                then_branch: Block {
                                                                                                                    brace_token: Brace,
                                                                                                                    stmts: [
                                                                                                                        Stmt::Expr(
                                                                                                                            Expr::MethodCall {
                                                                                                                                attrs: [],
                                                                                                                                receiver: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: unescaped_value,
                                                                                                                                                    span: bytes(23291..23306),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                dot_token: Dot,
                                                                                                                                method: Ident {
                                                                                                                                    sym: push,
                                                                                                                                    span: bytes(23307..23311),
                                                                                                                                },
                                                                                                                                turbofish: None,
                                                                                                                                paren_token: Paren,
                                                                                                                                args: [
                                                                                                                                    Expr::Lit {
                                                                                                                                        attrs: [],
                                                                                                                                        lit: Lit::Char {
                                                                                                                                            token: ';',
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                            Some(
                                                                                                                                Semi,
                                                                                                                            ),
                                                                                                                        ),
                                                                                                                        Stmt::Expr(
                                                                                                                            Expr::Assign {
                                                                                                                                attrs: [],
                                                                                                                                left: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: chars,
                                                                                                                                                    span: bytes(23342..23347),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                eq_token: Eq,
                                                                                                                                right: Expr::MethodCall {
                                                                                                                                    attrs: [],
                                                                                                                                    receiver: Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: piece,
                                                                                                                                                        span: bytes(23350..23355),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    dot_token: Dot,
                                                                                                                                    method: Ident {
                                                                                                                                        sym: chars,
                                                                                                                                        span: bytes(23356..23361),
                                                                                                                                    },
                                                                                                                                    turbofish: None,
                                                                                                                                    paren_token: Paren,
                                                                                                                                    args: [],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            None,
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                                else_branch: Some(
                                                                                                                    (
                                                                                                                        Else,
                                                                                                                        Expr::Block {
                                                                                                                            attrs: [],
                                                                                                                            label: None,
                                                                                                                            block: Block {
                                                                                                                                brace_token: Brace,
                                                                                                                                stmts: [
                                                                                                                                    Stmt::Expr(
                                                                                                                                        Expr::Break {
                                                                                                                                            attrs: [],
                                                                                                                                            break_token: Break,
                                                                                                                                            label: None,
                                                                                                                                            expr: None,
                                                                                                                                        },
                                                                                                                                        Some(
                                                                                                                                            Semi,
                                                                                                                                        ),
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ),
                                                                                                                ),
                                                                                                            },
                                                                                                            None,
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            None,
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::If {
                                                                                                attrs: [],
                                                                                                if_token: If,
                                                                                                cond: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Unary {
                                                                                                        attrs: [],
                                                                                                        op: UnOp::Not(
                                                                                                            Not,
                                                                                                        ),
                                                                                                        expr: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: name_valid,
                                                                                                                            span: bytes(23484..23494),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Or(
                                                                                                        OrOr,
                                                                                                    ),
                                                                                                    right: Expr::Unary {
                                                                                                        attrs: [],
                                                                                                        op: UnOp::Not(
                                                                                                            Not,
                                                                                                        ),
                                                                                                        expr: Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: valid_value,
                                                                                                                                span: bytes(23499..23510),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: value,
                                                                                                                                    span: bytes(23511..23516),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                then_branch: Block {
                                                                                                    brace_token: Brace,
                                                                                                    stmts: [
                                                                                                        Stmt::Expr(
                                                                                                            Expr::Continue {
                                                                                                                attrs: [],
                                                                                                                continue_token: Continue,
                                                                                                                label: None,
                                                                                                            },
                                                                                                            Some(
                                                                                                                Semi,
                                                                                                            ),
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                                else_branch: None,
                                                                                            },
                                                                                            None,
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: unescaped_value,
                                                                                                                span: bytes(23584..23599),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            None,
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                                else_branch: Some(
                                                                                    (
                                                                                        Else,
                                                                                        Expr::Block {
                                                                                            attrs: [],
                                                                                            label: None,
                                                                                            block: Block {
                                                                                                brace_token: Brace,
                                                                                                stmts: [
                                                                                                    Stmt::Local {
                                                                                                        attrs: [],
                                                                                                        let_token: Let,
                                                                                                        pat: Pat::Ident {
                                                                                                            attrs: [],
                                                                                                            by_ref: None,
                                                                                                            mutability: None,
                                                                                                            ident: Ident {
                                                                                                                sym: value,
                                                                                                                span: bytes(23641..23646),
                                                                                                            },
                                                                                                            subpat: None,
                                                                                                        },
                                                                                                        init: Some(
                                                                                                            LocalInit {
                                                                                                                eq_token: Eq,
                                                                                                                expr: Expr::MethodCall {
                                                                                                                    attrs: [],
                                                                                                                    receiver: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: value,
                                                                                                                                        span: bytes(23649..23654),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    dot_token: Dot,
                                                                                                                    method: Ident {
                                                                                                                        sym: trim_end_matches,
                                                                                                                        span: bytes(23655..23671),
                                                                                                                    },
                                                                                                                    turbofish: None,
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [
                                                                                                                        Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: http_whitespace,
                                                                                                                                            span: bytes(23672..23687),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                                diverge: None,
                                                                                                            },
                                                                                                        ),
                                                                                                        semi_token: Semi,
                                                                                                    },
                                                                                                    Stmt::Expr(
                                                                                                        Expr::If {
                                                                                                            attrs: [],
                                                                                                            if_token: If,
                                                                                                            cond: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: value,
                                                                                                                                    span: bytes(23709..23714),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: is_empty,
                                                                                                                    span: bytes(23715..23723),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [],
                                                                                                            },
                                                                                                            then_branch: Block {
                                                                                                                brace_token: Brace,
                                                                                                                stmts: [
                                                                                                                    Stmt::Expr(
                                                                                                                        Expr::Continue {
                                                                                                                            attrs: [],
                                                                                                                            continue_token: Continue,
                                                                                                                            label: None,
                                                                                                                        },
                                                                                                                        Some(
                                                                                                                            Semi,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                            else_branch: None,
                                                                                                        },
                                                                                                        None,
                                                                                                    ),
                                                                                                    Stmt::Expr(
                                                                                                        Expr::If {
                                                                                                            attrs: [],
                                                                                                            if_token: If,
                                                                                                            cond: Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Unary {
                                                                                                                    attrs: [],
                                                                                                                    op: UnOp::Not(
                                                                                                                        Not,
                                                                                                                    ),
                                                                                                                    expr: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: name_valid,
                                                                                                                                        span: bytes(23796..23806),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::Or(
                                                                                                                    OrOr,
                                                                                                                ),
                                                                                                                right: Expr::Unary {
                                                                                                                    attrs: [],
                                                                                                                    op: UnOp::Not(
                                                                                                                        Not,
                                                                                                                    ),
                                                                                                                    expr: Expr::Call {
                                                                                                                        attrs: [],
                                                                                                                        func: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: valid_value,
                                                                                                                                            span: bytes(23811..23822),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        paren_token: Paren,
                                                                                                                        args: [
                                                                                                                            Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: value,
                                                                                                                                                span: bytes(23823..23828),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            then_branch: Block {
                                                                                                                brace_token: Brace,
                                                                                                                stmts: [
                                                                                                                    Stmt::Expr(
                                                                                                                        Expr::Continue {
                                                                                                                            attrs: [],
                                                                                                                            continue_token: Continue,
                                                                                                                            label: None,
                                                                                                                        },
                                                                                                                        Some(
                                                                                                                            Semi,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                            else_branch: None,
                                                                                                        },
                                                                                                        None,
                                                                                                    ),
                                                                                                    Stmt::Expr(
                                                                                                        Expr::MethodCall {
                                                                                                            attrs: [],
                                                                                                            receiver: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: value,
                                                                                                                                span: bytes(23896..23901),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            method: Ident {
                                                                                                                sym: to_owned,
                                                                                                                span: bytes(23902..23910),
                                                                                                            },
                                                                                                            turbofish: None,
                                                                                                            paren_token: Paren,
                                                                                                            args: [],
                                                                                                        },
                                                                                                        None,
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: parameters,
                                                                                            span: bytes(23940..23950),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: push,
                                                                            span: bytes(23951..23955),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Tuple {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: name,
                                                                                                            span: bytes(23957..23961),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: to_ascii_lowercase,
                                                                                            span: bytes(23962..23980),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                    Comma,
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: value,
                                                                                                        span: bytes(23984..23989),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "<data_url::forgiving_base64::DecodeError as fmt::Display>::fmt": FnData {
        fn_name: "fmt",
        complete_fn_name: "<data_url::forgiving_base64::DecodeError as fmt::Display>::fmt",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "fmt",
                    complete_name: "<data_url::forgiving_base64::DecodeError as fmt::Display>::fmt",
                    import_name: MyPath {
                        name: "<data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "DecodeError as fmt",
                                        next: Some(
                                            MyPath {
                                                name: "Display>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fmt",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#2}::fmt",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: fmt,
                                span: bytes(13117..13120),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(13122..13126),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: f,
                                                span: bytes(13128..13129),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(13136..13139),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Formatter,
                                                                span: bytes(13141..13150),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(13151..13152),
                                                                            ident: Ident {
                                                                                sym: _,
                                                                                span: bytes(13152..13153),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: fmt,
                                                    span: bytes(13159..13162),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(13164..13170),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Match {
                                        attrs: [],
                                        match_token: Match,
                                        expr: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: self,
                                                            span: bytes(13187..13191),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        arms: [
                                            Arm {
                                                attrs: [],
                                                pat: Pat::TupleStruct {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(13206..13210),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: InvalidBase64,
                                                                    span: bytes(13212..13225),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    paren_token: Paren,
                                                    elems: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: inner,
                                                                span: bytes(13226..13231),
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: write,
                                                                        span: bytes(13236..13241),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: f,
                                                                span: bytes(13243..13244),
                                                            },
                                                            Punct {
                                                                char: ',',
                                                                spacing: Alone,
                                                                span: bytes(13244..13245),
                                                            },
                                                            Literal {
                                                                lit: "base64 not valid: {}",
                                                                span: bytes(13246..13268),
                                                            },
                                                            Punct {
                                                                char: ',',
                                                                spacing: Alone,
                                                                span: bytes(13268..13269),
                                                            },
                                                            Ident {
                                                                sym: inner,
                                                                span: bytes(13270..13275),
                                                            },
                                                        ],
                                                    },
                                                },
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                            Arm {
                                                attrs: [],
                                                pat: Pat::TupleStruct {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(13290..13294),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: WriteError,
                                                                    span: bytes(13296..13306),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    paren_token: Paren,
                                                    elems: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: err,
                                                                span: bytes(13307..13310),
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: write,
                                                                        span: bytes(13315..13320),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: f,
                                                                span: bytes(13322..13323),
                                                            },
                                                            Punct {
                                                                char: ',',
                                                                spacing: Alone,
                                                                span: bytes(13323..13324),
                                                            },
                                                            Literal {
                                                                lit: "write error: {}",
                                                                span: bytes(13325..13342),
                                                            },
                                                            Punct {
                                                                char: ',',
                                                                spacing: Alone,
                                                                span: bytes(13342..13343),
                                                            },
                                                            Ident {
                                                                sym: err,
                                                                span: bytes(13344..13347),
                                                            },
                                                        ],
                                                    },
                                                },
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 2,
                struct_name: Name {
                    name: "DecodeError",
                    complete_name: "data_url::forgiving_base64::DecodeError",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "DecodeError",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "Display",
                        complete_name: "",
                        import_name: MyPath {
                            name: "fmt",
                            next: Some(
                                MyPath {
                                    name: "Display",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: Some(
                                Lt,
                            ),
                            params: [
                                GenericParam::Type(
                                    TypeParam {
                                        attrs: [],
                                        ident: Ident {
                                            sym: E,
                                            span: bytes(13059..13060),
                                        },
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        bounds: [
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: fmt,
                                                                    span: bytes(13062..13065),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Display,
                                                                    span: bytes(13067..13074),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        ],
                                        eq_token: None,
                                        default: None,
                                    },
                                ),
                            ],
                            gt_token: Some(
                                Gt,
                            ),
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: fmt,
                                                span: bytes(13076..13079),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: Display,
                                                span: bytes(13081..13088),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: DecodeError,
                                            span: bytes(13093..13104),
                                        },
                                        arguments: PathArguments::AngleBracketed {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                GenericArgument::Type(
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: E,
                                                                        span: bytes(13105..13106),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "fmt",
                            complete_name: "<data_url::forgiving_base64::DecodeError as fmt::Display>::fmt",
                            import_name: MyPath {
                                name: "<data_url",
                                next: Some(
                                    MyPath {
                                        name: "forgiving_base64",
                                        next: Some(
                                            MyPath {
                                                name: "DecodeError as fmt",
                                                next: Some(
                                                    MyPath {
                                                        name: "Display>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fmt",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::fmt",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fmt,
                                        span: bytes(13117..13120),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(13122..13126),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(13128..13129),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: fmt,
                                                                        span: bytes(13136..13139),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Formatter,
                                                                        span: bytes(13141..13150),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Lifetime(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(13151..13152),
                                                                                    ident: Ident {
                                                                                        sym: _,
                                                                                        span: bytes(13152..13153),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fmt,
                                                            span: bytes(13159..13162),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(13164..13170),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Match {
                                                attrs: [],
                                                match_token: Match,
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: self,
                                                                    span: bytes(13187..13191),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                arms: [
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::TupleStruct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(13206..13210),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: InvalidBase64,
                                                                            span: bytes(13212..13225),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: inner,
                                                                        span: bytes(13226..13231),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Macro {
                                                            attrs: [],
                                                            mac: Macro {
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: write,
                                                                                span: bytes(13236..13241),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                bang_token: Not,
                                                                delimiter: MacroDelimiter::Paren(
                                                                    Paren,
                                                                ),
                                                                tokens: TokenStream [
                                                                    Ident {
                                                                        sym: f,
                                                                        span: bytes(13243..13244),
                                                                    },
                                                                    Punct {
                                                                        char: ',',
                                                                        spacing: Alone,
                                                                        span: bytes(13244..13245),
                                                                    },
                                                                    Literal {
                                                                        lit: "base64 not valid: {}",
                                                                        span: bytes(13246..13268),
                                                                    },
                                                                    Punct {
                                                                        char: ',',
                                                                        spacing: Alone,
                                                                        span: bytes(13268..13269),
                                                                    },
                                                                    Ident {
                                                                        sym: inner,
                                                                        span: bytes(13270..13275),
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::TupleStruct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(13290..13294),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: WriteError,
                                                                            span: bytes(13296..13306),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: err,
                                                                        span: bytes(13307..13310),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Macro {
                                                            attrs: [],
                                                            mac: Macro {
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: write,
                                                                                span: bytes(13315..13320),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                bang_token: Not,
                                                                delimiter: MacroDelimiter::Paren(
                                                                    Paren,
                                                                ),
                                                                tokens: TokenStream [
                                                                    Ident {
                                                                        sym: f,
                                                                        span: bytes(13322..13323),
                                                                    },
                                                                    Punct {
                                                                        char: ',',
                                                                        spacing: Alone,
                                                                        span: bytes(13323..13324),
                                                                    },
                                                                    Literal {
                                                                        lit: "write error: {}",
                                                                        span: bytes(13325..13342),
                                                                    },
                                                                    Punct {
                                                                        char: ',',
                                                                        spacing: Alone,
                                                                        span: bytes(13342..13343),
                                                                    },
                                                                    Ident {
                                                                        sym: err,
                                                                        span: bytes(13344..13347),
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [
                    "Display",
                    "fmt",
                ],
            },
        ),
    },
    "data_url::mime::split2": FnData {
        fn_name: "split2",
        complete_fn_name: "data_url::mime::split2",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "split2",
                    complete_name: "data_url::mime::split2",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "split2",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "split2",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: split2,
                                span: bytes(21038..21044),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: s,
                                                span: bytes(21045..21046),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(21049..21052),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: separator,
                                                span: bytes(21054..21063),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: char,
                                                            span: bytes(21065..21069),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Tuple {
                                    paren_token: Paren,
                                    elems: [
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(21076..21079),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Option,
                                                            span: bytes(21081..21087),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Reference {
                                                                        and_token: And,
                                                                        lifetime: None,
                                                                        mutability: None,
                                                                        elem: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: str,
                                                                                            span: bytes(21089..21092),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: iter,
                                            span: bytes(21109..21113),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: s,
                                                                    span: bytes(21116..21117),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: splitn,
                                                    span: bytes(21118..21124),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 2,
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: separator,
                                                                        span: bytes(21128..21137),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: first,
                                            span: bytes(21148..21153),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: iter,
                                                                        span: bytes(21156..21160),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: next,
                                                        span: bytes(21161..21165),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [],
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: unwrap,
                                                    span: bytes(21168..21174),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Tuple {
                                        attrs: [],
                                        paren_token: Paren,
                                        elems: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: first,
                                                                span: bytes(21183..21188),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: iter,
                                                                    span: bytes(21190..21194),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: next,
                                                    span: bytes(21195..21199),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "data_url::find_comma_before_fragment": FnData {
        fn_name: "find_comma_before_fragment",
        complete_fn_name: "data_url::find_comma_before_fragment",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "find_comma_before_fragment",
                    complete_name: "data_url::find_comma_before_fragment",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "find_comma_before_fragment",
                                next: None,
                            },
                        ),
                    },
                },
                complete_name_in_file: "find_comma_before_fragment",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: find_comma_before_fragment,
                                span: bytes(5569..5595),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: after_colon,
                                                span: bytes(5596..5607),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(5610..5613),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Option,
                                                    span: bytes(5618..5624),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Tuple {
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Type::Reference {
                                                                        and_token: And,
                                                                        lifetime: None,
                                                                        mutability: None,
                                                                        elem: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: str,
                                                                                            span: bytes(5627..5630),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Type::Reference {
                                                                        and_token: And,
                                                                        lifetime: None,
                                                                        mutability: None,
                                                                        elem: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: str,
                                                                                            span: bytes(5633..5636),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::ForLoop {
                                        attrs: [],
                                        label: None,
                                        for_token: For,
                                        pat: Pat::Tuple {
                                            attrs: [],
                                            paren_token: Paren,
                                            elems: [
                                                Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: i,
                                                        span: bytes(5650..5651),
                                                    },
                                                    subpat: None,
                                                },
                                                Comma,
                                                Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: byte,
                                                        span: bytes(5653..5657),
                                                    },
                                                    subpat: None,
                                                },
                                            ],
                                        },
                                        in_token: In,
                                        expr: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: after_colon,
                                                                    span: bytes(5662..5673),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: bytes,
                                                    span: bytes(5674..5679),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: enumerate,
                                                span: bytes(5682..5691),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [],
                                        },
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: byte,
                                                                                span: bytes(5707..5711),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Eq(
                                                                EqEq,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Byte {
                                                                    token: b',',
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Return {
                                                                        attrs: [],
                                                                        return_token: Return,
                                                                        expr: Some(
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Some,
                                                                                                    span: bytes(5741..5745),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Tuple {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        elems: [
                                                                                            Expr::Reference {
                                                                                                attrs: [],
                                                                                                and_token: And,
                                                                                                mutability: None,
                                                                                                expr: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: after_colon,
                                                                                                                        span: bytes(5748..5759),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Range {
                                                                                                        attrs: [],
                                                                                                        start: None,
                                                                                                        limits: RangeLimits::HalfOpen(
                                                                                                            DotDot,
                                                                                                        ),
                                                                                                        end: Some(
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: i,
                                                                                                                                span: bytes(5762..5763),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Reference {
                                                                                                attrs: [],
                                                                                                and_token: And,
                                                                                                mutability: None,
                                                                                                expr: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: after_colon,
                                                                                                                        span: bytes(5767..5778),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Range {
                                                                                                        attrs: [],
                                                                                                        start: Some(
                                                                                                            Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: i,
                                                                                                                                    span: bytes(5779..5780),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::Add(
                                                                                                                    Plus,
                                                                                                                ),
                                                                                                                right: Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 1,
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                        ),
                                                                                                        limits: RangeLimits::HalfOpen(
                                                                                                            DotDot,
                                                                                                        ),
                                                                                                        end: None,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: byte,
                                                                                span: bytes(5812..5816),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Eq(
                                                                EqEq,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Byte {
                                                                    token: b'#',
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Break {
                                                                        attrs: [],
                                                                        break_token: Break,
                                                                        label: None,
                                                                        expr: None,
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Path {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: None,
                                                        span: bytes(5866..5870),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "data_url::parse_header": FnData {
        fn_name: "parse_header",
        complete_fn_name: "data_url::parse_header",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "parse_header",
                    complete_name: "data_url::parse_header",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "parse_header",
                                next: None,
                            },
                        ),
                    },
                },
                complete_name_in_file: "parse_header",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: parse_header,
                                span: bytes(5877..5889),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: from_colon_to_comma,
                                                span: bytes(5890..5909),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(5912..5915),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Tuple {
                                    paren_token: Paren,
                                    elems: [
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: mime,
                                                            span: bytes(5921..5925),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Mime,
                                                            span: bytes(5927..5931),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        Comma,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: bool,
                                                            span: bytes(5933..5937),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: trimmed,
                                            span: bytes(6175..6182),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_colon_to_comma,
                                                                    span: bytes(6185..6204),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: trim_matches,
                                                    span: bytes(6205..6217),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Closure {
                                                        attrs: [],
                                                        lifetimes: None,
                                                        constness: None,
                                                        movability: None,
                                                        asyncness: None,
                                                        capture: None,
                                                        or1_token: Or,
                                                        inputs: [
                                                            Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: c,
                                                                    span: bytes(6219..6220),
                                                                },
                                                                subpat: None,
                                                            },
                                                        ],
                                                        or2_token: Or,
                                                        output: ReturnType::Default,
                                                        body: Expr::Macro {
                                                            attrs: [],
                                                            mac: Macro {
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: matches,
                                                                                span: bytes(6222..6229),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                bang_token: Not,
                                                                delimiter: MacroDelimiter::Paren(
                                                                    Paren,
                                                                ),
                                                                tokens: TokenStream [
                                                                    Ident {
                                                                        sym: c,
                                                                        span: bytes(6231..6232),
                                                                    },
                                                                    Punct {
                                                                        char: ',',
                                                                        spacing: Alone,
                                                                        span: bytes(6232..6233),
                                                                    },
                                                                    Literal {
                                                                        lit: ' ',
                                                                        span: bytes(6234..6237),
                                                                    },
                                                                    Punct {
                                                                        char: '|',
                                                                        spacing: Alone,
                                                                        span: bytes(6238..6239),
                                                                    },
                                                                    Literal {
                                                                        lit: '\t',
                                                                        span: bytes(6240..6244),
                                                                    },
                                                                    Punct {
                                                                        char: '|',
                                                                        spacing: Alone,
                                                                        span: bytes(6245..6246),
                                                                    },
                                                                    Literal {
                                                                        lit: '\n',
                                                                        span: bytes(6247..6251),
                                                                    },
                                                                    Punct {
                                                                        char: '|',
                                                                        spacing: Alone,
                                                                        span: bytes(6252..6253),
                                                                    },
                                                                    Literal {
                                                                        lit: '\r',
                                                                        span: bytes(6254..6258),
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: without_base64_suffix,
                                            span: bytes(6271..6292),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: remove_base64_suffix,
                                                                    span: bytes(6295..6315),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: trimmed,
                                                                        span: bytes(6316..6323),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: base64,
                                            span: bytes(6334..6340),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: without_base64_suffix,
                                                                    span: bytes(6343..6364),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: is_some,
                                                    span: bytes(6365..6372),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: mime_type,
                                            span: bytes(6384..6393),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: without_base64_suffix,
                                                                    span: bytes(6396..6417),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: unwrap_or,
                                                    span: bytes(6418..6427),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: trimmed,
                                                                        span: bytes(6428..6435),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: string,
                                            span: bytes(6451..6457),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: String,
                                                                    span: bytes(6460..6466),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: new,
                                                                    span: bytes(6468..6471),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: mime_type,
                                                                span: bytes(6482..6491),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: starts_with,
                                                span: bytes(6492..6503),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Char {
                                                        token: ';',
                                                    },
                                                },
                                            ],
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: string,
                                                                            span: bytes(6519..6525),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: push_str,
                                                            span: bytes(6526..6534),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Str {
                                                                    token: "text/plain",
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                        else_branch: None,
                                    },
                                    None,
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: in_query,
                                            span: bytes(6567..6575),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Bool {
                                                    value: false,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::ForLoop {
                                        attrs: [],
                                        label: None,
                                        for_token: For,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: byte,
                                                span: bytes(6593..6597),
                                            },
                                            subpat: None,
                                        },
                                        in_token: In,
                                        expr: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: mime_type,
                                                                span: bytes(6601..6610),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: bytes,
                                                span: bytes(6611..6616),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [],
                                        },
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Match {
                                                        attrs: [],
                                                        match_token: Match,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: byte,
                                                                            span: bytes(6635..6639),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        brace_token: Brace,
                                                        arms: [
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::Or {
                                                                    attrs: [],
                                                                    leading_vert: None,
                                                                    cases: [
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'\t',
                                                                            },
                                                                        },
                                                                        Or,
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'\n',
                                                                            },
                                                                        },
                                                                        Or,
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'\r',
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Continue {
                                                                    attrs: [],
                                                                    continue_token: Continue,
                                                                    label: None,
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::Or {
                                                                    attrs: [],
                                                                    leading_vert: None,
                                                                    cases: [
                                                                        Pat::Range {
                                                                            attrs: [],
                                                                            start: Some(
                                                                                Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b'\0',
                                                                                    },
                                                                                },
                                                                            ),
                                                                            limits: RangeLimits::Closed(
                                                                                DotDotEq,
                                                                            ),
                                                                            end: Some(
                                                                                Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b'\x1F',
                                                                                    },
                                                                                },
                                                                            ),
                                                                        },
                                                                        Or,
                                                                        Pat::Range {
                                                                            attrs: [],
                                                                            start: Some(
                                                                                Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b'\x7F',
                                                                                    },
                                                                                },
                                                                            ),
                                                                            limits: RangeLimits::Closed(
                                                                                DotDotEq,
                                                                            ),
                                                                            end: Some(
                                                                                Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b'\xFF',
                                                                                    },
                                                                                },
                                                                            ),
                                                                        },
                                                                    ],
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: percent_encode,
                                                                                        span: bytes(6886..6900),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: byte,
                                                                                            span: bytes(6901..6905),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Expr::Reference {
                                                                            attrs: [],
                                                                            and_token: And,
                                                                            mutability: Some(
                                                                                Mut,
                                                                            ),
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: string,
                                                                                                span: bytes(6912..6918),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::Or {
                                                                    attrs: [],
                                                                    leading_vert: None,
                                                                    cases: [
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b' ',
                                                                            },
                                                                        },
                                                                        Or,
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'"',
                                                                            },
                                                                        },
                                                                        Or,
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'<',
                                                                            },
                                                                        },
                                                                        Or,
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'>',
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                guard: Some(
                                                                    (
                                                                        If,
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: in_query,
                                                                                            span: bytes(7228..7236),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ),
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: percent_encode,
                                                                                        span: bytes(7240..7254),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: byte,
                                                                                            span: bytes(7255..7259),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Expr::Reference {
                                                                            attrs: [],
                                                                            and_token: And,
                                                                            mutability: Some(
                                                                                Mut,
                                                                            ),
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: string,
                                                                                                span: bytes(7266..7272),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Byte {
                                                                        token: b'?',
                                                                    },
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::Assign {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: in_query,
                                                                                                        span: bytes(7314..7322),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    eq_token: Eq,
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Bool {
                                                                                            value: true,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                Some(
                                                                                    Semi,
                                                                                ),
                                                                            ),
                                                                            Stmt::Expr(
                                                                                Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: string,
                                                                                                        span: bytes(7347..7353),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: push,
                                                                                        span: bytes(7354..7358),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Char {
                                                                                                token: '?',
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                                comma: None,
                                                            },
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::Wild {
                                                                    attrs: [],
                                                                    underscore_token: Underscore,
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: string,
                                                                                        span: bytes(7427..7433),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: push,
                                                                        span: bytes(7434..7438),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: byte,
                                                                                                span: bytes(7439..7443),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: char,
                                                                                                span: bytes(7447..7451),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: mime_type,
                                            span: bytes(7629..7638),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: string,
                                                                        span: bytes(7641..7647),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: parse,
                                                        span: bytes(7648..7653),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [],
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: unwrap_or_else,
                                                    span: bytes(7656..7670),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Closure {
                                                        attrs: [],
                                                        lifetimes: None,
                                                        constness: None,
                                                        movability: None,
                                                        asyncness: None,
                                                        capture: None,
                                                        or1_token: Or,
                                                        inputs: [
                                                            Pat::Wild {
                                                                attrs: [],
                                                                underscore_token: Underscore,
                                                            },
                                                        ],
                                                        or2_token: Or,
                                                        output: ReturnType::Default,
                                                        body: Expr::Struct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: mime,
                                                                            span: bytes(7675..7679),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Mime,
                                                                            span: bytes(7681..7685),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            brace_token: Brace,
                                                            fields: [
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: type_,
                                                                            span: bytes(7696..7701),
                                                                        },
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: String,
                                                                                            span: bytes(7703..7709),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: from,
                                                                                            span: bytes(7711..7715),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Str {
                                                                                    token: "text",
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: subtype,
                                                                            span: bytes(7733..7740),
                                                                        },
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: String,
                                                                                            span: bytes(7742..7748),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: from,
                                                                                            span: bytes(7750..7754),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Str {
                                                                                    token: "plain",
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: parameters,
                                                                            span: bytes(7773..7783),
                                                                        },
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Macro {
                                                                        attrs: [],
                                                                        mac: Macro {
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: vec,
                                                                                            span: bytes(7785..7788),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                            bang_token: Not,
                                                                            delimiter: MacroDelimiter::Bracket(
                                                                                Bracket,
                                                                            ),
                                                                            tokens: TokenStream [
                                                                                Group {
                                                                                    delimiter: Parenthesis,
                                                                                    stream: TokenStream [
                                                                                        Ident {
                                                                                            sym: String,
                                                                                            span: bytes(7791..7797),
                                                                                        },
                                                                                        Punct {
                                                                                            char: ':',
                                                                                            spacing: Joint,
                                                                                            span: bytes(7797..7798),
                                                                                        },
                                                                                        Punct {
                                                                                            char: ':',
                                                                                            spacing: Alone,
                                                                                            span: bytes(7798..7799),
                                                                                        },
                                                                                        Ident {
                                                                                            sym: from,
                                                                                            span: bytes(7799..7803),
                                                                                        },
                                                                                        Group {
                                                                                            delimiter: Parenthesis,
                                                                                            stream: TokenStream [
                                                                                                Literal {
                                                                                                    lit: "charset",
                                                                                                    span: bytes(7804..7813),
                                                                                                },
                                                                                            ],
                                                                                            span: bytes(7803..7814),
                                                                                        },
                                                                                        Punct {
                                                                                            char: ',',
                                                                                            spacing: Alone,
                                                                                            span: bytes(7814..7815),
                                                                                        },
                                                                                        Ident {
                                                                                            sym: String,
                                                                                            span: bytes(7816..7822),
                                                                                        },
                                                                                        Punct {
                                                                                            char: ':',
                                                                                            spacing: Joint,
                                                                                            span: bytes(7822..7823),
                                                                                        },
                                                                                        Punct {
                                                                                            char: ':',
                                                                                            spacing: Alone,
                                                                                            span: bytes(7823..7824),
                                                                                        },
                                                                                        Ident {
                                                                                            sym: from,
                                                                                            span: bytes(7824..7828),
                                                                                        },
                                                                                        Group {
                                                                                            delimiter: Parenthesis,
                                                                                            stream: TokenStream [
                                                                                                Literal {
                                                                                                    lit: "US-ASCII",
                                                                                                    span: bytes(7829..7839),
                                                                                                },
                                                                                            ],
                                                                                            span: bytes(7828..7840),
                                                                                        },
                                                                                    ],
                                                                                    span: bytes(7790..7841),
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                            ],
                                                            dot2_token: None,
                                                            rest: None,
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Tuple {
                                        attrs: [],
                                        paren_token: Paren,
                                        elems: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: mime_type,
                                                                span: bytes(7858..7867),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: base64,
                                                                span: bytes(7869..7875),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "data_url::mime::only_http_token_code_points": FnData {
        fn_name: "only_http_token_code_points",
        complete_fn_name: "data_url::mime::only_http_token_code_points",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "only_http_token_code_points",
                    complete_name: "data_url::mime::only_http_token_code_points",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "only_http_token_code_points",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "only_http_token_code_points",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: only_http_token_code_points,
                                span: bytes(25280..25307),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: s,
                                                span: bytes(25308..25309),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(25312..25315),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: bool,
                                                    span: bytes(25320..25324),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: s,
                                                                span: bytes(25331..25332),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: bytes,
                                                span: bytes(25333..25338),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [],
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: all,
                                            span: bytes(25341..25344),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [
                                            Expr::Closure {
                                                attrs: [],
                                                lifetimes: None,
                                                constness: None,
                                                movability: None,
                                                asyncness: None,
                                                capture: None,
                                                or1_token: Or,
                                                inputs: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: byte,
                                                            span: bytes(25346..25350),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                                or2_token: Or,
                                                output: ReturnType::Default,
                                                body: Expr::Index {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: IS_HTTP_TOKEN,
                                                                        span: bytes(25352..25365),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    bracket_token: Bracket,
                                                    index: Expr::Cast {
                                                        attrs: [],
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: byte,
                                                                            span: bytes(25366..25370),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        as_token: As,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(25374..25379),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "<data_url::mime::Mime as core::str::FromStr>::from_str": FnData {
        fn_name: "from_str",
        complete_fn_name: "<data_url::mime::Mime as core::str::FromStr>::from_str",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "from_str",
                    complete_name: "<data_url::mime::Mime as core::str::FromStr>::from_str",
                    import_name: MyPath {
                        name: "<data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "Mime as core",
                                        next: Some(
                                            MyPath {
                                                name: "str",
                                                next: Some(
                                                    MyPath {
                                                        name: "FromStr>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "from_str",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#3}::from_str",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: from_str,
                                span: bytes(20286..20294),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: s,
                                                span: bytes(20295..20296),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(20299..20302),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(20307..20313),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(20314..20318),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(20320..20324),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Err,
                                                                                span: bytes(20326..20329),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::Call {
                                            attrs: [],
                                            func: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: parse,
                                                                span: bytes(20341..20346),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            paren_token: Paren,
                                            args: [
                                                Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: s,
                                                                    span: bytes(20347..20348),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: ok_or,
                                            span: bytes(20350..20355),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: MimeParsingError,
                                                                    span: bytes(20356..20372),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [],
                                                    },
                                                ],
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 3,
                struct_name: Name {
                    name: "Mime",
                    complete_name: "data_url::mime::Mime",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "Mime",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "FromStr",
                        complete_name: "",
                        import_name: MyPath {
                            name: "core",
                            next: Some(
                                MyPath {
                                    name: "str",
                                    next: Some(
                                        MyPath {
                                            name: "FromStr",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: FromStr,
                                                span: bytes(20226..20233),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Mime,
                                            span: bytes(20238..20242),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [
                    ImplTypeItem {
                        item: Some(
                            ImplItemType {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                type_token: Type,
                                ident: Ident {
                                    sym: Err,
                                    span: bytes(20254..20257),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                eq_token: Eq,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: MimeParsingError,
                                                    span: bytes(20260..20276),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                ],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_str",
                            complete_name: "<data_url::mime::Mime as core::str::FromStr>::from_str",
                            import_name: MyPath {
                                name: "<data_url",
                                next: Some(
                                    MyPath {
                                        name: "mime",
                                        next: Some(
                                            MyPath {
                                                name: "Mime as core",
                                                next: Some(
                                                    MyPath {
                                                        name: "str",
                                                        next: Some(
                                                            MyPath {
                                                                name: "FromStr>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "from_str",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::from_str",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_str,
                                        span: bytes(20286..20294),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: s,
                                                        span: bytes(20295..20296),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(20299..20302),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(20307..20313),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(20314..20318),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(20320..20324),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Err,
                                                                                        span: bytes(20326..20329),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: parse,
                                                                        span: bytes(20341..20346),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: s,
                                                                            span: bytes(20347..20348),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: ok_or,
                                                    span: bytes(20350..20355),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: MimeParsingError,
                                                                            span: bytes(20356..20372),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [],
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [
                    "MimeParsingError",
                ],
            },
        ),
    },
    "data_url::DataUrl::decode_to_vec": FnData {
        fn_name: "decode_to_vec",
        complete_fn_name: "data_url::DataUrl::decode_to_vec",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "decode_to_vec",
                    complete_name: "data_url::DataUrl::decode_to_vec",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "DataUrl",
                                next: Some(
                                    MyPath {
                                        name: "decode_to_vec",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#2}::decode_to_vec",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: decode_to_vec,
                                span: bytes(3146..3159),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(3170..3174),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(3185..3191),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Tuple {
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Vec,
                                                                                        span: bytes(3193..3196),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: u8,
                                                                                                                    span: bytes(3197..3199),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Option,
                                                                                        span: bytes(3202..3208),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: FragmentIdentifier,
                                                                                                                    span: bytes(3209..3227),
                                                                                                                },
                                                                                                                arguments: PathArguments::AngleBracketed {
                                                                                                                    colon2_token: None,
                                                                                                                    lt_token: Lt,
                                                                                                                    args: [
                                                                                                                        GenericArgument::Lifetime(
                                                                                                                            Lifetime {
                                                                                                                                apostrophe: bytes(3228..3229),
                                                                                                                                ident: Ident {
                                                                                                                                    sym: a,
                                                                                                                                    span: bytes(3229..3230),
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                    gt_token: Gt,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: forgiving_base64,
                                                                                span: bytes(3235..3251),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: InvalidBase64,
                                                                                span: bytes(3253..3266),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: body,
                                            span: bytes(3286..3290),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Vec,
                                                                    span: bytes(3293..3296),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: new,
                                                                    span: bytes(3298..3301),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: fragment,
                                            span: bytes(3317..3325),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Try {
                                                attrs: [],
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(3328..3332),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: decode,
                                                        span: bytes(3333..3339),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Closure {
                                                            attrs: [],
                                                            lifetimes: None,
                                                            constness: None,
                                                            movability: None,
                                                            asyncness: None,
                                                            capture: None,
                                                            or1_token: Or,
                                                            inputs: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: bytes,
                                                                        span: bytes(3341..3346),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                            or2_token: Or,
                                                            output: ReturnType::Default,
                                                            body: Expr::Block {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: body,
                                                                                                    span: bytes(3362..3366),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: extend_from_slice,
                                                                                    span: bytes(3367..3384),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: bytes,
                                                                                                        span: bytes(3385..3390),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Ok,
                                                                                                    span: bytes(3405..3407),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Tuple {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        elems: [],
                                                                                    },
                                                                                ],
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                question_token: Question,
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Ok,
                                                            span: bytes(3433..3435),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: body,
                                                                        span: bytes(3437..3441),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: fragment,
                                                                        span: bytes(3443..3451),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 2,
                struct_name: Name {
                    name: "DataUrl",
                    complete_name: "data_url::DataUrl",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "DataUrl",
                                next: None,
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: Some(
                                Lt,
                            ),
                            params: [
                                GenericParam::Lifetime(
                                    LifetimeParam {
                                        attrs: [],
                                        lifetime: Lifetime {
                                            apostrophe: bytes(1663..1664),
                                            ident: Ident {
                                                sym: a,
                                                span: bytes(1664..1665),
                                            },
                                        },
                                        colon_token: None,
                                        bounds: [],
                                    },
                                ),
                            ],
                            gt_token: Some(
                                Gt,
                            ),
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: DataUrl,
                                            span: bytes(1667..1674),
                                        },
                                        arguments: PathArguments::AngleBracketed {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                GenericArgument::Lifetime(
                                                    Lifetime {
                                                        apostrophe: bytes(1675..1676),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(1676..1677),
                                                        },
                                                    },
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "process",
                            complete_name: "data_url::DataUrl::process",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "process",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::process",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: process,
                                        span: bytes(1845..1852),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(1853..1858),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(1861..1862),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(1862..1863),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(1864..1867),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(1872..1878),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(1879..1883),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DataUrlError,
                                                                                        span: bytes(1885..1897),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Item(
                                            Item::Use {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: crate,
                                                            span: bytes(1913..1918),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: DataUrlError,
                                                                    span: bytes(1920..1932),
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Glob(
                                                                    UseGlob {
                                                                        star_token: Star,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: after_colon,
                                                    span: bytes(1950..1961),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: pretend_parse_data_url,
                                                                                    span: bytes(1964..1986),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: input,
                                                                                        span: bytes(1987..1992),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: ok_or,
                                                                span: bytes(1994..1999),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: NotADataUrl,
                                                                                    span: bytes(2000..2011),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: from_colon_to_comma,
                                                            span: bytes(2029..2048),
                                                        },
                                                        subpat: None,
                                                    },
                                                    Comma,
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: encoded_body_plus_fragment,
                                                            span: bytes(2050..2076),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: find_comma_before_fragment,
                                                                                    span: bytes(2092..2118),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: after_colon,
                                                                                        span: bytes(2119..2130),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: ok_or,
                                                                span: bytes(2132..2137),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: NoComma,
                                                                                    span: bytes(2138..2145),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: mime_type,
                                                            span: bytes(2163..2172),
                                                        },
                                                        subpat: None,
                                                    },
                                                    Comma,
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: base64,
                                                            span: bytes(2174..2180),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: parse_header,
                                                                            span: bytes(2184..2196),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from_colon_to_comma,
                                                                                span: bytes(2197..2216),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Ok,
                                                                    span: bytes(2228..2230),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: DataUrl,
                                                                        span: bytes(2231..2238),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: mime_type,
                                                                        span: bytes(2253..2262),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: mime_type,
                                                                                    span: bytes(2253..2262),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: base64,
                                                                        span: bytes(2276..2282),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: base64,
                                                                                    span: bytes(2276..2282),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: encoded_body_plus_fragment,
                                                                        span: bytes(2296..2322),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: encoded_body_plus_fragment,
                                                                                    span: bytes(2296..2322),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Use {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: crate,
                                            span: bytes(1913..1918),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: DataUrlError,
                                                    span: bytes(1920..1932),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Glob(
                                                    UseGlob {
                                                        star_token: Star,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "mime_type",
                            complete_name: "data_url::DataUrl::mime_type",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "mime_type",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::mime_type",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: mime_type,
                                        span: bytes(2353..2362),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(2364..2368),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: mime,
                                                                span: bytes(2374..2378),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Mime,
                                                                span: bytes(2380..2384),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "decode",
                            complete_name: "data_url::DataUrl::decode",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "decode",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::decode",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: decode,
                                        span: bytes(2561..2567),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: F,
                                                        span: bytes(2568..2569),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: E,
                                                        span: bytes(2571..2572),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: Some(
                                            WhereClause {
                                                where_token: Where,
                                                predicates: [
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: F,
                                                                                span: bytes(2719..2720),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: FnMut,
                                                                                        span: bytes(2722..2727),
                                                                                    },
                                                                                    arguments: PathArguments::Parenthesized {
                                                                                        paren_token: Paren,
                                                                                        inputs: [
                                                                                            Type::Reference {
                                                                                                and_token: And,
                                                                                                lifetime: None,
                                                                                                mutability: None,
                                                                                                elem: Type::Slice {
                                                                                                    bracket_token: Bracket,
                                                                                                    elem: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: u8,
                                                                                                                        span: bytes(2730..2732),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                        output: ReturnType::Type(
                                                                                            RArrow,
                                                                                            Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Result,
                                                                                                                span: bytes(2738..2744),
                                                                                                            },
                                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                                colon2_token: None,
                                                                                                                lt_token: Lt,
                                                                                                                args: [
                                                                                                                    GenericArgument::Type(
                                                                                                                        Type::Tuple {
                                                                                                                            paren_token: Paren,
                                                                                                                            elems: [],
                                                                                                                        },
                                                                                                                    ),
                                                                                                                    Comma,
                                                                                                                    GenericArgument::Type(
                                                                                                                        Type::Path {
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: E,
                                                                                                                                            span: bytes(2749..2750),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ),
                                                                                                                ],
                                                                                                                gt_token: Gt,
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                ],
                                            },
                                        ),
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(2584..2588),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: write_body_bytes,
                                                        span: bytes(2598..2614),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(2616..2617),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(2628..2634),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Option,
                                                                                        span: bytes(2635..2641),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: FragmentIdentifier,
                                                                                                                    span: bytes(2642..2660),
                                                                                                                },
                                                                                                                arguments: PathArguments::AngleBracketed {
                                                                                                                    colon2_token: None,
                                                                                                                    lt_token: Lt,
                                                                                                                    args: [
                                                                                                                        GenericArgument::Lifetime(
                                                                                                                            Lifetime {
                                                                                                                                apostrophe: bytes(2661..2662),
                                                                                                                                ident: Ident {
                                                                                                                                    sym: a,
                                                                                                                                    span: bytes(2662..2663),
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                    gt_token: Gt,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: forgiving_base64,
                                                                                        span: bytes(2667..2683),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DecodeError,
                                                                                        span: bytes(2685..2696),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: E,
                                                                                                                    span: bytes(2697..2698),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "decode_to_vec",
                            complete_name: "data_url::DataUrl::decode_to_vec",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "decode_to_vec",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::decode_to_vec",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: decode_to_vec,
                                        span: bytes(3146..3159),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(3170..3174),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(3185..3191),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Tuple {
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Vec,
                                                                                                span: bytes(3193..3196),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: u8,
                                                                                                                            span: bytes(3197..3199),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Option,
                                                                                                span: bytes(3202..3208),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: FragmentIdentifier,
                                                                                                                            span: bytes(3209..3227),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                                                            colon2_token: None,
                                                                                                                            lt_token: Lt,
                                                                                                                            args: [
                                                                                                                                GenericArgument::Lifetime(
                                                                                                                                    Lifetime {
                                                                                                                                        apostrophe: bytes(3228..3229),
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: a,
                                                                                                                                            span: bytes(3229..3230),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                            gt_token: Gt,
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: forgiving_base64,
                                                                                        span: bytes(3235..3251),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: InvalidBase64,
                                                                                        span: bytes(3253..3266),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "data_url::mime::parse": FnData {
        fn_name: "parse",
        complete_fn_name: "data_url::mime::parse",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "parse",
                    complete_name: "data_url::mime::parse",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "parse",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "parse",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: parse,
                                span: bytes(20390..20395),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: s,
                                                span: bytes(20396..20397),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(20400..20403),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Option,
                                                    span: bytes(20408..20414),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Mime,
                                                                                span: bytes(20415..20419),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: trimmed,
                                            span: bytes(20431..20438),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: s,
                                                                    span: bytes(20441..20442),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: trim_matches,
                                                    span: bytes(20443..20455),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: http_whitespace,
                                                                        span: bytes(20456..20471),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Tuple {
                                        attrs: [],
                                        paren_token: Paren,
                                        elems: [
                                            Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: type_,
                                                    span: bytes(20484..20489),
                                                },
                                                subpat: None,
                                            },
                                            Comma,
                                            Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: rest,
                                                    span: bytes(20491..20495),
                                                },
                                                subpat: None,
                                            },
                                        ],
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: split2,
                                                                    span: bytes(20499..20505),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: trimmed,
                                                                        span: bytes(20506..20513),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Char {
                                                            token: '/',
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: require,
                                                        span: bytes(20525..20532),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: only_http_token_code_points,
                                                span: bytes(20534..20561),
                                            },
                                            Group {
                                                delimiter: Parenthesis,
                                                stream: TokenStream [
                                                    Ident {
                                                        sym: type_,
                                                        span: bytes(20562..20567),
                                                    },
                                                ],
                                                span: bytes(20561..20568),
                                            },
                                            Punct {
                                                char: '&',
                                                spacing: Joint,
                                                span: bytes(20569..20570),
                                            },
                                            Punct {
                                                char: '&',
                                                spacing: Alone,
                                                span: bytes(20570..20571),
                                            },
                                            Punct {
                                                char: '!',
                                                spacing: Alone,
                                                span: bytes(20572..20573),
                                            },
                                            Ident {
                                                sym: type_,
                                                span: bytes(20573..20578),
                                            },
                                            Punct {
                                                char: '.',
                                                spacing: Alone,
                                                span: bytes(20578..20579),
                                            },
                                            Ident {
                                                sym: is_empty,
                                                span: bytes(20579..20587),
                                            },
                                            Group {
                                                delimiter: Parenthesis,
                                                stream: TokenStream [],
                                                span: bytes(20587..20589),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Tuple {
                                        attrs: [],
                                        paren_token: Paren,
                                        elems: [
                                            Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: subtype,
                                                    span: bytes(20602..20609),
                                                },
                                                subpat: None,
                                            },
                                            Comma,
                                            Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: rest,
                                                    span: bytes(20611..20615),
                                                },
                                                subpat: None,
                                            },
                                        ],
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: split2,
                                                                    span: bytes(20619..20625),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: rest,
                                                                            span: bytes(20626..20630),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        question_token: Question,
                                                    },
                                                    Comma,
                                                    Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Char {
                                                            token: ';',
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: subtype,
                                            span: bytes(20647..20654),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: subtype,
                                                                    span: bytes(20657..20664),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: trim_end_matches,
                                                    span: bytes(20665..20681),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: http_whitespace,
                                                                        span: bytes(20682..20697),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: require,
                                                        span: bytes(20704..20711),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: only_http_token_code_points,
                                                span: bytes(20713..20740),
                                            },
                                            Group {
                                                delimiter: Parenthesis,
                                                stream: TokenStream [
                                                    Ident {
                                                        sym: subtype,
                                                        span: bytes(20741..20748),
                                                    },
                                                ],
                                                span: bytes(20740..20749),
                                            },
                                            Punct {
                                                char: '&',
                                                spacing: Joint,
                                                span: bytes(20750..20751),
                                            },
                                            Punct {
                                                char: '&',
                                                spacing: Alone,
                                                span: bytes(20751..20752),
                                            },
                                            Punct {
                                                char: '!',
                                                spacing: Alone,
                                                span: bytes(20753..20754),
                                            },
                                            Ident {
                                                sym: subtype,
                                                span: bytes(20754..20761),
                                            },
                                            Punct {
                                                char: '.',
                                                spacing: Alone,
                                                span: bytes(20761..20762),
                                            },
                                            Ident {
                                                sym: is_empty,
                                                span: bytes(20762..20770),
                                            },
                                            Group {
                                                delimiter: Parenthesis,
                                                stream: TokenStream [],
                                                span: bytes(20770..20772),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: parameters,
                                            span: bytes(20788..20798),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Vec,
                                                                    span: bytes(20801..20804),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: new,
                                                                    span: bytes(20806..20809),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Let {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::TupleStruct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Some,
                                                                span: bytes(20824..20828),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: rest,
                                                            span: bytes(20829..20833),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                            eq_token: Eq,
                                            expr: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: rest,
                                                                span: bytes(20837..20841),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: parse_parameters,
                                                                            span: bytes(20852..20868),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: rest,
                                                                                span: bytes(20869..20873),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Reference {
                                                                attrs: [],
                                                                and_token: And,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: parameters,
                                                                                    span: bytes(20880..20890),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                        else_branch: None,
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Some,
                                                            span: bytes(20903..20907),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Mime,
                                                                span: bytes(20908..20912),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: type_,
                                                                span: bytes(20923..20928),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: type_,
                                                                                span: bytes(20930..20935),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: to_ascii_lowercase,
                                                                span: bytes(20936..20954),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: subtype,
                                                                span: bytes(20966..20973),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: subtype,
                                                                                span: bytes(20975..20982),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: to_ascii_lowercase,
                                                                span: bytes(20983..21001),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: parameters,
                                                                span: bytes(21013..21023),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: parameters,
                                                                            span: bytes(21013..21023),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "data_url::DataUrl::decode": FnData {
        fn_name: "decode",
        complete_fn_name: "data_url::DataUrl::decode",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "decode",
                    complete_name: "data_url::DataUrl::decode",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "DataUrl",
                                next: Some(
                                    MyPath {
                                        name: "decode",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#2}::decode",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: decode,
                                span: bytes(2561..2567),
                            },
                            generics: Generics {
                                lt_token: Some(
                                    Lt,
                                ),
                                params: [
                                    GenericParam::Type(
                                        TypeParam {
                                            attrs: [],
                                            ident: Ident {
                                                sym: F,
                                                span: bytes(2568..2569),
                                            },
                                            colon_token: None,
                                            bounds: [],
                                            eq_token: None,
                                            default: None,
                                        },
                                    ),
                                    Comma,
                                    GenericParam::Type(
                                        TypeParam {
                                            attrs: [],
                                            ident: Ident {
                                                sym: E,
                                                span: bytes(2571..2572),
                                            },
                                            colon_token: None,
                                            bounds: [],
                                            eq_token: None,
                                            default: None,
                                        },
                                    ),
                                ],
                                gt_token: Some(
                                    Gt,
                                ),
                                where_clause: Some(
                                    WhereClause {
                                        where_token: Where,
                                        predicates: [
                                            WherePredicate::Type(
                                                PredicateType {
                                                    lifetimes: None,
                                                    bounded_ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: F,
                                                                        span: bytes(2719..2720),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    colon_token: Colon,
                                                    bounds: [
                                                        TypeParamBound::Trait(
                                                            TraitBound {
                                                                paren_token: None,
                                                                modifier: TraitBoundModifier::None,
                                                                lifetimes: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: FnMut,
                                                                                span: bytes(2722..2727),
                                                                            },
                                                                            arguments: PathArguments::Parenthesized {
                                                                                paren_token: Paren,
                                                                                inputs: [
                                                                                    Type::Reference {
                                                                                        and_token: And,
                                                                                        lifetime: None,
                                                                                        mutability: None,
                                                                                        elem: Type::Slice {
                                                                                            bracket_token: Bracket,
                                                                                            elem: Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: u8,
                                                                                                                span: bytes(2730..2732),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                                output: ReturnType::Type(
                                                                                    RArrow,
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Result,
                                                                                                        span: bytes(2738..2744),
                                                                                                    },
                                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                                        colon2_token: None,
                                                                                                        lt_token: Lt,
                                                                                                        args: [
                                                                                                            GenericArgument::Type(
                                                                                                                Type::Tuple {
                                                                                                                    paren_token: Paren,
                                                                                                                    elems: [],
                                                                                                                },
                                                                                                            ),
                                                                                                            Comma,
                                                                                                            GenericArgument::Type(
                                                                                                                Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: E,
                                                                                                                                    span: bytes(2749..2750),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                        gt_token: Gt,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Comma,
                                        ],
                                    },
                                ),
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(2584..2588),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: write_body_bytes,
                                                span: bytes(2598..2614),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: F,
                                                            span: bytes(2616..2617),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(2628..2634),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Option,
                                                                                span: bytes(2635..2641),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: FragmentIdentifier,
                                                                                                            span: bytes(2642..2660),
                                                                                                        },
                                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                                            colon2_token: None,
                                                                                                            lt_token: Lt,
                                                                                                            args: [
                                                                                                                GenericArgument::Lifetime(
                                                                                                                    Lifetime {
                                                                                                                        apostrophe: bytes(2661..2662),
                                                                                                                        ident: Ident {
                                                                                                                            sym: a,
                                                                                                                            span: bytes(2662..2663),
                                                                                                                        },
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                            gt_token: Gt,
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: forgiving_base64,
                                                                                span: bytes(2667..2683),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: DecodeError,
                                                                                span: bytes(2685..2696),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: E,
                                                                                                            span: bytes(2697..2698),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(2770..2774),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Named(
                                                Ident {
                                                    sym: base64,
                                                    span: bytes(2775..2781),
                                                },
                                            ),
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: decode_with_base64,
                                                                            span: bytes(2796..2814),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(2815..2819),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: encoded_body_plus_fragment,
                                                                        span: bytes(2820..2846),
                                                                    },
                                                                ),
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: write_body_bytes,
                                                                                span: bytes(2848..2864),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                        else_branch: Some(
                                            (
                                                Else,
                                                Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: decode_without_base64,
                                                                                            span: bytes(2895..2916),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(2917..2921),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: encoded_body_plus_fragment,
                                                                                        span: bytes(2922..2948),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: write_body_bytes,
                                                                                                span: bytes(2950..2966),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: map_err,
                                                                        span: bytes(2985..2992),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: forgiving_base64,
                                                                                            span: bytes(2993..3009),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: DecodeError,
                                                                                            span: bytes(3011..3022),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: WriteError,
                                                                                            span: bytes(3024..3034),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ),
                                        ),
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 2,
                struct_name: Name {
                    name: "DataUrl",
                    complete_name: "data_url::DataUrl",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "DataUrl",
                                next: None,
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: Some(
                                Lt,
                            ),
                            params: [
                                GenericParam::Lifetime(
                                    LifetimeParam {
                                        attrs: [],
                                        lifetime: Lifetime {
                                            apostrophe: bytes(1663..1664),
                                            ident: Ident {
                                                sym: a,
                                                span: bytes(1664..1665),
                                            },
                                        },
                                        colon_token: None,
                                        bounds: [],
                                    },
                                ),
                            ],
                            gt_token: Some(
                                Gt,
                            ),
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: DataUrl,
                                            span: bytes(1667..1674),
                                        },
                                        arguments: PathArguments::AngleBracketed {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                GenericArgument::Lifetime(
                                                    Lifetime {
                                                        apostrophe: bytes(1675..1676),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(1676..1677),
                                                        },
                                                    },
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "process",
                            complete_name: "data_url::DataUrl::process",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "process",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::process",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: process,
                                        span: bytes(1845..1852),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(1853..1858),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(1861..1862),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(1862..1863),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(1864..1867),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(1872..1878),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(1879..1883),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DataUrlError,
                                                                                        span: bytes(1885..1897),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Item(
                                            Item::Use {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: crate,
                                                            span: bytes(1913..1918),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: DataUrlError,
                                                                    span: bytes(1920..1932),
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Glob(
                                                                    UseGlob {
                                                                        star_token: Star,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: after_colon,
                                                    span: bytes(1950..1961),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: pretend_parse_data_url,
                                                                                    span: bytes(1964..1986),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: input,
                                                                                        span: bytes(1987..1992),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: ok_or,
                                                                span: bytes(1994..1999),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: NotADataUrl,
                                                                                    span: bytes(2000..2011),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: from_colon_to_comma,
                                                            span: bytes(2029..2048),
                                                        },
                                                        subpat: None,
                                                    },
                                                    Comma,
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: encoded_body_plus_fragment,
                                                            span: bytes(2050..2076),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: find_comma_before_fragment,
                                                                                    span: bytes(2092..2118),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: after_colon,
                                                                                        span: bytes(2119..2130),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: ok_or,
                                                                span: bytes(2132..2137),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: NoComma,
                                                                                    span: bytes(2138..2145),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: mime_type,
                                                            span: bytes(2163..2172),
                                                        },
                                                        subpat: None,
                                                    },
                                                    Comma,
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: base64,
                                                            span: bytes(2174..2180),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: parse_header,
                                                                            span: bytes(2184..2196),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from_colon_to_comma,
                                                                                span: bytes(2197..2216),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Ok,
                                                                    span: bytes(2228..2230),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: DataUrl,
                                                                        span: bytes(2231..2238),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: mime_type,
                                                                        span: bytes(2253..2262),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: mime_type,
                                                                                    span: bytes(2253..2262),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: base64,
                                                                        span: bytes(2276..2282),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: base64,
                                                                                    span: bytes(2276..2282),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: encoded_body_plus_fragment,
                                                                        span: bytes(2296..2322),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: encoded_body_plus_fragment,
                                                                                    span: bytes(2296..2322),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Use {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: crate,
                                            span: bytes(1913..1918),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: DataUrlError,
                                                    span: bytes(1920..1932),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Glob(
                                                    UseGlob {
                                                        star_token: Star,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "mime_type",
                            complete_name: "data_url::DataUrl::mime_type",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "mime_type",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::mime_type",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: mime_type,
                                        span: bytes(2353..2362),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(2364..2368),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: mime,
                                                                span: bytes(2374..2378),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Mime,
                                                                span: bytes(2380..2384),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "decode",
                            complete_name: "data_url::DataUrl::decode",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "decode",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::decode",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: decode,
                                        span: bytes(2561..2567),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: F,
                                                        span: bytes(2568..2569),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: E,
                                                        span: bytes(2571..2572),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: Some(
                                            WhereClause {
                                                where_token: Where,
                                                predicates: [
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: F,
                                                                                span: bytes(2719..2720),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: FnMut,
                                                                                        span: bytes(2722..2727),
                                                                                    },
                                                                                    arguments: PathArguments::Parenthesized {
                                                                                        paren_token: Paren,
                                                                                        inputs: [
                                                                                            Type::Reference {
                                                                                                and_token: And,
                                                                                                lifetime: None,
                                                                                                mutability: None,
                                                                                                elem: Type::Slice {
                                                                                                    bracket_token: Bracket,
                                                                                                    elem: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: u8,
                                                                                                                        span: bytes(2730..2732),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                        output: ReturnType::Type(
                                                                                            RArrow,
                                                                                            Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Result,
                                                                                                                span: bytes(2738..2744),
                                                                                                            },
                                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                                colon2_token: None,
                                                                                                                lt_token: Lt,
                                                                                                                args: [
                                                                                                                    GenericArgument::Type(
                                                                                                                        Type::Tuple {
                                                                                                                            paren_token: Paren,
                                                                                                                            elems: [],
                                                                                                                        },
                                                                                                                    ),
                                                                                                                    Comma,
                                                                                                                    GenericArgument::Type(
                                                                                                                        Type::Path {
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: E,
                                                                                                                                            span: bytes(2749..2750),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ),
                                                                                                                ],
                                                                                                                gt_token: Gt,
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                ],
                                            },
                                        ),
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(2584..2588),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: write_body_bytes,
                                                        span: bytes(2598..2614),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(2616..2617),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(2628..2634),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Option,
                                                                                        span: bytes(2635..2641),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: FragmentIdentifier,
                                                                                                                    span: bytes(2642..2660),
                                                                                                                },
                                                                                                                arguments: PathArguments::AngleBracketed {
                                                                                                                    colon2_token: None,
                                                                                                                    lt_token: Lt,
                                                                                                                    args: [
                                                                                                                        GenericArgument::Lifetime(
                                                                                                                            Lifetime {
                                                                                                                                apostrophe: bytes(2661..2662),
                                                                                                                                ident: Ident {
                                                                                                                                    sym: a,
                                                                                                                                    span: bytes(2662..2663),
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                    gt_token: Gt,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: forgiving_base64,
                                                                                        span: bytes(2667..2683),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DecodeError,
                                                                                        span: bytes(2685..2696),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: E,
                                                                                                                    span: bytes(2697..2698),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "decode_to_vec",
                            complete_name: "data_url::DataUrl::decode_to_vec",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrl",
                                        next: Some(
                                            MyPath {
                                                name: "decode_to_vec",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::decode_to_vec",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: decode_to_vec,
                                        span: bytes(3146..3159),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(3170..3174),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(3185..3191),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Tuple {
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Vec,
                                                                                                span: bytes(3193..3196),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: u8,
                                                                                                                            span: bytes(3197..3199),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Option,
                                                                                                span: bytes(3202..3208),
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: None,
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: FragmentIdentifier,
                                                                                                                            span: bytes(3209..3227),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                                                            colon2_token: None,
                                                                                                                            lt_token: Lt,
                                                                                                                            args: [
                                                                                                                                GenericArgument::Lifetime(
                                                                                                                                    Lifetime {
                                                                                                                                        apostrophe: bytes(3228..3229),
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: a,
                                                                                                                                            span: bytes(3229..3230),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                            gt_token: Gt,
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: forgiving_base64,
                                                                                        span: bytes(3235..3251),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: InvalidBase64,
                                                                                        span: bytes(3253..3266),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<data_url::forgiving_base64::InvalidBase64 as >::from": FnData {
        fn_name: "from",
        complete_fn_name: "<data_url::forgiving_base64::InvalidBase64 as >::from",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "from",
                    complete_name: "<data_url::forgiving_base64::InvalidBase64 as >::from",
                    import_name: MyPath {
                        name: "<data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "InvalidBase64 as >",
                                        next: Some(
                                            MyPath {
                                                name: "from",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#5}::from",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: from,
                                span: bytes(13719..13723),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: e,
                                                span: bytes(13724..13725),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: DecodeError,
                                                            span: bytes(13727..13738),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Impossible,
                                                                                        span: bytes(13739..13749),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(13755..13759),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Match {
                                        attrs: [],
                                        match_token: Match,
                                        expr: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: e,
                                                            span: bytes(13776..13777),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        arms: [
                                            Arm {
                                                attrs: [],
                                                pat: Pat::TupleStruct {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: DecodeError,
                                                                    span: bytes(13792..13803),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: InvalidBase64,
                                                                    span: bytes(13805..13818),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    paren_token: Paren,
                                                    elems: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: e,
                                                                span: bytes(13819..13820),
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: e,
                                                                    span: bytes(13825..13826),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                            Arm {
                                                attrs: [],
                                                pat: Pat::TupleStruct {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: DecodeError,
                                                                    span: bytes(13840..13851),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: WriteError,
                                                                    span: bytes(13853..13863),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    paren_token: Paren,
                                                    elems: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: e,
                                                                span: bytes(13864..13865),
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Match {
                                                    attrs: [],
                                                    match_token: Match,
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: e,
                                                                        span: bytes(13876..13877),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    brace_token: Brace,
                                                    arms: [],
                                                },
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 5,
                struct_name: Name {
                    name: "InvalidBase64",
                    complete_name: "data_url::forgiving_base64::InvalidBase64",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "InvalidBase64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "",
                        complete_name: "",
                        import_name: MyPath {
                            name: "",
                            next: None,
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: From,
                                                span: bytes(13662..13666),
                                            },
                                            arguments: PathArguments::AngleBracketed {
                                                colon2_token: None,
                                                lt_token: Lt,
                                                args: [
                                                    GenericArgument::Type(
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: DecodeError,
                                                                            span: bytes(13667..13678),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Impossible,
                                                                                                        span: bytes(13679..13689),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                gt_token: Gt,
                                            },
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: InvalidBase64,
                                            span: bytes(13696..13709),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "from",
                            complete_name: "<data_url::forgiving_base64::InvalidBase64 as >::from",
                            import_name: MyPath {
                                name: "<data_url",
                                next: Some(
                                    MyPath {
                                        name: "forgiving_base64",
                                        next: Some(
                                            MyPath {
                                                name: "InvalidBase64 as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "from",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#5}::from",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from,
                                        span: bytes(13719..13723),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: e,
                                                        span: bytes(13724..13725),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: DecodeError,
                                                                    span: bytes(13727..13738),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Impossible,
                                                                                                span: bytes(13739..13749),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(13755..13759),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Match {
                                                attrs: [],
                                                match_token: Match,
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: e,
                                                                    span: bytes(13776..13777),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                arms: [
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::TupleStruct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: DecodeError,
                                                                            span: bytes(13792..13803),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: InvalidBase64,
                                                                            span: bytes(13805..13818),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: e,
                                                                        span: bytes(13819..13820),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: e,
                                                                            span: bytes(13825..13826),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::TupleStruct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: DecodeError,
                                                                            span: bytes(13840..13851),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: WriteError,
                                                                            span: bytes(13853..13863),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: e,
                                                                        span: bytes(13864..13865),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Match {
                                                            attrs: [],
                                                            match_token: Match,
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: e,
                                                                                span: bytes(13876..13877),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            brace_token: Brace,
                                                            arms: [],
                                                        },
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<data_url::DataUrlError as fmt::Display>::fmt": FnData {
        fn_name: "fmt",
        complete_fn_name: "<data_url::DataUrlError as fmt::Display>::fmt",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "fmt",
                    complete_name: "<data_url::DataUrlError as fmt::Display>::fmt",
                    import_name: MyPath {
                        name: "<data_url",
                        next: Some(
                            MyPath {
                                name: "DataUrlError as fmt",
                                next: Some(
                                    MyPath {
                                        name: "Display>",
                                        next: Some(
                                            MyPath {
                                                name: "fmt",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::fmt",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: fmt,
                                span: bytes(1280..1283),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(1285..1289),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: f,
                                                span: bytes(1291..1292),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(1299..1302),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Formatter,
                                                                span: bytes(1304..1313),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(1314..1315),
                                                                            ident: Ident {
                                                                                sym: _,
                                                                                span: bytes(1315..1316),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: fmt,
                                                    span: bytes(1322..1325),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(1327..1333),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Match {
                                        attrs: [],
                                        match_token: Match,
                                        expr: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: self,
                                                            span: bytes(1350..1354),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        arms: [
                                            Arm {
                                                attrs: [],
                                                pat: Pat::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(1369..1373),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: NotADataUrl,
                                                                    span: bytes(1375..1386),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: write,
                                                                        span: bytes(1390..1395),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: f,
                                                                span: bytes(1397..1398),
                                                            },
                                                            Punct {
                                                                char: ',',
                                                                spacing: Alone,
                                                                span: bytes(1398..1399),
                                                            },
                                                            Literal {
                                                                lit: "not a valid data url",
                                                                span: bytes(1400..1422),
                                                            },
                                                        ],
                                                    },
                                                },
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                            Arm {
                                                attrs: [],
                                                pat: Pat::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(1437..1441),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: NoComma,
                                                                    span: bytes(1443..1450),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: write,
                                                                        span: bytes(1454..1459),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: f,
                                                                span: bytes(1478..1479),
                                                            },
                                                            Punct {
                                                                char: ',',
                                                                spacing: Alone,
                                                                span: bytes(1479..1480),
                                                            },
                                                            Literal {
                                                                lit: "data url is missing comma delimiting attributes and body",
                                                                span: bytes(1497..1555),
                                                            },
                                                        ],
                                                    },
                                                },
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "DataUrlError",
                    complete_name: "data_url::DataUrlError",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "DataUrlError",
                                next: None,
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "Display",
                        complete_name: "",
                        import_name: MyPath {
                            name: "fmt",
                            next: Some(
                                MyPath {
                                    name: "Display",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: fmt,
                                                span: bytes(1241..1244),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: Display,
                                                span: bytes(1246..1253),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: DataUrlError,
                                            span: bytes(1258..1270),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "fmt",
                            complete_name: "<data_url::DataUrlError as fmt::Display>::fmt",
                            import_name: MyPath {
                                name: "<data_url",
                                next: Some(
                                    MyPath {
                                        name: "DataUrlError as fmt",
                                        next: Some(
                                            MyPath {
                                                name: "Display>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fmt",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::fmt",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fmt,
                                        span: bytes(1280..1283),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(1285..1289),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(1291..1292),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: fmt,
                                                                        span: bytes(1299..1302),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Formatter,
                                                                        span: bytes(1304..1313),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Lifetime(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(1314..1315),
                                                                                    ident: Ident {
                                                                                        sym: _,
                                                                                        span: bytes(1315..1316),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fmt,
                                                            span: bytes(1322..1325),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(1327..1333),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Match {
                                                attrs: [],
                                                match_token: Match,
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: self,
                                                                    span: bytes(1350..1354),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                arms: [
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(1369..1373),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: NotADataUrl,
                                                                            span: bytes(1375..1386),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Macro {
                                                            attrs: [],
                                                            mac: Macro {
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: write,
                                                                                span: bytes(1390..1395),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                bang_token: Not,
                                                                delimiter: MacroDelimiter::Paren(
                                                                    Paren,
                                                                ),
                                                                tokens: TokenStream [
                                                                    Ident {
                                                                        sym: f,
                                                                        span: bytes(1397..1398),
                                                                    },
                                                                    Punct {
                                                                        char: ',',
                                                                        spacing: Alone,
                                                                        span: bytes(1398..1399),
                                                                    },
                                                                    Literal {
                                                                        lit: "not a valid data url",
                                                                        span: bytes(1400..1422),
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(1437..1441),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: NoComma,
                                                                            span: bytes(1443..1450),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Macro {
                                                            attrs: [],
                                                            mac: Macro {
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: write,
                                                                                span: bytes(1454..1459),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                bang_token: Not,
                                                                delimiter: MacroDelimiter::Paren(
                                                                    Paren,
                                                                ),
                                                                tokens: TokenStream [
                                                                    Ident {
                                                                        sym: f,
                                                                        span: bytes(1478..1479),
                                                                    },
                                                                    Punct {
                                                                        char: ',',
                                                                        spacing: Alone,
                                                                        span: bytes(1479..1480),
                                                                    },
                                                                    Literal {
                                                                        lit: "data url is missing comma delimiting attributes and body",
                                                                        span: bytes(1497..1555),
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "data_url::forgiving_base64::Decoder::finish": FnData {
        fn_name: "finish",
        complete_fn_name: "data_url::forgiving_base64::Decoder::finish",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "finish",
                    complete_name: "data_url::forgiving_base64::Decoder::finish",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "Decoder",
                                        next: Some(
                                            MyPath {
                                                name: "finish",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#6}::finish",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: finish,
                                span: bytes(16556..16562),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(16567..16571),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(16576..16582),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Tuple {
                                                                paren_token: Paren,
                                                                elems: [],
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: DecodeError,
                                                                                span: bytes(16587..16598),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: E,
                                                                                                            span: bytes(16599..16600),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Match {
                                        attrs: [],
                                        match_token: Match,
                                        expr: Expr::Tuple {
                                            attrs: [],
                                            paren_token: Paren,
                                            elems: [
                                                Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(16620..16624),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: buffer_bit_length,
                                                            span: bytes(16625..16642),
                                                        },
                                                    ),
                                                },
                                                Comma,
                                                Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(16644..16648),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: padding_symbols,
                                                            span: bytes(16649..16664),
                                                        },
                                                    ),
                                                },
                                            ],
                                        },
                                        brace_token: Brace,
                                        arms: [
                                            Arm {
                                                attrs: [],
                                                pat: Pat::Tuple {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    elems: [
                                                        Pat::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                        Comma,
                                                        Pat::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    ],
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [],
                                                    },
                                                },
                                                comma: None,
                                            },
                                            Arm {
                                                attrs: [],
                                                pat: Pat::Or {
                                                    attrs: [],
                                                    leading_vert: None,
                                                    cases: [
                                                        Pat::Tuple {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 12,
                                                                    },
                                                                },
                                                                Comma,
                                                                Pat::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 2,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        Or,
                                                        Pat::Tuple {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 12,
                                                                    },
                                                                },
                                                                Comma,
                                                                Pat::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 0,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ],
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Local {
                                                                attrs: [],
                                                                let_token: Let,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: byte_buffer,
                                                                        span: bytes(17031..17042),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                init: Some(
                                                                    LocalInit {
                                                                        eq_token: Eq,
                                                                        expr: Expr::Array {
                                                                            attrs: [],
                                                                            bracket_token: Bracket,
                                                                            elems: [
                                                                                Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Paren {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        expr: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(17047..17051),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: bit_buffer,
                                                                                                        span: bytes(17052..17062),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            op: BinOp::Shr(
                                                                                                Shr,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 4,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u8,
                                                                                                        span: bytes(17072..17074),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        diverge: None,
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                            Stmt::Expr(
                                                                Expr::Try {
                                                                    attrs: [],
                                                                    expr: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Paren {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                expr: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(17094..17098),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: write_bytes,
                                                                                            span: bytes(17099..17110),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Reference {
                                                                                    attrs: [],
                                                                                    and_token: And,
                                                                                    mutability: None,
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: byte_buffer,
                                                                                                        span: bytes(17113..17124),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: map_err,
                                                                            span: bytes(17126..17133),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: DecodeError,
                                                                                                span: bytes(17134..17145),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: WriteError,
                                                                                                span: bytes(17147..17157),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    question_token: Question,
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                        ],
                                                    },
                                                },
                                                comma: None,
                                            },
                                            Arm {
                                                attrs: [],
                                                pat: Pat::Or {
                                                    attrs: [],
                                                    leading_vert: None,
                                                    cases: [
                                                        Pat::Tuple {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 18,
                                                                    },
                                                                },
                                                                Comma,
                                                                Pat::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        Or,
                                                        Pat::Tuple {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 18,
                                                                    },
                                                                },
                                                                Comma,
                                                                Pat::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 0,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ],
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Local {
                                                                attrs: [],
                                                                let_token: Let,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: byte_buffer,
                                                                        span: bytes(17424..17435),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                init: Some(
                                                                    LocalInit {
                                                                        eq_token: Eq,
                                                                        expr: Expr::Array {
                                                                            attrs: [],
                                                                            bracket_token: Bracket,
                                                                            elems: [
                                                                                Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Paren {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        expr: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(17440..17444),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: bit_buffer,
                                                                                                        span: bytes(17445..17455),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            op: BinOp::Shr(
                                                                                                Shr,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 10,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u8,
                                                                                                        span: bytes(17466..17468),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Paren {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        expr: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(17471..17475),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: bit_buffer,
                                                                                                        span: bytes(17476..17486),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            op: BinOp::Shr(
                                                                                                Shr,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 2,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u8,
                                                                                                        span: bytes(17496..17498),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        diverge: None,
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                            Stmt::Expr(
                                                                Expr::Try {
                                                                    attrs: [],
                                                                    expr: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Paren {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                expr: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(17518..17522),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: write_bytes,
                                                                                            span: bytes(17523..17534),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Reference {
                                                                                    attrs: [],
                                                                                    and_token: And,
                                                                                    mutability: None,
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: byte_buffer,
                                                                                                        span: bytes(17537..17548),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: map_err,
                                                                            span: bytes(17550..17557),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: DecodeError,
                                                                                                span: bytes(17558..17569),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: WriteError,
                                                                                                span: bytes(17571..17581),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    question_token: Question,
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                        ],
                                                    },
                                                },
                                                comma: None,
                                            },
                                            Arm {
                                                attrs: [],
                                                pat: Pat::Tuple {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    elems: [
                                                        Pat::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 6,
                                                            },
                                                        },
                                                        Comma,
                                                        Pat::Wild {
                                                            attrs: [],
                                                            underscore_token: Underscore,
                                                        },
                                                    ],
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Return {
                                                    attrs: [],
                                                    return_token: Return,
                                                    expr: Some(
                                                        Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Err,
                                                                                span: bytes(17628..17631),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: InvalidBase64Details,
                                                                                        span: bytes(17632..17652),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: LoneAlphabetSymbol,
                                                                                        span: bytes(17654..17672),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: into,
                                                                        span: bytes(17673..17677),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                            Arm {
                                                attrs: [],
                                                pat: Pat::Wild {
                                                    attrs: [],
                                                    underscore_token: Underscore,
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Return {
                                                    attrs: [],
                                                    return_token: Return,
                                                    expr: Some(
                                                        Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Err,
                                                                                span: bytes(17706..17709),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: InvalidBase64Details,
                                                                                        span: bytes(17710..17730),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Padding,
                                                                                        span: bytes(17732..17739),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: into,
                                                                        span: bytes(17740..17744),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                        ],
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Ok,
                                                            span: bytes(17767..17769),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [],
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 6,
                struct_name: Name {
                    name: "Decoder",
                    complete_name: "data_url::forgiving_base64::Decoder",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "Decoder",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: Some(
                                Lt,
                            ),
                            params: [
                                GenericParam::Type(
                                    TypeParam {
                                        attrs: [],
                                        ident: Ident {
                                            sym: F,
                                            span: bytes(14496..14497),
                                        },
                                        colon_token: None,
                                        bounds: [],
                                        eq_token: None,
                                        default: None,
                                    },
                                ),
                                Comma,
                                GenericParam::Type(
                                    TypeParam {
                                        attrs: [],
                                        ident: Ident {
                                            sym: E,
                                            span: bytes(14499..14500),
                                        },
                                        colon_token: None,
                                        bounds: [],
                                        eq_token: None,
                                        default: None,
                                    },
                                ),
                            ],
                            gt_token: Some(
                                Gt,
                            ),
                            where_clause: Some(
                                WhereClause {
                                    where_token: Where,
                                    predicates: [
                                        WherePredicate::Type(
                                            PredicateType {
                                                lifetimes: None,
                                                bounded_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(14526..14527),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                colon_token: Colon,
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: FnMut,
                                                                            span: bytes(14529..14534),
                                                                        },
                                                                        arguments: PathArguments::Parenthesized {
                                                                            paren_token: Paren,
                                                                            inputs: [
                                                                                Type::Reference {
                                                                                    and_token: And,
                                                                                    lifetime: None,
                                                                                    mutability: None,
                                                                                    elem: Type::Slice {
                                                                                        bracket_token: Bracket,
                                                                                        elem: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u8,
                                                                                                            span: bytes(14537..14539),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                            output: ReturnType::Type(
                                                                                RArrow,
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Result,
                                                                                                    span: bytes(14545..14551),
                                                                                                },
                                                                                                arguments: PathArguments::AngleBracketed {
                                                                                                    colon2_token: None,
                                                                                                    lt_token: Lt,
                                                                                                    args: [
                                                                                                        GenericArgument::Type(
                                                                                                            Type::Tuple {
                                                                                                                paren_token: Paren,
                                                                                                                elems: [],
                                                                                                            },
                                                                                                        ),
                                                                                                        Comma,
                                                                                                        GenericArgument::Type(
                                                                                                            Type::Path {
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: E,
                                                                                                                                span: bytes(14556..14557),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                    gt_token: Gt,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                        Comma,
                                    ],
                                },
                            ),
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Decoder,
                                            span: bytes(14502..14509),
                                        },
                                        arguments: PathArguments::AngleBracketed {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                GenericArgument::Type(
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: F,
                                                                        span: bytes(14510..14511),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                GenericArgument::Type(
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: E,
                                                                        span: bytes(14513..14514),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "data_url::forgiving_base64::Decoder::new",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "forgiving_base64",
                                        next: Some(
                                            MyPath {
                                                name: "Decoder",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#6}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(14573..14576),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: write_bytes,
                                                        span: bytes(14577..14588),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(14590..14591),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(14596..14600),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(14611..14615),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: write_bytes,
                                                                span: bytes(14630..14641),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: write_bytes,
                                                                            span: bytes(14630..14641),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: bit_buffer,
                                                                span: bytes(14655..14665),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: buffer_bit_length,
                                                                span: bytes(14682..14699),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: padding_symbols,
                                                                span: bytes(14716..14731),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "feed",
                            complete_name: "data_url::forgiving_base64::Decoder::feed",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "forgiving_base64",
                                        next: Some(
                                            MyPath {
                                                name: "Decoder",
                                                next: Some(
                                                    MyPath {
                                                        name: "feed",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#6}::feed",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: feed,
                                        span: bytes(14838..14842),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(14848..14852),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: input,
                                                        span: bytes(14854..14859),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(14863..14865),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(14871..14877),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Tuple {
                                                                        paren_token: Paren,
                                                                        elems: [],
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DecodeError,
                                                                                        span: bytes(14882..14893),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: E,
                                                                                                                    span: bytes(14894..14895),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "finish",
                            complete_name: "data_url::forgiving_base64::Decoder::finish",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "forgiving_base64",
                                        next: Some(
                                            MyPath {
                                                name: "Decoder",
                                                next: Some(
                                                    MyPath {
                                                        name: "finish",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#6}::finish",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: finish,
                                        span: bytes(16556..16562),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(16567..16571),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(16576..16582),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Tuple {
                                                                        paren_token: Paren,
                                                                        elems: [],
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DecodeError,
                                                                                        span: bytes(16587..16598),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: E,
                                                                                                                    span: bytes(16599..16600),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<data_url::forgiving_base64::DecodeError as >::from": FnData {
        fn_name: "from",
        complete_fn_name: "<data_url::forgiving_base64::DecodeError as >::from",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "from",
                    complete_name: "<data_url::forgiving_base64::DecodeError as >::from",
                    import_name: MyPath {
                        name: "<data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "DecodeError as >",
                                        next: Some(
                                            MyPath {
                                                name: "from",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#4}::from",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: from,
                                span: bytes(13524..13528),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: e,
                                                span: bytes(13529..13530),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: InvalidBase64Details,
                                                            span: bytes(13532..13552),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(13557..13561),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: DecodeError,
                                                            span: bytes(13572..13583),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: InvalidBase64,
                                                            span: bytes(13585..13598),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: InvalidBase64,
                                                                    span: bytes(13599..13612),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: e,
                                                                        span: bytes(13613..13614),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 4,
                struct_name: Name {
                    name: "DecodeError",
                    complete_name: "data_url::forgiving_base64::DecodeError",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "DecodeError",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "",
                        complete_name: "",
                        import_name: MyPath {
                            name: "",
                            next: None,
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: Some(
                                Lt,
                            ),
                            params: [
                                GenericParam::Type(
                                    TypeParam {
                                        attrs: [],
                                        ident: Ident {
                                            sym: E,
                                            span: bytes(13466..13467),
                                        },
                                        colon_token: None,
                                        bounds: [],
                                        eq_token: None,
                                        default: None,
                                    },
                                ),
                            ],
                            gt_token: Some(
                                Gt,
                            ),
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: From,
                                                span: bytes(13469..13473),
                                            },
                                            arguments: PathArguments::AngleBracketed {
                                                colon2_token: None,
                                                lt_token: Lt,
                                                args: [
                                                    GenericArgument::Type(
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: InvalidBase64Details,
                                                                            span: bytes(13474..13494),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                gt_token: Gt,
                                            },
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: DecodeError,
                                            span: bytes(13500..13511),
                                        },
                                        arguments: PathArguments::AngleBracketed {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                GenericArgument::Type(
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: E,
                                                                        span: bytes(13512..13513),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "from",
                            complete_name: "<data_url::forgiving_base64::DecodeError as >::from",
                            import_name: MyPath {
                                name: "<data_url",
                                next: Some(
                                    MyPath {
                                        name: "forgiving_base64",
                                        next: Some(
                                            MyPath {
                                                name: "DecodeError as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "from",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#4}::from",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from,
                                        span: bytes(13524..13528),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: e,
                                                        span: bytes(13529..13530),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: InvalidBase64Details,
                                                                    span: bytes(13532..13552),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(13557..13561),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: DecodeError,
                                                                    span: bytes(13572..13583),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: InvalidBase64,
                                                                    span: bytes(13585..13598),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: InvalidBase64,
                                                                            span: bytes(13599..13612),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: e,
                                                                                span: bytes(13613..13614),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "data_url::mime::Mime::get_parameter": FnData {
        fn_name: "get_parameter",
        complete_fn_name: "data_url::mime::Mime::get_parameter",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "get_parameter",
                    complete_name: "data_url::mime::Mime::get_parameter",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "Mime",
                                        next: Some(
                                            MyPath {
                                                name: "get_parameter",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::get_parameter",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: get_parameter,
                                span: bytes(19656..19669),
                            },
                            generics: Generics {
                                lt_token: Some(
                                    Lt,
                                ),
                                params: [
                                    GenericParam::Type(
                                        TypeParam {
                                            attrs: [],
                                            ident: Ident {
                                                sym: P,
                                                span: bytes(19670..19671),
                                            },
                                            colon_token: None,
                                            bounds: [],
                                            eq_token: None,
                                            default: None,
                                        },
                                    ),
                                ],
                                gt_token: Some(
                                    Gt,
                                ),
                                where_clause: Some(
                                    WhereClause {
                                        where_token: Where,
                                        predicates: [
                                            WherePredicate::Type(
                                                PredicateType {
                                                    lifetimes: None,
                                                    bounded_ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: P,
                                                                        span: bytes(19724..19725),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    colon_token: Colon,
                                                    bounds: [
                                                        TypeParamBound::Trait(
                                                            TraitBound {
                                                                paren_token: None,
                                                                modifier: TraitBoundModifier::Maybe(
                                                                    Question,
                                                                ),
                                                                lifetimes: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Sized,
                                                                                span: bytes(19728..19733),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        Plus,
                                                        TypeParamBound::Trait(
                                                            TraitBound {
                                                                paren_token: None,
                                                                modifier: TraitBoundModifier::None,
                                                                lifetimes: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: PartialEq,
                                                                                span: bytes(19736..19745),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: str,
                                                                                                            span: bytes(19746..19749),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Comma,
                                        ],
                                    },
                                ),
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(19674..19678),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: name,
                                                span: bytes(19680..19684),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: P,
                                                                span: bytes(19687..19688),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Option,
                                                    span: bytes(19693..19699),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Reference {
                                                                and_token: And,
                                                                lifetime: None,
                                                                mutability: None,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: str,
                                                                                    span: bytes(19701..19704),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(19766..19770),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: parameters,
                                                            span: bytes(19771..19781),
                                                        },
                                                    ),
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: iter,
                                                    span: bytes(19795..19799),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: find,
                                                span: bytes(19815..19819),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Closure {
                                                    attrs: [],
                                                    lifetimes: None,
                                                    constness: None,
                                                    movability: None,
                                                    asyncness: None,
                                                    capture: None,
                                                    or1_token: Or,
                                                    inputs: [
                                                        Pat::Reference {
                                                            attrs: [],
                                                            and_token: And,
                                                            mutability: None,
                                                            pat: Pat::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: n,
                                                                            span: bytes(19823..19824),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    Comma,
                                                                    Pat::Wild {
                                                                        attrs: [],
                                                                        underscore_token: Underscore,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                    or2_token: Or,
                                                    output: ReturnType::Default,
                                                    body: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: name,
                                                                            span: bytes(19830..19834),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Eq(
                                                            EqEq,
                                                        ),
                                                        right: Expr::Reference {
                                                            attrs: [],
                                                            and_token: And,
                                                            mutability: None,
                                                            expr: Expr::Unary {
                                                                attrs: [],
                                                                op: UnOp::Deref(
                                                                    Star,
                                                                ),
                                                                expr: Expr::Unary {
                                                                    attrs: [],
                                                                    op: UnOp::Deref(
                                                                        Star,
                                                                    ),
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: n,
                                                                                        span: bytes(19841..19842),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                            ],
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: map,
                                            span: bytes(19857..19860),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [
                                            Expr::Closure {
                                                attrs: [],
                                                lifetimes: None,
                                                constness: None,
                                                movability: None,
                                                asyncness: None,
                                                capture: None,
                                                or1_token: Or,
                                                inputs: [
                                                    Pat::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [
                                                            Pat::Wild {
                                                                attrs: [],
                                                                underscore_token: Underscore,
                                                            },
                                                            Comma,
                                                            Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: v,
                                                                    span: bytes(19866..19867),
                                                                },
                                                                subpat: None,
                                                            },
                                                        ],
                                                    },
                                                ],
                                                or2_token: Or,
                                                output: ReturnType::Default,
                                                body: Expr::Reference {
                                                    attrs: [],
                                                    and_token: And,
                                                    mutability: None,
                                                    expr: Expr::Unary {
                                                        attrs: [],
                                                        op: UnOp::Deref(
                                                            Star,
                                                        ),
                                                        expr: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Deref(
                                                                Star,
                                                            ),
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: v,
                                                                                span: bytes(19873..19874),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Mime",
                    complete_name: "data_url::mime::Mime",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "Mime",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Mime,
                                            span: bytes(19638..19642),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "get_parameter",
                            complete_name: "data_url::mime::Mime::get_parameter",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "mime",
                                        next: Some(
                                            MyPath {
                                                name: "Mime",
                                                next: Some(
                                                    MyPath {
                                                        name: "get_parameter",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::get_parameter",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: get_parameter,
                                        span: bytes(19656..19669),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: P,
                                                        span: bytes(19670..19671),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: Some(
                                            WhereClause {
                                                where_token: Where,
                                                predicates: [
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: P,
                                                                                span: bytes(19724..19725),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::Maybe(
                                                                            Question,
                                                                        ),
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Sized,
                                                                                        span: bytes(19728..19733),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Plus,
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: PartialEq,
                                                                                        span: bytes(19736..19745),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: str,
                                                                                                                    span: bytes(19746..19749),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                ],
                                            },
                                        ),
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(19674..19678),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: name,
                                                        span: bytes(19680..19684),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: P,
                                                                        span: bytes(19687..19688),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Option,
                                                            span: bytes(19693..19699),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Reference {
                                                                        and_token: And,
                                                                        lifetime: None,
                                                                        mutability: None,
                                                                        elem: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: str,
                                                                                            span: bytes(19701..19704),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<data_url::forgiving_base64::InvalidBase64 as fmt::Display>::fmt": FnData {
        fn_name: "fmt",
        complete_fn_name: "<data_url::forgiving_base64::InvalidBase64 as fmt::Display>::fmt",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "fmt",
                    complete_name: "<data_url::forgiving_base64::InvalidBase64 as fmt::Display>::fmt",
                    import_name: MyPath {
                        name: "<data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "InvalidBase64 as fmt",
                                        next: Some(
                                            MyPath {
                                                name: "Display>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fmt",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::fmt",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: fmt,
                                span: bytes(12161..12164),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(12166..12170),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: f,
                                                span: bytes(12172..12173),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(12180..12183),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Formatter,
                                                                span: bytes(12185..12194),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(12195..12196),
                                                                            ident: Ident {
                                                                                sym: _,
                                                                                span: bytes(12196..12197),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: fmt,
                                                    span: bytes(12203..12206),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(12208..12214),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Match {
                                        attrs: [],
                                        match_token: Match,
                                        expr: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(12231..12235),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Unnamed(
                                                Index {
                                                    index: 0,
                                                    span: bytes(12236..12237),
                                                },
                                            ),
                                        },
                                        brace_token: Brace,
                                        arms: [
                                            Arm {
                                                attrs: [],
                                                pat: Pat::TupleStruct {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: InvalidBase64Details,
                                                                    span: bytes(12252..12272),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: UnexpectedSymbol,
                                                                    span: bytes(12274..12290),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    paren_token: Paren,
                                                    elems: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: code_point,
                                                                span: bytes(12291..12301),
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Macro {
                                                                    attrs: [],
                                                                    mac: Macro {
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: write,
                                                                                        span: bytes(12324..12329),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        bang_token: Not,
                                                                        delimiter: MacroDelimiter::Paren(
                                                                            Paren,
                                                                        ),
                                                                        tokens: TokenStream [
                                                                            Ident {
                                                                                sym: f,
                                                                                span: bytes(12331..12332),
                                                                            },
                                                                            Punct {
                                                                                char: ',',
                                                                                spacing: Alone,
                                                                                span: bytes(12332..12333),
                                                                            },
                                                                            Literal {
                                                                                lit: "symbol with codepoint {} not expected",
                                                                                span: bytes(12334..12373),
                                                                            },
                                                                            Punct {
                                                                                char: ',',
                                                                                spacing: Alone,
                                                                                span: bytes(12373..12374),
                                                                            },
                                                                            Ident {
                                                                                sym: code_point,
                                                                                span: bytes(12375..12385),
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                },
                                                comma: None,
                                            },
                                            Arm {
                                                attrs: [],
                                                pat: Pat::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: InvalidBase64Details,
                                                                    span: bytes(12413..12433),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: AlphabetSymbolAfterPadding,
                                                                    span: bytes(12435..12461),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Macro {
                                                                    attrs: [],
                                                                    mac: Macro {
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: write,
                                                                                        span: bytes(12483..12488),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        bang_token: Not,
                                                                        delimiter: MacroDelimiter::Paren(
                                                                            Paren,
                                                                        ),
                                                                        tokens: TokenStream [
                                                                            Ident {
                                                                                sym: f,
                                                                                span: bytes(12490..12491),
                                                                            },
                                                                            Punct {
                                                                                char: ',',
                                                                                spacing: Alone,
                                                                                span: bytes(12491..12492),
                                                                            },
                                                                            Literal {
                                                                                lit: "alphabet symbol present after padding",
                                                                                span: bytes(12493..12532),
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                },
                                                comma: None,
                                            },
                                            Arm {
                                                attrs: [],
                                                pat: Pat::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: InvalidBase64Details,
                                                                    span: bytes(12560..12580),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: LoneAlphabetSymbol,
                                                                    span: bytes(12582..12600),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: write,
                                                                        span: bytes(12604..12609),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: f,
                                                                span: bytes(12611..12612),
                                                            },
                                                            Punct {
                                                                char: ',',
                                                                spacing: Alone,
                                                                span: bytes(12612..12613),
                                                            },
                                                            Literal {
                                                                lit: "lone alphabet symbol present",
                                                                span: bytes(12614..12644),
                                                            },
                                                        ],
                                                    },
                                                },
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                            Arm {
                                                attrs: [],
                                                pat: Pat::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: InvalidBase64Details,
                                                                    span: bytes(12659..12679),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Padding,
                                                                    span: bytes(12681..12688),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                guard: None,
                                                fat_arrow_token: FatArrow,
                                                body: Expr::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: write,
                                                                        span: bytes(12692..12697),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: f,
                                                                span: bytes(12699..12700),
                                                            },
                                                            Punct {
                                                                char: ',',
                                                                spacing: Alone,
                                                                span: bytes(12700..12701),
                                                            },
                                                            Literal {
                                                                lit: "incorrect padding",
                                                                span: bytes(12702..12721),
                                                            },
                                                        ],
                                                    },
                                                },
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "InvalidBase64",
                    complete_name: "data_url::forgiving_base64::InvalidBase64",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "InvalidBase64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "Display",
                        complete_name: "",
                        import_name: MyPath {
                            name: "fmt",
                            next: Some(
                                MyPath {
                                    name: "Display",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: fmt,
                                                span: bytes(12121..12124),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: Display,
                                                span: bytes(12126..12133),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: InvalidBase64,
                                            span: bytes(12138..12151),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "fmt",
                            complete_name: "<data_url::forgiving_base64::InvalidBase64 as fmt::Display>::fmt",
                            import_name: MyPath {
                                name: "<data_url",
                                next: Some(
                                    MyPath {
                                        name: "forgiving_base64",
                                        next: Some(
                                            MyPath {
                                                name: "InvalidBase64 as fmt",
                                                next: Some(
                                                    MyPath {
                                                        name: "Display>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fmt",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::fmt",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fmt,
                                        span: bytes(12161..12164),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(12166..12170),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(12172..12173),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: fmt,
                                                                        span: bytes(12180..12183),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Formatter,
                                                                        span: bytes(12185..12194),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Lifetime(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(12195..12196),
                                                                                    ident: Ident {
                                                                                        sym: _,
                                                                                        span: bytes(12196..12197),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fmt,
                                                            span: bytes(12203..12206),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(12208..12214),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Match {
                                                attrs: [],
                                                match_token: Match,
                                                expr: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(12231..12235),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Unnamed(
                                                        Index {
                                                            index: 0,
                                                            span: bytes(12236..12237),
                                                        },
                                                    ),
                                                },
                                                brace_token: Brace,
                                                arms: [
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::TupleStruct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: InvalidBase64Details,
                                                                            span: bytes(12252..12272),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: UnexpectedSymbol,
                                                                            span: bytes(12274..12290),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: code_point,
                                                                        span: bytes(12291..12301),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::Macro {
                                                                            attrs: [],
                                                                            mac: Macro {
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: write,
                                                                                                span: bytes(12324..12329),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                bang_token: Not,
                                                                                delimiter: MacroDelimiter::Paren(
                                                                                    Paren,
                                                                                ),
                                                                                tokens: TokenStream [
                                                                                    Ident {
                                                                                        sym: f,
                                                                                        span: bytes(12331..12332),
                                                                                    },
                                                                                    Punct {
                                                                                        char: ',',
                                                                                        spacing: Alone,
                                                                                        span: bytes(12332..12333),
                                                                                    },
                                                                                    Literal {
                                                                                        lit: "symbol with codepoint {} not expected",
                                                                                        span: bytes(12334..12373),
                                                                                    },
                                                                                    Punct {
                                                                                        char: ',',
                                                                                        spacing: Alone,
                                                                                        span: bytes(12373..12374),
                                                                                    },
                                                                                    Ident {
                                                                                        sym: code_point,
                                                                                        span: bytes(12375..12385),
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                        comma: None,
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: InvalidBase64Details,
                                                                            span: bytes(12413..12433),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: AlphabetSymbolAfterPadding,
                                                                            span: bytes(12435..12461),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::Macro {
                                                                            attrs: [],
                                                                            mac: Macro {
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: write,
                                                                                                span: bytes(12483..12488),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                bang_token: Not,
                                                                                delimiter: MacroDelimiter::Paren(
                                                                                    Paren,
                                                                                ),
                                                                                tokens: TokenStream [
                                                                                    Ident {
                                                                                        sym: f,
                                                                                        span: bytes(12490..12491),
                                                                                    },
                                                                                    Punct {
                                                                                        char: ',',
                                                                                        spacing: Alone,
                                                                                        span: bytes(12491..12492),
                                                                                    },
                                                                                    Literal {
                                                                                        lit: "alphabet symbol present after padding",
                                                                                        span: bytes(12493..12532),
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                        comma: None,
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: InvalidBase64Details,
                                                                            span: bytes(12560..12580),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: LoneAlphabetSymbol,
                                                                            span: bytes(12582..12600),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Macro {
                                                            attrs: [],
                                                            mac: Macro {
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: write,
                                                                                span: bytes(12604..12609),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                bang_token: Not,
                                                                delimiter: MacroDelimiter::Paren(
                                                                    Paren,
                                                                ),
                                                                tokens: TokenStream [
                                                                    Ident {
                                                                        sym: f,
                                                                        span: bytes(12611..12612),
                                                                    },
                                                                    Punct {
                                                                        char: ',',
                                                                        spacing: Alone,
                                                                        span: bytes(12612..12613),
                                                                    },
                                                                    Literal {
                                                                        lit: "lone alphabet symbol present",
                                                                        span: bytes(12614..12644),
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Pat::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: InvalidBase64Details,
                                                                            span: bytes(12659..12679),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Padding,
                                                                            span: bytes(12681..12688),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Expr::Macro {
                                                            attrs: [],
                                                            mac: Macro {
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: write,
                                                                                span: bytes(12692..12697),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                bang_token: Not,
                                                                delimiter: MacroDelimiter::Paren(
                                                                    Paren,
                                                                ),
                                                                tokens: TokenStream [
                                                                    Ident {
                                                                        sym: f,
                                                                        span: bytes(12699..12700),
                                                                    },
                                                                    Punct {
                                                                        char: ',',
                                                                        spacing: Alone,
                                                                        span: bytes(12700..12701),
                                                                    },
                                                                    Literal {
                                                                        lit: "incorrect padding",
                                                                        span: bytes(12702..12721),
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "data_url::forgiving_base64::decode_to_vec": FnData {
        fn_name: "decode_to_vec",
        complete_fn_name: "data_url::forgiving_base64::decode_to_vec",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "decode_to_vec",
                    complete_name: "data_url::forgiving_base64::decode_to_vec",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "decode_to_vec",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "decode_to_vec",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: decode_to_vec,
                                span: bytes(13969..13982),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: input,
                                                span: bytes(13983..13988),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Slice {
                                                bracket_token: Bracket,
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u8,
                                                                    span: bytes(13992..13994),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(14000..14006),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Vec,
                                                                                span: bytes(14007..14010),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u8,
                                                                                                            span: bytes(14011..14013),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: InvalidBase64,
                                                                                span: bytes(14016..14029),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: v,
                                            span: bytes(14045..14046),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Vec,
                                                                    span: bytes(14049..14052),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: new,
                                                                    span: bytes(14054..14057),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Block {
                                        attrs: [],
                                        label: None,
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: decoder,
                                                            span: bytes(14083..14090),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Decoder,
                                                                                    span: bytes(14093..14100),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: new,
                                                                                    span: bytes(14102..14105),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Closure {
                                                                        attrs: [],
                                                                        lifetimes: None,
                                                                        constness: None,
                                                                        movability: None,
                                                                        asyncness: None,
                                                                        capture: None,
                                                                        or1_token: Or,
                                                                        inputs: [
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: bytes,
                                                                                    span: bytes(14107..14112),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                        or2_token: Or,
                                                                        output: ReturnType::Default,
                                                                        body: Expr::Block {
                                                                            attrs: [],
                                                                            label: None,
                                                                            block: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: v,
                                                                                                                span: bytes(14128..14129),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: extend_from_slice,
                                                                                                span: bytes(14130..14147),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: bytes,
                                                                                                                    span: bytes(14148..14153),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Ok,
                                                                                                                span: bytes(14168..14170),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Tuple {
                                                                                                    attrs: [],
                                                                                                    paren_token: Paren,
                                                                                                    elems: [],
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: decoder,
                                                                                span: bytes(14195..14202),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: feed,
                                                                span: bytes(14203..14207),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: input,
                                                                                    span: bytes(14208..14213),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: decoder,
                                                                                span: bytes(14225..14232),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: finish,
                                                                span: bytes(14233..14239),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Ok,
                                                            span: bytes(14254..14256),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: v,
                                                                span: bytes(14257..14258),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "data_url::pretend_parse_data_url": FnData {
        fn_name: "pretend_parse_data_url",
        complete_fn_name: "data_url::pretend_parse_data_url",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "pretend_parse_data_url",
                    complete_name: "data_url::pretend_parse_data_url",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "pretend_parse_data_url",
                                next: None,
                            },
                        ),
                    },
                },
                complete_name_in_file: "pretend_parse_data_url",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: pretend_parse_data_url,
                                span: bytes(4688..4710),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: input,
                                                span: bytes(4711..4716),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(4719..4722),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Option,
                                                    span: bytes(4727..4733),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Reference {
                                                                and_token: And,
                                                                lifetime: None,
                                                                mutability: None,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: str,
                                                                                    span: bytes(4735..4738),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: left_trimmed,
                                            span: bytes(4782..4794),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: input,
                                                                    span: bytes(4797..4802),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: trim_start_matches,
                                                    span: bytes(4803..4821),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Closure {
                                                        attrs: [],
                                                        lifetimes: None,
                                                        constness: None,
                                                        movability: None,
                                                        asyncness: None,
                                                        capture: None,
                                                        or1_token: Or,
                                                        inputs: [
                                                            Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: ch,
                                                                    span: bytes(4823..4825),
                                                                },
                                                                subpat: None,
                                                            },
                                                        ],
                                                        or2_token: Or,
                                                        output: ReturnType::Default,
                                                        body: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: ch,
                                                                                span: bytes(4827..4829),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Le(
                                                                Le,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Char {
                                                                    token: ' ',
                                                                },
                                                            },
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: bytes,
                                            span: bytes(4852..4857),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: left_trimmed,
                                                                    span: bytes(4860..4872),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: bytes,
                                                    span: bytes(4873..4878),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Block {
                                        attrs: [],
                                        label: None,
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: iter,
                                                            span: bytes(4971..4975),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: bytes,
                                                                                        span: bytes(4978..4983),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: by_ref,
                                                                        span: bytes(4997..5003),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: filter,
                                                                    span: bytes(5019..5025),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Closure {
                                                                        attrs: [],
                                                                        lifetimes: None,
                                                                        constness: None,
                                                                        movability: None,
                                                                        asyncness: None,
                                                                        capture: None,
                                                                        or1_token: Or,
                                                                        inputs: [
                                                                            Pat::Reference {
                                                                                attrs: [],
                                                                                and_token: And,
                                                                                mutability: None,
                                                                                pat: Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: byte,
                                                                                        span: bytes(5028..5032),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                            },
                                                                        ],
                                                                        or2_token: Or,
                                                                        output: ReturnType::Default,
                                                                        body: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Not(
                                                                                Not,
                                                                            ),
                                                                            expr: Expr::Macro {
                                                                                attrs: [],
                                                                                mac: Macro {
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: matches,
                                                                                                    span: bytes(5035..5042),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    bang_token: Not,
                                                                                    delimiter: MacroDelimiter::Paren(
                                                                                        Paren,
                                                                                    ),
                                                                                    tokens: TokenStream [
                                                                                        Ident {
                                                                                            sym: byte,
                                                                                            span: bytes(5044..5048),
                                                                                        },
                                                                                        Punct {
                                                                                            char: ',',
                                                                                            spacing: Alone,
                                                                                            span: bytes(5048..5049),
                                                                                        },
                                                                                        Literal {
                                                                                            lit: b'\t',
                                                                                            span: bytes(5050..5055),
                                                                                        },
                                                                                        Punct {
                                                                                            char: '|',
                                                                                            spacing: Alone,
                                                                                            span: bytes(5056..5057),
                                                                                        },
                                                                                        Literal {
                                                                                            lit: b'\n',
                                                                                            span: bytes(5058..5063),
                                                                                        },
                                                                                        Punct {
                                                                                            char: '|',
                                                                                            spacing: Alone,
                                                                                            span: bytes(5064..5065),
                                                                                        },
                                                                                        Literal {
                                                                                            lit: b'\r',
                                                                                            span: bytes(5066..5071),
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: require,
                                                                        span: bytes(5083..5090),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: iter,
                                                                span: bytes(5092..5096),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(5096..5097),
                                                            },
                                                            Ident {
                                                                sym: next,
                                                                span: bytes(5097..5101),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(5101..5103),
                                                            },
                                                            Punct {
                                                                char: '?',
                                                                spacing: Joint,
                                                                span: bytes(5103..5104),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(5104..5105),
                                                            },
                                                            Ident {
                                                                sym: eq_ignore_ascii_case,
                                                                span: bytes(5105..5125),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [
                                                                    Punct {
                                                                        char: '&',
                                                                        spacing: Alone,
                                                                        span: bytes(5126..5127),
                                                                    },
                                                                    Literal {
                                                                        lit: b'd',
                                                                        span: bytes(5127..5131),
                                                                    },
                                                                ],
                                                                span: bytes(5125..5132),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: require,
                                                                        span: bytes(5143..5150),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: iter,
                                                                span: bytes(5152..5156),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(5156..5157),
                                                            },
                                                            Ident {
                                                                sym: next,
                                                                span: bytes(5157..5161),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(5161..5163),
                                                            },
                                                            Punct {
                                                                char: '?',
                                                                spacing: Joint,
                                                                span: bytes(5163..5164),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(5164..5165),
                                                            },
                                                            Ident {
                                                                sym: eq_ignore_ascii_case,
                                                                span: bytes(5165..5185),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [
                                                                    Punct {
                                                                        char: '&',
                                                                        spacing: Alone,
                                                                        span: bytes(5186..5187),
                                                                    },
                                                                    Literal {
                                                                        lit: b'a',
                                                                        span: bytes(5187..5191),
                                                                    },
                                                                ],
                                                                span: bytes(5185..5192),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: require,
                                                                        span: bytes(5203..5210),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: iter,
                                                                span: bytes(5212..5216),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(5216..5217),
                                                            },
                                                            Ident {
                                                                sym: next,
                                                                span: bytes(5217..5221),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(5221..5223),
                                                            },
                                                            Punct {
                                                                char: '?',
                                                                spacing: Joint,
                                                                span: bytes(5223..5224),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(5224..5225),
                                                            },
                                                            Ident {
                                                                sym: eq_ignore_ascii_case,
                                                                span: bytes(5225..5245),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [
                                                                    Punct {
                                                                        char: '&',
                                                                        spacing: Alone,
                                                                        span: bytes(5246..5247),
                                                                    },
                                                                    Literal {
                                                                        lit: b't',
                                                                        span: bytes(5247..5251),
                                                                    },
                                                                ],
                                                                span: bytes(5245..5252),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: require,
                                                                        span: bytes(5263..5270),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: iter,
                                                                span: bytes(5272..5276),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(5276..5277),
                                                            },
                                                            Ident {
                                                                sym: next,
                                                                span: bytes(5277..5281),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(5281..5283),
                                                            },
                                                            Punct {
                                                                char: '?',
                                                                spacing: Joint,
                                                                span: bytes(5283..5284),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(5284..5285),
                                                            },
                                                            Ident {
                                                                sym: eq_ignore_ascii_case,
                                                                span: bytes(5285..5305),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [
                                                                    Punct {
                                                                        char: '&',
                                                                        spacing: Alone,
                                                                        span: bytes(5306..5307),
                                                                    },
                                                                    Literal {
                                                                        lit: b'a',
                                                                        span: bytes(5307..5311),
                                                                    },
                                                                ],
                                                                span: bytes(5305..5312),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: require,
                                                                        span: bytes(5323..5330),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: iter,
                                                                span: bytes(5332..5336),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(5336..5337),
                                                            },
                                                            Ident {
                                                                sym: next,
                                                                span: bytes(5337..5341),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(5341..5343),
                                                            },
                                                            Punct {
                                                                char: '?',
                                                                spacing: Alone,
                                                                span: bytes(5343..5344),
                                                            },
                                                            Punct {
                                                                char: '=',
                                                                spacing: Joint,
                                                                span: bytes(5345..5346),
                                                            },
                                                            Punct {
                                                                char: '=',
                                                                spacing: Alone,
                                                                span: bytes(5346..5347),
                                                            },
                                                            Literal {
                                                                lit: b':',
                                                                span: bytes(5348..5352),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: bytes_consumed,
                                            span: bytes(5369..5383),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: left_trimmed,
                                                                        span: bytes(5386..5398),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: len,
                                                        span: bytes(5399..5402),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [],
                                                },
                                                op: BinOp::Sub(
                                                    Minus,
                                                ),
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: bytes,
                                                                        span: bytes(5407..5412),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: len,
                                                        span: bytes(5413..5416),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: after_colon,
                                            span: bytes(5428..5439),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Reference {
                                                attrs: [],
                                                and_token: And,
                                                mutability: None,
                                                expr: Expr::Index {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: left_trimmed,
                                                                        span: bytes(5443..5455),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    bracket_token: Bracket,
                                                    index: Expr::Range {
                                                        attrs: [],
                                                        start: Some(
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: bytes_consumed,
                                                                                span: bytes(5456..5470),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        limits: RangeLimits::HalfOpen(
                                                            DotDot,
                                                        ),
                                                        end: None,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Some,
                                                            span: bytes(5512..5516),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: after_colon,
                                                                    span: bytes(5517..5528),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: trim_end_matches,
                                                    span: bytes(5529..5545),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Closure {
                                                        attrs: [],
                                                        lifetimes: None,
                                                        constness: None,
                                                        movability: None,
                                                        asyncness: None,
                                                        capture: None,
                                                        or1_token: Or,
                                                        inputs: [
                                                            Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: ch,
                                                                    span: bytes(5547..5549),
                                                                },
                                                                subpat: None,
                                                            },
                                                        ],
                                                        or2_token: Or,
                                                        output: ReturnType::Default,
                                                        body: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: ch,
                                                                                span: bytes(5551..5553),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Le(
                                                                Le,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Char {
                                                                    token: ' ',
                                                                },
                                                            },
                                                        },
                                                    },
                                                ],
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "data_url::decode_without_base64": FnData {
        fn_name: "decode_without_base64",
        complete_fn_name: "data_url::decode_without_base64",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "decode_without_base64",
                    complete_name: "data_url::decode_without_base64",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "decode_without_base64",
                                next: None,
                            },
                        ),
                    },
                },
                complete_name_in_file: "decode_without_base64",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: decode_without_base64,
                                span: bytes(9327..9348),
                            },
                            generics: Generics {
                                lt_token: Some(
                                    Lt,
                                ),
                                params: [
                                    GenericParam::Type(
                                        TypeParam {
                                            attrs: [],
                                            ident: Ident {
                                                sym: F,
                                                span: bytes(9349..9350),
                                            },
                                            colon_token: None,
                                            bounds: [],
                                            eq_token: None,
                                            default: None,
                                        },
                                    ),
                                    Comma,
                                    GenericParam::Type(
                                        TypeParam {
                                            attrs: [],
                                            ident: Ident {
                                                sym: E,
                                                span: bytes(9352..9353),
                                            },
                                            colon_token: None,
                                            bounds: [],
                                            eq_token: None,
                                            default: None,
                                        },
                                    ),
                                ],
                                gt_token: Some(
                                    Gt,
                                ),
                                where_clause: Some(
                                    WhereClause {
                                        where_token: Where,
                                        predicates: [
                                            WherePredicate::Type(
                                                PredicateType {
                                                    lifetimes: None,
                                                    bounded_ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: F,
                                                                        span: bytes(9475..9476),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    colon_token: Colon,
                                                    bounds: [
                                                        TypeParamBound::Trait(
                                                            TraitBound {
                                                                paren_token: None,
                                                                modifier: TraitBoundModifier::None,
                                                                lifetimes: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: FnMut,
                                                                                span: bytes(9478..9483),
                                                                            },
                                                                            arguments: PathArguments::Parenthesized {
                                                                                paren_token: Paren,
                                                                                inputs: [
                                                                                    Type::Reference {
                                                                                        and_token: And,
                                                                                        lifetime: None,
                                                                                        mutability: None,
                                                                                        elem: Type::Slice {
                                                                                            bracket_token: Bracket,
                                                                                            elem: Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: u8,
                                                                                                                span: bytes(9486..9488),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                                output: ReturnType::Type(
                                                                                    RArrow,
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Result,
                                                                                                        span: bytes(9494..9500),
                                                                                                    },
                                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                                        colon2_token: None,
                                                                                                        lt_token: Lt,
                                                                                                        args: [
                                                                                                            GenericArgument::Type(
                                                                                                                Type::Tuple {
                                                                                                                    paren_token: Paren,
                                                                                                                    elems: [],
                                                                                                                },
                                                                                                            ),
                                                                                                            Comma,
                                                                                                            GenericArgument::Type(
                                                                                                                Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: E,
                                                                                                                                    span: bytes(9505..9506),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                        gt_token: Gt,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Comma,
                                        ],
                                    },
                                ),
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: encoded_body_plus_fragment,
                                                span: bytes(9360..9386),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(9389..9392),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: write_bytes,
                                                span: bytes(9402..9413),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: F,
                                                            span: bytes(9415..9416),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(9423..9429),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Option,
                                                                                span: bytes(9430..9436),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: FragmentIdentifier,
                                                                                                            span: bytes(9437..9455),
                                                                                                        },
                                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                                            colon2_token: None,
                                                                                                            lt_token: Lt,
                                                                                                            args: [
                                                                                                                GenericArgument::Lifetime(
                                                                                                                    Lifetime {
                                                                                                                        apostrophe: bytes(9456..9457),
                                                                                                                        ident: Ident {
                                                                                                                            sym: _,
                                                                                                                            span: bytes(9457..9458),
                                                                                                                        },
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                            gt_token: Gt,
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: E,
                                                                                span: bytes(9462..9463),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: bytes,
                                            span: bytes(9519..9524),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: encoded_body_plus_fragment,
                                                                    span: bytes(9527..9553),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: as_bytes,
                                                    span: bytes(9554..9562),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: slice_start,
                                            span: bytes(9578..9589),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::ForLoop {
                                        attrs: [],
                                        label: None,
                                        for_token: For,
                                        pat: Pat::Tuple {
                                            attrs: [],
                                            paren_token: Paren,
                                            elems: [
                                                Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: i,
                                                        span: bytes(9604..9605),
                                                    },
                                                    subpat: None,
                                                },
                                                Comma,
                                                Pat::Reference {
                                                    attrs: [],
                                                    and_token: And,
                                                    mutability: None,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: byte,
                                                            span: bytes(9608..9612),
                                                        },
                                                        subpat: None,
                                                    },
                                                },
                                            ],
                                        },
                                        in_token: In,
                                        expr: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: bytes,
                                                                    span: bytes(9617..9622),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: iter,
                                                    span: bytes(9623..9627),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: enumerate,
                                                span: bytes(9630..9639),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [],
                                        },
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Macro {
                                                            attrs: [],
                                                            mac: Macro {
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: matches,
                                                                                span: bytes(9868..9875),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                bang_token: Not,
                                                                delimiter: MacroDelimiter::Paren(
                                                                    Paren,
                                                                ),
                                                                tokens: TokenStream [
                                                                    Ident {
                                                                        sym: byte,
                                                                        span: bytes(9877..9881),
                                                                    },
                                                                    Punct {
                                                                        char: ',',
                                                                        spacing: Alone,
                                                                        span: bytes(9881..9882),
                                                                    },
                                                                    Literal {
                                                                        lit: b'%',
                                                                        span: bytes(9883..9887),
                                                                    },
                                                                    Punct {
                                                                        char: '|',
                                                                        spacing: Alone,
                                                                        span: bytes(9888..9889),
                                                                    },
                                                                    Literal {
                                                                        lit: b'#',
                                                                        span: bytes(9890..9894),
                                                                    },
                                                                    Punct {
                                                                        char: '|',
                                                                        spacing: Alone,
                                                                        span: bytes(9895..9896),
                                                                    },
                                                                    Literal {
                                                                        lit: b'\t',
                                                                        span: bytes(9897..9902),
                                                                    },
                                                                    Punct {
                                                                        char: '|',
                                                                        spacing: Alone,
                                                                        span: bytes(9903..9904),
                                                                    },
                                                                    Literal {
                                                                        lit: b'\n',
                                                                        span: bytes(9905..9910),
                                                                    },
                                                                    Punct {
                                                                        char: '|',
                                                                        spacing: Alone,
                                                                        span: bytes(9911..9912),
                                                                    },
                                                                    Literal {
                                                                        lit: b'\r',
                                                                        span: bytes(9913..9918),
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: i,
                                                                                                span: bytes(10055..10056),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Gt(
                                                                                Gt,
                                                                            ),
                                                                            right: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: slice_start,
                                                                                                span: bytes(10059..10070),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Try {
                                                                                        attrs: [],
                                                                                        expr: Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: write_bytes,
                                                                                                                span: bytes(10089..10100),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Reference {
                                                                                                    attrs: [],
                                                                                                    and_token: And,
                                                                                                    mutability: None,
                                                                                                    expr: Expr::Index {
                                                                                                        attrs: [],
                                                                                                        expr: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: bytes,
                                                                                                                            span: bytes(10102..10107),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        bracket_token: Bracket,
                                                                                                        index: Expr::Range {
                                                                                                            attrs: [],
                                                                                                            start: Some(
                                                                                                                Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: slice_start,
                                                                                                                                    span: bytes(10108..10119),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ),
                                                                                                            limits: RangeLimits::HalfOpen(
                                                                                                                DotDot,
                                                                                                            ),
                                                                                                            end: Some(
                                                                                                                Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: i,
                                                                                                                                    span: bytes(10121..10122),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        question_token: Question,
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::Assign {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: slice_start,
                                                                                                            span: bytes(10143..10154),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        eq_token: Eq,
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: i,
                                                                                                            span: bytes(10157..10158),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: None,
                                                                    },
                                                                    None,
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::Match {
                                                                        attrs: [],
                                                                        match_token: Match,
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: byte,
                                                                                            span: bytes(10240..10244),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        brace_token: Brace,
                                                                        arms: [
                                                                            Arm {
                                                                                attrs: [],
                                                                                pat: Pat::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b'%',
                                                                                    },
                                                                                },
                                                                                guard: None,
                                                                                fat_arrow_token: FatArrow,
                                                                                body: Expr::Block {
                                                                                    attrs: [],
                                                                                    label: None,
                                                                                    block: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Local {
                                                                                                attrs: [],
                                                                                                let_token: Let,
                                                                                                pat: Pat::Ident {
                                                                                                    attrs: [],
                                                                                                    by_ref: None,
                                                                                                    mutability: None,
                                                                                                    ident: Ident {
                                                                                                        sym: l,
                                                                                                        span: bytes(10297..10298),
                                                                                                    },
                                                                                                    subpat: None,
                                                                                                },
                                                                                                init: Some(
                                                                                                    LocalInit {
                                                                                                        eq_token: Eq,
                                                                                                        expr: Expr::MethodCall {
                                                                                                            attrs: [],
                                                                                                            receiver: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: bytes,
                                                                                                                                    span: bytes(10301..10306),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: get,
                                                                                                                    span: bytes(10307..10310),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Binary {
                                                                                                                        attrs: [],
                                                                                                                        left: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: i,
                                                                                                                                            span: bytes(10311..10312),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        op: BinOp::Add(
                                                                                                                            Plus,
                                                                                                                        ),
                                                                                                                        right: Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Int {
                                                                                                                                token: 2,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            method: Ident {
                                                                                                                sym: and_then,
                                                                                                                span: bytes(10318..10326),
                                                                                                            },
                                                                                                            turbofish: None,
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Closure {
                                                                                                                    attrs: [],
                                                                                                                    lifetimes: None,
                                                                                                                    constness: None,
                                                                                                                    movability: None,
                                                                                                                    asyncness: None,
                                                                                                                    capture: None,
                                                                                                                    or1_token: Or,
                                                                                                                    inputs: [
                                                                                                                        Pat::Reference {
                                                                                                                            attrs: [],
                                                                                                                            and_token: And,
                                                                                                                            mutability: None,
                                                                                                                            pat: Pat::Ident {
                                                                                                                                attrs: [],
                                                                                                                                by_ref: None,
                                                                                                                                mutability: None,
                                                                                                                                ident: Ident {
                                                                                                                                    sym: b,
                                                                                                                                    span: bytes(10329..10330),
                                                                                                                                },
                                                                                                                                subpat: None,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ],
                                                                                                                    or2_token: Or,
                                                                                                                    output: ReturnType::Default,
                                                                                                                    body: Expr::MethodCall {
                                                                                                                        attrs: [],
                                                                                                                        receiver: Expr::Paren {
                                                                                                                            attrs: [],
                                                                                                                            paren_token: Paren,
                                                                                                                            expr: Expr::Cast {
                                                                                                                                attrs: [],
                                                                                                                                expr: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: b,
                                                                                                                                                    span: bytes(10333..10334),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                as_token: As,
                                                                                                                                ty: Type::Path {
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: char,
                                                                                                                                                    span: bytes(10338..10342),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            },
                                                                                                                        },
                                                                                                                        dot_token: Dot,
                                                                                                                        method: Ident {
                                                                                                                            sym: to_digit,
                                                                                                                            span: bytes(10344..10352),
                                                                                                                        },
                                                                                                                        turbofish: None,
                                                                                                                        paren_token: Paren,
                                                                                                                        args: [
                                                                                                                            Expr::Lit {
                                                                                                                                attrs: [],
                                                                                                                                lit: Lit::Int {
                                                                                                                                    token: 16,
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                        diverge: None,
                                                                                                    },
                                                                                                ),
                                                                                                semi_token: Semi,
                                                                                            },
                                                                                            Stmt::Local {
                                                                                                attrs: [],
                                                                                                let_token: Let,
                                                                                                pat: Pat::Ident {
                                                                                                    attrs: [],
                                                                                                    by_ref: None,
                                                                                                    mutability: None,
                                                                                                    ident: Ident {
                                                                                                        sym: h,
                                                                                                        span: bytes(10383..10384),
                                                                                                    },
                                                                                                    subpat: None,
                                                                                                },
                                                                                                init: Some(
                                                                                                    LocalInit {
                                                                                                        eq_token: Eq,
                                                                                                        expr: Expr::MethodCall {
                                                                                                            attrs: [],
                                                                                                            receiver: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: bytes,
                                                                                                                                    span: bytes(10387..10392),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: get,
                                                                                                                    span: bytes(10393..10396),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Binary {
                                                                                                                        attrs: [],
                                                                                                                        left: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: i,
                                                                                                                                            span: bytes(10397..10398),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        op: BinOp::Add(
                                                                                                                            Plus,
                                                                                                                        ),
                                                                                                                        right: Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Int {
                                                                                                                                token: 1,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            method: Ident {
                                                                                                                sym: and_then,
                                                                                                                span: bytes(10404..10412),
                                                                                                            },
                                                                                                            turbofish: None,
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Closure {
                                                                                                                    attrs: [],
                                                                                                                    lifetimes: None,
                                                                                                                    constness: None,
                                                                                                                    movability: None,
                                                                                                                    asyncness: None,
                                                                                                                    capture: None,
                                                                                                                    or1_token: Or,
                                                                                                                    inputs: [
                                                                                                                        Pat::Reference {
                                                                                                                            attrs: [],
                                                                                                                            and_token: And,
                                                                                                                            mutability: None,
                                                                                                                            pat: Pat::Ident {
                                                                                                                                attrs: [],
                                                                                                                                by_ref: None,
                                                                                                                                mutability: None,
                                                                                                                                ident: Ident {
                                                                                                                                    sym: b,
                                                                                                                                    span: bytes(10415..10416),
                                                                                                                                },
                                                                                                                                subpat: None,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ],
                                                                                                                    or2_token: Or,
                                                                                                                    output: ReturnType::Default,
                                                                                                                    body: Expr::MethodCall {
                                                                                                                        attrs: [],
                                                                                                                        receiver: Expr::Paren {
                                                                                                                            attrs: [],
                                                                                                                            paren_token: Paren,
                                                                                                                            expr: Expr::Cast {
                                                                                                                                attrs: [],
                                                                                                                                expr: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: b,
                                                                                                                                                    span: bytes(10419..10420),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                as_token: As,
                                                                                                                                ty: Type::Path {
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: char,
                                                                                                                                                    span: bytes(10424..10428),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            },
                                                                                                                        },
                                                                                                                        dot_token: Dot,
                                                                                                                        method: Ident {
                                                                                                                            sym: to_digit,
                                                                                                                            span: bytes(10430..10438),
                                                                                                                        },
                                                                                                                        turbofish: None,
                                                                                                                        paren_token: Paren,
                                                                                                                        args: [
                                                                                                                            Expr::Lit {
                                                                                                                                attrs: [],
                                                                                                                                lit: Lit::Int {
                                                                                                                                    token: 16,
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                        diverge: None,
                                                                                                    },
                                                                                                ),
                                                                                                semi_token: Semi,
                                                                                            },
                                                                                            Stmt::Expr(
                                                                                                Expr::If {
                                                                                                    attrs: [],
                                                                                                    if_token: If,
                                                                                                    cond: Expr::Let {
                                                                                                        attrs: [],
                                                                                                        let_token: Let,
                                                                                                        pat: Pat::Tuple {
                                                                                                            attrs: [],
                                                                                                            paren_token: Paren,
                                                                                                            elems: [
                                                                                                                Pat::TupleStruct {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: Some,
                                                                                                                                    span: bytes(10473..10477),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                    paren_token: Paren,
                                                                                                                    elems: [
                                                                                                                        Pat::Ident {
                                                                                                                            attrs: [],
                                                                                                                            by_ref: None,
                                                                                                                            mutability: None,
                                                                                                                            ident: Ident {
                                                                                                                                sym: h,
                                                                                                                                span: bytes(10478..10479),
                                                                                                                            },
                                                                                                                            subpat: None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                                Comma,
                                                                                                                Pat::TupleStruct {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: Some,
                                                                                                                                    span: bytes(10482..10486),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                    paren_token: Paren,
                                                                                                                    elems: [
                                                                                                                        Pat::Ident {
                                                                                                                            attrs: [],
                                                                                                                            by_ref: None,
                                                                                                                            mutability: None,
                                                                                                                            ident: Ident {
                                                                                                                                sym: l,
                                                                                                                                span: bytes(10487..10488),
                                                                                                                            },
                                                                                                                            subpat: None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                        eq_token: Eq,
                                                                                                        expr: Expr::Tuple {
                                                                                                            attrs: [],
                                                                                                            paren_token: Paren,
                                                                                                            elems: [
                                                                                                                Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: h,
                                                                                                                                    span: bytes(10494..10495),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                Comma,
                                                                                                                Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: l,
                                                                                                                                    span: bytes(10497..10498),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    then_branch: Block {
                                                                                                        brace_token: Brace,
                                                                                                        stmts: [
                                                                                                            Stmt::Local {
                                                                                                                attrs: [],
                                                                                                                let_token: Let,
                                                                                                                pat: Pat::Ident {
                                                                                                                    attrs: [],
                                                                                                                    by_ref: None,
                                                                                                                    mutability: None,
                                                                                                                    ident: Ident {
                                                                                                                        sym: one_byte,
                                                                                                                        span: bytes(10594..10602),
                                                                                                                    },
                                                                                                                    subpat: None,
                                                                                                                },
                                                                                                                init: Some(
                                                                                                                    LocalInit {
                                                                                                                        eq_token: Eq,
                                                                                                                        expr: Expr::Binary {
                                                                                                                            attrs: [],
                                                                                                                            left: Expr::Binary {
                                                                                                                                attrs: [],
                                                                                                                                left: Expr::Cast {
                                                                                                                                    attrs: [],
                                                                                                                                    expr: Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: h,
                                                                                                                                                        span: bytes(10605..10606),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    as_token: As,
                                                                                                                                    ty: Type::Path {
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: u8,
                                                                                                                                                        span: bytes(10610..10612),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                op: BinOp::Mul(
                                                                                                                                    Star,
                                                                                                                                ),
                                                                                                                                right: Expr::Lit {
                                                                                                                                    attrs: [],
                                                                                                                                    lit: Lit::Int {
                                                                                                                                        token: 0x10,
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            },
                                                                                                                            op: BinOp::Add(
                                                                                                                                Plus,
                                                                                                                            ),
                                                                                                                            right: Expr::Cast {
                                                                                                                                attrs: [],
                                                                                                                                expr: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: l,
                                                                                                                                                    span: bytes(10622..10623),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                as_token: As,
                                                                                                                                ty: Type::Path {
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: u8,
                                                                                                                                                    span: bytes(10627..10629),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            },
                                                                                                                        },
                                                                                                                        diverge: None,
                                                                                                                    },
                                                                                                                ),
                                                                                                                semi_token: Semi,
                                                                                                            },
                                                                                                            Stmt::Expr(
                                                                                                                Expr::Try {
                                                                                                                    attrs: [],
                                                                                                                    expr: Expr::Call {
                                                                                                                        attrs: [],
                                                                                                                        func: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: write_bytes,
                                                                                                                                            span: bytes(10655..10666),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        paren_token: Paren,
                                                                                                                        args: [
                                                                                                                            Expr::Reference {
                                                                                                                                attrs: [],
                                                                                                                                and_token: And,
                                                                                                                                mutability: None,
                                                                                                                                expr: Expr::Array {
                                                                                                                                    attrs: [],
                                                                                                                                    bracket_token: Bracket,
                                                                                                                                    elems: [
                                                                                                                                        Expr::Path {
                                                                                                                                            attrs: [],
                                                                                                                                            qself: None,
                                                                                                                                            path: Path {
                                                                                                                                                leading_colon: None,
                                                                                                                                                segments: [
                                                                                                                                                    PathSegment {
                                                                                                                                                        ident: Ident {
                                                                                                                                                            sym: one_byte,
                                                                                                                                                            span: bytes(10669..10677),
                                                                                                                                                        },
                                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                                    },
                                                                                                                                                ],
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                    question_token: Question,
                                                                                                                },
                                                                                                                Some(
                                                                                                                    Semi,
                                                                                                                ),
                                                                                                            ),
                                                                                                            Stmt::Expr(
                                                                                                                Expr::Assign {
                                                                                                                    attrs: [],
                                                                                                                    left: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: slice_start,
                                                                                                                                        span: bytes(10706..10717),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    eq_token: Eq,
                                                                                                                    right: Expr::Binary {
                                                                                                                        attrs: [],
                                                                                                                        left: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: i,
                                                                                                                                            span: bytes(10720..10721),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        op: BinOp::Add(
                                                                                                                            Plus,
                                                                                                                        ),
                                                                                                                        right: Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Int {
                                                                                                                                token: 3,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                                Some(
                                                                                                                    Semi,
                                                                                                                ),
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                    else_branch: Some(
                                                                                                        (
                                                                                                            Else,
                                                                                                            Expr::Block {
                                                                                                                attrs: [],
                                                                                                                label: None,
                                                                                                                block: Block {
                                                                                                                    brace_token: Brace,
                                                                                                                    stmts: [],
                                                                                                                },
                                                                                                            },
                                                                                                        ),
                                                                                                    ),
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                comma: None,
                                                                            },
                                                                            Arm {
                                                                                attrs: [],
                                                                                pat: Pat::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b'#',
                                                                                    },
                                                                                },
                                                                                guard: None,
                                                                                fat_arrow_token: FatArrow,
                                                                                body: Expr::Block {
                                                                                    attrs: [],
                                                                                    label: None,
                                                                                    block: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Local {
                                                                                                attrs: [],
                                                                                                let_token: Let,
                                                                                                pat: Pat::Ident {
                                                                                                    attrs: [],
                                                                                                    by_ref: None,
                                                                                                    mutability: None,
                                                                                                    ident: Ident {
                                                                                                        sym: fragment_start,
                                                                                                        span: bytes(10985..10999),
                                                                                                    },
                                                                                                    subpat: None,
                                                                                                },
                                                                                                init: Some(
                                                                                                    LocalInit {
                                                                                                        eq_token: Eq,
                                                                                                        expr: Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: i,
                                                                                                                                span: bytes(11002..11003),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Add(
                                                                                                                Plus,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        diverge: None,
                                                                                                    },
                                                                                                ),
                                                                                                semi_token: Semi,
                                                                                            },
                                                                                            Stmt::Local {
                                                                                                attrs: [],
                                                                                                let_token: Let,
                                                                                                pat: Pat::Ident {
                                                                                                    attrs: [],
                                                                                                    by_ref: None,
                                                                                                    mutability: None,
                                                                                                    ident: Ident {
                                                                                                        sym: fragment,
                                                                                                        span: bytes(11033..11041),
                                                                                                    },
                                                                                                    subpat: None,
                                                                                                },
                                                                                                init: Some(
                                                                                                    LocalInit {
                                                                                                        eq_token: Eq,
                                                                                                        expr: Expr::Reference {
                                                                                                            attrs: [],
                                                                                                            and_token: And,
                                                                                                            mutability: None,
                                                                                                            expr: Expr::Index {
                                                                                                                attrs: [],
                                                                                                                expr: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: encoded_body_plus_fragment,
                                                                                                                                    span: bytes(11045..11071),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                bracket_token: Bracket,
                                                                                                                index: Expr::Range {
                                                                                                                    attrs: [],
                                                                                                                    start: Some(
                                                                                                                        Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: fragment_start,
                                                                                                                                            span: bytes(11072..11086),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ),
                                                                                                                    limits: RangeLimits::HalfOpen(
                                                                                                                        DotDot,
                                                                                                                    ),
                                                                                                                    end: None,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        diverge: None,
                                                                                                    },
                                                                                                ),
                                                                                                semi_token: Semi,
                                                                                            },
                                                                                            Stmt::Expr(
                                                                                                Expr::Return {
                                                                                                    attrs: [],
                                                                                                    return_token: Return,
                                                                                                    expr: Some(
                                                                                                        Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: Ok,
                                                                                                                                span: bytes(11118..11120),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Call {
                                                                                                                    attrs: [],
                                                                                                                    func: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Some,
                                                                                                                                        span: bytes(11121..11125),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [
                                                                                                                        Expr::Call {
                                                                                                                            attrs: [],
                                                                                                                            func: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: FragmentIdentifier,
                                                                                                                                                span: bytes(11126..11144),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            paren_token: Paren,
                                                                                                                            args: [
                                                                                                                                Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: fragment,
                                                                                                                                                    span: bytes(11145..11153),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                                Some(
                                                                                                    Semi,
                                                                                                ),
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                comma: None,
                                                                            },
                                                                            Arm {
                                                                                attrs: [],
                                                                                pat: Pat::Wild {
                                                                                    attrs: [],
                                                                                    underscore_token: Underscore,
                                                                                },
                                                                                guard: None,
                                                                                fat_arrow_token: FatArrow,
                                                                                body: Expr::Assign {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: slice_start,
                                                                                                        span: bytes(11248..11259),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    eq_token: Eq,
                                                                                    right: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: i,
                                                                                                            span: bytes(11262..11263),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                comma: Some(
                                                                                    Comma,
                                                                                ),
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Try {
                                        attrs: [],
                                        expr: Expr::Call {
                                            attrs: [],
                                            func: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: write_bytes,
                                                                span: bytes(11303..11314),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            paren_token: Paren,
                                            args: [
                                                Expr::Reference {
                                                    attrs: [],
                                                    and_token: And,
                                                    mutability: None,
                                                    expr: Expr::Index {
                                                        attrs: [],
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: bytes,
                                                                            span: bytes(11316..11321),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        bracket_token: Bracket,
                                                        index: Expr::Range {
                                                            attrs: [],
                                                            start: Some(
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: slice_start,
                                                                                    span: bytes(11322..11333),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            limits: RangeLimits::HalfOpen(
                                                                DotDot,
                                                            ),
                                                            end: None,
                                                        },
                                                    },
                                                },
                                            ],
                                        },
                                        question_token: Question,
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Ok,
                                                            span: bytes(11344..11346),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: None,
                                                                span: bytes(11347..11351),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "data_url::percent_encode": FnData {
        fn_name: "percent_encode",
        complete_fn_name: "data_url::percent_encode",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "percent_encode",
                    complete_name: "data_url::percent_encode",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "percent_encode",
                                next: None,
                            },
                        ),
                    },
                },
                complete_name_in_file: "percent_encode",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: percent_encode,
                                span: bytes(8713..8727),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: byte,
                                                span: bytes(8728..8732),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u8,
                                                            span: bytes(8734..8736),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: string,
                                                span: bytes(8738..8744),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: String,
                                                                span: bytes(8751..8757),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Item(
                                    Item::Const {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: HEX_UPPER,
                                            span: bytes(8771..8780),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Array {
                                            bracket_token: Bracket,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u8,
                                                                span: bytes(8783..8785),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            semi_token: Semi,
                                            len: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 16,
                                                },
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Unary {
                                            attrs: [],
                                            op: UnOp::Deref(
                                                Star,
                                            ),
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::ByteStr {
                                                    token: b"0123456789ABCDEF",
                                                },
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: string,
                                                            span: bytes(8819..8825),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: push,
                                            span: bytes(8826..8830),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [
                                            Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Char {
                                                    token: '%',
                                                },
                                            },
                                        ],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: string,
                                                            span: bytes(8841..8847),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: push,
                                            span: bytes(8848..8852),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [
                                            Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Index {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: HEX_UPPER,
                                                                        span: bytes(8853..8862),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    bracket_token: Bracket,
                                                    index: Expr::Cast {
                                                        attrs: [],
                                                        expr: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: byte,
                                                                                    span: bytes(8864..8868),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shr(
                                                                    Shr,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 4,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        as_token: As,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(8878..8883),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: char,
                                                                    span: bytes(8888..8892),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: string,
                                                            span: bytes(8899..8905),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: push,
                                            span: bytes(8906..8910),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [
                                            Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Index {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: HEX_UPPER,
                                                                        span: bytes(8911..8920),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    bracket_token: Bracket,
                                                    index: Expr::Cast {
                                                        attrs: [],
                                                        expr: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: byte,
                                                                                    span: bytes(8922..8926),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::BitAnd(
                                                                    And,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 0x0f,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        as_token: As,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(8938..8943),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: char,
                                                                    span: bytes(8948..8952),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [
                    Item::Const {
                        attrs: [],
                        vis: Visibility::Inherited,
                        const_token: Const,
                        ident: Ident {
                            sym: HEX_UPPER,
                            span: bytes(8771..8780),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Colon,
                        ty: Type::Array {
                            bracket_token: Bracket,
                            elem: Type::Path {
                                qself: None,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: u8,
                                                span: bytes(8783..8785),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                            semi_token: Semi,
                            len: Expr::Lit {
                                attrs: [],
                                lit: Lit::Int {
                                    token: 16,
                                },
                            },
                        },
                        eq_token: Eq,
                        expr: Expr::Unary {
                            attrs: [],
                            op: UnOp::Deref(
                                Star,
                            ),
                            expr: Expr::Lit {
                                attrs: [],
                                lit: Lit::ByteStr {
                                    token: b"0123456789ABCDEF",
                                },
                            },
                        },
                        semi_token: Semi,
                    },
                ],
                visibility: Pri,
            },
        ),
    },
    "data_url::mime::contains": FnData {
        fn_name: "contains",
        complete_fn_name: "data_url::mime::contains",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "contains",
                    complete_name: "data_url::mime::contains",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "contains",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "contains",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: contains,
                                span: bytes(24014..24022),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: parameters,
                                                span: bytes(24023..24033),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Slice {
                                                bracket_token: Bracket,
                                                elem: Type::Tuple {
                                                    paren_token: Paren,
                                                    elems: [
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: String,
                                                                            span: bytes(24038..24044),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        Comma,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: String,
                                                                            span: bytes(24046..24052),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: name,
                                                span: bytes(24056..24060),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(24063..24066),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: bool,
                                                    span: bytes(24071..24075),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: parameters,
                                                                span: bytes(24082..24092),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: iter,
                                                span: bytes(24093..24097),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [],
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: any,
                                            span: bytes(24100..24103),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [
                                            Expr::Closure {
                                                attrs: [],
                                                lifetimes: None,
                                                constness: None,
                                                movability: None,
                                                asyncness: None,
                                                capture: None,
                                                or1_token: Or,
                                                inputs: [
                                                    Pat::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [
                                                            Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: n,
                                                                    span: bytes(24106..24107),
                                                                },
                                                                subpat: None,
                                                            },
                                                            Comma,
                                                            Pat::Wild {
                                                                attrs: [],
                                                                underscore_token: Underscore,
                                                            },
                                                        ],
                                                    },
                                                ],
                                                or2_token: Or,
                                                output: ReturnType::Default,
                                                body: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: n,
                                                                        span: bytes(24113..24114),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Eq(
                                                        EqEq,
                                                    ),
                                                    right: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: name,
                                                                        span: bytes(24118..24122),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "<data_url::mime::MimeParsingError as fmt::Display>::fmt": FnData {
        fn_name: "fmt",
        complete_fn_name: "<data_url::mime::MimeParsingError as fmt::Display>::fmt",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "fmt",
                    complete_name: "<data_url::mime::MimeParsingError as fmt::Display>::fmt",
                    import_name: MyPath {
                        name: "<data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "MimeParsingError as fmt",
                                        next: Some(
                                            MyPath {
                                                name: "Display>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fmt",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#1}::fmt",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: fmt,
                                span: bytes(19984..19987),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(19989..19993),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: f,
                                                span: bytes(19995..19996),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(20003..20006),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Formatter,
                                                                span: bytes(20008..20017),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(20018..20019),
                                                                            ident: Ident {
                                                                                sym: _,
                                                                                span: bytes(20019..20020),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: fmt,
                                                    span: bytes(20026..20029),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(20031..20037),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Macro {
                                        attrs: [],
                                        mac: Macro {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: write,
                                                            span: bytes(20048..20053),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            bang_token: Not,
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: f,
                                                    span: bytes(20055..20056),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(20056..20057),
                                                },
                                                Literal {
                                                    lit: "invalid mime type",
                                                    span: bytes(20058..20077),
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 1,
                struct_name: Name {
                    name: "MimeParsingError",
                    complete_name: "data_url::mime::MimeParsingError",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "MimeParsingError",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "Display",
                        complete_name: "",
                        import_name: MyPath {
                            name: "fmt",
                            next: Some(
                                MyPath {
                                    name: "Display",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: fmt,
                                                span: bytes(19941..19944),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: Display,
                                                span: bytes(19946..19953),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: MimeParsingError,
                                            span: bytes(19958..19974),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "fmt",
                            complete_name: "<data_url::mime::MimeParsingError as fmt::Display>::fmt",
                            import_name: MyPath {
                                name: "<data_url",
                                next: Some(
                                    MyPath {
                                        name: "mime",
                                        next: Some(
                                            MyPath {
                                                name: "MimeParsingError as fmt",
                                                next: Some(
                                                    MyPath {
                                                        name: "Display>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fmt",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#1}::fmt",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fmt,
                                        span: bytes(19984..19987),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(19989..19993),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(19995..19996),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: fmt,
                                                                        span: bytes(20003..20006),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Formatter,
                                                                        span: bytes(20008..20017),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Lifetime(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(20018..20019),
                                                                                    ident: Ident {
                                                                                        sym: _,
                                                                                        span: bytes(20019..20020),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fmt,
                                                            span: bytes(20026..20029),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(20031..20037),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Macro {
                                                attrs: [],
                                                mac: Macro {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: write,
                                                                    span: bytes(20048..20053),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    bang_token: Not,
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: f,
                                                            span: bytes(20055..20056),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(20056..20057),
                                                        },
                                                        Literal {
                                                            lit: "invalid mime type",
                                                            span: bytes(20058..20077),
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "data_url::FragmentIdentifier::to_percent_encoded": FnData {
        fn_name: "to_percent_encoded",
        complete_fn_name: "data_url::FragmentIdentifier::to_percent_encoded",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "to_percent_encoded",
                    complete_name: "data_url::FragmentIdentifier::to_percent_encoded",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "FragmentIdentifier",
                                next: Some(
                                    MyPath {
                                        name: "to_percent_encoded",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#3}::to_percent_encoded",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: to_percent_encoded,
                                span: bytes(3624..3642),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(3644..3648),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: String,
                                                    span: bytes(3653..3659),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: string,
                                            span: bytes(3678..3684),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: String,
                                                                    span: bytes(3687..3693),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: new,
                                                                    span: bytes(3695..3698),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::ForLoop {
                                        attrs: [],
                                        label: None,
                                        for_token: For,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: byte,
                                                span: bytes(3714..3718),
                                            },
                                            subpat: None,
                                        },
                                        in_token: In,
                                        expr: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: self,
                                                                    span: bytes(3722..3726),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Unnamed(
                                                    Index {
                                                        index: 0,
                                                        span: bytes(3727..3728),
                                                    },
                                                ),
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: bytes,
                                                span: bytes(3729..3734),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [],
                                        },
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Match {
                                                        attrs: [],
                                                        match_token: Match,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: byte,
                                                                            span: bytes(3757..3761),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        brace_token: Brace,
                                                        arms: [
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::Or {
                                                                    attrs: [],
                                                                    leading_vert: None,
                                                                    cases: [
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'\t',
                                                                            },
                                                                        },
                                                                        Or,
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'\n',
                                                                            },
                                                                        },
                                                                        Or,
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'\r',
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Continue {
                                                                    attrs: [],
                                                                    continue_token: Continue,
                                                                    label: None,
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::Or {
                                                                    attrs: [],
                                                                    leading_vert: None,
                                                                    cases: [
                                                                        Pat::Range {
                                                                            attrs: [],
                                                                            start: Some(
                                                                                Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b'\0',
                                                                                    },
                                                                                },
                                                                            ),
                                                                            limits: RangeLimits::Closed(
                                                                                DotDotEq,
                                                                            ),
                                                                            end: Some(
                                                                                Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b' ',
                                                                                    },
                                                                                },
                                                                            ),
                                                                        },
                                                                        Or,
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'"',
                                                                            },
                                                                        },
                                                                        Or,
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'<',
                                                                            },
                                                                        },
                                                                        Or,
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'>',
                                                                            },
                                                                        },
                                                                        Or,
                                                                        Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'`',
                                                                            },
                                                                        },
                                                                        Or,
                                                                        Pat::Range {
                                                                            attrs: [],
                                                                            start: Some(
                                                                                Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b'\x7F',
                                                                                    },
                                                                                },
                                                                            ),
                                                                            limits: RangeLimits::Closed(
                                                                                DotDotEq,
                                                                            ),
                                                                            end: Some(
                                                                                Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b'\xFF',
                                                                                    },
                                                                                },
                                                                            ),
                                                                        },
                                                                    ],
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: percent_encode,
                                                                                                        span: bytes(4068..4082),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: byte,
                                                                                                            span: bytes(4083..4087),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        Comma,
                                                                                        Expr::Reference {
                                                                                            attrs: [],
                                                                                            and_token: And,
                                                                                            mutability: Some(
                                                                                                Mut,
                                                                                            ),
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: string,
                                                                                                                span: bytes(4094..4100),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                                comma: None,
                                                            },
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::Wild {
                                                                    attrs: [],
                                                                    underscore_token: Underscore,
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: string,
                                                                                        span: bytes(4176..4182),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: push,
                                                                        span: bytes(4183..4187),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: byte,
                                                                                                span: bytes(4188..4192),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: char,
                                                                                                span: bytes(4196..4200),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Path {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: string,
                                                        span: bytes(4235..4241),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 3,
                struct_name: Name {
                    name: "FragmentIdentifier",
                    complete_name: "data_url::FragmentIdentifier",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "FragmentIdentifier",
                                next: None,
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: FragmentIdentifier,
                                            span: bytes(3559..3577),
                                        },
                                        arguments: PathArguments::AngleBracketed {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                GenericArgument::Lifetime(
                                                    Lifetime {
                                                        apostrophe: bytes(3578..3579),
                                                        ident: Ident {
                                                            sym: _,
                                                            span: bytes(3579..3580),
                                                        },
                                                    },
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "to_percent_encoded",
                            complete_name: "data_url::FragmentIdentifier::to_percent_encoded",
                            import_name: MyPath {
                                name: "data_url",
                                next: Some(
                                    MyPath {
                                        name: "FragmentIdentifier",
                                        next: Some(
                                            MyPath {
                                                name: "to_percent_encoded",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::to_percent_encoded",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: to_percent_encoded,
                                        span: bytes(3624..3642),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(3644..3648),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: String,
                                                            span: bytes(3653..3659),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "data_url::mime::valid_value": FnData {
        fn_name: "valid_value",
        complete_fn_name: "data_url::mime::valid_value",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "valid_value",
                    complete_name: "data_url::mime::valid_value",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "valid_value",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "valid_value",
                item: Some(
                    ItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: valid_value,
                                span: bytes(24130..24141),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: s,
                                                span: bytes(24142..24143),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(24146..24149),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: bool,
                                                    span: bytes(24154..24158),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: s,
                                                                span: bytes(24165..24166),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: chars,
                                                span: bytes(24167..24172),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [],
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: all,
                                            span: bytes(24175..24178),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [
                                            Expr::Closure {
                                                attrs: [],
                                                lifetimes: None,
                                                constness: None,
                                                movability: None,
                                                asyncness: None,
                                                capture: None,
                                                or1_token: Or,
                                                inputs: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: c,
                                                            span: bytes(24180..24181),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                                or2_token: Or,
                                                output: ReturnType::Default,
                                                body: Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Macro {
                                                                    attrs: [],
                                                                    mac: Macro {
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: matches,
                                                                                        span: bytes(24277..24284),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        bang_token: Not,
                                                                        delimiter: MacroDelimiter::Paren(
                                                                            Paren,
                                                                        ),
                                                                        tokens: TokenStream [
                                                                            Ident {
                                                                                sym: c,
                                                                                span: bytes(24286..24287),
                                                                            },
                                                                            Punct {
                                                                                char: ',',
                                                                                spacing: Alone,
                                                                                span: bytes(24287..24288),
                                                                            },
                                                                            Literal {
                                                                                lit: '\t',
                                                                                span: bytes(24289..24293),
                                                                            },
                                                                            Punct {
                                                                                char: '|',
                                                                                spacing: Alone,
                                                                                span: bytes(24294..24295),
                                                                            },
                                                                            Literal {
                                                                                lit: ' ',
                                                                                span: bytes(24296..24299),
                                                                            },
                                                                            Punct {
                                                                                char: '.',
                                                                                spacing: Joint,
                                                                                span: bytes(24299..24300),
                                                                            },
                                                                            Punct {
                                                                                char: '.',
                                                                                spacing: Joint,
                                                                                span: bytes(24300..24301),
                                                                            },
                                                                            Punct {
                                                                                char: '=',
                                                                                spacing: Joint,
                                                                                span: bytes(24301..24302),
                                                                            },
                                                                            Literal {
                                                                                lit: '~',
                                                                                span: bytes(24302..24305),
                                                                            },
                                                                            Punct {
                                                                                char: '|',
                                                                                spacing: Alone,
                                                                                span: bytes(24306..24307),
                                                                            },
                                                                            Literal {
                                                                                lit: '\u{80}',
                                                                                span: bytes(24308..24316),
                                                                            },
                                                                            Punct {
                                                                                char: '.',
                                                                                spacing: Joint,
                                                                                span: bytes(24316..24317),
                                                                            },
                                                                            Punct {
                                                                                char: '.',
                                                                                spacing: Joint,
                                                                                span: bytes(24317..24318),
                                                                            },
                                                                            Punct {
                                                                                char: '=',
                                                                                spacing: Joint,
                                                                                span: bytes(24318..24319),
                                                                            },
                                                                            Literal {
                                                                                lit: '\u{FF}',
                                                                                span: bytes(24319..24327),
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "data_url::remove_base64_suffix": FnData {
        fn_name: "remove_base64_suffix",
        complete_fn_name: "data_url::remove_base64_suffix",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "remove_base64_suffix",
                    complete_name: "data_url::remove_base64_suffix",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "remove_base64_suffix",
                                next: None,
                            },
                        ),
                    },
                },
                complete_name_in_file: "remove_base64_suffix",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: allow,
                                                    span: bytes(7909..7914),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: clippy,
                                            span: bytes(7915..7921),
                                        },
                                        Punct {
                                            char: ':',
                                            spacing: Joint,
                                            span: bytes(7921..7922),
                                        },
                                        Punct {
                                            char: ':',
                                            spacing: Alone,
                                            span: bytes(7922..7923),
                                        },
                                        Ident {
                                            sym: skip_while_next,
                                            span: bytes(7923..7938),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: remove_base64_suffix,
                                span: bytes(7944..7964),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: s,
                                                span: bytes(7965..7966),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(7969..7972),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Option,
                                                    span: bytes(7977..7983),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Reference {
                                                                and_token: And,
                                                                lifetime: None,
                                                                mutability: None,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: str,
                                                                                    span: bytes(7985..7988),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: bytes,
                                            span: bytes(8004..8009),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: s,
                                                                    span: bytes(8012..8013),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: bytes,
                                                    span: bytes(8014..8019),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Block {
                                        attrs: [],
                                        label: None,
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: iter,
                                                            span: bytes(8108..8112),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: bytes,
                                                                                        span: bytes(8115..8120),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: by_ref,
                                                                        span: bytes(8134..8140),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: filter,
                                                                    span: bytes(8156..8162),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Closure {
                                                                        attrs: [],
                                                                        lifetimes: None,
                                                                        constness: None,
                                                                        movability: None,
                                                                        asyncness: None,
                                                                        capture: None,
                                                                        or1_token: Or,
                                                                        inputs: [
                                                                            Pat::Reference {
                                                                                attrs: [],
                                                                                and_token: And,
                                                                                mutability: None,
                                                                                pat: Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: byte,
                                                                                        span: bytes(8165..8169),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                            },
                                                                        ],
                                                                        or2_token: Or,
                                                                        output: ReturnType::Default,
                                                                        body: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Not(
                                                                                Not,
                                                                            ),
                                                                            expr: Expr::Macro {
                                                                                attrs: [],
                                                                                mac: Macro {
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: matches,
                                                                                                    span: bytes(8172..8179),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    bang_token: Not,
                                                                                    delimiter: MacroDelimiter::Paren(
                                                                                        Paren,
                                                                                    ),
                                                                                    tokens: TokenStream [
                                                                                        Ident {
                                                                                            sym: byte,
                                                                                            span: bytes(8181..8185),
                                                                                        },
                                                                                        Punct {
                                                                                            char: ',',
                                                                                            spacing: Alone,
                                                                                            span: bytes(8185..8186),
                                                                                        },
                                                                                        Literal {
                                                                                            lit: b'\t',
                                                                                            span: bytes(8187..8192),
                                                                                        },
                                                                                        Punct {
                                                                                            char: '|',
                                                                                            spacing: Alone,
                                                                                            span: bytes(8193..8194),
                                                                                        },
                                                                                        Literal {
                                                                                            lit: b'\n',
                                                                                            span: bytes(8195..8200),
                                                                                        },
                                                                                        Punct {
                                                                                            char: '|',
                                                                                            spacing: Alone,
                                                                                            span: bytes(8201..8202),
                                                                                        },
                                                                                        Literal {
                                                                                            lit: b'\r',
                                                                                            span: bytes(8203..8208),
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: iter,
                                                            span: bytes(8260..8264),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: iter,
                                                                                    span: bytes(8267..8271),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: rev,
                                                                    span: bytes(8272..8275),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: require,
                                                                        span: bytes(8288..8295),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: iter,
                                                                span: bytes(8297..8301),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(8301..8302),
                                                            },
                                                            Ident {
                                                                sym: next,
                                                                span: bytes(8302..8306),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(8306..8308),
                                                            },
                                                            Punct {
                                                                char: '?',
                                                                spacing: Alone,
                                                                span: bytes(8308..8309),
                                                            },
                                                            Punct {
                                                                char: '=',
                                                                spacing: Joint,
                                                                span: bytes(8310..8311),
                                                            },
                                                            Punct {
                                                                char: '=',
                                                                spacing: Alone,
                                                                span: bytes(8311..8312),
                                                            },
                                                            Literal {
                                                                lit: b'4',
                                                                span: bytes(8313..8317),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: require,
                                                                        span: bytes(8328..8335),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: iter,
                                                                span: bytes(8337..8341),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(8341..8342),
                                                            },
                                                            Ident {
                                                                sym: next,
                                                                span: bytes(8342..8346),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(8346..8348),
                                                            },
                                                            Punct {
                                                                char: '?',
                                                                spacing: Alone,
                                                                span: bytes(8348..8349),
                                                            },
                                                            Punct {
                                                                char: '=',
                                                                spacing: Joint,
                                                                span: bytes(8350..8351),
                                                            },
                                                            Punct {
                                                                char: '=',
                                                                spacing: Alone,
                                                                span: bytes(8351..8352),
                                                            },
                                                            Literal {
                                                                lit: b'6',
                                                                span: bytes(8353..8357),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: require,
                                                                        span: bytes(8368..8375),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: iter,
                                                                span: bytes(8377..8381),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(8381..8382),
                                                            },
                                                            Ident {
                                                                sym: next,
                                                                span: bytes(8382..8386),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(8386..8388),
                                                            },
                                                            Punct {
                                                                char: '?',
                                                                spacing: Joint,
                                                                span: bytes(8388..8389),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(8389..8390),
                                                            },
                                                            Ident {
                                                                sym: eq_ignore_ascii_case,
                                                                span: bytes(8390..8410),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [
                                                                    Punct {
                                                                        char: '&',
                                                                        spacing: Alone,
                                                                        span: bytes(8411..8412),
                                                                    },
                                                                    Literal {
                                                                        lit: b'e',
                                                                        span: bytes(8412..8416),
                                                                    },
                                                                ],
                                                                span: bytes(8410..8417),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: require,
                                                                        span: bytes(8428..8435),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: iter,
                                                                span: bytes(8437..8441),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(8441..8442),
                                                            },
                                                            Ident {
                                                                sym: next,
                                                                span: bytes(8442..8446),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(8446..8448),
                                                            },
                                                            Punct {
                                                                char: '?',
                                                                spacing: Joint,
                                                                span: bytes(8448..8449),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(8449..8450),
                                                            },
                                                            Ident {
                                                                sym: eq_ignore_ascii_case,
                                                                span: bytes(8450..8470),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [
                                                                    Punct {
                                                                        char: '&',
                                                                        spacing: Alone,
                                                                        span: bytes(8471..8472),
                                                                    },
                                                                    Literal {
                                                                        lit: b's',
                                                                        span: bytes(8472..8476),
                                                                    },
                                                                ],
                                                                span: bytes(8470..8477),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: require,
                                                                        span: bytes(8488..8495),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: iter,
                                                                span: bytes(8497..8501),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(8501..8502),
                                                            },
                                                            Ident {
                                                                sym: next,
                                                                span: bytes(8502..8506),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(8506..8508),
                                                            },
                                                            Punct {
                                                                char: '?',
                                                                spacing: Joint,
                                                                span: bytes(8508..8509),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(8509..8510),
                                                            },
                                                            Ident {
                                                                sym: eq_ignore_ascii_case,
                                                                span: bytes(8510..8530),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [
                                                                    Punct {
                                                                        char: '&',
                                                                        spacing: Alone,
                                                                        span: bytes(8531..8532),
                                                                    },
                                                                    Literal {
                                                                        lit: b'a',
                                                                        span: bytes(8532..8536),
                                                                    },
                                                                ],
                                                                span: bytes(8530..8537),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: require,
                                                                        span: bytes(8548..8555),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: iter,
                                                                span: bytes(8557..8561),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(8561..8562),
                                                            },
                                                            Ident {
                                                                sym: next,
                                                                span: bytes(8562..8566),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(8566..8568),
                                                            },
                                                            Punct {
                                                                char: '?',
                                                                spacing: Joint,
                                                                span: bytes(8568..8569),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(8569..8570),
                                                            },
                                                            Ident {
                                                                sym: eq_ignore_ascii_case,
                                                                span: bytes(8570..8590),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [
                                                                    Punct {
                                                                        char: '&',
                                                                        spacing: Alone,
                                                                        span: bytes(8591..8592),
                                                                    },
                                                                    Literal {
                                                                        lit: b'b',
                                                                        span: bytes(8592..8596),
                                                                    },
                                                                ],
                                                                span: bytes(8590..8597),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: require,
                                                                        span: bytes(8608..8615),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: iter,
                                                                span: bytes(8617..8621),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(8621..8622),
                                                            },
                                                            Ident {
                                                                sym: skip_while,
                                                                span: bytes(8622..8632),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [
                                                                    Punct {
                                                                        char: '|',
                                                                        spacing: Joint,
                                                                        span: bytes(8633..8634),
                                                                    },
                                                                    Punct {
                                                                        char: '&',
                                                                        spacing: Alone,
                                                                        span: bytes(8634..8635),
                                                                    },
                                                                    Ident {
                                                                        sym: byte,
                                                                        span: bytes(8635..8639),
                                                                    },
                                                                    Punct {
                                                                        char: '|',
                                                                        spacing: Alone,
                                                                        span: bytes(8639..8640),
                                                                    },
                                                                    Ident {
                                                                        sym: byte,
                                                                        span: bytes(8641..8645),
                                                                    },
                                                                    Punct {
                                                                        char: '=',
                                                                        spacing: Joint,
                                                                        span: bytes(8646..8647),
                                                                    },
                                                                    Punct {
                                                                        char: '=',
                                                                        spacing: Alone,
                                                                        span: bytes(8647..8648),
                                                                    },
                                                                    Literal {
                                                                        lit: b' ',
                                                                        span: bytes(8649..8653),
                                                                    },
                                                                ],
                                                                span: bytes(8632..8654),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(8654..8655),
                                                            },
                                                            Ident {
                                                                sym: next,
                                                                span: bytes(8655..8659),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(8659..8661),
                                                            },
                                                            Punct {
                                                                char: '?',
                                                                spacing: Alone,
                                                                span: bytes(8661..8662),
                                                            },
                                                            Punct {
                                                                char: '=',
                                                                spacing: Joint,
                                                                span: bytes(8663..8664),
                                                            },
                                                            Punct {
                                                                char: '=',
                                                                spacing: Alone,
                                                                span: bytes(8664..8665),
                                                            },
                                                            Literal {
                                                                lit: b';',
                                                                span: bytes(8666..8670),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Some,
                                                            span: bytes(8683..8687),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Reference {
                                                attrs: [],
                                                and_token: And,
                                                mutability: None,
                                                expr: Expr::Index {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: s,
                                                                        span: bytes(8689..8690),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    bracket_token: Bracket,
                                                    index: Expr::Range {
                                                        attrs: [],
                                                        start: None,
                                                        limits: RangeLimits::HalfOpen(
                                                            DotDot,
                                                        ),
                                                        end: Some(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: bytes,
                                                                                    span: bytes(8693..8698),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: len,
                                                                    span: bytes(8699..8702),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                        ),
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "<data_url::mime::Mime as fmt::Display>::fmt": FnData {
        fn_name: "fmt",
        complete_fn_name: "<data_url::mime::Mime as fmt::Display>::fmt",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "fmt",
                    complete_name: "<data_url::mime::Mime as fmt::Display>::fmt",
                    import_name: MyPath {
                        name: "<data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "Mime as fmt",
                                        next: Some(
                                            MyPath {
                                                name: "Display>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fmt",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#4}::fmt",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: fmt,
                                span: bytes(24440..24443),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(24445..24449),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: f,
                                                span: bytes(24451..24452),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(24459..24462),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Formatter,
                                                                span: bytes(24464..24473),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(24474..24475),
                                                                            ident: Ident {
                                                                                sym: _,
                                                                                span: bytes(24475..24476),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: fmt,
                                                    span: bytes(24482..24485),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(24487..24493),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Try {
                                        attrs: [],
                                        expr: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: f,
                                                                span: bytes(24504..24505),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: write_str,
                                                span: bytes(24506..24515),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Reference {
                                                    attrs: [],
                                                    and_token: And,
                                                    mutability: None,
                                                    expr: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: self,
                                                                            span: bytes(24517..24521),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: type_,
                                                                span: bytes(24522..24527),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ],
                                        },
                                        question_token: Question,
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Try {
                                        attrs: [],
                                        expr: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: f,
                                                                span: bytes(24539..24540),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: write_str,
                                                span: bytes(24541..24550),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Str {
                                                        token: "/",
                                                    },
                                                },
                                            ],
                                        },
                                        question_token: Question,
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Try {
                                        attrs: [],
                                        expr: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: f,
                                                                span: bytes(24566..24567),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: write_str,
                                                span: bytes(24568..24577),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Reference {
                                                    attrs: [],
                                                    and_token: And,
                                                    mutability: None,
                                                    expr: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: self,
                                                                            span: bytes(24579..24583),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: subtype,
                                                                span: bytes(24584..24591),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ],
                                        },
                                        question_token: Question,
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::ForLoop {
                                        attrs: [],
                                        label: None,
                                        for_token: For,
                                        pat: Pat::Tuple {
                                            attrs: [],
                                            paren_token: Paren,
                                            elems: [
                                                Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: name,
                                                        span: bytes(24608..24612),
                                                    },
                                                    subpat: None,
                                                },
                                                Comma,
                                                Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: value,
                                                        span: bytes(24614..24619),
                                                    },
                                                    subpat: None,
                                                },
                                            ],
                                        },
                                        in_token: In,
                                        expr: Expr::Reference {
                                            attrs: [],
                                            and_token: And,
                                            mutability: None,
                                            expr: Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: self,
                                                                    span: bytes(24625..24629),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident {
                                                        sym: parameters,
                                                        span: bytes(24630..24640),
                                                    },
                                                ),
                                            },
                                        },
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: f,
                                                                                span: bytes(24655..24656),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: write_str,
                                                                span: bytes(24657..24666),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Str {
                                                                        token: ";",
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: f,
                                                                                span: bytes(24686..24687),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: write_str,
                                                                span: bytes(24688..24697),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: name,
                                                                                    span: bytes(24698..24702),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: f,
                                                                                span: bytes(24718..24719),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: write_str,
                                                                span: bytes(24720..24729),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Str {
                                                                        token: "=",
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: only_http_token_code_points,
                                                                                    span: bytes(24752..24779),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: value,
                                                                                        span: bytes(24780..24785),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            op: BinOp::And(
                                                                AndAnd,
                                                            ),
                                                            right: Expr::Unary {
                                                                attrs: [],
                                                                op: UnOp::Not(
                                                                    Not,
                                                                ),
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: value,
                                                                                        span: bytes(24791..24796),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: is_empty,
                                                                        span: bytes(24797..24805),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Try {
                                                                        attrs: [],
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: f,
                                                                                                span: bytes(24826..24827),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: write_str,
                                                                                span: bytes(24828..24837),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: value,
                                                                                                    span: bytes(24838..24843),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        question_token: Question,
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: Some(
                                                            (
                                                                Else,
                                                                Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::Try {
                                                                                    attrs: [],
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: f,
                                                                                                            span: bytes(24883..24884),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: write_str,
                                                                                            span: bytes(24885..24894),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Str {
                                                                                                    token: "\"",
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    question_token: Question,
                                                                                },
                                                                                Some(
                                                                                    Semi,
                                                                                ),
                                                                            ),
                                                                            Stmt::Expr(
                                                                                Expr::ForLoop {
                                                                                    attrs: [],
                                                                                    label: None,
                                                                                    for_token: For,
                                                                                    pat: Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: c,
                                                                                            span: bytes(24923..24924),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                    in_token: In,
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: value,
                                                                                                            span: bytes(24928..24933),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: chars,
                                                                                            span: bytes(24934..24939),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                    body: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::If {
                                                                                                    attrs: [],
                                                                                                    if_token: If,
                                                                                                    cond: Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: c,
                                                                                                                                span: bytes(24967..24968),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Eq(
                                                                                                                EqEq,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Char {
                                                                                                                    token: '"',
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Or(
                                                                                                            OrOr,
                                                                                                        ),
                                                                                                        right: Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: c,
                                                                                                                                span: bytes(24979..24980),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Eq(
                                                                                                                EqEq,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Char {
                                                                                                                    token: '\\',
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    then_branch: Block {
                                                                                                        brace_token: Brace,
                                                                                                        stmts: [
                                                                                                            Stmt::Expr(
                                                                                                                Expr::Try {
                                                                                                                    attrs: [],
                                                                                                                    expr: Expr::MethodCall {
                                                                                                                        attrs: [],
                                                                                                                        receiver: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: f,
                                                                                                                                            span: bytes(25015..25016),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        dot_token: Dot,
                                                                                                                        method: Ident {
                                                                                                                            sym: write_str,
                                                                                                                            span: bytes(25017..25026),
                                                                                                                        },
                                                                                                                        turbofish: None,
                                                                                                                        paren_token: Paren,
                                                                                                                        args: [
                                                                                                                            Expr::Lit {
                                                                                                                                attrs: [],
                                                                                                                                lit: Lit::Str {
                                                                                                                                    token: "\\",
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                    question_token: Question,
                                                                                                                },
                                                                                                                None,
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                    else_branch: None,
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                            Stmt::Expr(
                                                                                                Expr::Try {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: f,
                                                                                                                            span: bytes(25076..25077),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: write_char,
                                                                                                            span: bytes(25078..25088),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: c,
                                                                                                                                span: bytes(25089..25090),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    question_token: Question,
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                None,
                                                                            ),
                                                                            Stmt::Expr(
                                                                                Expr::Try {
                                                                                    attrs: [],
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: f,
                                                                                                            span: bytes(25127..25128),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: write_str,
                                                                                            span: bytes(25129..25138),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Str {
                                                                                                    token: "\"",
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    question_token: Question,
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Ok,
                                                            span: bytes(25178..25180),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [],
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 4,
                struct_name: Name {
                    name: "Mime",
                    complete_name: "data_url::mime::Mime",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "Mime",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "Display",
                        complete_name: "",
                        import_name: MyPath {
                            name: "fmt",
                            next: Some(
                                MyPath {
                                    name: "Display",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: fmt,
                                                span: bytes(24409..24412),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: Display,
                                                span: bytes(24414..24421),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Mime,
                                            span: bytes(24426..24430),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "fmt",
                            complete_name: "<data_url::mime::Mime as fmt::Display>::fmt",
                            import_name: MyPath {
                                name: "<data_url",
                                next: Some(
                                    MyPath {
                                        name: "mime",
                                        next: Some(
                                            MyPath {
                                                name: "Mime as fmt",
                                                next: Some(
                                                    MyPath {
                                                        name: "Display>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fmt",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#4}::fmt",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fmt,
                                        span: bytes(24440..24443),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(24445..24449),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(24451..24452),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: fmt,
                                                                        span: bytes(24459..24462),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Formatter,
                                                                        span: bytes(24464..24473),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Lifetime(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(24474..24475),
                                                                                    ident: Ident {
                                                                                        sym: _,
                                                                                        span: bytes(24475..24476),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fmt,
                                                            span: bytes(24482..24485),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(24487..24493),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Try {
                                                attrs: [],
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(24504..24505),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: write_str,
                                                        span: bytes(24506..24515),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Reference {
                                                            attrs: [],
                                                            and_token: And,
                                                            mutability: None,
                                                            expr: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(24517..24521),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: type_,
                                                                        span: bytes(24522..24527),
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ],
                                                },
                                                question_token: Question,
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Try {
                                                attrs: [],
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(24539..24540),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: write_str,
                                                        span: bytes(24541..24550),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Str {
                                                                token: "/",
                                                            },
                                                        },
                                                    ],
                                                },
                                                question_token: Question,
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Try {
                                                attrs: [],
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(24566..24567),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: write_str,
                                                        span: bytes(24568..24577),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Reference {
                                                            attrs: [],
                                                            and_token: And,
                                                            mutability: None,
                                                            expr: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(24579..24583),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: subtype,
                                                                        span: bytes(24584..24591),
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ],
                                                },
                                                question_token: Question,
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::ForLoop {
                                                attrs: [],
                                                label: None,
                                                for_token: For,
                                                pat: Pat::Tuple {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    elems: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: name,
                                                                span: bytes(24608..24612),
                                                            },
                                                            subpat: None,
                                                        },
                                                        Comma,
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: value,
                                                                span: bytes(24614..24619),
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                },
                                                in_token: In,
                                                expr: Expr::Reference {
                                                    attrs: [],
                                                    and_token: And,
                                                    mutability: None,
                                                    expr: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: self,
                                                                            span: bytes(24625..24629),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: parameters,
                                                                span: bytes(24630..24640),
                                                            },
                                                        ),
                                                    },
                                                },
                                                body: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Try {
                                                                attrs: [],
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: f,
                                                                                        span: bytes(24655..24656),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: write_str,
                                                                        span: bytes(24657..24666),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Str {
                                                                                token: ";",
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                question_token: Question,
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Try {
                                                                attrs: [],
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: f,
                                                                                        span: bytes(24686..24687),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: write_str,
                                                                        span: bytes(24688..24697),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: name,
                                                                                            span: bytes(24698..24702),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                question_token: Question,
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Try {
                                                                attrs: [],
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: f,
                                                                                        span: bytes(24718..24719),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: write_str,
                                                                        span: bytes(24720..24729),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Str {
                                                                                token: "=",
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                question_token: Question,
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: only_http_token_code_points,
                                                                                            span: bytes(24752..24779),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: value,
                                                                                                span: bytes(24780..24785),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    op: BinOp::And(
                                                                        AndAnd,
                                                                    ),
                                                                    right: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Not(
                                                                            Not,
                                                                        ),
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: value,
                                                                                                span: bytes(24791..24796),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: is_empty,
                                                                                span: bytes(24797..24805),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Try {
                                                                                attrs: [],
                                                                                expr: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: f,
                                                                                                        span: bytes(24826..24827),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: write_str,
                                                                                        span: bytes(24828..24837),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: value,
                                                                                                            span: bytes(24838..24843),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                question_token: Question,
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: Some(
                                                                    (
                                                                        Else,
                                                                        Expr::Block {
                                                                            attrs: [],
                                                                            label: None,
                                                                            block: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::Try {
                                                                                            attrs: [],
                                                                                            expr: Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: f,
                                                                                                                    span: bytes(24883..24884),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: write_str,
                                                                                                    span: bytes(24885..24894),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Str {
                                                                                                            token: "\"",
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            question_token: Question,
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::ForLoop {
                                                                                            attrs: [],
                                                                                            label: None,
                                                                                            for_token: For,
                                                                                            pat: Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: c,
                                                                                                    span: bytes(24923..24924),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                            in_token: In,
                                                                                            expr: Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: value,
                                                                                                                    span: bytes(24928..24933),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: chars,
                                                                                                    span: bytes(24934..24939),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [],
                                                                                            },
                                                                                            body: Block {
                                                                                                brace_token: Brace,
                                                                                                stmts: [
                                                                                                    Stmt::Expr(
                                                                                                        Expr::If {
                                                                                                            attrs: [],
                                                                                                            if_token: If,
                                                                                                            cond: Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Binary {
                                                                                                                    attrs: [],
                                                                                                                    left: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: c,
                                                                                                                                        span: bytes(24967..24968),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    op: BinOp::Eq(
                                                                                                                        EqEq,
                                                                                                                    ),
                                                                                                                    right: Expr::Lit {
                                                                                                                        attrs: [],
                                                                                                                        lit: Lit::Char {
                                                                                                                            token: '"',
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::Or(
                                                                                                                    OrOr,
                                                                                                                ),
                                                                                                                right: Expr::Binary {
                                                                                                                    attrs: [],
                                                                                                                    left: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: c,
                                                                                                                                        span: bytes(24979..24980),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    op: BinOp::Eq(
                                                                                                                        EqEq,
                                                                                                                    ),
                                                                                                                    right: Expr::Lit {
                                                                                                                        attrs: [],
                                                                                                                        lit: Lit::Char {
                                                                                                                            token: '\\',
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            then_branch: Block {
                                                                                                                brace_token: Brace,
                                                                                                                stmts: [
                                                                                                                    Stmt::Expr(
                                                                                                                        Expr::Try {
                                                                                                                            attrs: [],
                                                                                                                            expr: Expr::MethodCall {
                                                                                                                                attrs: [],
                                                                                                                                receiver: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: f,
                                                                                                                                                    span: bytes(25015..25016),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                dot_token: Dot,
                                                                                                                                method: Ident {
                                                                                                                                    sym: write_str,
                                                                                                                                    span: bytes(25017..25026),
                                                                                                                                },
                                                                                                                                turbofish: None,
                                                                                                                                paren_token: Paren,
                                                                                                                                args: [
                                                                                                                                    Expr::Lit {
                                                                                                                                        attrs: [],
                                                                                                                                        lit: Lit::Str {
                                                                                                                                            token: "\\",
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                            question_token: Question,
                                                                                                                        },
                                                                                                                        None,
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                            else_branch: None,
                                                                                                        },
                                                                                                        None,
                                                                                                    ),
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Try {
                                                                                                            attrs: [],
                                                                                                            expr: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: f,
                                                                                                                                    span: bytes(25076..25077),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: write_char,
                                                                                                                    span: bytes(25078..25088),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: c,
                                                                                                                                        span: bytes(25089..25090),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                            question_token: Question,
                                                                                                        },
                                                                                                        None,
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Try {
                                                                                            attrs: [],
                                                                                            expr: Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: f,
                                                                                                                    span: bytes(25127..25128),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: write_str,
                                                                                                    span: bytes(25129..25138),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Str {
                                                                                                            token: "\"",
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            question_token: Question,
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ),
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Ok,
                                                                    span: bytes(25178..25180),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [],
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
}
structs:
{
    "data_url::forgiving_base64::InvalidBase64": StructData {
        struct_name: "InvalidBase64",
        complete_struct_name: "data_url::forgiving_base64::InvalidBase64",
        struct_type: Struct(
            StructItem {
                struct_name: Name {
                    name: "InvalidBase64",
                    complete_name: "data_url::forgiving_base64::InvalidBase64",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "InvalidBase64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemStruct {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: derive,
                                                    span: bytes(12052..12058),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: Debug,
                                            span: bytes(12059..12064),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        struct_token: Struct,
                        ident: Ident {
                            sym: InvalidBase64,
                            span: bytes(12078..12091),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        fields: Fields::Unnamed {
                            paren_token: Paren,
                            unnamed: [
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: None,
                                    colon_token: None,
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: InvalidBase64Details,
                                                        span: bytes(12092..12112),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                            ],
                        },
                        semi_token: Some(
                            Semi,
                        ),
                    },
                ),
                visibility: PubT,
                relative_types: [
                    "InvalidBase64Details",
                ],
            },
        ),
    },
    "data_url::forgiving_base64::DecodeError": StructData {
        struct_name: "DecodeError",
        complete_struct_name: "data_url::forgiving_base64::DecodeError",
        struct_type: Enum(
            EnumItem {
                enum_name: Name {
                    name: "DecodeError",
                    complete_name: "data_url::forgiving_base64::DecodeError",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "DecodeError",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemEnum {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: derive,
                                                    span: bytes(12957..12963),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: Debug,
                                            span: bytes(12964..12969),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        enum_token: Enum,
                        ident: Ident {
                            sym: DecodeError,
                            span: bytes(12981..12992),
                        },
                        generics: Generics {
                            lt_token: Some(
                                Lt,
                            ),
                            params: [
                                GenericParam::Type(
                                    TypeParam {
                                        attrs: [],
                                        ident: Ident {
                                            sym: E,
                                            span: bytes(12993..12994),
                                        },
                                        colon_token: None,
                                        bounds: [],
                                        eq_token: None,
                                        default: None,
                                    },
                                ),
                            ],
                            gt_token: Some(
                                Gt,
                            ),
                            where_clause: None,
                        },
                        brace_token: Brace,
                        variants: [
                            Variant {
                                attrs: [],
                                ident: Ident {
                                    sym: InvalidBase64,
                                    span: bytes(13002..13015),
                                },
                                fields: Fields::Unnamed {
                                    paren_token: Paren,
                                    unnamed: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: None,
                                            colon_token: None,
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: InvalidBase64,
                                                                span: bytes(13016..13029),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ],
                                },
                                discriminant: None,
                            },
                            Comma,
                            Variant {
                                attrs: [],
                                ident: Ident {
                                    sym: WriteError,
                                    span: bytes(13036..13046),
                                },
                                fields: Fields::Unnamed {
                                    paren_token: Paren,
                                    unnamed: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: None,
                                            colon_token: None,
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: E,
                                                                span: bytes(13047..13048),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ],
                                },
                                discriminant: None,
                            },
                            Comma,
                        ],
                    },
                ),
                visibility: PubT,
                relative_types: [
                    "E",
                    "InvalidBase64",
                ],
            },
        ),
    },
    "data_url::mime::MimeParsingError": StructData {
        struct_name: "MimeParsingError",
        complete_struct_name: "data_url::mime::MimeParsingError",
        struct_type: Struct(
            StructItem {
                struct_name: Name {
                    name: "MimeParsingError",
                    complete_name: "data_url::mime::MimeParsingError",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "MimeParsingError",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemStruct {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: derive,
                                                    span: bytes(19887..19893),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: Debug,
                                            span: bytes(19894..19899),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        struct_token: Struct,
                        ident: Ident {
                            sym: MimeParsingError,
                            span: bytes(19913..19929),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        fields: Fields::Unnamed {
                            paren_token: Paren,
                            unnamed: [
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: None,
                                    colon_token: None,
                                    ty: Type::Tuple {
                                        paren_token: Paren,
                                        elems: [],
                                    },
                                },
                            ],
                        },
                        semi_token: Some(
                            Semi,
                        ),
                    },
                ),
                visibility: PubT,
                relative_types: [],
            },
        ),
    },
    "data_url::forgiving_base64::Impossible": StructData {
        struct_name: "Impossible",
        complete_struct_name: "data_url::forgiving_base64::Impossible",
        struct_type: Enum(
            EnumItem {
                enum_name: Name {
                    name: "Impossible",
                    complete_name: "data_url::forgiving_base64::Impossible",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "Impossible",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemEnum {
                        attrs: [],
                        vis: Visibility::Restricted {
                            pub_token: Pub,
                            paren_token: Paren,
                            in_token: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: crate,
                                            span: bytes(13630..13635),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        enum_token: Enum,
                        ident: Ident {
                            sym: Impossible,
                            span: bytes(13642..13652),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        brace_token: Brace,
                        variants: [],
                    },
                ),
                visibility: PubS,
                relative_types: [],
            },
        ),
    },
    "data_url::mime::Mime": StructData {
        struct_name: "Mime",
        complete_struct_name: "data_url::mime::Mime",
        struct_type: Struct(
            StructItem {
                struct_name: Name {
                    name: "Mime",
                    complete_name: "data_url::mime::Mime",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "mime",
                                next: Some(
                                    MyPath {
                                        name: "Mime",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemStruct {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: derive,
                                                    span: bytes(19469..19475),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: Debug,
                                            span: bytes(19476..19481),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(19481..19482),
                                        },
                                        Ident {
                                            sym: PartialEq,
                                            span: bytes(19483..19492),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(19492..19493),
                                        },
                                        Ident {
                                            sym: Eq,
                                            span: bytes(19494..19496),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        struct_token: Struct,
                        ident: Ident {
                            sym: Mime,
                            span: bytes(19510..19514),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        fields: Fields::Named {
                            brace_token: Brace,
                            named: [
                                Field {
                                    attrs: [],
                                    vis: Visibility::Public(
                                        Pub,
                                    ),
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: type_,
                                            span: bytes(19525..19530),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: String,
                                                        span: bytes(19532..19538),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                                Field {
                                    attrs: [],
                                    vis: Visibility::Public(
                                        Pub,
                                    ),
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: subtype,
                                            span: bytes(19548..19555),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: String,
                                                        span: bytes(19557..19563),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                                Field {
                                    attrs: [
                                        Attribute {
                                            pound_token: Pound,
                                            style: AttrStyle::Outer,
                                            bracket_token: Bracket,
                                            meta: Meta::NameValue {
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: doc,
                                                                span: bytes(19569..19586),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                eq_token: Eq,
                                                value: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Str {
                                                        token: " (name, value)",
                                                    },
                                                },
                                            },
                                        },
                                    ],
                                    vis: Visibility::Public(
                                        Pub,
                                    ),
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: parameters,
                                            span: bytes(19595..19605),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Vec,
                                                        span: bytes(19607..19610),
                                                    },
                                                    arguments: PathArguments::AngleBracketed {
                                                        colon2_token: None,
                                                        lt_token: Lt,
                                                        args: [
                                                            GenericArgument::Type(
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: String,
                                                                                            span: bytes(19612..19618),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: String,
                                                                                            span: bytes(19620..19626),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Gt,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                            ],
                        },
                        semi_token: None,
                    },
                ),
                visibility: PubT,
                relative_types: [
                    "String",
                    "Vec",
                ],
            },
        ),
    },
    "data_url::DataUrl": StructData {
        struct_name: "DataUrl",
        complete_struct_name: "data_url::DataUrl",
        struct_type: Struct(
            StructItem {
                struct_name: Name {
                    name: "DataUrl",
                    complete_name: "data_url::DataUrl",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "DataUrl",
                                next: None,
                            },
                        ),
                    },
                },
                item: Some(
                    ItemStruct {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        struct_token: Struct,
                        ident: Ident {
                            sym: DataUrl,
                            span: bytes(1059..1066),
                        },
                        generics: Generics {
                            lt_token: Some(
                                Lt,
                            ),
                            params: [
                                GenericParam::Lifetime(
                                    LifetimeParam {
                                        attrs: [],
                                        lifetime: Lifetime {
                                            apostrophe: bytes(1067..1068),
                                            ident: Ident {
                                                sym: a,
                                                span: bytes(1068..1069),
                                            },
                                        },
                                        colon_token: None,
                                        bounds: [],
                                    },
                                ),
                            ],
                            gt_token: Some(
                                Gt,
                            ),
                            where_clause: None,
                        },
                        fields: Fields::Named {
                            brace_token: Brace,
                            named: [
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: mime_type,
                                            span: bytes(1077..1086),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: mime,
                                                        span: bytes(1088..1092),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Mime,
                                                        span: bytes(1094..1098),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: base64,
                                            span: bytes(1104..1110),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: bool,
                                                        span: bytes(1112..1116),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: encoded_body_plus_fragment,
                                            span: bytes(1122..1148),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Reference {
                                        and_token: And,
                                        lifetime: Some(
                                            Lifetime {
                                                apostrophe: bytes(1151..1152),
                                                ident: Ident {
                                                    sym: a,
                                                    span: bytes(1152..1153),
                                                },
                                            },
                                        ),
                                        mutability: None,
                                        elem: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: str,
                                                            span: bytes(1154..1157),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                },
                                Comma,
                            ],
                        },
                        semi_token: None,
                    },
                ),
                visibility: PubT,
                relative_types: [
                    "Mime",
                    "bool",
                    "mime",
                    "str",
                ],
            },
        ),
    },
    "data_url::DataUrlError": StructData {
        struct_name: "DataUrlError",
        complete_struct_name: "data_url::DataUrlError",
        struct_type: Enum(
            EnumItem {
                enum_name: Name {
                    name: "DataUrlError",
                    complete_name: "data_url::DataUrlError",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "DataUrlError",
                                next: None,
                            },
                        ),
                    },
                },
                item: Some(
                    ItemEnum {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: derive,
                                                    span: bytes(1164..1170),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: Debug,
                                            span: bytes(1171..1176),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        enum_token: Enum,
                        ident: Ident {
                            sym: DataUrlError,
                            span: bytes(1188..1200),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        brace_token: Brace,
                        variants: [
                            Variant {
                                attrs: [],
                                ident: Ident {
                                    sym: NotADataUrl,
                                    span: bytes(1207..1218),
                                },
                                fields: Fields::Unit,
                                discriminant: None,
                            },
                            Comma,
                            Variant {
                                attrs: [],
                                ident: Ident {
                                    sym: NoComma,
                                    span: bytes(1224..1231),
                                },
                                fields: Fields::Unit,
                                discriminant: None,
                            },
                            Comma,
                        ],
                    },
                ),
                visibility: PubT,
                relative_types: [],
            },
        ),
    },
    "data_url::forgiving_base64::Decoder": StructData {
        struct_name: "Decoder",
        complete_struct_name: "data_url::forgiving_base64::Decoder",
        struct_type: Struct(
            StructItem {
                struct_name: Name {
                    name: "Decoder",
                    complete_name: "data_url::forgiving_base64::Decoder",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "Decoder",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemStruct {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        struct_token: Struct,
                        ident: Ident {
                            sym: Decoder,
                            span: bytes(14335..14342),
                        },
                        generics: Generics {
                            lt_token: Some(
                                Lt,
                            ),
                            params: [
                                GenericParam::Type(
                                    TypeParam {
                                        attrs: [],
                                        ident: Ident {
                                            sym: F,
                                            span: bytes(14343..14344),
                                        },
                                        colon_token: None,
                                        bounds: [],
                                        eq_token: None,
                                        default: None,
                                    },
                                ),
                                Comma,
                                GenericParam::Type(
                                    TypeParam {
                                        attrs: [],
                                        ident: Ident {
                                            sym: E,
                                            span: bytes(14346..14347),
                                        },
                                        colon_token: None,
                                        bounds: [],
                                        eq_token: None,
                                        default: None,
                                    },
                                ),
                            ],
                            gt_token: Some(
                                Gt,
                            ),
                            where_clause: Some(
                                WhereClause {
                                    where_token: Where,
                                    predicates: [
                                        WherePredicate::Type(
                                            PredicateType {
                                                lifetimes: None,
                                                bounded_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(14359..14360),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                colon_token: Colon,
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: FnMut,
                                                                            span: bytes(14362..14367),
                                                                        },
                                                                        arguments: PathArguments::Parenthesized {
                                                                            paren_token: Paren,
                                                                            inputs: [
                                                                                Type::Reference {
                                                                                    and_token: And,
                                                                                    lifetime: None,
                                                                                    mutability: None,
                                                                                    elem: Type::Slice {
                                                                                        bracket_token: Bracket,
                                                                                        elem: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u8,
                                                                                                            span: bytes(14370..14372),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                            output: ReturnType::Type(
                                                                                RArrow,
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Result,
                                                                                                    span: bytes(14378..14384),
                                                                                                },
                                                                                                arguments: PathArguments::AngleBracketed {
                                                                                                    colon2_token: None,
                                                                                                    lt_token: Lt,
                                                                                                    args: [
                                                                                                        GenericArgument::Type(
                                                                                                            Type::Tuple {
                                                                                                                paren_token: Paren,
                                                                                                                elems: [],
                                                                                                            },
                                                                                                        ),
                                                                                                        Comma,
                                                                                                        GenericArgument::Type(
                                                                                                            Type::Path {
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: E,
                                                                                                                                span: bytes(14389..14390),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                    gt_token: Gt,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                        Comma,
                                    ],
                                },
                            ),
                        },
                        fields: Fields::Named {
                            brace_token: Brace,
                            named: [
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: write_bytes,
                                            span: bytes(14399..14410),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: F,
                                                        span: bytes(14412..14413),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: bit_buffer,
                                            span: bytes(14419..14429),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u32,
                                                        span: bytes(14431..14434),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: buffer_bit_length,
                                            span: bytes(14440..14457),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u8,
                                                        span: bytes(14459..14461),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: padding_symbols,
                                            span: bytes(14467..14482),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u8,
                                                        span: bytes(14484..14486),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                            ],
                        },
                        semi_token: None,
                    },
                ),
                visibility: PubT,
                relative_types: [
                    "F",
                    "u32",
                    "u8",
                ],
            },
        ),
    },
    "data_url::forgiving_base64::InvalidBase64Details": StructData {
        struct_name: "InvalidBase64Details",
        complete_struct_name: "data_url::forgiving_base64::InvalidBase64Details",
        struct_type: Enum(
            EnumItem {
                enum_name: Name {
                    name: "InvalidBase64Details",
                    complete_name: "data_url::forgiving_base64::InvalidBase64Details",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "forgiving_base64",
                                next: Some(
                                    MyPath {
                                        name: "InvalidBase64Details",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemEnum {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: derive,
                                                    span: bytes(12814..12820),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: Debug,
                                            span: bytes(12821..12826),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        enum_token: Enum,
                        ident: Ident {
                            sym: InvalidBase64Details,
                            span: bytes(12834..12854),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        brace_token: Brace,
                        variants: [
                            Variant {
                                attrs: [],
                                ident: Ident {
                                    sym: UnexpectedSymbol,
                                    span: bytes(12861..12877),
                                },
                                fields: Fields::Unnamed {
                                    paren_token: Paren,
                                    unnamed: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: None,
                                            colon_token: None,
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u8,
                                                                span: bytes(12878..12880),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ],
                                },
                                discriminant: None,
                            },
                            Comma,
                            Variant {
                                attrs: [],
                                ident: Ident {
                                    sym: AlphabetSymbolAfterPadding,
                                    span: bytes(12887..12913),
                                },
                                fields: Fields::Unit,
                                discriminant: None,
                            },
                            Comma,
                            Variant {
                                attrs: [],
                                ident: Ident {
                                    sym: LoneAlphabetSymbol,
                                    span: bytes(12919..12937),
                                },
                                fields: Fields::Unit,
                                discriminant: None,
                            },
                            Comma,
                            Variant {
                                attrs: [],
                                ident: Ident {
                                    sym: Padding,
                                    span: bytes(12943..12950),
                                },
                                fields: Fields::Unit,
                                discriminant: None,
                            },
                            Comma,
                        ],
                    },
                ),
                visibility: Pri,
                relative_types: [
                    "u8",
                ],
            },
        ),
    },
    "data_url::FragmentIdentifier": StructData {
        struct_name: "FragmentIdentifier",
        complete_struct_name: "data_url::FragmentIdentifier",
        struct_type: Struct(
            StructItem {
                struct_name: Name {
                    name: "FragmentIdentifier",
                    complete_name: "data_url::FragmentIdentifier",
                    import_name: MyPath {
                        name: "data_url",
                        next: Some(
                            MyPath {
                                name: "FragmentIdentifier",
                                next: None,
                            },
                        ),
                    },
                },
                item: Some(
                    ItemStruct {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        struct_token: Struct,
                        ident: Ident {
                            sym: FragmentIdentifier,
                            span: bytes(3520..3538),
                        },
                        generics: Generics {
                            lt_token: Some(
                                Lt,
                            ),
                            params: [
                                GenericParam::Lifetime(
                                    LifetimeParam {
                                        attrs: [],
                                        lifetime: Lifetime {
                                            apostrophe: bytes(3539..3540),
                                            ident: Ident {
                                                sym: a,
                                                span: bytes(3540..3541),
                                            },
                                        },
                                        colon_token: None,
                                        bounds: [],
                                    },
                                ),
                            ],
                            gt_token: Some(
                                Gt,
                            ),
                            where_clause: None,
                        },
                        fields: Fields::Unnamed {
                            paren_token: Paren,
                            unnamed: [
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: None,
                                    colon_token: None,
                                    ty: Type::Reference {
                                        and_token: And,
                                        lifetime: Some(
                                            Lifetime {
                                                apostrophe: bytes(3544..3545),
                                                ident: Ident {
                                                    sym: a,
                                                    span: bytes(3545..3546),
                                                },
                                            },
                                        ),
                                        mutability: None,
                                        elem: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: str,
                                                            span: bytes(3547..3550),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                },
                            ],
                        },
                        semi_token: Some(
                            Semi,
                        ),
                    },
                ),
                visibility: PubT,
                relative_types: [
                    "str",
                ],
            },
        ),
    },
}