[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: data-url/src/mime.rs:179:5: 179:14 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::str::<impl str>::bytes(move _4) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _2 = &mut _3,
            StorageDead(_4),
            StorageLive(_5),
            _5 = {closure@data-url/src/mime.rs:179:19: 179:25},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: data-url/src/mime.rs:179:5: 179:55 (#0),
                    scope: scope[0],
                },
                kind: _0 = <core::str::Bytes<'_> as core::iter::Iterator>::all::<{closure@data-url/src/mime.rs:179:19: 179:25}>(move _2, move _5) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_2),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: data-url/src/mime.rs:180:2: 180:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: data-url/src/mime.rs:178:1: 180:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: data-url/src/mime.rs:178:44: 178:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            data-url/src/mime.rs:178:35: 178:39 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                data-url/src/mime.rs:178:32: 178:33 (#0),
                            ),
                        ),
                        pat_span: data-url/src/mime.rs:178:32: 178:33 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: data-url/src/mime.rs:178:32: 178:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: data-url/src/mime.rs:179:5: 179:55 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::str::Bytes<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: data-url/src/mime.rs:179:5: 179:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: data-url/src/mime.rs:179:5: 179:55 (#0),
                },
            ),
        ),
        ty: core::str::Bytes<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: data-url/src/mime.rs:179:5: 179:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: data-url/src/mime.rs:179:5: 179:55 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: data-url/src/mime.rs:179:5: 179:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: data-url/src/mime.rs:179:5: 179:55 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:76 ~ data_url[664f]::mime::only_http_token_code_points::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn((u8,)) -> bool, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: data-url/src/mime.rs:179:19: 179:54 (#0),
            scope: scope[0],
        },
    },
]