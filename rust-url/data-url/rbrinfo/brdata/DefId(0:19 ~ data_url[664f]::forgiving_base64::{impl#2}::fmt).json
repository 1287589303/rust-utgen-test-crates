{
  "name": "data_url::forgiving_base64::{impl#2}::fmt",
  "mod_info": {
    "name": "forgiving_base64",
    "loc": "data-url/src/lib.rs:40:1:40:26"
  },
  "visible": true,
  "loc": "data-url/src/forgiving_base64.rs:42:5:47:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {",
    "    match self {",
    "        Self::InvalidBase64(inner) => write!(f, \"base64 not valid: {}\", inner),",
    "        Self::WriteError(err) => write!(f, \"write error: {}\", err),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self matches Self::WriteError(err)",
          "norm": null,
          "value": "true",
          "line": 43,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        8,
        9,
        10,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self matches Self::InvalidBase64(inner)",
          "norm": null,
          "value": "true",
          "line": 43,
          "bound": null
        },
        {
          "cond": "self matches Self::InvalidBase64(inner)",
          "norm": null,
          "value": "true",
          "line": 43,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        5,
        6,
        7,
        11
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}