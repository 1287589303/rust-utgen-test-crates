{
  "name": "data_url::{impl#2}::decode",
  "mod_info": {
    "name": "",
    "loc": "data-url/src/lib.rs:1:1:348:2"
  },
  "visible": true,
  "loc": "data-url/src/lib.rs:96:5:109:6",
  "doc": "/// Streaming-decode the data URL’s body to `write_body_bytes`,\n/// and return the URL’s fragment identifier if it has one.\n",
  "code": [
    "pub fn decode<F, E>(",
    "    &self,",
    "    write_body_bytes: F,",
    ") -> Result<Option<FragmentIdentifier<'a>>, forgiving_base64::DecodeError<E>>",
    "where",
    "    F: FnMut(&[u8]) -> Result<(), E>,",
    "{",
    "    if self.base64 {",
    "        decode_with_base64(self.encoded_body_plus_fragment, write_body_bytes)",
    "    } else {",
    "        decode_without_base64(self.encoded_body_plus_fragment, write_body_bytes)",
    "            .map_err(forgiving_base64::DecodeError::WriteError)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.base64",
          "norm": null,
          "value": "true",
          "line": 103,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.base64",
          "norm": null,
          "value": "false",
          "line": 103,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        4,
        5,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}