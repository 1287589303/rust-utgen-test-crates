Body {
    params: [
        Param {
            hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).1),
            pat: Pat {
                hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).2),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).2),
                    e#0,
                    None,
                ),
                span: data-url/src/forgiving_base64.rs:62:13: 62:14 (#0),
                default_binding_modes: true,
            },
            ty_span: data-url/src/forgiving_base64.rs:62:16: 62:39 (#0),
            span: data-url/src/forgiving_base64.rs:62:13: 62:39 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).22),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).3),
                        kind: Match(
                            Expr {
                                hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).4),
                                kind: Path(
                                    Resolved(
                                        None,
                                        Path {
                                            span: data-url/src/forgiving_base64.rs:63:15: 63:16 (#0),
                                            res: Local(
                                                HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).2),
                                            ),
                                            segments: [
                                                PathSegment {
                                                    ident: e#0,
                                                    hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).5),
                                                    res: Local(
                                                        HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).2),
                                                    ),
                                                    args: None,
                                                    infer_args: true,
                                                },
                                            ],
                                        },
                                    ),
                                ),
                                span: data-url/src/forgiving_base64.rs:63:15: 63:16 (#0),
                            },
                            [
                                Arm {
                                    hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).10),
                                    span: data-url/src/forgiving_base64.rs:64:13: 64:47 (#0),
                                    pat: Pat {
                                        hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).9),
                                        kind: TupleStruct(
                                            Resolved(
                                                None,
                                                Path {
                                                    span: data-url/src/forgiving_base64.rs:64:13: 64:39 (#0),
                                                    res: Def(
                                                        Ctor(
                                                            Variant,
                                                            Fn,
                                                        ),
                                                        DefId(0:144 ~ data_url[664f]::forgiving_base64::DecodeError::InvalidBase64::{constructor#0}),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: DecodeError#0,
                                                            hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).6),
                                                            res: Def(
                                                                Enum,
                                                                DefId(0:141 ~ data_url[664f]::forgiving_base64::DecodeError),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                        PathSegment {
                                                            ident: InvalidBase64#0,
                                                            hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).7),
                                                            res: Def(
                                                                Ctor(
                                                                    Variant,
                                                                    Fn,
                                                                ),
                                                                DefId(0:144 ~ data_url[664f]::forgiving_base64::DecodeError::InvalidBase64::{constructor#0}),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                    ],
                                                },
                                            ),
                                            [
                                                Pat {
                                                    hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).8),
                                                    kind: Binding(
                                                        BindingMode(
                                                            No,
                                                            Not,
                                                        ),
                                                        HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).8),
                                                        e#0,
                                                        None,
                                                    ),
                                                    span: data-url/src/forgiving_base64.rs:64:40: 64:41 (#0),
                                                    default_binding_modes: true,
                                                },
                                            ],
                                            None,
                                        ),
                                        span: data-url/src/forgiving_base64.rs:64:13: 64:42 (#0),
                                        default_binding_modes: true,
                                    },
                                    guard: None,
                                    body: Expr {
                                        hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).11),
                                        kind: Path(
                                            Resolved(
                                                None,
                                                Path {
                                                    span: data-url/src/forgiving_base64.rs:64:46: 64:47 (#0),
                                                    res: Local(
                                                        HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).8),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: e#0,
                                                            hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).12),
                                                            res: Local(
                                                                HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).8),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                    ],
                                                },
                                            ),
                                        ),
                                        span: data-url/src/forgiving_base64.rs:64:46: 64:47 (#0),
                                    },
                                },
                                Arm {
                                    hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).17),
                                    span: data-url/src/forgiving_base64.rs:65:13: 65:53 (#0),
                                    pat: Pat {
                                        hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).16),
                                        kind: TupleStruct(
                                            Resolved(
                                                None,
                                                Path {
                                                    span: data-url/src/forgiving_base64.rs:65:13: 65:36 (#0),
                                                    res: Def(
                                                        Ctor(
                                                            Variant,
                                                            Fn,
                                                        ),
                                                        DefId(0:147 ~ data_url[664f]::forgiving_base64::DecodeError::WriteError::{constructor#0}),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: DecodeError#0,
                                                            hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).13),
                                                            res: Def(
                                                                Enum,
                                                                DefId(0:141 ~ data_url[664f]::forgiving_base64::DecodeError),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                        PathSegment {
                                                            ident: WriteError#0,
                                                            hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).14),
                                                            res: Def(
                                                                Ctor(
                                                                    Variant,
                                                                    Fn,
                                                                ),
                                                                DefId(0:147 ~ data_url[664f]::forgiving_base64::DecodeError::WriteError::{constructor#0}),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                    ],
                                                },
                                            ),
                                            [
                                                Pat {
                                                    hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).15),
                                                    kind: Binding(
                                                        BindingMode(
                                                            No,
                                                            Not,
                                                        ),
                                                        HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).15),
                                                        e#0,
                                                        None,
                                                    ),
                                                    span: data-url/src/forgiving_base64.rs:65:37: 65:38 (#0),
                                                    default_binding_modes: true,
                                                },
                                            ],
                                            None,
                                        ),
                                        span: data-url/src/forgiving_base64.rs:65:13: 65:39 (#0),
                                        default_binding_modes: true,
                                    },
                                    guard: None,
                                    body: Expr {
                                        hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).18),
                                        kind: Match(
                                            Expr {
                                                hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).19),
                                                kind: Path(
                                                    Resolved(
                                                        None,
                                                        Path {
                                                            span: data-url/src/forgiving_base64.rs:65:49: 65:50 (#0),
                                                            res: Local(
                                                                HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).15),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    ident: e#0,
                                                                    hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).20),
                                                                    res: Local(
                                                                        HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).15),
                                                                    ),
                                                                    args: None,
                                                                    infer_args: true,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                ),
                                                span: data-url/src/forgiving_base64.rs:65:49: 65:50 (#0),
                                            },
                                            [],
                                            Normal,
                                        ),
                                        span: data-url/src/forgiving_base64.rs:65:43: 65:53 (#0),
                                    },
                                },
                            ],
                            Normal,
                        ),
                        span: data-url/src/forgiving_base64.rs:63:9: 66:10 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:27 ~ data_url[664f]::forgiving_base64::{impl#5}::from).21),
                rules: DefaultBlock,
                span: data-url/src/forgiving_base64.rs:62:49: 67:6 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: data-url/src/forgiving_base64.rs:62:49: 67:6 (#0),
    },
}