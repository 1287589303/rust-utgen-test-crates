bb0
  0: StorageLive(_2)
    SourceInfo(data-url/src/lib.rs:76:13-76:24)
  1: StorageLive(_3)
    SourceInfo(data-url/src/lib.rs:76:27-76:76)
  2: StorageLive(_4)
    SourceInfo(data-url/src/lib.rs:76:27-76:75)
  3: StorageLive(_5)
    SourceInfo(data-url/src/lib.rs:76:27-76:56)
  4: StorageLive(_6)
    SourceInfo(data-url/src/lib.rs:76:50-76:55)
  5: _6 = &(*_1)
    SourceInfo(data-url/src/lib.rs:76:50-76:55)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:76:27-76:56)
      kind: _5 = pretend_parse_data_url(move _6) -> [return: bb1, unwind: bb26]
  }
  preds []
  succs [bb1, bb26]

bb1
  0: StorageDead(_6)
    SourceInfo(data-url/src/lib.rs:76:55-76:56)
  1: StorageLive(_7)
    SourceInfo(data-url/src/lib.rs:76:63-76:74)
  2: _7 = DataUrlError::NotADataUrl
    SourceInfo(data-url/src/lib.rs:76:63-76:74)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:76:27-76:75)
      kind: _4 = core::option::Option::<&str>::ok_or::<DataUrlError>(move _5, move _7) -> [return: bb2, unwind: bb26]
  }
  preds [bb0]
  succs [bb2, bb26]

bb2
  0: StorageDead(_7)
    SourceInfo(data-url/src/lib.rs:76:74-76:75)
  1: StorageDead(_5)
    SourceInfo(data-url/src/lib.rs:76:74-76:75)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:76:27-76:76)
      kind: _3 = <core::result::Result<&str, DataUrlError> as core::ops::Try>::branch(move _4) -> [return: bb3, unwind: bb26]
  }
  preds [bb1]
  succs [bb3, bb26]

bb3
  0: StorageDead(_4)
    SourceInfo(data-url/src/lib.rs:76:75-76:76)
  1: PlaceMention(_3)
    SourceInfo(data-url/src/lib.rs:76:27-76:76)
  2: _8 = discriminant(_3)
    SourceInfo(data-url/src/lib.rs:76:27-76:76)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:76:27-76:76)
      kind: switchInt(move _8) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(data-url/src/lib.rs:76:27-76:76)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:76:27-76:76)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:76:75-76:76)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_12)
    SourceInfo(data-url/src/lib.rs:76:27-76:76)
  1: _12 = ((_3 as Continue).0: &str)
    SourceInfo(data-url/src/lib.rs:76:27-76:76)
  2: _2 = _12
    SourceInfo(data-url/src/lib.rs:76:27-76:76)
  3: StorageDead(_12)
    SourceInfo(data-url/src/lib.rs:76:75-76:76)
  4: FakeRead(ForLet(None), _2)
    SourceInfo(data-url/src/lib.rs:76:13-76:24)
  5: StorageDead(_3)
    SourceInfo(data-url/src/lib.rs:76:76-76:77)
  6: StorageLive(_15)
    SourceInfo(data-url/src/lib.rs:79:13-79:68)
  7: StorageLive(_16)
    SourceInfo(data-url/src/lib.rs:79:13-79:68)
  8: StorageLive(_17)
    SourceInfo(data-url/src/lib.rs:79:13-79:67)
  9: StorageLive(_18)
    SourceInfo(data-url/src/lib.rs:79:13-79:52)
  10: StorageLive(_19)
    SourceInfo(data-url/src/lib.rs:79:40-79:51)
  11: _19 = &(*_2)
    SourceInfo(data-url/src/lib.rs:79:40-79:51)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:79:13-79:52)
      kind: _18 = find_comma_before_fragment(move _19) -> [return: bb9, unwind: bb26]
  }
  preds [bb3, bb5]
  succs [bb9, bb26]

bb7
  0: StorageLive(_9)
    SourceInfo(data-url/src/lib.rs:76:75-76:76)
  1: _9 = move ((_3 as Break).0: core::result::Result<core::convert::Infallible, DataUrlError>)
    SourceInfo(data-url/src/lib.rs:76:75-76:76)
  2: StorageLive(_11)
    SourceInfo(data-url/src/lib.rs:76:75-76:76)
  3: _11 = move _9
    SourceInfo(data-url/src/lib.rs:76:75-76:76)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:76:27-76:76)
      kind: _0 = <core::result::Result<DataUrl<'_>, DataUrlError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, DataUrlError>>>::from_residual(move _11) -> [return: bb8, unwind: bb26]
  }
  preds [bb5]
  succs [bb8, bb26]

bb8
  0: StorageDead(_11)
    SourceInfo(data-url/src/lib.rs:76:75-76:76)
  1: StorageDead(_9)
    SourceInfo(data-url/src/lib.rs:76:75-76:76)
  2: StorageDead(_3)
    SourceInfo(data-url/src/lib.rs:76:76-76:77)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:1:1-1:1)
      kind: goto -> bb22
  }
  preds [bb7]
  succs [bb22]

bb9
  0: StorageDead(_19)
    SourceInfo(data-url/src/lib.rs:79:51-79:52)
  1: StorageLive(_20)
    SourceInfo(data-url/src/lib.rs:79:59-79:66)
  2: _20 = DataUrlError::NoComma
    SourceInfo(data-url/src/lib.rs:79:59-79:66)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:79:13-79:67)
      kind: _17 = core::option::Option::<(&str, &str)>::ok_or::<DataUrlError>(move _18, move _20) -> [return: bb10, unwind: bb26]
  }
  preds [bb6]
  succs [bb10, bb26]

bb10
  0: StorageDead(_20)
    SourceInfo(data-url/src/lib.rs:79:66-79:67)
  1: StorageDead(_18)
    SourceInfo(data-url/src/lib.rs:79:66-79:67)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:79:13-79:68)
      kind: _16 = <core::result::Result<(&str, &str), DataUrlError> as core::ops::Try>::branch(move _17) -> [return: bb11, unwind: bb26]
  }
  preds [bb9]
  succs [bb11, bb26]

bb11
  0: StorageDead(_17)
    SourceInfo(data-url/src/lib.rs:79:67-79:68)
  1: PlaceMention(_16)
    SourceInfo(data-url/src/lib.rs:79:13-79:68)
  2: _21 = discriminant(_16)
    SourceInfo(data-url/src/lib.rs:79:13-79:68)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:79:13-79:68)
      kind: switchInt(move _21) -> [0: bb14, 1: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(data-url/src/lib.rs:79:13-79:68)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:79:13-79:68)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:79:67-79:68)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_25)
    SourceInfo(data-url/src/lib.rs:79:13-79:68)
  1: _25 = ((_16 as Continue).0: (&str, &str))
    SourceInfo(data-url/src/lib.rs:79:13-79:68)
  2: _15 = _25
    SourceInfo(data-url/src/lib.rs:79:13-79:68)
  3: StorageDead(_25)
    SourceInfo(data-url/src/lib.rs:79:67-79:68)
  4: PlaceMention(_15)
    SourceInfo(data-url/src/lib.rs:79:13-79:68)
  5: StorageLive(_13)
    SourceInfo(data-url/src/lib.rs:78:14-78:33)
  6: _13 = (_15.0: &str)
    SourceInfo(data-url/src/lib.rs:78:14-78:33)
  7: StorageLive(_14)
    SourceInfo(data-url/src/lib.rs:78:35-78:61)
  8: _14 = (_15.1: &str)
    SourceInfo(data-url/src/lib.rs:78:35-78:61)
  9: StorageDead(_16)
    SourceInfo(data-url/src/lib.rs:79:68-79:69)
  10: StorageDead(_15)
    SourceInfo(data-url/src/lib.rs:79:68-79:69)
  11: StorageLive(_28)
    SourceInfo(data-url/src/lib.rs:81:35-81:68)
  12: StorageLive(_29)
    SourceInfo(data-url/src/lib.rs:81:48-81:67)
  13: _29 = &(*_13)
    SourceInfo(data-url/src/lib.rs:81:48-81:67)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:81:35-81:68)
      kind: _28 = parse_header(move _29) -> [return: bb17, unwind: bb26]
  }
  preds [bb11, bb13]
  succs [bb17, bb26]

bb15
  0: StorageLive(_22)
    SourceInfo(data-url/src/lib.rs:79:67-79:68)
  1: _22 = move ((_16 as Break).0: core::result::Result<core::convert::Infallible, DataUrlError>)
    SourceInfo(data-url/src/lib.rs:79:67-79:68)
  2: StorageLive(_24)
    SourceInfo(data-url/src/lib.rs:79:67-79:68)
  3: _24 = move _22
    SourceInfo(data-url/src/lib.rs:79:67-79:68)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:79:13-79:68)
      kind: _0 = <core::result::Result<DataUrl<'_>, DataUrlError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, DataUrlError>>>::from_residual(move _24) -> [return: bb16, unwind: bb26]
  }
  preds [bb13]
  succs [bb16, bb26]

bb16
  0: StorageDead(_24)
    SourceInfo(data-url/src/lib.rs:79:67-79:68)
  1: StorageDead(_22)
    SourceInfo(data-url/src/lib.rs:79:67-79:68)
  2: StorageDead(_16)
    SourceInfo(data-url/src/lib.rs:79:68-79:69)
  3: StorageDead(_15)
    SourceInfo(data-url/src/lib.rs:79:68-79:69)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:1:1-1:1)
      kind: goto -> bb22
  }
  preds [bb15]
  succs [bb22]

bb17
  0: StorageDead(_29)
    SourceInfo(data-url/src/lib.rs:81:67-81:68)
  1: PlaceMention(_28)
    SourceInfo(data-url/src/lib.rs:81:35-81:68)
  2: StorageLive(_26)
    SourceInfo(data-url/src/lib.rs:81:14-81:23)
  3: _26 = move (_28.0: mime::Mime)
    SourceInfo(data-url/src/lib.rs:81:14-81:23)
  4: StorageLive(_27)
    SourceInfo(data-url/src/lib.rs:81:25-81:31)
  5: _27 = (_28.1: bool)
    SourceInfo(data-url/src/lib.rs:81:25-81:31)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:81:68-81:69)
      kind: drop(_28) -> [return: bb18, unwind: bb25]
  }
  preds [bb14]
  succs [bb18, bb25]

bb18
  0: StorageDead(_28)
    SourceInfo(data-url/src/lib.rs:81:68-81:69)
  1: StorageLive(_30)
    SourceInfo(data-url/src/lib.rs:83:12-87:10)
  2: StorageLive(_31)
    SourceInfo(data-url/src/lib.rs:84:13-84:22)
  3: _31 = move _26
    SourceInfo(data-url/src/lib.rs:84:13-84:22)
  4: StorageLive(_32)
    SourceInfo(data-url/src/lib.rs:85:13-85:19)
  5: _32 = _27
    SourceInfo(data-url/src/lib.rs:85:13-85:19)
  6: StorageLive(_33)
    SourceInfo(data-url/src/lib.rs:86:13-86:39)
  7: _33 = &(*_14)
    SourceInfo(data-url/src/lib.rs:86:13-86:39)
  8: _30 = DataUrl::<'_> { mime_type: move _31, base64: move _32, encoded_body_plus_fragment: move _33 }
    SourceInfo(data-url/src/lib.rs:83:12-87:10)
  9: StorageDead(_33)
    SourceInfo(data-url/src/lib.rs:87:9-87:10)
  10: StorageDead(_32)
    SourceInfo(data-url/src/lib.rs:87:9-87:10)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:87:9-87:10)
      kind: drop(_31) -> [return: bb19, unwind: bb24]
  }
  preds [bb17]
  succs [bb19, bb24]

bb19
  0: StorageDead(_31)
    SourceInfo(data-url/src/lib.rs:87:9-87:10)
  1: _0 = core::result::Result::<DataUrl<'_>, DataUrlError>::Ok(move _30)
    SourceInfo(data-url/src/lib.rs:83:9-87:11)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:87:10-87:11)
      kind: drop(_30) -> [return: bb20, unwind: bb25]
  }
  preds [bb18]
  succs [bb20, bb25]

bb20
  0: StorageDead(_30)
    SourceInfo(data-url/src/lib.rs:87:10-87:11)
  1: StorageDead(_27)
    SourceInfo(data-url/src/lib.rs:88:5-88:6)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:88:5-88:6)
      kind: drop(_26) -> [return: bb21, unwind: bb26]
  }
  preds [bb19]
  succs [bb21, bb26]

bb21
  0: StorageDead(_26)
    SourceInfo(data-url/src/lib.rs:88:5-88:6)
  1: StorageDead(_14)
    SourceInfo(data-url/src/lib.rs:88:5-88:6)
  2: StorageDead(_13)
    SourceInfo(data-url/src/lib.rs:88:5-88:6)
  3: StorageDead(_2)
    SourceInfo(data-url/src/lib.rs:88:5-88:6)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:88:6-88:6)
      kind: goto -> bb23
  }
  preds [bb20]
  succs [bb23]

bb22
  0: StorageDead(_2)
    SourceInfo(data-url/src/lib.rs:88:5-88:6)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:88:6-88:6)
      kind: goto -> bb23
  }
  preds [bb8, bb16]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:88:6-88:6)
      kind: return
  }
  preds [bb21, bb22]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:87:10-87:11)
      kind: drop(_30) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb18]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:88:5-88:6)
      kind: drop(_26) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb17, bb19, bb24]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:73:5-88:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb6, bb7, bb9, bb10, bb14, bb15, bb20, bb25]
  succs []

