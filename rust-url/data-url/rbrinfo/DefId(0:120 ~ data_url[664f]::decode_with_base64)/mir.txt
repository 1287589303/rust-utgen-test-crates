bb0
  0: StorageLive(_3)
    SourceInfo(data-url/src/lib.rs:344:9-344:20)
  1: StorageLive(_4)
    SourceInfo(data-url/src/lib.rs:344:54-344:65)
  2: _4 = move _2
    SourceInfo(data-url/src/lib.rs:344:54-344:65)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:344:23-344:66)
      kind: _3 = forgiving_base64::Decoder::<F, E>::new(move _4) -> [return: bb1, unwind: bb36]
  }
  preds []
  succs [bb1, bb36]

bb1
  0: StorageDead(_4)
    SourceInfo(data-url/src/lib.rs:344:65-344:66)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(data-url/src/lib.rs:344:9-344:20)
  2: StorageLive(_5)
    SourceInfo(data-url/src/lib.rs:345:9-345:17)
  3: StorageLive(_6)
    SourceInfo(data-url/src/lib.rs:345:20-345:99)
  4: StorageLive(_7)
    SourceInfo(data-url/src/lib.rs:345:20-345:98)
  5: StorageLive(_8)
    SourceInfo(data-url/src/lib.rs:345:42-345:68)
  6: _8 = &(*_1)
    SourceInfo(data-url/src/lib.rs:345:42-345:68)
  7: StorageLive(_9)
    SourceInfo(data-url/src/lib.rs:345:70-345:97)
  8: StorageLive(_10)
    SourceInfo(data-url/src/lib.rs:345:70-345:97)
  9: _10 = &mut _3
    SourceInfo(data-url/src/lib.rs:345:70-345:97)
  10: _9 = {closure@data-url/src/lib.rs:345:70: 345:77} { decoder: move _10 }
    SourceInfo(data-url/src/lib.rs:345:70-345:97)
  11: StorageDead(_10)
    SourceInfo(data-url/src/lib.rs:345:76-345:77)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:345:20-345:98)
      kind: _7 = decode_without_base64::<{closure@data-url/src/lib.rs:345:70: 345:77}, forgiving_base64::DecodeError<E>>(move _8, move _9) -> [return: bb2, unwind: bb35]
  }
  preds [bb0]
  succs [bb2, bb35]

bb2
  0: StorageDead(_9)
    SourceInfo(data-url/src/lib.rs:345:97-345:98)
  1: StorageDead(_8)
    SourceInfo(data-url/src/lib.rs:345:97-345:98)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:345:20-345:99)
      kind: _6 = <core::result::Result<core::option::Option<FragmentIdentifier<'_>>, forgiving_base64::DecodeError<E>> as core::ops::Try>::branch(move _7) -> [return: bb3, unwind: bb34]
  }
  preds [bb1]
  succs [bb3, bb34]

bb3
  0: StorageDead(_7)
    SourceInfo(data-url/src/lib.rs:345:98-345:99)
  1: PlaceMention(_6)
    SourceInfo(data-url/src/lib.rs:345:20-345:99)
  2: _11 = discriminant(_6)
    SourceInfo(data-url/src/lib.rs:345:20-345:99)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:345:20-345:99)
      kind: switchInt(move _11) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _6)
    SourceInfo(data-url/src/lib.rs:345:20-345:99)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:345:20-345:99)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:345:98-345:99)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_15)
    SourceInfo(data-url/src/lib.rs:345:20-345:99)
  1: _15 = move ((_6 as Continue).0: core::option::Option<FragmentIdentifier<'_>>)
    SourceInfo(data-url/src/lib.rs:345:20-345:99)
  2: _5 = move _15
    SourceInfo(data-url/src/lib.rs:345:20-345:99)
  3: StorageDead(_15)
    SourceInfo(data-url/src/lib.rs:345:98-345:99)
  4: FakeRead(ForLet(None), _5)
    SourceInfo(data-url/src/lib.rs:345:9-345:17)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:345:99-345:100)
      kind: drop(_6) -> [return: bb9, unwind: bb35]
  }
  preds [bb3, bb5]
  succs [bb9, bb35]

bb7
  0: StorageLive(_12)
    SourceInfo(data-url/src/lib.rs:345:98-345:99)
  1: _12 = move ((_6 as Break).0: core::result::Result<core::convert::Infallible, forgiving_base64::DecodeError<E>>)
    SourceInfo(data-url/src/lib.rs:345:98-345:99)
  2: StorageLive(_14)
    SourceInfo(data-url/src/lib.rs:345:98-345:99)
  3: _14 = move _12
    SourceInfo(data-url/src/lib.rs:345:98-345:99)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:345:20-345:99)
      kind: _0 = <core::result::Result<core::option::Option<FragmentIdentifier<'_>>, forgiving_base64::DecodeError<E>> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, forgiving_base64::DecodeError<E>>>>::from_residual(move _14) -> [return: bb8, unwind: bb31]
  }
  preds [bb5]
  succs [bb8, bb31]

bb8
  0: StorageDead(_14)
    SourceInfo(data-url/src/lib.rs:345:98-345:99)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:345:98-345:99)
      kind: drop(_12) -> [return: bb21, unwind: bb33]
  }
  preds [bb7]
  succs [bb21, bb33]

bb9
  0: StorageDead(_6)
    SourceInfo(data-url/src/lib.rs:345:99-345:100)
  1: StorageLive(_16)
    SourceInfo(data-url/src/lib.rs:346:5-346:22)
  2: StorageLive(_17)
    SourceInfo(data-url/src/lib.rs:346:5-346:22)
  3: StorageLive(_18)
    SourceInfo(data-url/src/lib.rs:346:5-346:21)
  4: StorageLive(_19)
    SourceInfo(data-url/src/lib.rs:346:5-346:12)
  5: _19 = move _3
    SourceInfo(data-url/src/lib.rs:346:5-346:12)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:5-346:21)
      kind: _18 = forgiving_base64::Decoder::<F, E>::finish(move _19) -> [return: bb10, unwind: bb30]
  }
  preds [bb6]
  succs [bb10, bb30]

bb10
  0: StorageDead(_19)
    SourceInfo(data-url/src/lib.rs:346:20-346:21)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:5-346:22)
      kind: _17 = <core::result::Result<(), forgiving_base64::DecodeError<E>> as core::ops::Try>::branch(move _18) -> [return: bb11, unwind: bb29]
  }
  preds [bb9]
  succs [bb11, bb29]

bb11
  0: StorageDead(_18)
    SourceInfo(data-url/src/lib.rs:346:21-346:22)
  1: PlaceMention(_17)
    SourceInfo(data-url/src/lib.rs:346:5-346:22)
  2: _20 = discriminant(_17)
    SourceInfo(data-url/src/lib.rs:346:5-346:22)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:5-346:22)
      kind: switchInt(move _20) -> [0: bb14, 1: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _17)
    SourceInfo(data-url/src/lib.rs:346:5-346:22)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:5-346:22)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:21-346:22)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_24)
    SourceInfo(data-url/src/lib.rs:346:5-346:22)
  1: _24 = ((_17 as Continue).0: ())
    SourceInfo(data-url/src/lib.rs:346:5-346:22)
  2: _16 = _24
    SourceInfo(data-url/src/lib.rs:346:5-346:22)
  3: StorageDead(_24)
    SourceInfo(data-url/src/lib.rs:346:21-346:22)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:22-346:23)
      kind: drop(_17) -> [return: bb17, unwind: bb35]
  }
  preds [bb11, bb13]
  succs [bb17, bb35]

bb15
  0: StorageLive(_21)
    SourceInfo(data-url/src/lib.rs:346:21-346:22)
  1: _21 = move ((_17 as Break).0: core::result::Result<core::convert::Infallible, forgiving_base64::DecodeError<E>>)
    SourceInfo(data-url/src/lib.rs:346:21-346:22)
  2: StorageLive(_23)
    SourceInfo(data-url/src/lib.rs:346:21-346:22)
  3: _23 = move _21
    SourceInfo(data-url/src/lib.rs:346:21-346:22)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:5-346:22)
      kind: _0 = <core::result::Result<core::option::Option<FragmentIdentifier<'_>>, forgiving_base64::DecodeError<E>> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, forgiving_base64::DecodeError<E>>>>::from_residual(move _23) -> [return: bb16, unwind: bb26]
  }
  preds [bb13]
  succs [bb16, bb26]

bb16
  0: StorageDead(_23)
    SourceInfo(data-url/src/lib.rs:346:21-346:22)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:21-346:22)
      kind: drop(_21) -> [return: bb19, unwind: bb28]
  }
  preds [bb15]
  succs [bb19, bb28]

bb17
  0: StorageDead(_17)
    SourceInfo(data-url/src/lib.rs:346:22-346:23)
  1: StorageDead(_16)
    SourceInfo(data-url/src/lib.rs:346:22-346:23)
  2: StorageLive(_25)
    SourceInfo(data-url/src/lib.rs:347:8-347:16)
  3: _25 = move _5
    SourceInfo(data-url/src/lib.rs:347:8-347:16)
  4: _0 = core::result::Result::<core::option::Option<FragmentIdentifier<'_>>, forgiving_base64::DecodeError<E>>::Ok(move _25)
    SourceInfo(data-url/src/lib.rs:347:5-347:17)
  5: StorageDead(_25)
    SourceInfo(data-url/src/lib.rs:347:16-347:17)
  6: StorageDead(_5)
    SourceInfo(data-url/src/lib.rs:348:1-348:2)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:348:1-348:2)
      kind: drop(_3) -> [return: bb18, unwind: bb37]
  }
  preds [bb14]
  succs [bb18, bb37]

bb18
  0: StorageDead(_3)
    SourceInfo(data-url/src/lib.rs:348:1-348:2)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:348:1-348:2)
      kind: drop(_2) -> [return: bb25, unwind: bb38]
  }
  preds [bb17]
  succs [bb25, bb38]

bb19
  0: StorageDead(_21)
    SourceInfo(data-url/src/lib.rs:346:21-346:22)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:22-346:23)
      kind: drop(_17) -> [return: bb20, unwind: bb35]
  }
  preds [bb16]
  succs [bb20, bb35]

bb20
  0: StorageDead(_17)
    SourceInfo(data-url/src/lib.rs:346:22-346:23)
  1: StorageDead(_16)
    SourceInfo(data-url/src/lib.rs:346:22-346:23)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb19]
  succs [bb23]

bb21
  0: StorageDead(_12)
    SourceInfo(data-url/src/lib.rs:345:98-345:99)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:345:99-345:100)
      kind: drop(_6) -> [return: bb22, unwind: bb35]
  }
  preds [bb8]
  succs [bb22, bb35]

bb22
  0: StorageDead(_6)
    SourceInfo(data-url/src/lib.rs:345:99-345:100)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb21]
  succs [bb23]

bb23
  0: StorageDead(_5)
    SourceInfo(data-url/src/lib.rs:348:1-348:2)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:348:1-348:2)
      kind: drop(_3) -> [return: bb24, unwind: bb37]
  }
  preds [bb20, bb22]
  succs [bb24, bb37]

bb24
  0: StorageDead(_3)
    SourceInfo(data-url/src/lib.rs:348:1-348:2)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:348:1-348:2)
      kind: drop(_2) -> [return: bb25, unwind: bb38]
  }
  preds [bb23]
  succs [bb25, bb38]

bb25
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:348:2-348:2)
      kind: return
  }
  preds [bb18, bb24]
  succs []

bb26
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:21-346:22)
      kind: drop(_23) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:21-346:22)
      kind: drop(_21) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:22-346:23)
      kind: drop(_17) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb16, bb27]
  succs [bb35]

bb29
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:21-346:22)
      kind: drop(_18) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb10]
  succs [bb35]

bb30
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:346:20-346:21)
      kind: drop(_19) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb35]

bb31
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:345:98-345:99)
      kind: drop(_14) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:345:98-345:99)
      kind: drop(_12) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb31]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:345:99-345:100)
      kind: drop(_6) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb8, bb32]
  succs [bb35]

bb34
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:345:98-345:99)
      kind: drop(_7) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:348:1-348:2)
      kind: drop(_3) -> [return: bb37, unwind terminate(cleanup)]
  }
  preds [bb1, bb6, bb14, bb19, bb21, bb28, bb29, bb30, bb33, bb34]
  succs [bb37]

bb36
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:344:65-344:66)
      kind: drop(_4) -> [return: bb37, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb37]

bb37
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:348:1-348:2)
      kind: drop(_2) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb17, bb23, bb35, bb36]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:337:1-348:2)
      kind: resume
  }
  preds [bb18, bb24, bb37]
  succs []

