{
  "data-url/src/mime.rs:156:13:156:30": [
    {
      "Try": "f.write_str(\"=\")?"
    }
  ],
  "data-url/src/mime.rs:153:30:153:46": [
    {
      "For": {
        "iter_var": "(name, value)",
        "iter_range": "&self.parameters"
      }
    }
  ],
  "data-url/src/mime.rs:155:13:155:31": [
    {
      "Try": "f.write_str(name)?"
    }
  ],
  "data-url/src/mime.rs:157:55:157:71": [
    {
      "Bool": {
        "Other": "value.is_empty()"
      }
    }
  ],
  "data-url/src/mime.rs:158:17:158:36": [
    {
      "Try": "f.write_str(value)?"
    }
  ],
  "data-url/src/mime.rs:157:16:157:50": [
    {
      "Bool": {
        "Other": "only_http_token_code_points(value)"
      }
    }
  ],
  "data-url/src/mime.rs:150:9:150:34": [
    {
      "Try": "f.write_str(&self.type_)?"
    }
  ],
  "data-url/src/mime.rs:154:13:154:30": [
    {
      "Try": "f.write_str(\";\")?"
    }
  ],
  "data-url/src/mime.rs:167:17:167:35": [
    {
      "Try": "f.write_str(\"\\\"\")?"
    }
  ],
  "data-url/src/mime.rs:152:9:152:36": [
    {
      "Try": "f.write_str(&self.subtype)?"
    }
  ],
  "data-url/src/mime.rs:162:36:162:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == '\\\\'",
          "lhs": "c",
          "rhs": "'\\\\'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "data-url/src/mime.rs:162:24:162:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == '\"'",
          "lhs": "c",
          "rhs": "'\"'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "data-url/src/mime.rs:161:26:161:39": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "value.chars()"
      }
    }
  ],
  "data-url/src/mime.rs:151:9:151:26": [
    {
      "Try": "f.write_str(\"/\")?"
    }
  ],
  "data-url/src/mime.rs:163:25:163:43": [
    {
      "Try": "f.write_str(\"\\\\\")?"
    }
  ],
  "data-url/src/mime.rs:165:21:165:37": [
    {
      "Try": "f.write_char(c)?"
    }
  ],
  "data-url/src/mime.rs:160:17:160:35": [
    {
      "Try": "f.write_str(\"\\\"\")?"
    }
  ]
}