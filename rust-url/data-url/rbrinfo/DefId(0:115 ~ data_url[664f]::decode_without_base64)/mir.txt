bb0
  0: StorageLive(_3)
    SourceInfo(data-url/src/lib.rs:290:9-290:14)
  1: StorageLive(_4)
    SourceInfo(data-url/src/lib.rs:290:17-290:43)
  2: _4 = &(*_1)
    SourceInfo(data-url/src/lib.rs:290:17-290:43)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:290:17-290:54)
      kind: _3 = core::str::<impl str>::as_bytes(move _4) -> [return: bb1, unwind: bb91]
  }
  preds []
  succs [bb1, bb91]

bb1
  0: StorageDead(_4)
    SourceInfo(data-url/src/lib.rs:290:53-290:54)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(data-url/src/lib.rs:290:9-290:14)
  2: StorageLive(_5)
    SourceInfo(data-url/src/lib.rs:291:9-291:24)
  3: _5 = const 0_usize
    SourceInfo(data-url/src/lib.rs:291:27-291:28)
  4: FakeRead(ForLet(None), _5)
    SourceInfo(data-url/src/lib.rs:291:9-291:24)
  5: StorageLive(_6)
    SourceInfo(data-url/src/lib.rs:292:5-329:6)
  6: StorageLive(_7)
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  7: StorageLive(_8)
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  8: StorageLive(_9)
    SourceInfo(data-url/src/lib.rs:292:23-292:35)
  9: StorageLive(_10)
    SourceInfo(data-url/src/lib.rs:292:23-292:28)
  10: _10 = &(*_3)
    SourceInfo(data-url/src/lib.rs:292:23-292:28)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:292:23-292:35)
      kind: _9 = core::slice::<impl [u8]>::iter(move _10) -> [return: bb2, unwind: bb91]
  }
  preds [bb0]
  succs [bb2, bb91]

bb2
  0: StorageDead(_10)
    SourceInfo(data-url/src/lib.rs:292:34-292:35)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:292:23-292:47)
      kind: _8 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::enumerate(move _9) -> [return: bb3, unwind: bb91]
  }
  preds [bb1]
  succs [bb3, bb91]

bb3
  0: StorageDead(_9)
    SourceInfo(data-url/src/lib.rs:292:46-292:47)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:292:23-292:47)
      kind: _7 = <core::iter::Enumerate<core::slice::Iter<'_, u8>> as core::iter::IntoIterator>::into_iter(move _8) -> [return: bb4, unwind: bb91]
  }
  preds [bb2]
  succs [bb4, bb91]

bb4
  0: StorageDead(_8)
    SourceInfo(data-url/src/lib.rs:292:46-292:47)
  1: PlaceMention(_7)
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  2: StorageLive(_11)
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  3: _11 = move _7
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:292:5-329:6)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:292:5-329:6)
      kind: falseUnwind -> [real: bb6, unwind: bb91]
  }
  preds [bb4, bb60]
  succs [bb6, bb91]

bb6
  0: StorageLive(_13)
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  1: StorageLive(_14)
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  2: StorageLive(_15)
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  3: StorageLive(_16)
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  4: _16 = &mut _11
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  5: _15 = &mut (*_16)
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:292:23-292:47)
      kind: _14 = <core::iter::Enumerate<core::slice::Iter<'_, u8>> as core::iter::Iterator>::next(move _15) -> [return: bb7, unwind: bb91]
  }
  preds [bb5]
  succs [bb7, bb91]

bb7
  0: StorageDead(_15)
    SourceInfo(data-url/src/lib.rs:292:46-292:47)
  1: PlaceMention(_14)
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  2: _17 = discriminant(_14)
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:292:23-292:47)
      kind: switchInt(move _17) -> [0: bb9, 1: bb10, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(data-url/src/lib.rs:292:23-292:47)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:292:23-292:47)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:292:5-329:6)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_19)
    SourceInfo(data-url/src/lib.rs:292:10-292:11)
  1: _19 = (((_14 as Some).0: (usize, &u8)).0: usize)
    SourceInfo(data-url/src/lib.rs:292:10-292:11)
  2: StorageLive(_20)
    SourceInfo(data-url/src/lib.rs:292:14-292:18)
  3: _20 = (*(((_14 as Some).0: (usize, &u8)).1: &u8))
    SourceInfo(data-url/src/lib.rs:292:14-292:18)
  4: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:457:9-460:10)
  5: PlaceMention(_20)
    SourceInfo(data-url/src/lib.rs:296:21-296:25)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:457:9-457:9)
      kind: switchInt(_20) -> [37: bb13, 35: bb13, 9: bb13, 10: bb13, 13: bb13, otherwise: bb12]
  }
  preds [bb7, bb9]
  succs [bb12, bb13, bb13, bb13, bb13, bb13]

bb11
  0: _6 = const ()
    SourceInfo(data-url/src/lib.rs:292:5-329:6)
  1: StorageDead(_16)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  2: StorageDead(_14)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  3: StorageDead(_13)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  4: StorageDead(_11)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  5: StorageDead(_7)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  6: StorageDead(_6)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  7: StorageLive(_104)
    SourceInfo(data-url/src/lib.rs:330:5-330:40)
  8: StorageLive(_105)
    SourceInfo(data-url/src/lib.rs:330:5-330:40)
  9: StorageLive(_106)
    SourceInfo(data-url/src/lib.rs:330:5-330:39)
  10: StorageLive(_107)
    SourceInfo(data-url/src/lib.rs:330:5-330:16)
  11: _107 = &mut _2
    SourceInfo(data-url/src/lib.rs:330:5-330:16)
  12: StorageLive(_108)
    SourceInfo(data-url/src/lib.rs:330:5-330:39)
  13: StorageLive(_109)
    SourceInfo(data-url/src/lib.rs:330:17-330:38)
  14: StorageLive(_110)
    SourceInfo(data-url/src/lib.rs:330:17-330:38)
  15: StorageLive(_111)
    SourceInfo(data-url/src/lib.rs:330:23-330:38)
  16: StorageLive(_112)
    SourceInfo(data-url/src/lib.rs:330:18-330:23)
  17: _112 = &(*_3)
    SourceInfo(data-url/src/lib.rs:330:18-330:23)
  18: StorageLive(_113)
    SourceInfo(data-url/src/lib.rs:330:24-330:37)
  19: StorageLive(_114)
    SourceInfo(data-url/src/lib.rs:330:24-330:35)
  20: _114 = _5
    SourceInfo(data-url/src/lib.rs:330:24-330:35)
  21: _113 = core::ops::RangeFrom::<usize> { start: move _114 }
    SourceInfo(data-url/src/lib.rs:330:24-330:37)
  22: StorageDead(_114)
    SourceInfo(data-url/src/lib.rs:330:36-330:37)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:23-330:38)
      kind: _111 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _112, move _113) -> [return: bb61, unwind: bb91]
  }
  preds [bb9]
  succs [bb61, bb91]

bb12
  0: _21 = const false
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:18-459:23)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:18-459:23)
      kind: goto -> bb15
  }
  preds [bb10, bb13]
  succs [bb15]

bb13
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:296:27-296:62)
      kind: falseEdge -> [real: bb14, imaginary: bb12]
  }
  preds [bb10, bb10, bb10, bb10, bb10]
  succs [bb12, bb14]

bb14
  0: _21 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:458:39-458:43)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:458:39-458:43)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:457:9-460:10)
      kind: switchInt(move _21) -> [0: bb59, otherwise: bb16]
  }
  preds [bb12, bb14]
  succs [bb16, bb59]

bb16
  0: StorageLive(_22)
    SourceInfo(data-url/src/lib.rs:299:13-302:14)
  1: StorageLive(_23)
    SourceInfo(data-url/src/lib.rs:299:16-299:31)
  2: StorageLive(_24)
    SourceInfo(data-url/src/lib.rs:299:16-299:17)
  3: _24 = _19
    SourceInfo(data-url/src/lib.rs:299:16-299:17)
  4: StorageLive(_25)
    SourceInfo(data-url/src/lib.rs:299:20-299:31)
  5: _25 = _5
    SourceInfo(data-url/src/lib.rs:299:20-299:31)
  6: _23 = Gt(move _24, move _25)
    SourceInfo(data-url/src/lib.rs:299:16-299:31)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:299:16-299:31)
      kind: switchInt(move _23) -> [0: bb27, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb27]

bb17
  0: StorageDead(_25)
    SourceInfo(data-url/src/lib.rs:299:30-299:31)
  1: StorageDead(_24)
    SourceInfo(data-url/src/lib.rs:299:30-299:31)
  2: StorageLive(_26)
    SourceInfo(data-url/src/lib.rs:300:17-300:53)
  3: StorageLive(_27)
    SourceInfo(data-url/src/lib.rs:300:17-300:53)
  4: StorageLive(_28)
    SourceInfo(data-url/src/lib.rs:300:17-300:52)
  5: StorageLive(_29)
    SourceInfo(data-url/src/lib.rs:300:17-300:28)
  6: _29 = &mut _2
    SourceInfo(data-url/src/lib.rs:300:17-300:28)
  7: StorageLive(_30)
    SourceInfo(data-url/src/lib.rs:300:17-300:52)
  8: StorageLive(_31)
    SourceInfo(data-url/src/lib.rs:300:29-300:51)
  9: StorageLive(_32)
    SourceInfo(data-url/src/lib.rs:300:29-300:51)
  10: StorageLive(_33)
    SourceInfo(data-url/src/lib.rs:300:35-300:51)
  11: StorageLive(_34)
    SourceInfo(data-url/src/lib.rs:300:30-300:35)
  12: _34 = &(*_3)
    SourceInfo(data-url/src/lib.rs:300:30-300:35)
  13: StorageLive(_35)
    SourceInfo(data-url/src/lib.rs:300:36-300:50)
  14: StorageLive(_36)
    SourceInfo(data-url/src/lib.rs:300:36-300:47)
  15: _36 = _5
    SourceInfo(data-url/src/lib.rs:300:36-300:47)
  16: StorageLive(_37)
    SourceInfo(data-url/src/lib.rs:300:49-300:50)
  17: _37 = _19
    SourceInfo(data-url/src/lib.rs:300:49-300:50)
  18: _35 = core::ops::Range::<usize> { start: move _36, end: move _37 }
    SourceInfo(data-url/src/lib.rs:300:36-300:50)
  19: StorageDead(_37)
    SourceInfo(data-url/src/lib.rs:300:49-300:50)
  20: StorageDead(_36)
    SourceInfo(data-url/src/lib.rs:300:49-300:50)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:35-300:51)
      kind: _33 = <[u8] as core::ops::Index<core::ops::Range<usize>>>::index(move _34, move _35) -> [return: bb18, unwind: bb91]
  }
  preds [bb16]
  succs [bb18, bb91]

bb18
  0: StorageDead(_35)
    SourceInfo(data-url/src/lib.rs:300:50-300:51)
  1: StorageDead(_34)
    SourceInfo(data-url/src/lib.rs:300:50-300:51)
  2: _32 = &(*_33)
    SourceInfo(data-url/src/lib.rs:300:29-300:51)
  3: _31 = &(*_32)
    SourceInfo(data-url/src/lib.rs:300:29-300:51)
  4: _30 = (move _31,)
    SourceInfo(data-url/src/lib.rs:300:17-300:52)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:17-300:52)
      kind: _28 = <F as core::ops::FnMut<(&[u8],)>>::call_mut(move _29, move _30) -> [return: bb19, unwind: bb91]
  }
  preds [bb17]
  succs [bb19, bb91]

bb19
  0: StorageDead(_31)
    SourceInfo(data-url/src/lib.rs:300:51-300:52)
  1: StorageDead(_30)
    SourceInfo(data-url/src/lib.rs:300:51-300:52)
  2: StorageDead(_29)
    SourceInfo(data-url/src/lib.rs:300:51-300:52)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:17-300:53)
      kind: _27 = <core::result::Result<(), E> as core::ops::Try>::branch(move _28) -> [return: bb20, unwind: bb90]
  }
  preds [bb18]
  succs [bb20, bb90]

bb20
  0: StorageDead(_28)
    SourceInfo(data-url/src/lib.rs:300:52-300:53)
  1: PlaceMention(_27)
    SourceInfo(data-url/src/lib.rs:300:17-300:53)
  2: _38 = discriminant(_27)
    SourceInfo(data-url/src/lib.rs:300:17-300:53)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:17-300:53)
      kind: switchInt(move _38) -> [0: bb23, 1: bb22, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb22, bb23]

bb21
  0: FakeRead(ForMatchedPlace(None), _27)
    SourceInfo(data-url/src/lib.rs:300:17-300:53)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:17-300:53)
      kind: unreachable
  }
  preds [bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:52-300:53)
      kind: falseEdge -> [real: bb24, imaginary: bb23]
  }
  preds [bb20]
  succs [bb23, bb24]

bb23
  0: StorageLive(_42)
    SourceInfo(data-url/src/lib.rs:300:17-300:53)
  1: _42 = ((_27 as Continue).0: ())
    SourceInfo(data-url/src/lib.rs:300:17-300:53)
  2: _26 = _42
    SourceInfo(data-url/src/lib.rs:300:17-300:53)
  3: StorageDead(_42)
    SourceInfo(data-url/src/lib.rs:300:52-300:53)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:53-300:54)
      kind: drop(_27) -> [return: bb26, unwind: bb91]
  }
  preds [bb20, bb22]
  succs [bb26, bb91]

bb24
  0: StorageLive(_39)
    SourceInfo(data-url/src/lib.rs:300:52-300:53)
  1: _39 = move ((_27 as Break).0: core::result::Result<core::convert::Infallible, E>)
    SourceInfo(data-url/src/lib.rs:300:52-300:53)
  2: StorageLive(_41)
    SourceInfo(data-url/src/lib.rs:300:52-300:53)
  3: _41 = move _39
    SourceInfo(data-url/src/lib.rs:300:52-300:53)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:17-300:53)
      kind: _0 = <core::result::Result<core::option::Option<FragmentIdentifier<'_>>, E> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, E>>>::from_residual(move _41) -> [return: bb25, unwind: bb87]
  }
  preds [bb22]
  succs [bb25, bb87]

bb25
  0: StorageDead(_41)
    SourceInfo(data-url/src/lib.rs:300:52-300:53)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:52-300:53)
      kind: drop(_39) -> [return: bb74, unwind: bb89]
  }
  preds [bb24]
  succs [bb74, bb89]

bb26
  0: StorageDead(_33)
    SourceInfo(data-url/src/lib.rs:300:53-300:54)
  1: StorageDead(_32)
    SourceInfo(data-url/src/lib.rs:300:53-300:54)
  2: StorageDead(_27)
    SourceInfo(data-url/src/lib.rs:300:53-300:54)
  3: StorageDead(_26)
    SourceInfo(data-url/src/lib.rs:300:53-300:54)
  4: StorageLive(_43)
    SourceInfo(data-url/src/lib.rs:301:31-301:32)
  5: _43 = _19
    SourceInfo(data-url/src/lib.rs:301:31-301:32)
  6: _5 = move _43
    SourceInfo(data-url/src/lib.rs:301:17-301:32)
  7: StorageDead(_43)
    SourceInfo(data-url/src/lib.rs:301:31-301:32)
  8: _22 = const ()
    SourceInfo(data-url/src/lib.rs:299:32-302:14)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:299:13-302:14)
      kind: goto -> bb28
  }
  preds [bb23]
  succs [bb28]

bb27
  0: StorageDead(_25)
    SourceInfo(data-url/src/lib.rs:299:30-299:31)
  1: StorageDead(_24)
    SourceInfo(data-url/src/lib.rs:299:30-299:31)
  2: _22 = const ()
    SourceInfo(data-url/src/lib.rs:302:14-302:14)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:299:13-302:14)
      kind: goto -> bb28
  }
  preds [bb16]
  succs [bb28]

bb28
  0: StorageDead(_23)
    SourceInfo(data-url/src/lib.rs:302:13-302:14)
  1: StorageDead(_22)
    SourceInfo(data-url/src/lib.rs:302:13-302:14)
  2: PlaceMention(_20)
    SourceInfo(data-url/src/lib.rs:304:19-304:23)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:304:13-304:23)
      kind: switchInt(_20) -> [37: bb30, 35: bb31, otherwise: bb29]
  }
  preds [bb26, bb27]
  succs [bb29, bb30, bb31]

bb29
  0: StorageLive(_102)
    SourceInfo(data-url/src/lib.rs:326:36-326:37)
  1: _102 = _19
    SourceInfo(data-url/src/lib.rs:326:36-326:37)
  2: _103 = AddWithOverflow(_102, const 1_usize)
    SourceInfo(data-url/src/lib.rs:326:36-326:41)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:326:36-326:41)
      kind: assert(!move (_103.1: bool), "attempt to compute `{} + {}`, which would overflow", move _102, const 1_usize) -> [success: bb58, unwind: bb91]
  }
  preds [bb28, bb31]
  succs [bb58, bb91]

bb30
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:305:17-305:21)
      kind: falseEdge -> [real: bb32, imaginary: bb31]
  }
  preds [bb28]
  succs [bb31, bb32]

bb31
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:319:17-319:21)
      kind: falseEdge -> [real: bb55, imaginary: bb29]
  }
  preds [bb28, bb30]
  succs [bb29, bb55]

bb32
  0: StorageLive(_44)
    SourceInfo(data-url/src/lib.rs:306:25-306:26)
  1: StorageLive(_45)
    SourceInfo(data-url/src/lib.rs:306:29-306:45)
  2: StorageLive(_46)
    SourceInfo(data-url/src/lib.rs:306:29-306:34)
  3: _46 = &(*_3)
    SourceInfo(data-url/src/lib.rs:306:29-306:34)
  4: StorageLive(_47)
    SourceInfo(data-url/src/lib.rs:306:39-306:44)
  5: StorageLive(_48)
    SourceInfo(data-url/src/lib.rs:306:39-306:40)
  6: _48 = _19
    SourceInfo(data-url/src/lib.rs:306:39-306:40)
  7: _49 = AddWithOverflow(_48, const 2_usize)
    SourceInfo(data-url/src/lib.rs:306:39-306:44)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:306:39-306:44)
      kind: assert(!move (_49.1: bool), "attempt to compute `{} + {}`, which would overflow", move _48, const 2_usize) -> [success: bb33, unwind: bb91]
  }
  preds [bb30]
  succs [bb33, bb91]

bb33
  0: _47 = move (_49.0: usize)
    SourceInfo(data-url/src/lib.rs:306:39-306:44)
  1: StorageDead(_48)
    SourceInfo(data-url/src/lib.rs:306:43-306:44)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:306:29-306:45)
      kind: _45 = core::slice::<impl [u8]>::get::<usize>(move _46, move _47) -> [return: bb34, unwind: bb91]
  }
  preds [bb32]
  succs [bb34, bb91]

bb34
  0: StorageDead(_47)
    SourceInfo(data-url/src/lib.rs:306:44-306:45)
  1: StorageDead(_46)
    SourceInfo(data-url/src/lib.rs:306:44-306:45)
  2: StorageLive(_50)
    SourceInfo(data-url/src/lib.rs:306:55-306:84)
  3: _50 = {closure@data-url/src/lib.rs:306:55: 306:59}
    SourceInfo(data-url/src/lib.rs:306:55-306:84)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:306:29-306:85)
      kind: _44 = core::option::Option::<&u8>::and_then::<u32, {closure@data-url/src/lib.rs:306:55: 306:59}>(move _45, move _50) -> [return: bb35, unwind: bb91]
  }
  preds [bb33]
  succs [bb35, bb91]

bb35
  0: StorageDead(_50)
    SourceInfo(data-url/src/lib.rs:306:84-306:85)
  1: StorageDead(_45)
    SourceInfo(data-url/src/lib.rs:306:84-306:85)
  2: FakeRead(ForLet(None), _44)
    SourceInfo(data-url/src/lib.rs:306:25-306:26)
  3: StorageLive(_51)
    SourceInfo(data-url/src/lib.rs:307:25-307:26)
  4: StorageLive(_52)
    SourceInfo(data-url/src/lib.rs:307:29-307:45)
  5: StorageLive(_53)
    SourceInfo(data-url/src/lib.rs:307:29-307:34)
  6: _53 = &(*_3)
    SourceInfo(data-url/src/lib.rs:307:29-307:34)
  7: StorageLive(_54)
    SourceInfo(data-url/src/lib.rs:307:39-307:44)
  8: StorageLive(_55)
    SourceInfo(data-url/src/lib.rs:307:39-307:40)
  9: _55 = _19
    SourceInfo(data-url/src/lib.rs:307:39-307:40)
  10: _56 = AddWithOverflow(_55, const 1_usize)
    SourceInfo(data-url/src/lib.rs:307:39-307:44)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:307:39-307:44)
      kind: assert(!move (_56.1: bool), "attempt to compute `{} + {}`, which would overflow", move _55, const 1_usize) -> [success: bb36, unwind: bb91]
  }
  preds [bb34]
  succs [bb36, bb91]

bb36
  0: _54 = move (_56.0: usize)
    SourceInfo(data-url/src/lib.rs:307:39-307:44)
  1: StorageDead(_55)
    SourceInfo(data-url/src/lib.rs:307:43-307:44)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:307:29-307:45)
      kind: _52 = core::slice::<impl [u8]>::get::<usize>(move _53, move _54) -> [return: bb37, unwind: bb91]
  }
  preds [bb35]
  succs [bb37, bb91]

bb37
  0: StorageDead(_54)
    SourceInfo(data-url/src/lib.rs:307:44-307:45)
  1: StorageDead(_53)
    SourceInfo(data-url/src/lib.rs:307:44-307:45)
  2: StorageLive(_57)
    SourceInfo(data-url/src/lib.rs:307:55-307:84)
  3: _57 = {closure@data-url/src/lib.rs:307:55: 307:59}
    SourceInfo(data-url/src/lib.rs:307:55-307:84)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:307:29-307:85)
      kind: _51 = core::option::Option::<&u8>::and_then::<u32, {closure@data-url/src/lib.rs:307:55: 307:59}>(move _52, move _57) -> [return: bb38, unwind: bb91]
  }
  preds [bb36]
  succs [bb38, bb91]

bb38
  0: StorageDead(_57)
    SourceInfo(data-url/src/lib.rs:307:84-307:85)
  1: StorageDead(_52)
    SourceInfo(data-url/src/lib.rs:307:84-307:85)
  2: FakeRead(ForLet(None), _51)
    SourceInfo(data-url/src/lib.rs:307:25-307:26)
  3: StorageLive(_58)
    SourceInfo(data-url/src/lib.rs:308:49-308:55)
  4: StorageLive(_59)
    SourceInfo(data-url/src/lib.rs:308:50-308:51)
  5: _59 = _51
    SourceInfo(data-url/src/lib.rs:308:50-308:51)
  6: StorageLive(_60)
    SourceInfo(data-url/src/lib.rs:308:53-308:54)
  7: _60 = _44
    SourceInfo(data-url/src/lib.rs:308:53-308:54)
  8: _58 = (move _59, move _60)
    SourceInfo(data-url/src/lib.rs:308:49-308:55)
  9: StorageDead(_60)
    SourceInfo(data-url/src/lib.rs:308:54-308:55)
  10: StorageDead(_59)
    SourceInfo(data-url/src/lib.rs:308:54-308:55)
  11: PlaceMention(_58)
    SourceInfo(data-url/src/lib.rs:308:49-308:55)
  12: _62 = discriminant((_58.0: core::option::Option<u32>))
    SourceInfo(data-url/src/lib.rs:308:49-308:55)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:308:28-308:46)
      kind: switchInt(move _62) -> [1: bb39, otherwise: bb53]
  }
  preds [bb37]
  succs [bb39, bb53]

bb39
  0: _61 = discriminant((_58.1: core::option::Option<u32>))
    SourceInfo(data-url/src/lib.rs:308:49-308:55)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:308:28-308:46)
      kind: switchInt(move _61) -> [1: bb40, otherwise: bb53]
  }
  preds [bb38]
  succs [bb40, bb53]

bb40
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:308:28-308:46)
      kind: falseEdge -> [real: bb41, imaginary: bb53]
  }
  preds [bb39]
  succs [bb41, bb53]

bb41
  0: StorageLive(_63)
    SourceInfo(data-url/src/lib.rs:308:34-308:35)
  1: _63 = (((_58.0: core::option::Option<u32>) as Some).0: u32)
    SourceInfo(data-url/src/lib.rs:308:34-308:35)
  2: StorageLive(_64)
    SourceInfo(data-url/src/lib.rs:308:43-308:44)
  3: _64 = (((_58.1: core::option::Option<u32>) as Some).0: u32)
    SourceInfo(data-url/src/lib.rs:308:43-308:44)
  4: StorageLive(_65)
    SourceInfo(data-url/src/lib.rs:310:29-310:37)
  5: StorageLive(_66)
    SourceInfo(data-url/src/lib.rs:310:40-310:54)
  6: StorageLive(_67)
    SourceInfo(data-url/src/lib.rs:310:40-310:47)
  7: StorageLive(_68)
    SourceInfo(data-url/src/lib.rs:310:40-310:41)
  8: _68 = _63
    SourceInfo(data-url/src/lib.rs:310:40-310:41)
  9: _67 = move _68 as u8 (IntToInt)
    SourceInfo(data-url/src/lib.rs:310:40-310:47)
  10: StorageDead(_68)
    SourceInfo(data-url/src/lib.rs:310:46-310:47)
  11: _69 = MulWithOverflow(_67, const 16_u8)
    SourceInfo(data-url/src/lib.rs:310:40-310:54)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:310:40-310:54)
      kind: assert(!move (_69.1: bool), "attempt to compute `{} * {}`, which would overflow", move _67, const 16_u8) -> [success: bb42, unwind: bb91]
  }
  preds [bb40]
  succs [bb42, bb91]

bb42
  0: _66 = move (_69.0: u8)
    SourceInfo(data-url/src/lib.rs:310:40-310:54)
  1: StorageDead(_67)
    SourceInfo(data-url/src/lib.rs:310:53-310:54)
  2: StorageLive(_70)
    SourceInfo(data-url/src/lib.rs:310:57-310:64)
  3: StorageLive(_71)
    SourceInfo(data-url/src/lib.rs:310:57-310:58)
  4: _71 = _64
    SourceInfo(data-url/src/lib.rs:310:57-310:58)
  5: _70 = move _71 as u8 (IntToInt)
    SourceInfo(data-url/src/lib.rs:310:57-310:64)
  6: StorageDead(_71)
    SourceInfo(data-url/src/lib.rs:310:63-310:64)
  7: _72 = AddWithOverflow(_66, _70)
    SourceInfo(data-url/src/lib.rs:310:40-310:64)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:310:40-310:64)
      kind: assert(!move (_72.1: bool), "attempt to compute `{} + {}`, which would overflow", move _66, move _70) -> [success: bb43, unwind: bb91]
  }
  preds [bb41]
  succs [bb43, bb91]

bb43
  0: _65 = move (_72.0: u8)
    SourceInfo(data-url/src/lib.rs:310:40-310:64)
  1: StorageDead(_70)
    SourceInfo(data-url/src/lib.rs:310:63-310:64)
  2: StorageDead(_66)
    SourceInfo(data-url/src/lib.rs:310:63-310:64)
  3: FakeRead(ForLet(None), _65)
    SourceInfo(data-url/src/lib.rs:310:29-310:37)
  4: StorageLive(_73)
    SourceInfo(data-url/src/lib.rs:311:25-311:50)
  5: StorageLive(_74)
    SourceInfo(data-url/src/lib.rs:311:25-311:50)
  6: StorageLive(_75)
    SourceInfo(data-url/src/lib.rs:311:25-311:49)
  7: StorageLive(_76)
    SourceInfo(data-url/src/lib.rs:311:25-311:36)
  8: _76 = &mut _2
    SourceInfo(data-url/src/lib.rs:311:25-311:36)
  9: StorageLive(_77)
    SourceInfo(data-url/src/lib.rs:311:25-311:49)
  10: StorageLive(_78)
    SourceInfo(data-url/src/lib.rs:311:37-311:48)
  11: StorageLive(_79)
    SourceInfo(data-url/src/lib.rs:311:37-311:48)
  12: StorageLive(_80)
    SourceInfo(data-url/src/lib.rs:311:37-311:48)
  13: StorageLive(_81)
    SourceInfo(data-url/src/lib.rs:311:38-311:48)
  14: StorageLive(_82)
    SourceInfo(data-url/src/lib.rs:311:39-311:47)
  15: _82 = _65
    SourceInfo(data-url/src/lib.rs:311:39-311:47)
  16: _81 = [move _82]
    SourceInfo(data-url/src/lib.rs:311:38-311:48)
  17: StorageDead(_82)
    SourceInfo(data-url/src/lib.rs:311:47-311:48)
  18: _80 = &_81
    SourceInfo(data-url/src/lib.rs:311:37-311:48)
  19: _79 = &(*_80)
    SourceInfo(data-url/src/lib.rs:311:37-311:48)
  20: _78 = move _79 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(data-url/src/lib.rs:311:37-311:48)
  21: StorageDead(_79)
    SourceInfo(data-url/src/lib.rs:311:47-311:48)
  22: _77 = (move _78,)
    SourceInfo(data-url/src/lib.rs:311:25-311:49)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:311:25-311:49)
      kind: _75 = <F as core::ops::FnMut<(&[u8],)>>::call_mut(move _76, move _77) -> [return: bb44, unwind: bb91]
  }
  preds [bb42]
  succs [bb44, bb91]

bb44
  0: StorageDead(_78)
    SourceInfo(data-url/src/lib.rs:311:48-311:49)
  1: StorageDead(_77)
    SourceInfo(data-url/src/lib.rs:311:48-311:49)
  2: StorageDead(_76)
    SourceInfo(data-url/src/lib.rs:311:48-311:49)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:311:25-311:50)
      kind: _74 = <core::result::Result<(), E> as core::ops::Try>::branch(move _75) -> [return: bb45, unwind: bb86]
  }
  preds [bb43]
  succs [bb45, bb86]

bb45
  0: StorageDead(_75)
    SourceInfo(data-url/src/lib.rs:311:49-311:50)
  1: PlaceMention(_74)
    SourceInfo(data-url/src/lib.rs:311:25-311:50)
  2: _83 = discriminant(_74)
    SourceInfo(data-url/src/lib.rs:311:25-311:50)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:311:25-311:50)
      kind: switchInt(move _83) -> [0: bb48, 1: bb47, otherwise: bb46]
  }
  preds [bb44]
  succs [bb46, bb47, bb48]

bb46
  0: FakeRead(ForMatchedPlace(None), _74)
    SourceInfo(data-url/src/lib.rs:311:25-311:50)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:311:25-311:50)
      kind: unreachable
  }
  preds [bb45]
  succs []

bb47
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:311:49-311:50)
      kind: falseEdge -> [real: bb49, imaginary: bb48]
  }
  preds [bb45]
  succs [bb48, bb49]

bb48
  0: StorageLive(_87)
    SourceInfo(data-url/src/lib.rs:311:25-311:50)
  1: _87 = ((_74 as Continue).0: ())
    SourceInfo(data-url/src/lib.rs:311:25-311:50)
  2: _73 = _87
    SourceInfo(data-url/src/lib.rs:311:25-311:50)
  3: StorageDead(_87)
    SourceInfo(data-url/src/lib.rs:311:49-311:50)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:311:50-311:51)
      kind: drop(_74) -> [return: bb51, unwind: bb91]
  }
  preds [bb45, bb47]
  succs [bb51, bb91]

bb49
  0: StorageLive(_84)
    SourceInfo(data-url/src/lib.rs:311:49-311:50)
  1: _84 = move ((_74 as Break).0: core::result::Result<core::convert::Infallible, E>)
    SourceInfo(data-url/src/lib.rs:311:49-311:50)
  2: StorageLive(_86)
    SourceInfo(data-url/src/lib.rs:311:49-311:50)
  3: _86 = move _84
    SourceInfo(data-url/src/lib.rs:311:49-311:50)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:311:25-311:50)
      kind: _0 = <core::result::Result<core::option::Option<FragmentIdentifier<'_>>, E> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, E>>>::from_residual(move _86) -> [return: bb50, unwind: bb83]
  }
  preds [bb47]
  succs [bb50, bb83]

bb50
  0: StorageDead(_86)
    SourceInfo(data-url/src/lib.rs:311:49-311:50)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:311:49-311:50)
      kind: drop(_84) -> [return: bb72, unwind: bb85]
  }
  preds [bb49]
  succs [bb72, bb85]

bb51
  0: StorageDead(_81)
    SourceInfo(data-url/src/lib.rs:311:50-311:51)
  1: StorageDead(_80)
    SourceInfo(data-url/src/lib.rs:311:50-311:51)
  2: StorageDead(_74)
    SourceInfo(data-url/src/lib.rs:311:50-311:51)
  3: StorageDead(_73)
    SourceInfo(data-url/src/lib.rs:311:50-311:51)
  4: StorageLive(_88)
    SourceInfo(data-url/src/lib.rs:312:39-312:40)
  5: _88 = _19
    SourceInfo(data-url/src/lib.rs:312:39-312:40)
  6: _89 = AddWithOverflow(_88, const 3_usize)
    SourceInfo(data-url/src/lib.rs:312:39-312:44)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:312:39-312:44)
      kind: assert(!move (_89.1: bool), "attempt to compute `{} + {}`, which would overflow", move _88, const 3_usize) -> [success: bb52, unwind: bb91]
  }
  preds [bb48]
  succs [bb52, bb91]

bb52
  0: _5 = move (_89.0: usize)
    SourceInfo(data-url/src/lib.rs:312:25-312:44)
  1: StorageDead(_88)
    SourceInfo(data-url/src/lib.rs:312:43-312:44)
  2: _13 = const ()
    SourceInfo(data-url/src/lib.rs:308:56-313:22)
  3: StorageDead(_65)
    SourceInfo(data-url/src/lib.rs:313:21-313:22)
  4: StorageDead(_64)
    SourceInfo(data-url/src/lib.rs:313:21-313:22)
  5: StorageDead(_63)
    SourceInfo(data-url/src/lib.rs:313:21-313:22)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:308:21-316:22)
      kind: goto -> bb54
  }
  preds [bb51]
  succs [bb54]

bb53
  0: _13 = const ()
    SourceInfo(data-url/src/lib.rs:313:28-316:22)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:308:21-316:22)
      kind: goto -> bb54
  }
  preds [bb38, bb39, bb40]
  succs [bb54]

bb54
  0: StorageDead(_51)
    SourceInfo(data-url/src/lib.rs:317:17-317:18)
  1: StorageDead(_44)
    SourceInfo(data-url/src/lib.rs:317:17-317:18)
  2: StorageDead(_58)
    SourceInfo(data-url/src/lib.rs:317:17-317:18)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:317:17-317:18)
      kind: goto -> bb60
  }
  preds [bb52, bb53]
  succs [bb60]

bb55
  0: StorageLive(_91)
    SourceInfo(data-url/src/lib.rs:320:25-320:39)
  1: StorageLive(_92)
    SourceInfo(data-url/src/lib.rs:320:42-320:43)
  2: _92 = _19
    SourceInfo(data-url/src/lib.rs:320:42-320:43)
  3: _93 = AddWithOverflow(_92, const 1_usize)
    SourceInfo(data-url/src/lib.rs:320:42-320:47)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:320:42-320:47)
      kind: assert(!move (_93.1: bool), "attempt to compute `{} + {}`, which would overflow", move _92, const 1_usize) -> [success: bb56, unwind: bb91]
  }
  preds [bb31]
  succs [bb56, bb91]

bb56
  0: _91 = move (_93.0: usize)
    SourceInfo(data-url/src/lib.rs:320:42-320:47)
  1: StorageDead(_92)
    SourceInfo(data-url/src/lib.rs:320:46-320:47)
  2: FakeRead(ForLet(None), _91)
    SourceInfo(data-url/src/lib.rs:320:25-320:39)
  3: StorageLive(_94)
    SourceInfo(data-url/src/lib.rs:321:25-321:33)
  4: StorageLive(_95)
    SourceInfo(data-url/src/lib.rs:321:63-321:81)
  5: StorageLive(_96)
    SourceInfo(data-url/src/lib.rs:321:37-321:63)
  6: _96 = &(*_1)
    SourceInfo(data-url/src/lib.rs:321:37-321:63)
  7: StorageLive(_97)
    SourceInfo(data-url/src/lib.rs:321:64-321:80)
  8: StorageLive(_98)
    SourceInfo(data-url/src/lib.rs:321:64-321:78)
  9: _98 = _91
    SourceInfo(data-url/src/lib.rs:321:64-321:78)
  10: _97 = core::ops::RangeFrom::<usize> { start: move _98 }
    SourceInfo(data-url/src/lib.rs:321:64-321:80)
  11: StorageDead(_98)
    SourceInfo(data-url/src/lib.rs:321:79-321:80)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:321:63-321:81)
      kind: _95 = <str as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _96, move _97) -> [return: bb57, unwind: bb91]
  }
  preds [bb55]
  succs [bb57, bb91]

bb57
  0: StorageDead(_97)
    SourceInfo(data-url/src/lib.rs:321:80-321:81)
  1: StorageDead(_96)
    SourceInfo(data-url/src/lib.rs:321:80-321:81)
  2: _94 = &(*_95)
    SourceInfo(data-url/src/lib.rs:321:36-321:81)
  3: FakeRead(ForLet(None), _94)
    SourceInfo(data-url/src/lib.rs:321:25-321:33)
  4: StorageLive(_99)
    SourceInfo(data-url/src/lib.rs:322:31-322:65)
  5: StorageLive(_100)
    SourceInfo(data-url/src/lib.rs:322:36-322:64)
  6: StorageLive(_101)
    SourceInfo(data-url/src/lib.rs:322:55-322:63)
  7: _101 = &(*_94)
    SourceInfo(data-url/src/lib.rs:322:55-322:63)
  8: _100 = FragmentIdentifier::<'_>(move _101)
    SourceInfo(data-url/src/lib.rs:322:36-322:64)
  9: StorageDead(_101)
    SourceInfo(data-url/src/lib.rs:322:63-322:64)
  10: _99 = core::option::Option::<FragmentIdentifier<'_>>::Some(move _100)
    SourceInfo(data-url/src/lib.rs:322:31-322:65)
  11: StorageDead(_100)
    SourceInfo(data-url/src/lib.rs:322:64-322:65)
  12: _0 = core::result::Result::<core::option::Option<FragmentIdentifier<'_>>, E>::Ok(move _99)
    SourceInfo(data-url/src/lib.rs:322:28-322:66)
  13: StorageDead(_99)
    SourceInfo(data-url/src/lib.rs:322:65-322:66)
  14: StorageDead(_95)
    SourceInfo(data-url/src/lib.rs:323:17-323:18)
  15: StorageDead(_94)
    SourceInfo(data-url/src/lib.rs:323:17-323:18)
  16: StorageDead(_91)
    SourceInfo(data-url/src/lib.rs:323:17-323:18)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb56]
  succs [bb76]

bb58
  0: _5 = move (_103.0: usize)
    SourceInfo(data-url/src/lib.rs:326:22-326:41)
  1: _13 = const ()
    SourceInfo(data-url/src/lib.rs:326:22-326:41)
  2: StorageDead(_102)
    SourceInfo(data-url/src/lib.rs:326:40-326:41)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:326:40-326:41)
      kind: goto -> bb60
  }
  preds [bb29]
  succs [bb60]

bb59
  0: _13 = const ()
    SourceInfo(data-url/src/lib.rs:328:10-328:10)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:296:9-328:10)
      kind: goto -> bb60
  }
  preds [bb15]
  succs [bb60]

bb60
  0: StorageDead(_21)
    SourceInfo(data-url/src/lib.rs:328:9-328:10)
  1: StorageDead(_20)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  2: StorageDead(_19)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  3: StorageDead(_16)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  4: StorageDead(_14)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  5: StorageDead(_13)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  6: _12 = const ()
    SourceInfo(data-url/src/lib.rs:292:5-329:6)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:292:5-329:6)
      kind: goto -> bb5
  }
  preds [bb54, bb58, bb59]
  succs [bb5]

bb61
  0: StorageDead(_113)
    SourceInfo(data-url/src/lib.rs:330:37-330:38)
  1: StorageDead(_112)
    SourceInfo(data-url/src/lib.rs:330:37-330:38)
  2: _110 = &(*_111)
    SourceInfo(data-url/src/lib.rs:330:17-330:38)
  3: _109 = &(*_110)
    SourceInfo(data-url/src/lib.rs:330:17-330:38)
  4: _108 = (move _109,)
    SourceInfo(data-url/src/lib.rs:330:5-330:39)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:5-330:39)
      kind: _106 = <F as core::ops::FnMut<(&[u8],)>>::call_mut(move _107, move _108) -> [return: bb62, unwind: bb91]
  }
  preds [bb11]
  succs [bb62, bb91]

bb62
  0: StorageDead(_109)
    SourceInfo(data-url/src/lib.rs:330:38-330:39)
  1: StorageDead(_108)
    SourceInfo(data-url/src/lib.rs:330:38-330:39)
  2: StorageDead(_107)
    SourceInfo(data-url/src/lib.rs:330:38-330:39)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:5-330:40)
      kind: _105 = <core::result::Result<(), E> as core::ops::Try>::branch(move _106) -> [return: bb63, unwind: bb82]
  }
  preds [bb61]
  succs [bb63, bb82]

bb63
  0: StorageDead(_106)
    SourceInfo(data-url/src/lib.rs:330:39-330:40)
  1: PlaceMention(_105)
    SourceInfo(data-url/src/lib.rs:330:5-330:40)
  2: _115 = discriminant(_105)
    SourceInfo(data-url/src/lib.rs:330:5-330:40)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:5-330:40)
      kind: switchInt(move _115) -> [0: bb66, 1: bb65, otherwise: bb64]
  }
  preds [bb62]
  succs [bb64, bb65, bb66]

bb64
  0: FakeRead(ForMatchedPlace(None), _105)
    SourceInfo(data-url/src/lib.rs:330:5-330:40)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:5-330:40)
      kind: unreachable
  }
  preds [bb63]
  succs []

bb65
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:39-330:40)
      kind: falseEdge -> [real: bb67, imaginary: bb66]
  }
  preds [bb63]
  succs [bb66, bb67]

bb66
  0: StorageLive(_119)
    SourceInfo(data-url/src/lib.rs:330:5-330:40)
  1: _119 = ((_105 as Continue).0: ())
    SourceInfo(data-url/src/lib.rs:330:5-330:40)
  2: _104 = _119
    SourceInfo(data-url/src/lib.rs:330:5-330:40)
  3: StorageDead(_119)
    SourceInfo(data-url/src/lib.rs:330:39-330:40)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:40-330:41)
      kind: drop(_105) -> [return: bb69, unwind: bb91]
  }
  preds [bb63, bb65]
  succs [bb69, bb91]

bb67
  0: StorageLive(_116)
    SourceInfo(data-url/src/lib.rs:330:39-330:40)
  1: _116 = move ((_105 as Break).0: core::result::Result<core::convert::Infallible, E>)
    SourceInfo(data-url/src/lib.rs:330:39-330:40)
  2: StorageLive(_118)
    SourceInfo(data-url/src/lib.rs:330:39-330:40)
  3: _118 = move _116
    SourceInfo(data-url/src/lib.rs:330:39-330:40)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:5-330:40)
      kind: _0 = <core::result::Result<core::option::Option<FragmentIdentifier<'_>>, E> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, E>>>::from_residual(move _118) -> [return: bb68, unwind: bb79]
  }
  preds [bb65]
  succs [bb68, bb79]

bb68
  0: StorageDead(_118)
    SourceInfo(data-url/src/lib.rs:330:39-330:40)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:39-330:40)
      kind: drop(_116) -> [return: bb70, unwind: bb81]
  }
  preds [bb67]
  succs [bb70, bb81]

bb69
  0: StorageDead(_111)
    SourceInfo(data-url/src/lib.rs:330:40-330:41)
  1: StorageDead(_110)
    SourceInfo(data-url/src/lib.rs:330:40-330:41)
  2: StorageDead(_105)
    SourceInfo(data-url/src/lib.rs:330:40-330:41)
  3: StorageDead(_104)
    SourceInfo(data-url/src/lib.rs:330:40-330:41)
  4: StorageLive(_120)
    SourceInfo(data-url/src/lib.rs:331:8-331:12)
  5: _120 = core::option::Option::<FragmentIdentifier<'_>>::None
    SourceInfo(data-url/src/lib.rs:331:8-331:12)
  6: _0 = core::result::Result::<core::option::Option<FragmentIdentifier<'_>>, E>::Ok(move _120)
    SourceInfo(data-url/src/lib.rs:331:5-331:13)
  7: StorageDead(_120)
    SourceInfo(data-url/src/lib.rs:331:12-331:13)
  8: StorageDead(_5)
    SourceInfo(data-url/src/lib.rs:332:1-332:2)
  9: StorageDead(_3)
    SourceInfo(data-url/src/lib.rs:332:1-332:2)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:332:1-332:2)
      kind: drop(_2) -> [return: bb78, unwind: bb92]
  }
  preds [bb66]
  succs [bb78, bb92]

bb70
  0: StorageDead(_116)
    SourceInfo(data-url/src/lib.rs:330:39-330:40)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:40-330:41)
      kind: drop(_105) -> [return: bb71, unwind: bb91]
  }
  preds [bb68]
  succs [bb71, bb91]

bb71
  0: StorageDead(_111)
    SourceInfo(data-url/src/lib.rs:330:40-330:41)
  1: StorageDead(_110)
    SourceInfo(data-url/src/lib.rs:330:40-330:41)
  2: StorageDead(_105)
    SourceInfo(data-url/src/lib.rs:330:40-330:41)
  3: StorageDead(_104)
    SourceInfo(data-url/src/lib.rs:330:40-330:41)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb70]
  succs [bb77]

bb72
  0: StorageDead(_84)
    SourceInfo(data-url/src/lib.rs:311:49-311:50)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:311:50-311:51)
      kind: drop(_74) -> [return: bb73, unwind: bb91]
  }
  preds [bb50]
  succs [bb73, bb91]

bb73
  0: StorageDead(_81)
    SourceInfo(data-url/src/lib.rs:311:50-311:51)
  1: StorageDead(_80)
    SourceInfo(data-url/src/lib.rs:311:50-311:51)
  2: StorageDead(_74)
    SourceInfo(data-url/src/lib.rs:311:50-311:51)
  3: StorageDead(_73)
    SourceInfo(data-url/src/lib.rs:311:50-311:51)
  4: StorageDead(_65)
    SourceInfo(data-url/src/lib.rs:313:21-313:22)
  5: StorageDead(_64)
    SourceInfo(data-url/src/lib.rs:313:21-313:22)
  6: StorageDead(_63)
    SourceInfo(data-url/src/lib.rs:313:21-313:22)
  7: StorageDead(_51)
    SourceInfo(data-url/src/lib.rs:317:17-317:18)
  8: StorageDead(_44)
    SourceInfo(data-url/src/lib.rs:317:17-317:18)
  9: StorageDead(_58)
    SourceInfo(data-url/src/lib.rs:317:17-317:18)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb72]
  succs [bb76]

bb74
  0: StorageDead(_39)
    SourceInfo(data-url/src/lib.rs:300:52-300:53)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:53-300:54)
      kind: drop(_27) -> [return: bb75, unwind: bb91]
  }
  preds [bb25]
  succs [bb75, bb91]

bb75
  0: StorageDead(_33)
    SourceInfo(data-url/src/lib.rs:300:53-300:54)
  1: StorageDead(_32)
    SourceInfo(data-url/src/lib.rs:300:53-300:54)
  2: StorageDead(_27)
    SourceInfo(data-url/src/lib.rs:300:53-300:54)
  3: StorageDead(_26)
    SourceInfo(data-url/src/lib.rs:300:53-300:54)
  4: StorageDead(_23)
    SourceInfo(data-url/src/lib.rs:302:13-302:14)
  5: StorageDead(_22)
    SourceInfo(data-url/src/lib.rs:302:13-302:14)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb74]
  succs [bb76]

bb76
  0: StorageDead(_21)
    SourceInfo(data-url/src/lib.rs:328:9-328:10)
  1: StorageDead(_20)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  2: StorageDead(_19)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  3: StorageDead(_16)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  4: StorageDead(_14)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  5: StorageDead(_13)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  6: StorageDead(_11)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  7: StorageDead(_7)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  8: StorageDead(_6)
    SourceInfo(data-url/src/lib.rs:329:5-329:6)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb57, bb73, bb75]
  succs [bb77]

bb77
  0: StorageDead(_5)
    SourceInfo(data-url/src/lib.rs:332:1-332:2)
  1: StorageDead(_3)
    SourceInfo(data-url/src/lib.rs:332:1-332:2)
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:332:1-332:2)
      kind: drop(_2) -> [return: bb78, unwind: bb92]
  }
  preds [bb71, bb76]
  succs [bb78, bb92]

bb78
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:332:2-332:2)
      kind: return
  }
  preds [bb69, bb77]
  succs []

bb79
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:39-330:40)
      kind: drop(_118) -> [return: bb80, unwind terminate(cleanup)]
  }
  preds [bb67]
  succs [bb80]

bb80
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:39-330:40)
      kind: drop(_116) -> [return: bb81, unwind terminate(cleanup)]
  }
  preds [bb79]
  succs [bb81]

bb81
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:40-330:41)
      kind: drop(_105) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb68, bb80]
  succs [bb91]

bb82
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:330:39-330:40)
      kind: drop(_106) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb62]
  succs [bb91]

bb83
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:311:49-311:50)
      kind: drop(_86) -> [return: bb84, unwind terminate(cleanup)]
  }
  preds [bb49]
  succs [bb84]

bb84
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:311:49-311:50)
      kind: drop(_84) -> [return: bb85, unwind terminate(cleanup)]
  }
  preds [bb83]
  succs [bb85]

bb85
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:311:50-311:51)
      kind: drop(_74) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb50, bb84]
  succs [bb91]

bb86
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:311:49-311:50)
      kind: drop(_75) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb44]
  succs [bb91]

bb87
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:52-300:53)
      kind: drop(_41) -> [return: bb88, unwind terminate(cleanup)]
  }
  preds [bb24]
  succs [bb88]

bb88
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:52-300:53)
      kind: drop(_39) -> [return: bb89, unwind terminate(cleanup)]
  }
  preds [bb87]
  succs [bb89]

bb89
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:53-300:54)
      kind: drop(_27) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb25, bb88]
  succs [bb91]

bb90
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:300:52-300:53)
      kind: drop(_28) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb91]

bb91
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:332:1-332:2)
      kind: drop(_2) -> [return: bb92, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb6, bb11, bb17, bb18, bb23, bb29, bb32, bb33, bb34, bb35, bb36, bb37, bb41, bb42, bb43, bb48, bb51, bb55, bb56, bb61, bb66, bb70, bb72, bb74, bb81, bb82, bb85, bb86, bb89, bb90]
  succs [bb92]

bb92
  Terminator {
      source_info: SourceInfo(data-url/src/lib.rs:283:1-332:2)
      kind: resume
  }
  preds [bb69, bb77, bb91]
  succs []

