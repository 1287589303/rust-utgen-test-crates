{
  "data-url/src/forgiving_base64.rs:112:16:112:25": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "value < 0",
          "lhs": "value",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "data-url/src/forgiving_base64.rs:142:17:142:83": [
    {
      "Try": "(self.write_bytes)(&byte_buffer).map_err(DecodeError::WriteError)?"
    }
  ],
  "data-url/src/forgiving_base64.rs:139:21:139:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.bit_buffer >> 8)",
          "lhs": "self.bit_buffer",
          "rhs": "8",
          "cmp_with_int": true
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:457:9:460:10": [
    {
      "Match": {
        "match_source": "data-url/src/forgiving_base64.rs:116:29:116:33",
        "match_str": "byte",
        "match_kind": "Other",
        "arms": {
          "data-url/src/forgiving_base64.rs:116:50:116:55": {
            "pat": {
              "pat_str": "b'\\n'",
              "kind": {
                "Other": 10
              }
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:58:116:63": {
            "pat": {
              "pat_str": "b'\\r'",
              "kind": {
                "Other": 13
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:66:116:73": {
            "pat": {
              "pat_str": "b'\\x0C'",
              "kind": {
                "Other": 12
              }
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:42:116:47": {
            "pat": {
              "pat_str": "b'\\t'",
              "kind": {
                "Other": 9
              }
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:35:116:39": {
            "pat": {
              "pat_str": "b' '",
              "kind": {
                "Other": 32
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "data-url/src/forgiving_base64.rs:116:29:116:33",
        "match_str": "byte",
        "match_kind": "Other",
        "arms": {
          "data-url/src/forgiving_base64.rs:116:66:116:73": {
            "pat": {
              "pat_str": "b'\\x0C'",
              "kind": {
                "Other": 12
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:58:116:63": {
            "pat": {
              "pat_str": "b'\\r'",
              "kind": {
                "Other": 13
              }
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:50:116:55": {
            "pat": {
              "pat_str": "b'\\n'",
              "kind": {
                "Other": 10
              }
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:35:116:39": {
            "pat": {
              "pat_str": "b' '",
              "kind": {
                "Other": 32
              }
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:42:116:47": {
            "pat": {
              "pat_str": "b'\\t'",
              "kind": {
                "Other": 9
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "data-url/src/forgiving_base64.rs:110:22:110:34": [
    {
      "For": {
        "iter_var": "&byte",
        "iter_range": "input.iter()"
      }
    }
  ],
  "data-url/src/forgiving_base64.rs:133:16:133:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "self.buffer_bit_length < 18",
          "lhs": "self.buffer_bit_length",
          "rhs": "18",
          "cmp_with_int": true
        }
      }
    }
  ],
  "data-url/src/forgiving_base64.rs:138:21:138:44": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.bit_buffer >> 16)",
          "lhs": "self.bit_buffer",
          "rhs": "16",
          "cmp_with_int": true
        }
      }
    }
  ],
  "data-url/src/forgiving_base64.rs:120:20:120:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "byte == b'='",
          "lhs": "byte",
          "rhs": "b'='",
          "cmp_with_int": true
        }
      }
    }
  ],
  "data-url/src/forgiving_base64.rs:116:29:116:33": [
    {
      "Match": {
        "match_source": "data-url/src/forgiving_base64.rs:116:29:116:33",
        "match_str": "byte",
        "match_kind": "Other",
        "arms": {
          "data-url/src/forgiving_base64.rs:116:50:116:55": {
            "pat": {
              "pat_str": "b'\\n'",
              "kind": {
                "Other": 10
              }
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:58:116:63": {
            "pat": {
              "pat_str": "b'\\r'",
              "kind": {
                "Other": 13
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:66:116:73": {
            "pat": {
              "pat_str": "b'\\x0C'",
              "kind": {
                "Other": 12
              }
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:42:116:47": {
            "pat": {
              "pat_str": "b'\\t'",
              "kind": {
                "Other": 9
              }
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:35:116:39": {
            "pat": {
              "pat_str": "b' '",
              "kind": {
                "Other": 32
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "data-url/src/forgiving_base64.rs:116:29:116:33",
        "match_str": "byte",
        "match_kind": "Other",
        "arms": {
          "data-url/src/forgiving_base64.rs:116:66:116:73": {
            "pat": {
              "pat_str": "b'\\x0C'",
              "kind": {
                "Other": 12
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:58:116:63": {
            "pat": {
              "pat_str": "b'\\r'",
              "kind": {
                "Other": 13
              }
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:50:116:55": {
            "pat": {
              "pat_str": "b'\\n'",
              "kind": {
                "Other": 10
              }
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:35:116:39": {
            "pat": {
              "pat_str": "b' '",
              "kind": {
                "Other": 32
              }
            },
            "guard": null,
            "body_source": null
          },
          "data-url/src/forgiving_base64.rs:116:42:116:47": {
            "pat": {
              "pat_str": "b'\\t'",
              "kind": {
                "Other": 9
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "data-url/src/forgiving_base64.rs:127:16:127:40": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "self.padding_symbols > 0",
          "lhs": "self.padding_symbols",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ]
}