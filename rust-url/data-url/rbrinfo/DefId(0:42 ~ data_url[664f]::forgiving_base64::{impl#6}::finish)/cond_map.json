{
  "data-url/src/forgiving_base64.rs:166:36:166:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.bit_buffer >> 10)",
          "lhs": "self.bit_buffer",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "data-url/src/forgiving_base64.rs:166:67:166:89": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.bit_buffer >> 2)",
          "lhs": "self.bit_buffer",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "data-url/src/forgiving_base64.rs:160:36:160:58": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.bit_buffer >> 4)",
          "lhs": "self.bit_buffer",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "data-url/src/forgiving_base64.rs:167:17:167:83": [
    {
      "Try": "(self.write_bytes)(&byte_buffer).map_err(DecodeError::WriteError)?"
    }
  ],
  "data-url/src/forgiving_base64.rs:153:15:153:61": [
    {
      "Match": {
        "match_source": "data-url/src/forgiving_base64.rs:153:15:153:61",
        "match_str": "(self.buffer_bit_length, self.padding_symbols)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "data-url/src/forgiving_base64.rs:157:13:157:20": {
            "pat": {
              "pat_str": "(12, 2)",
              "kind": {
                "StructLike": {
                  "0": [
                    12,
                    "data-url/src/forgiving_base64.rs:157:14:157:16"
                  ],
                  "1": [
                    2,
                    "data-url/src/forgiving_base64.rs:157:18:157:19"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "data-url/src/forgiving_base64.rs:157:34:162:14"
          },
          "data-url/src/forgiving_base64.rs:157:23:157:30": {
            "pat": {
              "pat_str": "(12, 0)",
              "kind": {
                "StructLike": {
                  "1": [
                    0,
                    "data-url/src/forgiving_base64.rs:157:28:157:29"
                  ],
                  "0": [
                    12,
                    "data-url/src/forgiving_base64.rs:157:24:157:26"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "data-url/src/forgiving_base64.rs:157:34:162:14"
          },
          "data-url/src/forgiving_base64.rs:163:23:163:30": {
            "pat": {
              "pat_str": "(18, 0)",
              "kind": {
                "StructLike": {
                  "0": [
                    18,
                    "data-url/src/forgiving_base64.rs:163:24:163:26"
                  ],
                  "1": [
                    0,
                    "data-url/src/forgiving_base64.rs:163:28:163:29"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "data-url/src/forgiving_base64.rs:163:34:168:14"
          },
          "data-url/src/forgiving_base64.rs:163:13:163:20": {
            "pat": {
              "pat_str": "(18, 1)",
              "kind": {
                "StructLike": {
                  "0": [
                    18,
                    "data-url/src/forgiving_base64.rs:163:14:163:16"
                  ],
                  "1": [
                    1,
                    "data-url/src/forgiving_base64.rs:163:18:163:19"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "data-url/src/forgiving_base64.rs:163:34:168:14"
          },
          "data-url/src/forgiving_base64.rs:169:13:169:19": {
            "pat": {
              "pat_str": "(6, _)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "data-url/src/forgiving_base64.rs:169:17:169:18"
                  ],
                  "0": [
                    6,
                    "data-url/src/forgiving_base64.rs:169:14:169:15"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "data-url/src/forgiving_base64.rs:169:23:169:82"
          },
          "data-url/src/forgiving_base64.rs:170:13:170:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "data-url/src/forgiving_base64.rs:170:18:170:66"
          },
          "data-url/src/forgiving_base64.rs:154:13:154:19": {
            "pat": {
              "pat_str": "(0, 0)",
              "kind": {
                "StructLike": {
                  "1": [
                    0,
                    "data-url/src/forgiving_base64.rs:154:17:154:18"
                  ],
                  "0": [
                    0,
                    "data-url/src/forgiving_base64.rs:154:14:154:15"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "data-url/src/forgiving_base64.rs:154:23:156:14"
          }
        }
      }
    }
  ],
  "data-url/src/forgiving_base64.rs:161:17:161:83": [
    {
      "Try": "(self.write_bytes)(&byte_buffer).map_err(DecodeError::WriteError)?"
    }
  ]
}