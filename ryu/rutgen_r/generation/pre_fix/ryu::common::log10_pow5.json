{
  "name": "ryu::common::log10_pow5",
  "mod_info": {
    "name": "common",
    "loc": "src/lib.rs:107:1:107:12"
  },
  "visible": true,
  "loc": "src/common.rs:90:1:95:2",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "precondition: e >= 0 at line 92 is true, with bound e == 0\n",
        "precondition: e <= 2620 at line 93 is true, with bound e == 2620\n",
        "expected return value/type: (e as u32 * 732923) >> 20\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let e = 0;",
                "    let expected = (e as u32 * 732923) >> 20;",
                "    assert_eq!(ryu::log10_pow5(e), expected);",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let e = 2620;",
                "    let expected = (e as u32 * 732923) >> 20;",
                "    assert_eq!(ryu::log10_pow5(e), expected);",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 2,
      "prompt_conds": [
        "precondition: e >= 0 at line 92 is true, with bound e == 0\n",
        "precondition: e <= 2620 at line 93 is false\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [
            "#[should_panic]",
            "fn test_log10_pow5_upper_bound() {",
            "    ryu::log10_pow5(2621); // This should panic due to the second debug_assert.",
            "}"
          ],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let result = ryu::log10_pow5(0);",
                "    assert_eq!(result, 0);",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 3,
      "prompt_conds": [
        "precondition: e >= 0 at line 92 is false\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [
            "#[should_panic]",
            "fn test_log10_pow5_negative_input() {",
            "    let e: i32 = -1;",
            "    let _ = log10_pow5(e);",
            "}",
            "",
            "#[should_panic]",
            "fn test_log10_pow5_negative_boundary() {",
            "    let e: i32 = -2620;",
            "    let _ = log10_pow5(e);",
            "}"
          ],
          "chain_tests": []
        }
      ]
    }
  ]
}