[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let value = 0;",
          "    let _ = pow5_factor(value);",
          "}"
        ],
        "oracle": [
          "    #[should_panic]",
          "    let value_zero = 0;",
          "    let result = pow5_factor(value_zero);"
        ],
        "code": [
          "{",
          "    let value = 0;",
          "    let _ = pow5_factor(value);",
          "    #[should_panic]",
          "    let value_zero = 0;",
          "    let result = pow5_factor(value_zero);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let values = [1, 2, 3, 4, 5, 10, 20, 100, 3689348814741910322];",
          "    for &value in &values {",
          "        let _ = pow5_factor(value);",
          "    }",
          "}"
        ],
        "oracle": [
          "    assert_eq!(pow5_factor(1), 0);",
          "    assert_eq!(pow5_factor(2), 0);",
          "    assert_eq!(pow5_factor(3), 0);",
          "    assert_eq!(pow5_factor(4), 0);",
          "    assert_eq!(pow5_factor(5), 0);",
          "    assert_eq!(pow5_factor(10), 0);",
          "    assert_eq!(pow5_factor(20), 0);",
          "    assert_eq!(pow5_factor(100), 0);",
          "    assert_eq!(pow5_factor(3689348814741910322), 12);"
        ],
        "code": [
          "{",
          "    let values = [1, 2, 3, 4, 5, 10, 20, 100, 3689348814741910322];",
          "    for &value in &values {",
          "        let _ = pow5_factor(value);",
          "    }",
          "    assert_eq!(pow5_factor(1), 0);",
          "    assert_eq!(pow5_factor(2), 0);",
          "    assert_eq!(pow5_factor(3), 0);",
          "    assert_eq!(pow5_factor(4), 0);",
          "    assert_eq!(pow5_factor(5), 0);",
          "    assert_eq!(pow5_factor(10), 0);",
          "    assert_eq!(pow5_factor(20), 0);",
          "    assert_eq!(pow5_factor(100), 0);",
          "    assert_eq!(pow5_factor(3689348814741910322), 12);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let values = [3689348814741910323, 3689348814741910324];",
          "    for &value in &values {",
          "        let _ = pow5_factor(value);",
          "    }",
          "}"
        ],
        "oracle": [
          "    assert_eq!(pow5_factor(3689348814741910323), 0);",
          "    assert_eq!(pow5_factor(3689348814741910324), 1);"
        ],
        "code": [
          "{",
          "    let values = [3689348814741910323, 3689348814741910324];",
          "    for &value in &values {",
          "        let _ = pow5_factor(value);",
          "    }",
          "    assert_eq!(pow5_factor(3689348814741910323), 0);",
          "    assert_eq!(pow5_factor(3689348814741910324), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]