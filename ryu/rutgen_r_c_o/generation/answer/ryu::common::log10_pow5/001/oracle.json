[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let e: i32 = 0;",
          "    let result = log10_pow5(e);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(log10_pow5(0), 0);  // e = 0, expected return value is 0",
          "    assert_eq!(log10_pow5(2620), 732923 >> 20);  // e = 2620, expected return value is 732923 shifted right by 20"
        ],
        "code": [
          "{",
          "    let e: i32 = 0;",
          "    let result = log10_pow5(e);",
          "    assert_eq!(log10_pow5(0), 0);  // e = 0, expected return value is 0",
          "    assert_eq!(log10_pow5(2620), 732923 >> 20);  // e = 2620, expected return value is 732923 shifted right by 20",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let e: i32 = 2620;",
          "    let result = log10_pow5(e);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 172229);"
        ],
        "code": [
          "{",
          "    let e: i32 = 2620;",
          "    let result = log10_pow5(e);",
          "    assert_eq!(result, 172229);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let e: i32 = 1310;",
          "    let result = log10_pow5(e);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(log10_pow5(0), 0);",
          "    assert_eq!(log10_pow5(2620), 732923);",
          "    assert_eq!(log10_pow5(1310), 144651);"
        ],
        "code": [
          "{",
          "    let e: i32 = 1310;",
          "    let result = log10_pow5(e);",
          "    assert_eq!(log10_pow5(0), 0);",
          "    assert_eq!(log10_pow5(2620), 732923);",
          "    assert_eq!(log10_pow5(1310), 144651);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let e: i32 = 1;",
          "    let result = log10_pow5(e);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(log10_pow5(0), 0);",
          "    assert_eq!(log10_pow5(2620), 732923 * 2620 >> 20);",
          "    assert!(log10_pow5(1) > 0);",
          "    assert!(log10_pow5(5) > log10_pow5(0));",
          "    assert!(log10_pow5(2620) > log10_pow5(1000));",
          "    assert!(log10_pow5(2620) > log10_pow5(2000));",
          "    assert!(log10_pow5(0) == 0);"
        ],
        "code": [
          "{",
          "    let e: i32 = 1;",
          "    let result = log10_pow5(e);",
          "    assert_eq!(log10_pow5(0), 0);",
          "    assert_eq!(log10_pow5(2620), 732923 * 2620 >> 20);",
          "    assert!(log10_pow5(1) > 0);",
          "    assert!(log10_pow5(5) > log10_pow5(0));",
          "    assert!(log10_pow5(2620) > log10_pow5(1000));",
          "    assert!(log10_pow5(2620) > log10_pow5(2000));",
          "    assert!(log10_pow5(0) == 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let e: i32 = 2619;",
          "    let result = log10_pow5(e);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(log10_pow5(0), 0);",
          "    assert_eq!(log10_pow5(2620), 732923);",
          "    assert_eq!(log10_pow5(2619), 732922);"
        ],
        "code": [
          "{",
          "    let e: i32 = 2619;",
          "    let result = log10_pow5(e);",
          "    assert_eq!(log10_pow5(0), 0);",
          "    assert_eq!(log10_pow5(2620), 732923);",
          "    assert_eq!(log10_pow5(2619), 732922);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]