[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = log10_pow5(-1);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_err());",
          "    assert_eq!(result.unwrap_err(), \"assertion failed: e >= 0\");"
        ],
        "code": [
          "{",
          "    let result = log10_pow5(-1);",
          "    assert!(result.is_err());",
          "    assert_eq!(result.unwrap_err(), \"assertion failed: e >= 0\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = log10_pow5(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(log10_pow5(0), 0);",
          "    assert_eq!(log10_pow5(1), 34);",
          "    assert_eq!(log10_pow5(2620), 732923);",
          "    assert_eq!(log10_pow5(5), 183);",
          "    assert_eq!(log10_pow5(2621), panic!());"
        ],
        "code": [
          "{",
          "    let result = log10_pow5(0);",
          "    assert_eq!(log10_pow5(0), 0);",
          "    assert_eq!(log10_pow5(1), 34);",
          "    assert_eq!(log10_pow5(2620), 732923);",
          "    assert_eq!(log10_pow5(5), 183);",
          "    assert_eq!(log10_pow5(2621), panic!());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = log10_pow5(1);",
          "}"
        ],
        "oracle": [
          "    let result = log10_pow5(-1);",
          "    assert_eq!(result, 0);",
          "    let result = log10_pow5(0);",
          "    assert_eq!(result, 0);",
          "    let result = log10_pow5(2620);",
          "    assert_eq!(result, 732923);",
          "    let result = log10_pow5(2630);",
          "    assert!(std::panic::catch_unwind(|| log10_pow5(2630)).is_err());",
          "    let result = log10_pow5(5);",
          "    assert_eq!(result, 36);",
          "    let result = log10_pow5(10);",
          "    assert_eq!(result, 73);"
        ],
        "code": [
          "{",
          "    let result = log10_pow5(1);",
          "    let result = log10_pow5(-1);",
          "    assert_eq!(result, 0);",
          "    let result = log10_pow5(0);",
          "    assert_eq!(result, 0);",
          "    let result = log10_pow5(2620);",
          "    assert_eq!(result, 732923);",
          "    let result = log10_pow5(2630);",
          "    assert!(std::panic::catch_unwind(|| log10_pow5(2630)).is_err());",
          "    let result = log10_pow5(5);",
          "    assert_eq!(result, 36);",
          "    let result = log10_pow5(10);",
          "    assert_eq!(result, 73);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = log10_pow5(2620);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(log10_pow5(0), 0);",
          "    assert_eq!(log10_pow5(1), 0);",
          "    assert_eq!(log10_pow5(2), 0);",
          "    assert_eq!(log10_pow5(2620), 732923);",
          "    assert_eq!(log10_pow5(5), 0);",
          "    assert_eq!(log10_pow5(1000), 354);",
          "    assert_eq!(log10_pow5(2000), 709);",
          "    assert_eq!(log10_pow5(2621), panic);"
        ],
        "code": [
          "{",
          "    let result = log10_pow5(2620);",
          "    assert_eq!(log10_pow5(0), 0);",
          "    assert_eq!(log10_pow5(1), 0);",
          "    assert_eq!(log10_pow5(2), 0);",
          "    assert_eq!(log10_pow5(2620), 732923);",
          "    assert_eq!(log10_pow5(5), 0);",
          "    assert_eq!(log10_pow5(1000), 354);",
          "    assert_eq!(log10_pow5(2000), 709);",
          "    assert_eq!(log10_pow5(2621), panic);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = log10_pow5(2621);",
          "}"
        ],
        "oracle": [
          "    debug_assert!(2621 >= 0);",
          "    debug_assert!(2621 <= 2620);",
          "    assert_eq!(log10_pow5(2621), expected_value);",
          "    expected_value = (2621 as u32 * 732923) >> 20;"
        ],
        "code": [
          "{",
          "    let result = log10_pow5(2621);",
          "    debug_assert!(2621 >= 0);",
          "    debug_assert!(2621 <= 2620);",
          "    assert_eq!(log10_pow5(2621), expected_value);",
          "    expected_value = (2621 as u32 * 732923) >> 20;",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]