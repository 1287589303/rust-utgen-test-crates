[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = log10_pow5(0);",
          "}"
        ],
        "oracle": [
          "    let result = log10_pow5(0); assert_eq!(result, 0);"
        ],
        "code": [
          "{",
          "    let result = log10_pow5(0);",
          "    let result = log10_pow5(0); assert_eq!(result, 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = log10_pow5(1);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(log10_pow5(0), 0);",
          "    assert!(std::panic::catch_unwind(|| log10_pow5(2621)).is_err());",
          "    assert_eq!(log10_pow5(2620), 732923 >> 20);",
          "    assert_eq!(log10_pow5(5), 5 * 732923 >> 20);",
          "    assert_eq!(log10_pow5(1000), 1000 * 732923 >> 20);"
        ],
        "code": [
          "{",
          "    let result = log10_pow5(1);",
          "    assert_eq!(log10_pow5(0), 0);",
          "    assert!(std::panic::catch_unwind(|| log10_pow5(2621)).is_err());",
          "    assert_eq!(log10_pow5(2620), 732923 >> 20);",
          "    assert_eq!(log10_pow5(5), 5 * 732923 >> 20);",
          "    assert_eq!(log10_pow5(1000), 1000 * 732923 >> 20);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = log10_pow5(2620);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 732923);"
        ],
        "code": [
          "{",
          "    let result = log10_pow5(2620);",
          "    assert_eq!(result, 732923);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let result = log10_pow5(2621);",
          "}"
        ],
        "oracle": [
          "    assert!(std::panic::catch_unwind(|| log10_pow5(2621)).is_err());"
        ],
        "code": [
          "{",
          "    let result = log10_pow5(2621);",
          "    assert!(std::panic::catch_unwind(|| log10_pow5(2621)).is_err());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]