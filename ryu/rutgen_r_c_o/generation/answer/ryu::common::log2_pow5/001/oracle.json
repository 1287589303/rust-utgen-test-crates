[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = log2_pow5(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(log2_pow5(0), 0);",
          "    let result = log2_pow5(3528);",
          "    assert_eq!(result, ((3528 as u32 * 1217359) >> 19) as i32);"
        ],
        "code": [
          "{",
          "    let result = log2_pow5(0);",
          "    assert_eq!(log2_pow5(0), 0);",
          "    let result = log2_pow5(3528);",
          "    assert_eq!(result, ((3528 as u32 * 1217359) >> 19) as i32);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = log2_pow5(1);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(log2_pow5(0), 0);",
          "    assert_eq!(log2_pow5(3528), 67108863);",
          "    assert_eq!(log2_pow5(1), 647);",
          "    assert_eq!(log2_pow5(3527), 67108796);",
          "    assert!(std::panic::catch_unwind(|| log2_pow5(-1)).is_err());",
          "    assert!(std::panic::catch_unwind(|| log2_pow5(3529)).is_err());"
        ],
        "code": [
          "{",
          "    let result = log2_pow5(1);",
          "    assert_eq!(log2_pow5(0), 0);",
          "    assert_eq!(log2_pow5(3528), 67108863);",
          "    assert_eq!(log2_pow5(1), 647);",
          "    assert_eq!(log2_pow5(3527), 67108796);",
          "    assert!(std::panic::catch_unwind(|| log2_pow5(-1)).is_err());",
          "    assert!(std::panic::catch_unwind(|| log2_pow5(3529)).is_err());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = log2_pow5(3528);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, ((3528 as u32 * 1217359) >> 19) as i32);",
          "    let result_zero = log2_pow5(0);",
          "    assert_eq!(result_zero, ((0 as u32 * 1217359) >> 19) as i32);"
        ],
        "code": [
          "{",
          "    let result = log2_pow5(3528);",
          "    assert_eq!(result, ((3528 as u32 * 1217359) >> 19) as i32);",
          "    let result_zero = log2_pow5(0);",
          "    assert_eq!(result_zero, ((0 as u32 * 1217359) >> 19) as i32);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let result = log2_pow5(3529);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(log2_pow5(0), 0);",
          "    assert_eq!(log2_pow5(3528), 2097151);",
          "    assert!(std::panic::catch_unwind(|| log2_pow5(3529)).is_err());"
        ],
        "code": [
          "{",
          "    let result = log2_pow5(3529);",
          "    assert_eq!(log2_pow5(0), 0);",
          "    assert_eq!(log2_pow5(3528), 2097151);",
          "    assert!(std::panic::catch_unwind(|| log2_pow5(3529)).is_err());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let result = log2_pow5(-1);",
          "}"
        ],
        "oracle": [
          "    assert!(std::panic::catch_unwind(|| log2_pow5(-1)).is_err());",
          "    assert_eq!(log2_pow5(0), 0);",
          "    assert_eq!(log2_pow5(3528), ((3528 as u32 * 1217359) >> 19) as i32);"
        ],
        "code": [
          "{",
          "    let result = log2_pow5(-1);",
          "    assert!(std::panic::catch_unwind(|| log2_pow5(-1)).is_err());",
          "    assert_eq!(log2_pow5(0), 0);",
          "    assert_eq!(log2_pow5(3528), ((3528 as u32 * 1217359) >> 19) as i32);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let result = log2_pow5(4000);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(log2_pow5(0), 0);",
          "    assert_eq!(log2_pow5(3528), ((3528 as u32 * 1217359) >> 19) as i32);",
          "    assert!(std::panic::catch_unwind(|| log2_pow5(4000)).is_err());"
        ],
        "code": [
          "{",
          "    let result = log2_pow5(4000);",
          "    assert_eq!(log2_pow5(0), 0);",
          "    assert_eq!(log2_pow5(3528), ((3528 as u32 * 1217359) >> 19) as i32);",
          "    assert!(std::panic::catch_unwind(|| log2_pow5(4000)).is_err());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]