[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = pow5factor_32(5);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 0);",
          "    assert_eq!(result, pow5factor_32(125));",
          "    assert_eq!(result, pow5factor_32(25));",
          "    assert_eq!(result, pow5factor_32(1));",
          "    assert_eq!(result, pow5factor_32(10));"
        ],
        "code": [
          "{",
          "    let result = pow5factor_32(5);",
          "    assert_eq!(result, 0);",
          "    assert_eq!(result, pow5factor_32(125));",
          "    assert_eq!(result, pow5factor_32(25));",
          "    assert_eq!(result, pow5factor_32(1));",
          "    assert_eq!(result, pow5factor_32(10));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = pow5factor_32(10);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 1);",
          "    assert!(result.is::<u32>());",
          "    assert!(result >= 0);",
          "    assert!(result <= 32);",
          "    assert_ne!(result, 0);",
          "    assert_eq!(pow5factor_32(25), 2);",
          "    assert_eq!(pow5factor_32(100), 2);",
          "    assert_eq!(pow5factor_32(1), 0);",
          "    assert_eq!(pow5factor_32(5), 1);",
          "    assert_eq!(pow5factor_32(15), 1);",
          "    assert!(pow5factor_32(30) < 3);",
          "    assert!(pow5factor_32(0xFFFFFFFF) >= 0);",
          "    assert!(pow5factor_32(3125) == 5);"
        ],
        "code": [
          "{",
          "    let result = pow5factor_32(10);",
          "    assert_eq!(result, 1);",
          "    assert!(result.is::<u32>());",
          "    assert!(result >= 0);",
          "    assert!(result <= 32);",
          "    assert_ne!(result, 0);",
          "    assert_eq!(pow5factor_32(25), 2);",
          "    assert_eq!(pow5factor_32(100), 2);",
          "    assert_eq!(pow5factor_32(1), 0);",
          "    assert_eq!(pow5factor_32(5), 1);",
          "    assert_eq!(pow5factor_32(15), 1);",
          "    assert!(pow5factor_32(30) < 3);",
          "    assert!(pow5factor_32(0xFFFFFFFF) >= 0);",
          "    assert!(pow5factor_32(3125) == 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = pow5factor_32(25);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 2);"
        ],
        "code": [
          "{",
          "    let result = pow5factor_32(25);",
          "    assert_eq!(result, 2);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = pow5factor_32(125);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 3);"
        ],
        "code": [
          "{",
          "    let result = pow5factor_32(125);",
          "    assert_eq!(result, 3);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = pow5factor_32(625);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 4);"
        ],
        "code": [
          "{",
          "    let result = pow5factor_32(625);",
          "    assert_eq!(result, 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = pow5factor_32(3125);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 5);"
        ],
        "code": [
          "{",
          "    let result = pow5factor_32(3125);",
          "    assert_eq!(result, 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = pow5factor_32(4);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 0);"
        ],
        "code": [
          "{",
          "    let result = pow5factor_32(4);",
          "    assert_eq!(result, 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = pow5factor_32(9);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 0);"
        ],
        "code": [
          "{",
          "    let result = pow5factor_32(9);",
          "    assert_eq!(result, 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = pow5factor_32(24);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 0);",
          "    assert!(result <= 32);",
          "    assert!(result >= 0);"
        ],
        "code": [
          "{",
          "    let result = pow5factor_32(24);",
          "    assert_eq!(result, 0);",
          "    assert!(result <= 32);",
          "    assert!(result >= 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]