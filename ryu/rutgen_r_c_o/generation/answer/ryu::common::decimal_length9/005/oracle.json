[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let v = 10000;",
          "    let result = decimal_length9(v);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 5);"
        ],
        "code": [
          "{",
          "    let v = 10000;",
          "    let result = decimal_length9(v);",
          "    assert_eq!(result, 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let v = 9999;",
          "    let result = decimal_length9(v);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 5);"
        ],
        "code": [
          "{",
          "    let v = 9999;",
          "    let result = decimal_length9(v);",
          "    assert_eq!(result, 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let v = 10000;",
          "    let result = decimal_length9(v);",
          "}"
        ],
        "oracle": [
          "    assert!(result == 5);"
        ],
        "code": [
          "{",
          "    let v = 10000;",
          "    let result = decimal_length9(v);",
          "    assert!(result == 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let v = 10001;",
          "    let result = decimal_length9(v);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 5);"
        ],
        "code": [
          "{",
          "    let v = 10001;",
          "    let result = decimal_length9(v);",
          "    assert_eq!(result, 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let v = 99999;",
          "    let result = decimal_length9(v);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 5);"
        ],
        "code": [
          "{",
          "    let v = 99999;",
          "    let result = decimal_length9(v);",
          "    assert_eq!(result, 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let v = 100000;",
          "    let result = decimal_length9(v);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 5);"
        ],
        "code": [
          "{",
          "    let v = 100000;",
          "    let result = decimal_length9(v);",
          "    assert_eq!(result, 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let v = 999999;",
          "    let result = decimal_length9(v);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 5);"
        ],
        "code": [
          "{",
          "    let v = 999999;",
          "    let result = decimal_length9(v);",
          "    assert_eq!(result, 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let v = 1000000;",
          "    let result = decimal_length9(v);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(decimal_length9(10000), 5);"
        ],
        "code": [
          "{",
          "    let v = 1000000;",
          "    let result = decimal_length9(v);",
          "    assert_eq!(decimal_length9(10000), 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let v = 99999999;",
          "    let result = decimal_length9(v);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 5);"
        ],
        "code": [
          "{",
          "    let v = 99999999;",
          "    let result = decimal_length9(v);",
          "    assert_eq!(result, 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let v = 100000000;",
          "    let result = decimal_length9(v);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 5);"
        ],
        "code": [
          "{",
          "    let v = 100000000;",
          "    let result = decimal_length9(v);",
          "    assert_eq!(result, 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let v = 100000001;",
          "    let result = decimal_length9(v);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 5);"
        ],
        "code": [
          "{",
          "    let v = 100000001;",
          "    let result = decimal_length9(v);",
          "    assert_eq!(result, 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let v = 999999999;",
          "    let result = decimal_length9(v);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 5);"
        ],
        "code": [
          "{",
          "    let v = 999999999;",
          "    let result = decimal_length9(v);",
          "    assert_eq!(result, 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]