[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: f64 = f64::INFINITY;",
          "    let result = value.format_nonfinite();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, INFINITY);"
        ],
        "code": [
          "{",
          "    let value: f64 = f64::INFINITY;",
          "    let result = value.format_nonfinite();",
          "    assert_eq!(result, INFINITY);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: f64 = 0.1;",
          "    let result = value.format_nonfinite();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, \"inf\");"
        ],
        "code": [
          "{",
          "    let value: f64 = 0.1;",
          "    let result = value.format_nonfinite();",
          "    assert_eq!(result, \"inf\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: f64 = 1e308;",
          "    let result = value.format_nonfinite();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, INFINITY);"
        ],
        "code": [
          "{",
          "    let value: f64 = 1e308;",
          "    let result = value.format_nonfinite();",
          "    assert_eq!(result, INFINITY);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: f64 = 1.0;",
          "    let result = value.format_nonfinite();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, \"inf\");"
        ],
        "code": [
          "{",
          "    let value: f64 = 1.0;",
          "    let result = value.format_nonfinite();",
          "    assert_eq!(result, \"inf\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: f64 = 12345.6789;",
          "    let result = value.format_nonfinite();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, INFINITY);"
        ],
        "code": [
          "{",
          "    let value: f64 = 12345.6789;",
          "    let result = value.format_nonfinite();",
          "    assert_eq!(result, INFINITY);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: f64 = 1e-10;",
          "    let result = value.format_nonfinite();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, \"inf\");"
        ],
        "code": [
          "{",
          "    let value: f64 = 1e-10;",
          "    let result = value.format_nonfinite();",
          "    assert_eq!(result, \"inf\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: f64 = f64::EPSILON;",
          "    let result = value.format_nonfinite();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, INFINITY);"
        ],
        "code": [
          "{",
          "    let value: f64 = f64::EPSILON;",
          "    let result = value.format_nonfinite();",
          "    assert_eq!(result, INFINITY);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]