[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buffer: [u8; 4] = [0; 4];",
          "    let result_ptr = buffer.as_mut_ptr();",
          "    unsafe {",
          "        let k: isize = -100;",
          "        let _ = write_exponent2(k, result_ptr);",
          "    }",
          "}"
        ],
        "oracle": [
          "    *assert_eq!(buffer[0], b'-');*",
          "    *assert_eq!(buffer[1], DIGIT_TABLE[200]);*",
          "    *assert_eq!(buffer[2], DIGIT_TABLE[201]);*",
          "    *assert_eq!(_, 2);*"
        ],
        "code": [
          "{",
          "    let mut buffer: [u8; 4] = [0; 4];",
          "    let result_ptr = buffer.as_mut_ptr();",
          "    unsafe {",
          "        let k: isize = -100;",
          "        let _ = write_exponent2(k, result_ptr);",
          "    }",
          "    *assert_eq!(buffer[0], b'-');*",
          "    *assert_eq!(buffer[1], DIGIT_TABLE[200]);*",
          "    *assert_eq!(buffer[2], DIGIT_TABLE[201]);*",
          "    *assert_eq!(_, 2);*",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buffer: [u8; 4] = [0; 4];",
          "    let result_ptr = buffer.as_mut_ptr();",
          "    unsafe {",
          "        let k: isize = 100;",
          "        let _ = write_exponent2(k, result_ptr);",
          "    }",
          "}"
        ],
        "oracle": [
          "    *result_ptr should point to b'-' at buffer[0]",
          "    *result_ptr should not equal to buffer[1]",
          "    buffer[1] and buffer[2] should not be initialized",
          "    return value should be 3"
        ],
        "code": [
          "{",
          "    let mut buffer: [u8; 4] = [0; 4];",
          "    let result_ptr = buffer.as_mut_ptr();",
          "    unsafe {",
          "        let k: isize = 100;",
          "        let _ = write_exponent2(k, result_ptr);",
          "    }",
          "    *result_ptr should point to b'-' at buffer[0]",
          "    *result_ptr should not equal to buffer[1]",
          "    buffer[1] and buffer[2] should not be initialized",
          "    return value should be 3",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]