{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// src/f2s_intrinsics.rs\n// crate name is ryu\nuse crate::d2s;\npub const FLOAT_POW5_INV_BITCOUNT: i32 = d2s::DOUBLE_POW5_INV_BITCOUNT - 64;\npub const FLOAT_POW5_BITCOUNT: i32 = d2s::DOUBLE_POW5_BITCOUNT - 64;\n#[cfg_attr(feature = \"no-panic\", inline)]\nfn pow5factor_32(mut value: u32) -> u32 {\n    let mut count = 0u32;\n    loop {\n        debug_assert!(value != 0);\n        let q = value / 5;\n        let r = value % 5;\n        if r != 0 {\n            break;\n        }\n        value = q;\n        count += 1;\n    }\n    count\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n27 fn pow5factor_32(mut value: u32) -> u32 {\n28     let mut count = 0u32;\n29     loop {\n30         debug_assert!(value != 0);\n31         let q = value / 5;\n32         let r = value % 5;\n33         if r != 0 {\n34             break;\n35         }\n36         value = q;\n37         count += 1;\n38     }\n39     count\n40 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}