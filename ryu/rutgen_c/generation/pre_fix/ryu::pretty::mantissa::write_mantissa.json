{
  "name": "ryu::pretty::mantissa::write_mantissa",
  "mod_info": {
    "name": "pretty::mantissa",
    "loc": "src/pretty/mod.rs:2:1:2:14"
  },
  "visible": true,
  "loc": "src/pretty/mantissa.rs:44:1:82:2",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let mut buffer = [0u8; 20];",
                "    let output: u32 = 5;",
                "    let result_ptr = buffer.as_mut_ptr().add(20);",
                "    ",
                "    unsafe {",
                "        write_mantissa(output, result_ptr);",
                "    }",
                "    ",
                "    let result = String::from_utf8_lossy(&buffer[16..20]);",
                "    assert_eq!(result.trim_end_matches(char::from(0)), \"5\");",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let mut buffer = [0u8; 20];",
                "    let output: u32 = 1234;",
                "    let result_ptr = buffer.as_mut_ptr().add(20);",
                "    ",
                "    unsafe {",
                "        write_mantissa(output, result_ptr);",
                "    }",
                "    ",
                "    let result = String::from_utf8_lossy(&buffer[16..20]);",
                "    assert_eq!(result.trim_end_matches(char::from(0)), \"1234\");",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let mut buffer = [0u8; 20];",
                "    let output: u32 = 12345678;",
                "    let result_ptr = buffer.as_mut_ptr().add(20);",
                "    ",
                "    unsafe {",
                "        write_mantissa(output, result_ptr);",
                "    }",
                "    ",
                "    let result = String::from_utf8_lossy(&buffer[12..20]);",
                "    assert_eq!(result.trim_end_matches(char::from(0)), \"12345678\");",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let mut buffer = [0u8; 20];",
                "    let output: u32 = 0;",
                "    let result_ptr = buffer.as_mut_ptr().add(20);",
                "    ",
                "    unsafe {",
                "        write_mantissa(output, result_ptr);",
                "    }",
                "    ",
                "    let result = String::from_utf8_lossy(&buffer[16..20]);",
                "    assert_eq!(result.trim_end_matches(char::from(0)), \"0\");",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let mut buffer = [0u8; 20];",
                "    let output: u32 = 10000;",
                "    let result_ptr = buffer.as_mut_ptr().add(20);",
                "    ",
                "    unsafe {",
                "        write_mantissa(output, result_ptr);",
                "    }",
                "    ",
                "    let result = String::from_utf8_lossy(&buffer[12..20]);",
                "    assert_eq!(result.trim_end_matches(char::from(0)), \"10000\");",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}