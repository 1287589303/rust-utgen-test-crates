{
  "name": "ryu::pretty::mantissa::write_mantissa_long",
  "mod_info": {
    "name": "pretty::mantissa",
    "loc": "src/pretty/mod.rs:2:1:2:14"
  },
  "visible": true,
  "loc": "src/pretty/mantissa.rs:5:1:41:2",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    const DIGIT_COUNT: usize = 20;",
                "    let mut buffer = [0u8; DIGIT_COUNT];",
                "    let output: u64 = 12345678901234567890;",
                "    let result_ptr = buffer.as_mut_ptr().add(DIGIT_COUNT);",
                "",
                "    unsafe {",
                "        write_mantissa_long(output, result_ptr);",
                "    }",
                "",
                "    assert_eq!(&buffer[DIGIT_COUNT - 10..], b\"1234567890\");",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    const DIGIT_COUNT: usize = 20;",
                "    let mut buffer = [0u8; DIGIT_COUNT];",
                "    let output: u64 = 123;",
                "    let result_ptr = buffer.as_mut_ptr().add(DIGIT_COUNT);",
                "",
                "    unsafe {",
                "        write_mantissa_long(output, result_ptr);",
                "    }",
                "",
                "    assert_eq!(&buffer[DIGIT_COUNT - 2..], b\"12\");",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    const DIGIT_COUNT: usize = 20;",
                "    let mut buffer = [0u8; DIGIT_COUNT];",
                "    let output: u64 = 10000000000; // an exact power of ten",
                "    let result_ptr = buffer.as_mut_ptr().add(DIGIT_COUNT);",
                "",
                "    unsafe {",
                "        write_mantissa_long(output, result_ptr);",
                "    }",
                "",
                "    assert_eq!(&buffer[DIGIT_COUNT - 10..], b\"1000000000\");",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}