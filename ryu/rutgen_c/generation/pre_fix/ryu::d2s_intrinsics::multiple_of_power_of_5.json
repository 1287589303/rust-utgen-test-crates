{
  "name": "ryu::d2s_intrinsics::multiple_of_power_of_5",
  "mod_info": {
    "name": "d2s_intrinsics",
    "loc": "src/lib.rs:111:1:111:20"
  },
  "visible": true,
  "loc": "src/d2s_intrinsics.rs:56:1:59:2",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value = 125; // 5^3",
                "    let p = 3;",
                "    assert!(multiple_of_power_of_5(value, p));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value = 24; // Not a multiple of 5^1 or greater",
                "    let p = 1;",
                "    assert!(!multiple_of_power_of_5(value, p));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value = 5; // 5^1",
                "    let p = 1;",
                "    assert!(multiple_of_power_of_5(value, p));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value = 0; // 0 case",
                "    let p = 1;",
                "    assert!(!multiple_of_power_of_5(value, p));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value = 3125; // 5^5",
                "    let p = 5;",
                "    assert!(multiple_of_power_of_5(value, p));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value = 3124; // Just below 5^5",
                "    let p = 5;",
                "    assert!(!multiple_of_power_of_5(value, p));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}