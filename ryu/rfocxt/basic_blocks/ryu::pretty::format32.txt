[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:160:16: 160:27 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::f32::<impl f32>::to_bits(move _4) -> [return: bb1, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = _3,
            StorageLive(_9),
            _10 = AddWithOverflow(const f2s::FLOAT_MANTISSA_BITS, const f2s::FLOAT_EXPONENT_BITS),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:161:26: 161:69 (#0),
                    scope: scope[1],
                },
                kind: assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", const f2s::FLOAT_MANTISSA_BITS, const f2s::FLOAT_EXPONENT_BITS) -> [success: bb2, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _9 = move (_10.0: u32),
            _11 = Lt(_9, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:161:17: 161:70 (#0),
                    scope: scope[1],
                },
                kind: assert(move _11, "attempt to shift right by `{}`, which would overflow", _9) -> [success: bb3, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = Shr(move _8, move _9),
            StorageDead(_9),
            StorageDead(_8),
            _6 = BitAnd(move _7, const 1_u32),
            StorageDead(_7),
            _5 = Ne(move _6, const 0_u32),
            StorageDead(_6),
            FakeRead(ForLet(None), _5),
            StorageLive(_12),
            StorageLive(_13),
            _13 = _3,
            StorageLive(_14),
            StorageLive(_15),
            _16 = Lt(const f2s::FLOAT_MANTISSA_BITS, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:162:33: 162:62 (#0),
                    scope: scope[2],
                },
                kind: assert(move _16, "attempt to shift left by `{}`, which would overflow", const f2s::FLOAT_MANTISSA_BITS) -> [success: bb4, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _15 = Shl(const 1_u32, const f2s::FLOAT_MANTISSA_BITS),
            _17 = SubWithOverflow(_15, const 1_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:162:32: 162:67 (#0),
                    scope: scope[2],
                },
                kind: assert(!move (_17.1: bool), "attempt to compute `{} - {}`, which would overflow", move _15, const 1_u32) -> [success: bb5, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _14 = move (_17.0: u32),
            StorageDead(_15),
            _12 = BitAnd(move _13, move _14),
            StorageDead(_14),
            StorageDead(_13),
            FakeRead(ForLet(None), _12),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = _3,
            _21 = Lt(const f2s::FLOAT_MANTISSA_BITS, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:163:25: 163:54 (#0),
                    scope: scope[3],
                },
                kind: assert(move _21, "attempt to shift right by `{}`, which would overflow", const f2s::FLOAT_MANTISSA_BITS) -> [success: bb6, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _19 = Shr(move _20, const f2s::FLOAT_MANTISSA_BITS),
            StorageDead(_20),
            StorageLive(_22),
            StorageLive(_23),
            _24 = Lt(const f2s::FLOAT_EXPONENT_BITS, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:163:58: 163:87 (#0),
                    scope: scope[3],
                },
                kind: assert(move _24, "attempt to shift left by `{}`, which would overflow", const f2s::FLOAT_EXPONENT_BITS) -> [success: bb7, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _23 = Shl(const 1_u32, const f2s::FLOAT_EXPONENT_BITS),
            _25 = SubWithOverflow(_23, const 1_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:163:57: 163:92 (#0),
                    scope: scope[3],
                },
                kind: assert(!move (_25.1: bool), "attempt to compute `{} - {}`, which would overflow", move _23, const 1_u32) -> [success: bb8, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _22 = move (_25.0: u32),
            StorageDead(_23),
            _18 = BitAnd(move _19, move _22),
            StorageDead(_22),
            StorageDead(_19),
            FakeRead(ForLet(None), _18),
            StorageLive(_26),
            _26 = const 0_isize,
            FakeRead(ForLet(None), _26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = _5,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:166:8: 166:12 (#0),
                    scope: scope[5],
                },
                kind: switchInt(move _28) -> [0: bb11, otherwise: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            (*_2) = const 45_u8,
            _29 = AddWithOverflow(_26, const 1_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:168:9: 168:19 (#0),
                    scope: scope[5],
                },
                kind: assert(!move (_29.1: bool), "attempt to compute `{} + {}`, which would overflow", _26, const 1_isize) -> [success: bb10, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _26 = move (_29.0: isize),
            _27 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:166:5: 169:6 (#0),
                    scope: scope[5],
                },
                kind: goto -> bb12,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _27 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:166:5: 169:6 (#0),
                    scope: scope[5],
                },
                kind: goto -> bb12,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_27),
            StorageLive(_30),
            StorageLive(_31),
            StorageLive(_32),
            _32 = _18,
            _31 = Eq(move _32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:171:8: 171:26 (#0),
                    scope: scope[5],
                },
                kind: switchInt(move _31) -> [0: bb20, otherwise: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
            StorageLive(_33),
            StorageLive(_34),
            _34 = _12,
            _33 = Eq(move _34, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:171:30: 171:48 (#0),
                    scope: scope[5],
                },
                kind: switchInt(move _33) -> [0: bb19, otherwise: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageLive(_36),
            StorageLive(_37),
            StorageLive(_38),
            StorageLive(_39),
            StorageLive(_40),
            _40 = const b"0.0",
            _39 = &(*_40),
            _38 = move _39 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:172:34: 172:49 (#0),
                    scope: scope[5],
                },
                kind: _37 = core::slice::<impl [u8]>::as_ptr(move _38) -> [return: bb15, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageLive(_41),
            StorageLive(_42),
            _42 = _2,
            StorageLive(_43),
            _43 = _26,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:172:51: 172:71 (#0),
                    scope: scope[5],
                },
                kind: _41 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _42, move _43) -> [return: bb16, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:172:9: 172:75 (#0),
                    scope: scope[5],
                },
                kind: _36 = core::intrinsics::copy_nonoverlapping::<u8>(move _37, move _41, const 3_usize) -> [return: bb17, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
            StorageDead(_37),
            StorageDead(_40),
            StorageDead(_36),
            StorageLive(_44),
            StorageLive(_45),
            _45 = _5,
            _44 = move _45 as usize (IntToInt),
            StorageDead(_45),
            _46 = AddWithOverflow(_44, const 3_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:173:16: 173:33 (#0),
                    scope: scope[5],
                },
                kind: assert(!move (_46.1: bool), "attempt to compute `{} + {}`, which would overflow", move _44, const 3_usize) -> [success: bb18, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = move (_46.0: usize),
            StorageDead(_44),
            StorageDead(_33),
            StorageDead(_31),
            StorageDead(_30),
            StorageDead(_26),
            StorageDead(_18),
            StorageDead(_12),
            StorageDead(_5),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:224:2: 224:2 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb133,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[5],
                },
                kind: goto -> bb21,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[5],
                },
                kind: goto -> bb21,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _30 = const (),
            StorageDead(_33),
            StorageDead(_31),
            StorageDead(_30),
            StorageLive(_47),
            StorageLive(_48),
            _48 = _12,
            StorageLive(_49),
            _49 = _18,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:176:13: 176:46 (#0),
                    scope: scope[5],
                },
                kind: _47 = f2s::f2d(move _48, move _49) -> [return: bb22, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            StorageDead(_48),
            FakeRead(ForLet(None), _47),
            StorageLive(_50),
            StorageLive(_51),
            StorageLive(_52),
            _52 = (_47.0: u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:178:18: 178:53 (#0),
                    scope: scope[6],
                },
                kind: _51 = common::decimal_length9(move _52) -> [return: bb23, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_52),
            _50 = move _51 as isize (IntToInt),
            StorageDead(_51),
            FakeRead(ForLet(None), _50),
            StorageLive(_53),
            StorageLive(_54),
            _54 = (_47.1: i32),
            _53 = move _54 as isize (IntToInt),
            StorageDead(_54),
            FakeRead(ForLet(None), _53),
            StorageLive(_55),
            StorageLive(_56),
            _56 = _50,
            StorageLive(_57),
            _57 = _53,
            _58 = AddWithOverflow(_56, _57),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:180:14: 180:24 (#0),
                    scope: scope[8],
                },
                kind: assert(!move (_58.1: bool), "attempt to compute `{} + {}`, which would overflow", move _56, move _57) -> [success: bb24, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _55 = move (_58.0: isize),
            StorageDead(_57),
            StorageDead(_56),
            FakeRead(ForLet(None), _55),
            StorageLive(_59),
            StorageLive(_60),
            _60 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#100),
                    scope: scope[9],
                },
                kind: switchInt(move _60) -> [0: bb28, otherwise: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_61),
            StorageLive(_62),
            StorageLive(_63),
            _63 = _53,
            _62 = Ge(move _63, const -45_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:181:19: 181:27 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _62) -> [0: bb27, otherwise: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_63),
            _61 = const (),
            StorageDead(_62),
            StorageDead(_61),
            _59 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#99),
                    scope: scope[9],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_63),
            StorageLive(_64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#101),
                    scope: scope[9],
                },
                kind: _64 = core::panicking::panic(const "assertion failed: k >= -45") -> bb134,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _59 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#99),
                    scope: scope[9],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_60),
            StorageDead(_59),
            StorageLive(_65),
            StorageLive(_66),
            _66 = _53,
            _65 = Le(const 0_isize, move _66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:183:8: 183:14 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _65) -> [0: bb53, otherwise: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_66),
            StorageLive(_67),
            StorageLive(_68),
            _68 = _55,
            _67 = Le(move _68, const 13_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:183:18: 183:26 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _67) -> [0: bb52, otherwise: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_68),
            StorageLive(_69),
            StorageLive(_70),
            _70 = (_47.0: u32),
            StorageLive(_71),
            StorageLive(_72),
            _72 = _2,
            StorageLive(_73),
            StorageLive(_74),
            _74 = _26,
            StorageLive(_75),
            _75 = _50,
            _76 = AddWithOverflow(_74, _75),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:185:50: 185:64 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_76.1: bool), "attempt to compute `{} + {}`, which would overflow", move _74, move _75) -> [success: bb32, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _73 = move (_76.0: isize),
            StorageDead(_75),
            StorageDead(_74),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:185:36: 185:65 (#0),
                    scope: scope[9],
                },
                kind: _71 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _72, move _73) -> [return: bb33, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_73),
            StorageDead(_72),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:185:9: 185:66 (#0),
                    scope: scope[9],
                },
                kind: _69 = pretty::mantissa::write_mantissa(move _70, move _71) -> [return: bb34, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_71),
            StorageDead(_70),
            StorageDead(_69),
            StorageLive(_77),
            StorageLive(_78),
            StorageLive(_79),
            StorageLive(_80),
            _80 = _50,
            StorageLive(_81),
            _81 = _55,
            _79 = core::ops::Range::<isize> { start: move _80, end: move _81 },
            StorageDead(_81),
            StorageDead(_80),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:186:18: 186:28 (#321),
                    scope: scope[9],
                },
                kind: _78 = <core::ops::Range<isize> as core::iter::IntoIterator>::into_iter(move _79) -> [return: bb35, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_79),
            PlaceMention(_78),
            StorageLive(_82),
            _82 = move _78,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:186:9: 188:10 (#320),
                    scope: scope[10],
                },
                kind: goto -> bb36,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:186:9: 188:10 (#320),
                    scope: scope[10],
                },
                kind: falseUnwind -> [real: bb37, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_84),
            StorageLive(_85),
            StorageLive(_86),
            StorageLive(_87),
            _87 = &mut _82,
            _86 = &mut (*_87),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:186:18: 186:28 (#321),
                    scope: scope[10],
                },
                kind: _85 = <core::ops::Range<isize> as core::iter::Iterator>::next(move _86) -> [return: bb38, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_86),
            PlaceMention(_85),
            _88 = discriminant(_85),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:186:18: 186:28 (#321),
                    scope: scope[10],
                },
                kind: switchInt(move _88) -> [0: bb40, 1: bb41, otherwise: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _85),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:186:18: 186:28 (#321),
                    scope: scope[10],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:186:9: 188:10 (#320),
                    scope: scope[10],
                },
                kind: falseEdge -> [real: bb42, imaginary: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_90),
            _90 = ((_85 as Some).0: isize),
            StorageLive(_91),
            StorageLive(_92),
            _92 = _2,
            StorageLive(_93),
            StorageLive(_94),
            _94 = _26,
            StorageLive(_95),
            _95 = _90,
            _96 = AddWithOverflow(_94, _95),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:187:28: 187:37 (#0),
                    scope: scope[11],
                },
                kind: assert(!move (_96.1: bool), "attempt to compute `{} + {}`, which would overflow", move _94, move _95) -> [success: bb43, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _77 = const (),
            StorageDead(_87),
            StorageDead(_85),
            StorageDead(_84),
            StorageDead(_82),
            StorageDead(_78),
            StorageDead(_77),
            StorageLive(_97),
            StorageLive(_98),
            _98 = _2,
            StorageLive(_99),
            StorageLive(_100),
            _100 = _26,
            StorageLive(_101),
            _101 = _55,
            _102 = AddWithOverflow(_100, _101),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:189:24: 189:34 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_102.1: bool), "attempt to compute `{} + {}`, which would overflow", move _100, move _101) -> [success: bb45, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _93 = move (_96.0: isize),
            StorageDead(_95),
            StorageDead(_94),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:187:14: 187:38 (#0),
                    scope: scope[11],
                },
                kind: _91 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _92, move _93) -> [return: bb44, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_93),
            StorageDead(_92),
            (*_91) = const 48_u8,
            StorageDead(_91),
            _84 = const (),
            StorageDead(_90),
            StorageDead(_87),
            StorageDead(_85),
            StorageDead(_84),
            _83 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:186:9: 188:10 (#320),
                    scope: scope[10],
                },
                kind: goto -> bb36,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _99 = move (_102.0: isize),
            StorageDead(_101),
            StorageDead(_100),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:189:10: 189:35 (#0),
                    scope: scope[9],
                },
                kind: _97 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _98, move _99) -> [return: bb46, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_99),
            StorageDead(_98),
            (*_97) = const 46_u8,
            StorageDead(_97),
            StorageLive(_103),
            StorageLive(_104),
            _104 = _2,
            StorageLive(_105),
            StorageLive(_106),
            StorageLive(_107),
            _107 = _26,
            StorageLive(_108),
            _108 = _55,
            _109 = AddWithOverflow(_107, _108),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:190:24: 190:34 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_109.1: bool), "attempt to compute `{} + {}`, which would overflow", move _107, move _108) -> [success: bb47, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _106 = move (_109.0: isize),
            StorageDead(_108),
            StorageDead(_107),
            _110 = AddWithOverflow(_106, const 1_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:190:24: 190:38 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_110.1: bool), "attempt to compute `{} + {}`, which would overflow", move _106, const 1_isize) -> [success: bb48, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _105 = move (_110.0: isize),
            StorageDead(_106),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:190:10: 190:39 (#0),
                    scope: scope[9],
                },
                kind: _103 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _104, move _105) -> [return: bb49, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_105),
            StorageDead(_104),
            (*_103) = const 48_u8,
            StorageDead(_103),
            StorageLive(_111),
            StorageLive(_112),
            StorageLive(_113),
            _113 = _26,
            _112 = move _113 as usize (IntToInt),
            StorageDead(_113),
            StorageLive(_114),
            StorageLive(_115),
            _115 = _55,
            _114 = move _115 as usize (IntToInt),
            StorageDead(_115),
            _116 = AddWithOverflow(_112, _114),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:191:9: 191:37 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_116.1: bool), "attempt to compute `{} + {}`, which would overflow", move _112, move _114) -> [success: bb50, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _111 = move (_116.0: usize),
            StorageDead(_114),
            StorageDead(_112),
            _117 = AddWithOverflow(_111, const 2_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:191:9: 191:41 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_117.1: bool), "attempt to compute `{} + {}`, which would overflow", move _111, const 2_usize) -> [success: bb51, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = move (_117.0: usize),
            StorageDead(_111),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb132,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_68),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[9],
                },
                kind: goto -> bb54,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[9],
                },
                kind: goto -> bb54,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_118),
            StorageLive(_119),
            _119 = _55,
            _118 = Lt(const 0_isize, move _119),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:192:15: 192:21 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _118) -> [0: bb70, otherwise: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_119),
            StorageLive(_120),
            StorageLive(_121),
            _121 = _55,
            _120 = Le(move _121, const 13_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:192:25: 192:33 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _120) -> [0: bb69, otherwise: bb56],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_121),
            StorageLive(_122),
            StorageLive(_123),
            _123 = (_47.0: u32),
            StorageLive(_124),
            StorageLive(_125),
            _125 = _2,
            StorageLive(_126),
            StorageLive(_127),
            StorageLive(_128),
            _128 = _26,
            StorageLive(_129),
            _129 = _50,
            _130 = AddWithOverflow(_128, _129),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:194:50: 194:64 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_130.1: bool), "attempt to compute `{} + {}`, which would overflow", move _128, move _129) -> [success: bb57, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _127 = move (_130.0: isize),
            StorageDead(_129),
            StorageDead(_128),
            _131 = AddWithOverflow(_127, const 1_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:194:50: 194:68 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_131.1: bool), "attempt to compute `{} + {}`, which would overflow", move _127, const 1_isize) -> [success: bb58, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _126 = move (_131.0: isize),
            StorageDead(_127),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:194:36: 194:69 (#0),
                    scope: scope[9],
                },
                kind: _124 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _125, move _126) -> [return: bb59, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_126),
            StorageDead(_125),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:194:9: 194:70 (#0),
                    scope: scope[9],
                },
                kind: _122 = pretty::mantissa::write_mantissa(move _123, move _124) -> [return: bb60, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_124),
            StorageDead(_123),
            StorageDead(_122),
            StorageLive(_132),
            StorageLive(_133),
            StorageLive(_134),
            StorageLive(_135),
            _135 = _2,
            StorageLive(_136),
            StorageLive(_137),
            _137 = _26,
            _138 = AddWithOverflow(_137, const 1_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:195:33: 195:42 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_138.1: bool), "attempt to compute `{} + {}`, which would overflow", move _137, const 1_isize) -> [success: bb61, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _136 = move (_138.0: isize),
            StorageDead(_137),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:195:19: 195:43 (#0),
                    scope: scope[9],
                },
                kind: _134 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _135, move _136) -> [return: bb62, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _133 = move _134 as *const u8 (PointerCoercion(MutToConstPointer)),
            StorageDead(_136),
            StorageDead(_135),
            StorageDead(_134),
            StorageLive(_139),
            StorageLive(_140),
            _140 = _2,
            StorageLive(_141),
            _141 = _26,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:195:45: 195:65 (#0),
                    scope: scope[9],
                },
                kind: _139 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _140, move _141) -> [return: bb63, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_141),
            StorageDead(_140),
            StorageLive(_142),
            StorageLive(_143),
            _143 = _55,
            _142 = move _143 as usize (IntToInt),
            StorageDead(_143),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:195:9: 195:79 (#0),
                    scope: scope[9],
                },
                kind: _132 = core::intrinsics::copy::<u8>(move _133, move _139, move _142) -> [return: bb64, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_142),
            StorageDead(_139),
            StorageDead(_133),
            StorageDead(_132),
            StorageLive(_144),
            StorageLive(_145),
            _145 = _2,
            StorageLive(_146),
            StorageLive(_147),
            _147 = _26,
            StorageLive(_148),
            _148 = _55,
            _149 = AddWithOverflow(_147, _148),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:196:24: 196:34 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_149.1: bool), "attempt to compute `{} + {}`, which would overflow", move _147, move _148) -> [success: bb65, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _146 = move (_149.0: isize),
            StorageDead(_148),
            StorageDead(_147),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:196:10: 196:35 (#0),
                    scope: scope[9],
                },
                kind: _144 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _145, move _146) -> [return: bb66, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_146),
            StorageDead(_145),
            (*_144) = const 46_u8,
            StorageDead(_144),
            StorageLive(_150),
            StorageLive(_151),
            StorageLive(_152),
            _152 = _26,
            _151 = move _152 as usize (IntToInt),
            StorageDead(_152),
            StorageLive(_153),
            StorageLive(_154),
            _154 = _50,
            _153 = move _154 as usize (IntToInt),
            StorageDead(_154),
            _155 = AddWithOverflow(_151, _153),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:197:9: 197:41 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_155.1: bool), "attempt to compute `{} + {}`, which would overflow", move _151, move _153) -> [success: bb67, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _150 = move (_155.0: usize),
            StorageDead(_153),
            StorageDead(_151),
            _156 = AddWithOverflow(_150, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:197:9: 197:45 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_156.1: bool), "attempt to compute `{} + {}`, which would overflow", move _150, const 1_usize) -> [success: bb68, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = move (_156.0: usize),
            StorageDead(_150),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:192:12: 223:6 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb131,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_121),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[9],
                },
                kind: goto -> bb71,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_119),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[9],
                },
                kind: goto -> bb71,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_157),
            StorageLive(_158),
            _158 = _55,
            _157 = Lt(const -6_isize, move _158),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:198:15: 198:22 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _157) -> [0: bb95, otherwise: bb72],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_158),
            StorageLive(_159),
            StorageLive(_160),
            _160 = _55,
            _159 = Le(move _160, const 0_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:198:26: 198:33 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _159) -> [0: bb94, otherwise: bb73],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_160),
            StorageLive(_161),
            StorageLive(_162),
            _162 = _2,
            StorageLive(_163),
            _163 = _26,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:200:10: 200:30 (#0),
                    scope: scope[9],
                },
                kind: _161 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _162, move _163) -> [return: bb74, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_163),
            StorageDead(_162),
            (*_161) = const 48_u8,
            StorageDead(_161),
            StorageLive(_164),
            StorageLive(_165),
            _165 = _2,
            StorageLive(_166),
            StorageLive(_167),
            _167 = _26,
            _168 = AddWithOverflow(_167, const 1_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:201:24: 201:33 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_168.1: bool), "attempt to compute `{} + {}`, which would overflow", move _167, const 1_isize) -> [success: bb75, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _166 = move (_168.0: isize),
            StorageDead(_167),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:201:10: 201:34 (#0),
                    scope: scope[9],
                },
                kind: _164 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _165, move _166) -> [return: bb76, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_166),
            StorageDead(_165),
            (*_164) = const 46_u8,
            StorageDead(_164),
            StorageLive(_169),
            StorageLive(_170),
            _170 = _55,
            _171 = SubWithOverflow(const 2_isize, _170),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:202:22: 202:28 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_171.1: bool), "attempt to compute `{} - {}`, which would overflow", const 2_isize, move _170) -> [success: bb77, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _169 = move (_171.0: isize),
            StorageDead(_170),
            FakeRead(ForLet(None), _169),
            StorageLive(_172),
            StorageLive(_173),
            StorageLive(_174),
            StorageLive(_175),
            _175 = _169,
            _174 = core::ops::Range::<isize> { start: const 2_isize, end: move _175 },
            StorageDead(_175),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:203:18: 203:27 (#326),
                    scope: scope[12],
                },
                kind: _173 = <core::ops::Range<isize> as core::iter::IntoIterator>::into_iter(move _174) -> [return: bb78, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_174),
            PlaceMention(_173),
            StorageLive(_176),
            _176 = move _173,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:203:9: 205:10 (#325),
                    scope: scope[13],
                },
                kind: goto -> bb79,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:203:9: 205:10 (#325),
                    scope: scope[13],
                },
                kind: falseUnwind -> [real: bb80, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_177),
            StorageLive(_178),
            StorageLive(_179),
            StorageLive(_180),
            _180 = &mut _176,
            _179 = &mut (*_180),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:203:18: 203:27 (#326),
                    scope: scope[13],
                },
                kind: _178 = <core::ops::Range<isize> as core::iter::Iterator>::next(move _179) -> [return: bb81, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_179),
            PlaceMention(_178),
            _181 = discriminant(_178),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:203:18: 203:27 (#326),
                    scope: scope[13],
                },
                kind: switchInt(move _181) -> [0: bb83, 1: bb84, otherwise: bb82],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _178),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:203:18: 203:27 (#326),
                    scope: scope[13],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:203:9: 205:10 (#325),
                    scope: scope[13],
                },
                kind: falseEdge -> [real: bb85, imaginary: bb84],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_183),
            _183 = ((_178 as Some).0: isize),
            StorageLive(_184),
            StorageLive(_185),
            _185 = _2,
            StorageLive(_186),
            StorageLive(_187),
            _187 = _26,
            StorageLive(_188),
            _188 = _183,
            _189 = AddWithOverflow(_187, _188),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:204:28: 204:37 (#0),
                    scope: scope[14],
                },
                kind: assert(!move (_189.1: bool), "attempt to compute `{} + {}`, which would overflow", move _187, move _188) -> [success: bb86, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _172 = const (),
            StorageDead(_180),
            StorageDead(_178),
            StorageDead(_177),
            StorageDead(_176),
            StorageDead(_173),
            StorageDead(_172),
            StorageLive(_190),
            StorageLive(_191),
            _191 = (_47.0: u32),
            StorageLive(_192),
            StorageLive(_193),
            _193 = _2,
            StorageLive(_194),
            StorageLive(_195),
            StorageLive(_196),
            _196 = _26,
            StorageLive(_197),
            _197 = _50,
            _198 = AddWithOverflow(_196, _197),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:206:50: 206:64 (#0),
                    scope: scope[12],
                },
                kind: assert(!move (_198.1: bool), "attempt to compute `{} + {}`, which would overflow", move _196, move _197) -> [success: bb88, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _186 = move (_189.0: isize),
            StorageDead(_188),
            StorageDead(_187),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:204:14: 204:38 (#0),
                    scope: scope[14],
                },
                kind: _184 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _185, move _186) -> [return: bb87, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_186),
            StorageDead(_185),
            (*_184) = const 48_u8,
            StorageDead(_184),
            _177 = const (),
            StorageDead(_183),
            StorageDead(_180),
            StorageDead(_178),
            StorageDead(_177),
            _83 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:203:9: 205:10 (#325),
                    scope: scope[13],
                },
                kind: goto -> bb79,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _195 = move (_198.0: isize),
            StorageDead(_197),
            StorageDead(_196),
            StorageLive(_199),
            _199 = _169,
            _200 = AddWithOverflow(_195, _199),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:206:50: 206:73 (#0),
                    scope: scope[12],
                },
                kind: assert(!move (_200.1: bool), "attempt to compute `{} + {}`, which would overflow", move _195, move _199) -> [success: bb89, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _194 = move (_200.0: isize),
            StorageDead(_199),
            StorageDead(_195),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:206:36: 206:74 (#0),
                    scope: scope[12],
                },
                kind: _192 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _193, move _194) -> [return: bb90, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_194),
            StorageDead(_193),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:206:9: 206:75 (#0),
                    scope: scope[12],
                },
                kind: _190 = pretty::mantissa::write_mantissa(move _191, move _192) -> [return: bb91, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_192),
            StorageDead(_191),
            StorageDead(_190),
            StorageLive(_201),
            StorageLive(_202),
            StorageLive(_203),
            _203 = _26,
            _202 = move _203 as usize (IntToInt),
            StorageDead(_203),
            StorageLive(_204),
            StorageLive(_205),
            _205 = _50,
            _204 = move _205 as usize (IntToInt),
            StorageDead(_205),
            _206 = AddWithOverflow(_202, _204),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:207:9: 207:41 (#0),
                    scope: scope[12],
                },
                kind: assert(!move (_206.1: bool), "attempt to compute `{} + {}`, which would overflow", move _202, move _204) -> [success: bb92, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _201 = move (_206.0: usize),
            StorageDead(_204),
            StorageDead(_202),
            StorageLive(_207),
            StorageLive(_208),
            _208 = _169,
            _207 = move _208 as usize (IntToInt),
            StorageDead(_208),
            _209 = AddWithOverflow(_201, _207),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:207:9: 207:59 (#0),
                    scope: scope[12],
                },
                kind: assert(!move (_209.1: bool), "attempt to compute `{} + {}`, which would overflow", move _201, move _207) -> [success: bb93, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = move (_209.0: usize),
            StorageDead(_207),
            StorageDead(_201),
            StorageDead(_169),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:198:12: 223:6 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb130,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_160),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[9],
                },
                kind: goto -> bb96,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_158),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[9],
                },
                kind: goto -> bb96,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_210),
            StorageLive(_211),
            _211 = _50,
            _210 = Eq(move _211, const 1_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:208:15: 208:26 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _210) -> [0: bb108, otherwise: bb97],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_211),
            StorageLive(_212),
            StorageLive(_213),
            _213 = (_47.0: u32),
            _212 = move _213 as u8 (IntToInt),
            StorageDead(_213),
            _214 = AddWithOverflow(const 48_u8, _212),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:210:33: 210:56 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_214.1: bool), "attempt to compute `{} + {}`, which would overflow", const 48_u8, move _212) -> [success: bb98, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_215),
            StorageLive(_216),
            _216 = _2,
            StorageLive(_217),
            _217 = _26,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:210:10: 210:30 (#0),
                    scope: scope[9],
                },
                kind: _215 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _216, move _217) -> [return: bb99, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_217),
            StorageDead(_216),
            (*_215) = move (_214.0: u8),
            StorageDead(_212),
            StorageDead(_215),
            StorageLive(_218),
            StorageLive(_219),
            _219 = _2,
            StorageLive(_220),
            StorageLive(_221),
            _221 = _26,
            _222 = AddWithOverflow(_221, const 1_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:211:24: 211:33 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_222.1: bool), "attempt to compute `{} + {}`, which would overflow", move _221, const 1_isize) -> [success: bb100, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _220 = move (_222.0: isize),
            StorageDead(_221),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:211:10: 211:34 (#0),
                    scope: scope[9],
                },
                kind: _218 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _219, move _220) -> [return: bb101, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_220),
            StorageDead(_219),
            (*_218) = const 101_u8,
            StorageDead(_218),
            StorageLive(_223),
            StorageLive(_224),
            StorageLive(_225),
            _225 = _26,
            _224 = move _225 as usize (IntToInt),
            StorageDead(_225),
            _226 = AddWithOverflow(_224, const 2_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:212:9: 212:27 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_226.1: bool), "attempt to compute `{} + {}`, which would overflow", move _224, const 2_usize) -> [success: bb102, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _223 = move (_226.0: usize),
            StorageDead(_224),
            StorageLive(_227),
            StorageLive(_228),
            StorageLive(_229),
            _229 = _55,
            _230 = SubWithOverflow(_229, const 1_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:212:46: 212:52 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_230.1: bool), "attempt to compute `{} - {}`, which would overflow", move _229, const 1_isize) -> [success: bb103, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _228 = move (_230.0: isize),
            StorageDead(_229),
            StorageLive(_231),
            StorageLive(_232),
            _232 = _2,
            StorageLive(_233),
            StorageLive(_234),
            _234 = _26,
            _235 = AddWithOverflow(_234, const 2_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:212:68: 212:77 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_235.1: bool), "attempt to compute `{} + {}`, which would overflow", move _234, const 2_isize) -> [success: bb104, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _233 = move (_235.0: isize),
            StorageDead(_234),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:212:54: 212:78 (#0),
                    scope: scope[9],
                },
                kind: _231 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _232, move _233) -> [return: bb105, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_233),
            StorageDead(_232),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:212:30: 212:79 (#0),
                    scope: scope[9],
                },
                kind: _227 = pretty::exponent::write_exponent2(move _228, move _231) -> [return: bb106, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_231),
            StorageDead(_228),
            _236 = AddWithOverflow(_223, _227),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:212:9: 212:79 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_236.1: bool), "attempt to compute `{} + {}`, which would overflow", move _223, move _227) -> [success: bb107, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = move (_236.0: usize),
            StorageDead(_227),
            StorageDead(_223),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:208:12: 223:6 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb129,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_211),
            StorageLive(_237),
            StorageLive(_238),
            _238 = (_47.0: u32),
            StorageLive(_239),
            StorageLive(_240),
            _240 = _2,
            StorageLive(_241),
            StorageLive(_242),
            StorageLive(_243),
            _243 = _26,
            StorageLive(_244),
            _244 = _50,
            _245 = AddWithOverflow(_243, _244),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:215:50: 215:64 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_245.1: bool), "attempt to compute `{} + {}`, which would overflow", move _243, move _244) -> [success: bb109, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _242 = move (_245.0: isize),
            StorageDead(_244),
            StorageDead(_243),
            _246 = AddWithOverflow(_242, const 1_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:215:50: 215:68 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_246.1: bool), "attempt to compute `{} + {}`, which would overflow", move _242, const 1_isize) -> [success: bb110, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _241 = move (_246.0: isize),
            StorageDead(_242),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:215:36: 215:69 (#0),
                    scope: scope[9],
                },
                kind: _239 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _240, move _241) -> [return: bb111, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_241),
            StorageDead(_240),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:215:9: 215:70 (#0),
                    scope: scope[9],
                },
                kind: _237 = pretty::mantissa::write_mantissa(move _238, move _239) -> [return: bb112, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_239),
            StorageDead(_238),
            StorageDead(_237),
            StorageLive(_247),
            StorageLive(_248),
            StorageLive(_249),
            _249 = _2,
            StorageLive(_250),
            StorageLive(_251),
            _251 = _26,
            _252 = AddWithOverflow(_251, const 1_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:216:48: 216:57 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_252.1: bool), "attempt to compute `{} + {}`, which would overflow", move _251, const 1_isize) -> [success: bb113, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _250 = move (_252.0: isize),
            StorageDead(_251),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:216:34: 216:58 (#0),
                    scope: scope[9],
                },
                kind: _248 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _249, move _250) -> [return: bb114, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_250),
            StorageDead(_249),
            _247 = (*_248),
            StorageLive(_253),
            StorageLive(_254),
            _254 = _2,
            StorageLive(_255),
            _255 = _26,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:216:10: 216:30 (#0),
                    scope: scope[9],
                },
                kind: _253 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _254, move _255) -> [return: bb115, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_255),
            StorageDead(_254),
            (*_253) = move _247,
            StorageDead(_247),
            StorageDead(_253),
            StorageDead(_248),
            StorageLive(_256),
            StorageLive(_257),
            _257 = _2,
            StorageLive(_258),
            StorageLive(_259),
            _259 = _26,
            _260 = AddWithOverflow(_259, const 1_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:217:24: 217:33 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_260.1: bool), "attempt to compute `{} + {}`, which would overflow", move _259, const 1_isize) -> [success: bb116, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _258 = move (_260.0: isize),
            StorageDead(_259),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:217:10: 217:34 (#0),
                    scope: scope[9],
                },
                kind: _256 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _257, move _258) -> [return: bb117, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_258),
            StorageDead(_257),
            (*_256) = const 46_u8,
            StorageDead(_256),
            StorageLive(_261),
            StorageLive(_262),
            _262 = _2,
            StorageLive(_263),
            StorageLive(_264),
            StorageLive(_265),
            _265 = _26,
            StorageLive(_266),
            _266 = _50,
            _267 = AddWithOverflow(_265, _266),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:218:24: 218:38 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_267.1: bool), "attempt to compute `{} + {}`, which would overflow", move _265, move _266) -> [success: bb118, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _264 = move (_267.0: isize),
            StorageDead(_266),
            StorageDead(_265),
            _268 = AddWithOverflow(_264, const 1_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:218:24: 218:42 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_268.1: bool), "attempt to compute `{} + {}`, which would overflow", move _264, const 1_isize) -> [success: bb119, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _263 = move (_268.0: isize),
            StorageDead(_264),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:218:10: 218:43 (#0),
                    scope: scope[9],
                },
                kind: _261 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _262, move _263) -> [return: bb120, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_263),
            StorageDead(_262),
            (*_261) = const 101_u8,
            StorageDead(_261),
            StorageLive(_269),
            StorageLive(_270),
            StorageLive(_271),
            StorageLive(_272),
            _272 = _26,
            _271 = move _272 as usize (IntToInt),
            StorageDead(_272),
            StorageLive(_273),
            StorageLive(_274),
            _274 = _50,
            _273 = move _274 as usize (IntToInt),
            StorageDead(_274),
            _275 = AddWithOverflow(_271, _273),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:219:9: 220:30 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_275.1: bool), "attempt to compute `{} + {}`, which would overflow", move _271, move _273) -> [success: bb121, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _270 = move (_275.0: usize),
            StorageDead(_273),
            StorageDead(_271),
            _276 = AddWithOverflow(_270, const 2_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:219:9: 221:16 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_276.1: bool), "attempt to compute `{} + {}`, which would overflow", move _270, const 2_usize) -> [success: bb122, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _269 = move (_276.0: usize),
            StorageDead(_270),
            StorageLive(_277),
            StorageLive(_278),
            StorageLive(_279),
            _279 = _55,
            _280 = SubWithOverflow(_279, const 1_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:222:31: 222:37 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_280.1: bool), "attempt to compute `{} - {}`, which would overflow", move _279, const 1_isize) -> [success: bb123, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _278 = move (_280.0: isize),
            StorageDead(_279),
            StorageLive(_281),
            StorageLive(_282),
            _282 = _2,
            StorageLive(_283),
            StorageLive(_284),
            StorageLive(_285),
            _285 = _26,
            StorageLive(_286),
            _286 = _50,
            _287 = AddWithOverflow(_285, _286),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:222:53: 222:67 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_287.1: bool), "attempt to compute `{} + {}`, which would overflow", move _285, move _286) -> [success: bb124, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _284 = move (_287.0: isize),
            StorageDead(_286),
            StorageDead(_285),
            _288 = AddWithOverflow(_284, const 2_isize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:222:53: 222:71 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_288.1: bool), "attempt to compute `{} + {}`, which would overflow", move _284, const 2_isize) -> [success: bb125, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _283 = move (_288.0: isize),
            StorageDead(_284),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:222:39: 222:72 (#0),
                    scope: scope[9],
                },
                kind: _281 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _282, move _283) -> [return: bb126, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_283),
            StorageDead(_282),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:222:15: 222:73 (#0),
                    scope: scope[9],
                },
                kind: _277 = pretty::exponent::write_exponent2(move _278, move _281) -> [return: bb127, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_281),
            StorageDead(_278),
            _289 = AddWithOverflow(_269, _277),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_289.1: bool), "attempt to compute `{} + {}`, which would overflow", move _269, move _277) -> [success: bb128, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = move (_289.0: usize),
            StorageDead(_277),
            StorageDead(_269),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:208:12: 223:6 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb129,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_210),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:198:12: 223:6 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb130,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_159),
            StorageDead(_157),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:192:12: 223:6 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb131,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_120),
            StorageDead(_118),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb132,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_67),
            StorageDead(_65),
            StorageDead(_55),
            StorageDead(_53),
            StorageDead(_50),
            StorageDead(_47),
            StorageDead(_26),
            StorageDead(_18),
            StorageDead(_12),
            StorageDead(_5),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:224:2: 224:2 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb133,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:224:2: 224:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mod.rs:159:1: 224:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:159:52: 159:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/pretty/mod.rs:159:27: 159:30 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mod.rs:159:24: 159:25 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:159:24: 159:25 (#0),
                    },
                ),
            ),
        ),
        ty: f32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:159:24: 159:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/pretty/mod.rs:159:40: 159:47 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mod.rs:159:32: 159:38 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:159:32: 159:38 (#0),
                    },
                ),
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:159:32: 159:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mod.rs:160:16: 160:27 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:160:9: 160:13 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:160:9: 160:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: f32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:160:16: 160:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mod.rs:161:16: 161:80 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:161:9: 161:13 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:161:9: 161:13 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:161:16: 161:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:161:17: 161:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:161:18: 161:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:161:26: 161:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u32, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:161:26: 161:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:161:17: 161:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mod.rs:162:25: 162:67 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:162:9: 162:22 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:162:9: 162:22 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:162:25: 162:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:162:32: 162:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:162:33: 162:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:162:33: 162:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u32, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:162:32: 162:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mod.rs:163:25: 163:92 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:163:9: 163:22 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:163:9: 163:22 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:163:25: 163:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:163:26: 163:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:163:25: 163:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:163:57: 163:92 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:163:58: 163:87 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:163:58: 163:87 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u32, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:163:57: 163:92 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mod.rs:165:21: 165:27 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:165:9: 165:18 (#0),
                    },
                ),
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:165:9: 165:18 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:166:5: 169:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:166:8: 166:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:168:9: 168:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:171:5: 174:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:171:8: 171:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:171:8: 171:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:171:30: 171:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:171:30: 171:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:171:49: 174:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:172:9: 172:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:172:34: 172:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:172:34: 172:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:172:34: 172:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:172:34: 172:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:172:51: 172:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:172:51: 172:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:172:65: 172:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:173:16: 173:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:173:16: 173:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:173:16: 173:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mod.rs:176:13: 176:46 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:176:9: 176:10 (#0),
                    },
                ),
            ),
        ),
        ty: f2s::FloatingDecimal32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:176:9: 176:10 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:176:17: 176:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:176:32: 176:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mod.rs:178:18: 178:62 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:178:9: 178:15 (#0),
                    },
                ),
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:178:9: 178:15 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:178:18: 178:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:178:42: 178:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mod.rs:179:13: 179:32 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:179:9: 179:10 (#0),
                    },
                ),
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:179:9: 179:10 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:179:13: 179:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mod.rs:180:14: 180:24 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:180:9: 180:11 (#0),
                    },
                ),
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:180:9: 180:11 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:180:14: 180:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:180:23: 180:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:180:14: 180:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#99),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#100),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#101),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:181:19: 181:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:181:19: 181:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#101),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#101),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:183:8: 183:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:183:13: 183:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:183:18: 183:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:183:18: 183:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:185:9: 185:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:185:24: 185:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:185:36: 185:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:185:36: 185:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:185:50: 185:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:185:50: 185:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:185:58: 185:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:185:50: 185:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:186:9: 188:10 (#320),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::Range<isize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:186:18: 186:28 (#321),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::Range<isize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:186:18: 186:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:186:18: 186:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:186:26: 186:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _78,
                                ),
                                src/pretty/mod.rs:186:18: 186:28 (#321),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:186:18: 186:28 (#321),
                    },
                ),
            ),
        ),
        ty: core::ops::Range<isize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:186:18: 186:28 (#321),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:159:1: 224:2 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:186:18: 186:28 (#321),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<isize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:186:18: 186:28 (#321),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::ops::Range<isize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:186:18: 186:28 (#321),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::ops::Range<isize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:186:18: 186:28 (#321),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:186:9: 188:10 (#320),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:186:9: 188:10 (#320),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _85,
                                ),
                                src/pretty/mod.rs:186:18: 186:28 (#321),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:186:13: 186:14 (#322),
                    },
                ),
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:186:13: 186:14 (#0),
            scope: scope[10],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:187:14: 187:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:187:14: 187:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:187:28: 187:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:187:28: 187:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:187:36: 187:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:187:28: 187:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:189:10: 189:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:189:10: 189:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:189:24: 189:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:189:24: 189:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:189:32: 189:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:189:24: 189:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:190:10: 190:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:190:10: 190:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:190:24: 190:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:190:24: 190:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:190:24: 190:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:190:32: 190:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:190:24: 190:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:190:24: 190:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:191:9: 191:41 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:191:9: 191:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:191:9: 191:41 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:191:9: 191:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:191:9: 191:41 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:191:9: 191:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:191:9: 191:41 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:191:26: 191:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:191:9: 191:41 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:191:26: 191:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:191:9: 191:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:191:9: 191:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:192:15: 192:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:192:19: 192:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:192:25: 192:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:192:25: 192:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:194:9: 194:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:194:24: 194:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:194:36: 194:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:194:36: 194:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:194:50: 194:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:194:50: 194:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:194:50: 194:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:194:58: 194:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:194:50: 194:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:194:50: 194:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:195:9: 195:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:195:19: 195:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:195:19: 195:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:195:19: 195:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:195:33: 195:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:195:33: 195:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:195:33: 195:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:195:45: 195:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:195:45: 195:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:195:59: 195:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:195:67: 195:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:195:67: 195:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:196:10: 196:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:196:10: 196:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:196:24: 196:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:196:24: 196:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:196:32: 196:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:196:24: 196:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:197:9: 197:45 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:197:9: 197:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:197:9: 197:45 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:197:9: 197:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:197:9: 197:45 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:197:9: 197:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:197:9: 197:45 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:197:26: 197:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:197:9: 197:45 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:197:26: 197:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:197:9: 197:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:197:9: 197:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:198:15: 198:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:198:20: 198:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:198:26: 198:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:198:26: 198:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:200:10: 200:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:200:10: 200:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:200:24: 200:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:201:10: 201:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:201:10: 201:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:201:24: 201:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:201:24: 201:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:201:24: 201:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mod.rs:202:22: 202:28 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:202:13: 202:19 (#0),
                    },
                ),
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:202:13: 202:19 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:202:26: 202:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:202:22: 202:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:203:9: 205:10 (#325),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::Range<isize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:203:18: 203:27 (#326),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::Range<isize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:203:18: 203:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:203:21: 203:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _173,
                                ),
                                src/pretty/mod.rs:203:18: 203:27 (#326),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:203:18: 203:27 (#326),
                    },
                ),
            ),
        ),
        ty: core::ops::Range<isize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:203:18: 203:27 (#326),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:203:18: 203:27 (#326),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<isize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:203:18: 203:27 (#326),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::ops::Range<isize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:203:18: 203:27 (#326),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::ops::Range<isize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:203:18: 203:27 (#326),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:203:9: 205:10 (#325),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:203:9: 205:10 (#325),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _178,
                                ),
                                src/pretty/mod.rs:203:18: 203:27 (#326),
                            ),
                        ),
                        pat_span: src/pretty/mod.rs:203:13: 203:14 (#327),
                    },
                ),
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:203:13: 203:14 (#0),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:204:14: 204:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:204:14: 204:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:204:28: 204:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:204:28: 204:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:204:36: 204:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:204:28: 204:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:206:9: 206:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:206:24: 206:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:206:36: 206:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:206:36: 206:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:206:50: 206:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:206:50: 206:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:206:50: 206:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:206:58: 206:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:206:50: 206:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:206:67: 206:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:206:50: 206:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:207:9: 207:59 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:207:9: 207:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:207:9: 207:59 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:207:9: 207:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:207:9: 207:59 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:207:9: 207:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:207:9: 207:59 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:207:26: 207:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:207:9: 207:59 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:207:26: 207:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:207:9: 207:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:207:9: 207:59 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:207:44: 207:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:207:9: 207:59 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:207:44: 207:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:207:9: 207:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:208:15: 208:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:183:5: 223:6 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:208:15: 208:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:210:40: 210:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:210:40: 210:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u8, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:210:33: 210:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:210:10: 210:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:210:10: 210:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:210:24: 210:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:211:10: 211:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:211:10: 211:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:211:24: 211:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:211:24: 211:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:211:24: 211:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:212:9: 212:79 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:9: 212:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:212:9: 212:79 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:9: 212:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:212:9: 212:79 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:9: 212:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:9: 212:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:212:9: 212:79 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:30: 212:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:212:9: 212:79 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:46: 212:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:212:9: 212:79 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:46: 212:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:46: 212:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:212:9: 212:79 (#0),
                },
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:54: 212:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:212:9: 212:79 (#0),
                },
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:54: 212:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:212:9: 212:79 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:68: 212:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:212:9: 212:79 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:68: 212:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:68: 212:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:212:9: 212:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:215:9: 215:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:215:24: 215:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:215:36: 215:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:215:36: 215:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:215:50: 215:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:215:50: 215:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:215:50: 215:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:215:58: 215:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:215:50: 215:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:215:50: 215:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:216:33: 216:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:216:34: 216:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:216:34: 216:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:216:48: 216:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:216:48: 216:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:216:48: 216:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:216:10: 216:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:216:10: 216:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:216:24: 216:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:217:10: 217:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:217:10: 217:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:217:24: 217:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:217:24: 217:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:217:24: 217:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:218:10: 218:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:218:10: 218:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:218:24: 218:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:218:24: 218:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:218:24: 218:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:218:32: 218:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:218:24: 218:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:218:24: 218:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:219:9: 221:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:219:9: 220:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:219:9: 219:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:219:9: 219:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:220:15: 220:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:220:15: 220:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:219:9: 220:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:219:9: 221:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:222:15: 222:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:222:31: 222:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:222:31: 222:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:222:31: 222:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:222:39: 222:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:222:39: 222:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:222:53: 222:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:222:53: 222:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:222:53: 222:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/pretty/mod.rs:219:9: 222:73 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:222:61: 222:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:222:53: 222:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (isize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:222:53: 222:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mod.rs:219:9: 222:73 (#0),
            scope: scope[0],
        },
    },
]