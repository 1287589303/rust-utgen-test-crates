[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = _1,
            _3 = Eq(const 10_u64, const 0_u64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:30:5: 30:11 (#0),
                    scope: scope[0],
                },
                kind: assert(!move _3, "attempt to divide `{}` by zero", _2) -> [success: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = Div(move _2, const 10_u64),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:31:2: 31:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:29:1: 31:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:29:25: 29:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/d2s_intrinsics.rs:29:17: 29:20 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/d2s_intrinsics.rs:29:14: 29:15 (#0),
                            ),
                        ),
                        pat_span: src/d2s_intrinsics.rs:29:14: 29:15 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:29:14: 29:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/d2s_intrinsics.rs:30:5: 30:11 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:30:5: 30:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:30:5: 30:11 (#0),
            scope: scope[0],
        },
    },
]