[
    BasicBlockData {
        statements: [
            StorageLive(_7),
            StorageLive(_8),
            _8 = _4,
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = _1,
            _13 = MulWithOverflow(const 4_u64, _12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:86:33: 86:38 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_13.1: bool), "attempt to compute `{} * {}`, which would overflow", const 4_u64, move _12) -> [success: bb1, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _11 = move (_13.0: u64),
            StorageDead(_12),
            _14 = AddWithOverflow(_11, const 2_u64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:86:33: 86:42 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_14.1: bool), "attempt to compute `{} + {}`, which would overflow", move _11, const 2_u64) -> [success: bb2, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _10 = move (_14.0: u64),
            StorageDead(_11),
            StorageLive(_15),
            _15 = &(*_2),
            StorageLive(_16),
            _16 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:86:20: 86:51 (#0),
                    scope: scope[0],
                },
                kind: _9 = d2s_intrinsics::mul_shift_64(move _10, move _15, move _16) -> [return: bb3, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_15),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:86:5: 86:52 (#0),
                    scope: scope[0],
                },
                kind: _7 = core::ptr::write::<u64>(move _8, move _9) -> [return: bb4, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
            StorageDead(_7),
            StorageLive(_17),
            StorageLive(_18),
            _18 = _5,
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            StorageLive(_23),
            _23 = _1,
            _24 = MulWithOverflow(const 4_u64, _23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:87:33: 87:38 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_24.1: bool), "attempt to compute `{} * {}`, which would overflow", const 4_u64, move _23) -> [success: bb5, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _22 = move (_24.0: u64),
            StorageDead(_23),
            _25 = SubWithOverflow(_22, const 1_u64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:87:33: 87:42 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_25.1: bool), "attempt to compute `{} - {}`, which would overflow", move _22, const 1_u64) -> [success: bb6, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _21 = move (_25.0: u64),
            StorageDead(_22),
            StorageLive(_26),
            StorageLive(_27),
            _27 = _6,
            _26 = move _27 as u64 (IntToInt),
            StorageDead(_27),
            _28 = SubWithOverflow(_21, _26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:87:33: 87:60 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_28.1: bool), "attempt to compute `{} - {}`, which would overflow", move _21, move _26) -> [success: bb7, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _20 = move (_28.0: u64),
            StorageDead(_26),
            StorageDead(_21),
            StorageLive(_29),
            _29 = &(*_2),
            StorageLive(_30),
            _30 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:87:20: 87:69 (#0),
                    scope: scope[0],
                },
                kind: _19 = d2s_intrinsics::mul_shift_64(move _20, move _29, move _30) -> [return: bb8, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            StorageDead(_29),
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:87:5: 87:70 (#0),
                    scope: scope[0],
                },
                kind: _17 = core::ptr::write::<u64>(move _18, move _19) -> [return: bb9, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            StorageDead(_18),
            StorageDead(_17),
            StorageLive(_31),
            StorageLive(_32),
            _32 = _1,
            _33 = MulWithOverflow(const 4_u64, _32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:88:18: 88:23 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_33.1: bool), "attempt to compute `{} * {}`, which would overflow", const 4_u64, move _32) -> [success: bb10, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _31 = move (_33.0: u64),
            StorageDead(_32),
            StorageLive(_34),
            _34 = &(*_2),
            StorageLive(_35),
            _35 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:88:5: 88:32 (#0),
                    scope: scope[0],
                },
                kind: _0 = d2s_intrinsics::mul_shift_64(move _31, move _34, move _35) -> [return: bb11, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
            StorageDead(_34),
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:89:2: 89:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:78:1: 89:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:85:6: 85:9 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/d2s_intrinsics.rs:79:8: 79:11 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/d2s_intrinsics.rs:79:5: 79:6 (#0),
                            ),
                        ),
                        pat_span: src/d2s_intrinsics.rs:79:5: 79:6 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:79:5: 79:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/d2s_intrinsics.rs:80:10: 80:21 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/d2s_intrinsics.rs:80:5: 80:8 (#0),
                            ),
                        ),
                        pat_span: src/d2s_intrinsics.rs:80:5: 80:8 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} (u64, u64),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:80:5: 80:8 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/d2s_intrinsics.rs:81:8: 81:11 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/d2s_intrinsics.rs:81:5: 81:6 (#0),
                            ),
                        ),
                        pat_span: src/d2s_intrinsics.rs:81:5: 81:6 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:81:5: 81:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/d2s_intrinsics.rs:82:9: 82:17 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/d2s_intrinsics.rs:82:5: 82:7 (#0),
                            ),
                        ),
                        pat_span: src/d2s_intrinsics.rs:82:5: 82:7 (#0),
                    },
                ),
            ),
        ),
        ty: *mut u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:82:5: 82:7 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/d2s_intrinsics.rs:83:9: 83:17 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/d2s_intrinsics.rs:83:5: 83:7 (#0),
                            ),
                        ),
                        pat_span: src/d2s_intrinsics.rs:83:5: 83:7 (#0),
                    },
                ),
            ),
        ),
        ty: *mut u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:83:5: 83:7 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/d2s_intrinsics.rs:84:15: 84:18 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/d2s_intrinsics.rs:84:5: 84:13 (#0),
                            ),
                        ),
                        pat_span: src/d2s_intrinsics.rs:84:5: 84:13 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:84:5: 84:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:86:5: 86:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:86:16: 86:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:86:20: 86:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:86:33: 86:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:86:33: 86:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:86:37: 86:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u64, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:86:33: 86:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u64, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:86:33: 86:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} (u64, u64),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:86:44: 86:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:86:49: 86:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:5: 87:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:16: 87:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:20: 87:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:33: 87:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:33: 87:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:33: 87:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:37: 87:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u64, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:33: 87:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u64, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:33: 87:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:45: 87:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:45: 87:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u64, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:33: 87:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} (u64, u64),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:62: 87:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:87:67: 87:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/d2s_intrinsics.rs:88:5: 88:32 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:88:18: 88:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/d2s_intrinsics.rs:88:5: 88:32 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:88:22: 88:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u64, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:88:18: 88:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/d2s_intrinsics.rs:88:5: 88:32 (#0),
                },
            ),
        ),
        ty: &'{erased} (u64, u64),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:88:25: 88:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/d2s_intrinsics.rs:88:5: 88:32 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:88:30: 88:31 (#0),
            scope: scope[0],
        },
    },
]