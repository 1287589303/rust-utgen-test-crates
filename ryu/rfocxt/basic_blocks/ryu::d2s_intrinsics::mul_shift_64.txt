[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = _1,
            _5 = move _6 as u128 (IntToInt),
            StorageDead(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = ((*_2).0: u64),
            _7 = move _8 as u128 (IntToInt),
            StorageDead(_8),
            _9 = MulWithOverflow(_5, _7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:72:14: 72:39 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_9.1: bool), "attempt to compute `{} * {}`, which would overflow", move _5, move _7) -> [success: bb1, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _4 = move (_9.0: u128),
            StorageDead(_7),
            StorageDead(_5),
            FakeRead(ForLet(None), _4),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = _1,
            _11 = move _12 as u128 (IntToInt),
            StorageDead(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = ((*_2).1: u64),
            _13 = move _14 as u128 (IntToInt),
            StorageDead(_14),
            _15 = MulWithOverflow(_11, _13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:73:14: 73:39 (#0),
                    scope: scope[1],
                },
                kind: assert(!move (_15.1: bool), "attempt to compute `{} * {}`, which would overflow", move _11, move _13) -> [success: bb2, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _10 = move (_15.0: u128),
            StorageDead(_13),
            StorageDead(_11),
            FakeRead(ForLet(None), _10),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            StorageLive(_19),
            _19 = _4,
            _20 = const 64_i32 as u32 (IntToInt),
            _21 = Lt(move _20, const 128_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:74:7: 74:17 (#0),
                    scope: scope[2],
                },
                kind: assert(move _21, "attempt to shift right by `{}`, which would overflow", const 64_i32) -> [success: bb3, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _18 = Shr(move _19, const 64_i32),
            StorageDead(_19),
            StorageLive(_22),
            _22 = _10,
            _23 = AddWithOverflow(_18, _22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:74:6: 74:23 (#0),
                    scope: scope[2],
                },
                kind: assert(!move (_23.1: bool), "attempt to compute `{} + {}`, which would overflow", move _18, move _22) -> [success: bb4, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _17 = move (_23.0: u128),
            StorageDead(_22),
            StorageDead(_18),
            StorageLive(_24),
            StorageLive(_25),
            _25 = _3,
            _26 = SubWithOverflow(_25, const 64_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:74:27: 74:35 (#0),
                    scope: scope[2],
                },
                kind: assert(!move (_26.1: bool), "attempt to compute `{} - {}`, which would overflow", move _25, const 64_u32) -> [success: bb5, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _24 = move (_26.0: u32),
            StorageDead(_25),
            _27 = Lt(_24, const 128_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:74:5: 74:36 (#0),
                    scope: scope[2],
                },
                kind: assert(move _27, "attempt to shift right by `{}`, which would overflow", _24) -> [success: bb6, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = Shr(move _17, move _24),
            StorageDead(_24),
            StorageDead(_17),
            _0 = move _16 as u64 (IntToInt),
            StorageDead(_16),
            StorageDead(_10),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:75:2: 75:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/d2s_intrinsics.rs:71:1: 75:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:71:58: 71:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/d2s_intrinsics.rs:71:24: 71:27 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/d2s_intrinsics.rs:71:21: 71:22 (#0),
                            ),
                        ),
                        pat_span: src/d2s_intrinsics.rs:71:21: 71:22 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:71:21: 71:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/d2s_intrinsics.rs:71:34: 71:45 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/d2s_intrinsics.rs:71:29: 71:32 (#0),
                            ),
                        ),
                        pat_span: src/d2s_intrinsics.rs:71:29: 71:32 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} (u64, u64),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:71:29: 71:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/d2s_intrinsics.rs:71:50: 71:53 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/d2s_intrinsics.rs:71:47: 71:48 (#0),
                            ),
                        ),
                        pat_span: src/d2s_intrinsics.rs:71:47: 71:48 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:71:47: 71:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/d2s_intrinsics.rs:72:14: 72:39 (#0),
                            ),
                        ),
                        pat_span: src/d2s_intrinsics.rs:72:9: 72:11 (#0),
                    },
                ),
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:72:9: 72:11 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:72:14: 72:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:72:14: 72:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:72:26: 72:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:72:26: 72:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u128, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:72:14: 72:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/d2s_intrinsics.rs:73:14: 73:39 (#0),
                            ),
                        ),
                        pat_span: src/d2s_intrinsics.rs:73:9: 73:11 (#0),
                    },
                ),
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:73:9: 73:11 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:73:14: 73:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:73:14: 73:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:73:26: 73:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:73:26: 73:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u128, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:73:14: 73:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/d2s_intrinsics.rs:74:5: 74:43 (#0),
                },
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:74:5: 74:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/d2s_intrinsics.rs:74:5: 74:43 (#0),
                },
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:74:6: 74:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/d2s_intrinsics.rs:74:5: 74:43 (#0),
                },
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:74:7: 74:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/d2s_intrinsics.rs:74:5: 74:43 (#0),
                },
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:74:8: 74:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:74:7: 74:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:74:7: 74:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/d2s_intrinsics.rs:74:5: 74:43 (#0),
                },
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:74:20: 74:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u128, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:74:6: 74:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/d2s_intrinsics.rs:74:5: 74:43 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:74:27: 74:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/d2s_intrinsics.rs:74:5: 74:43 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:74:28: 74:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u32, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:74:27: 74:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/d2s_intrinsics.rs:74:5: 74:36 (#0),
            scope: scope[0],
        },
    },
]