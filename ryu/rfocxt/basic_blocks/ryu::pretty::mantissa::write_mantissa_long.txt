[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = _1,
            _7 = const 32_i32 as u32 (IntToInt),
            _8 = Lt(move _7, const 64_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:6:8: 6:22 (#0),
                    scope: scope[0],
                },
                kind: assert(move _8, "attempt to shift right by `{}`, which would overflow", const 32_i32) -> [success: bb1, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = Shr(move _6, const 32_i32),
            StorageDead(_6),
            _4 = Ne(move _5, const 0_u64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:6:8: 6:27 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb35, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            _11 = _1,
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = _1,
            _15 = Eq(const 100000000_u64, const 0_u64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:8:51: 8:73 (#0),
                    scope: scope[0],
                },
                kind: assert(!move _15, "attempt to divide `{}` by zero", _14) -> [success: bb3, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _13 = Div(move _14, const 100000000_u64),
            StorageDead(_14),
            _16 = MulWithOverflow(const 100000000_u64, _13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:8:37: 8:73 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_16.1: bool), "attempt to compute `{} * {}`, which would overflow", const 100000000_u64, move _13) -> [success: bb4, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _12 = move (_16.0: u64),
            StorageDead(_13),
            _17 = SubWithOverflow(_11, _12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:8:27: 8:74 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_17.1: bool), "attempt to compute `{} - {}`, which would overflow", move _11, move _12) -> [success: bb5, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _10 = move (_17.0: u64),
            StorageDead(_12),
            StorageDead(_11),
            _9 = move _10 as u32 (IntToInt),
            StorageDead(_10),
            FakeRead(ForLet(None), _9),
            _18 = Eq(const 100000000_u64, const 0_u64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:9:9: 9:30 (#0),
                    scope: scope[1],
                },
                kind: assert(!move _18, "attempt to divide `{}` by zero", _1) -> [success: bb6, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _1 = Div(_1, const 100000000_u64),
            StorageLive(_19),
            StorageLive(_20),
            _20 = _9,
            _21 = Eq(const 10000_u32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:11:17: 11:33 (#0),
                    scope: scope[1],
                },
                kind: assert(!move _21, "attempt to calculate the remainder of `{}` with a divisor of zero", _20) -> [success: bb7, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _19 = Rem(move _20, const 10000_u32),
            StorageDead(_20),
            FakeRead(ForLet(None), _19),
            _22 = Eq(const 10000_u32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:12:9: 12:26 (#0),
                    scope: scope[2],
                },
                kind: assert(!move _22, "attempt to divide `{}` by zero", _9) -> [success: bb8, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _9 = Div(_9, const 10000_u32),
            StorageLive(_23),
            StorageLive(_24),
            _24 = _9,
            _25 = Eq(const 10000_u32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:13:17: 13:33 (#0),
                    scope: scope[2],
                },
                kind: assert(!move _25, "attempt to calculate the remainder of `{}` with a divisor of zero", _24) -> [success: bb9, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _23 = Rem(move _24, const 10000_u32),
            StorageDead(_24),
            FakeRead(ForLet(None), _23),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = _19,
            _29 = Eq(const 100_u32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:14:18: 14:27 (#0),
                    scope: scope[3],
                },
                kind: assert(!move _29, "attempt to calculate the remainder of `{}` with a divisor of zero", _28) -> [success: bb10, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _27 = Rem(move _28, const 100_u32),
            StorageDead(_28),
            _30 = const 1_i32 as u32 (IntToInt),
            _31 = Lt(move _30, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:14:18: 14:32 (#0),
                    scope: scope[3],
                },
                kind: assert(move _31, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb11, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _26 = Shl(move _27, const 1_i32),
            StorageDead(_27),
            FakeRead(ForLet(None), _26),
            StorageLive(_32),
            StorageLive(_33),
            StorageLive(_34),
            _34 = _19,
            _35 = Eq(const 100_u32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:15:18: 15:27 (#0),
                    scope: scope[4],
                },
                kind: assert(!move _35, "attempt to divide `{}` by zero", _34) -> [success: bb12, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _33 = Div(move _34, const 100_u32),
            StorageDead(_34),
            _36 = const 1_i32 as u32 (IntToInt),
            _37 = Lt(move _36, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:15:18: 15:32 (#0),
                    scope: scope[4],
                },
                kind: assert(move _37, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb13, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _32 = Shl(move _33, const 1_i32),
            StorageDead(_33),
            FakeRead(ForLet(None), _32),
            StorageLive(_38),
            StorageLive(_39),
            StorageLive(_40),
            _40 = _23,
            _41 = Eq(const 100_u32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:16:18: 16:27 (#0),
                    scope: scope[5],
                },
                kind: assert(!move _41, "attempt to calculate the remainder of `{}` with a divisor of zero", _40) -> [success: bb14, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _39 = Rem(move _40, const 100_u32),
            StorageDead(_40),
            _42 = const 1_i32 as u32 (IntToInt),
            _43 = Lt(move _42, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:16:18: 16:32 (#0),
                    scope: scope[5],
                },
                kind: assert(move _43, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb15, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _38 = Shl(move _39, const 1_i32),
            StorageDead(_39),
            FakeRead(ForLet(None), _38),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            _46 = _23,
            _47 = Eq(const 100_u32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:17:18: 17:27 (#0),
                    scope: scope[6],
                },
                kind: assert(!move _47, "attempt to divide `{}` by zero", _46) -> [success: bb16, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _45 = Div(move _46, const 100_u32),
            StorageDead(_46),
            _48 = const 1_i32 as u32 (IntToInt),
            _49 = Lt(move _48, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:17:18: 17:32 (#0),
                    scope: scope[6],
                },
                kind: assert(move _49, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb17, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _44 = Shl(move _45, const 1_i32),
            StorageDead(_45),
            FakeRead(ForLet(None), _44),
            StorageLive(_50),
            StorageLive(_51),
            StorageLive(_52),
            StorageLive(_53),
            StorageLive(_54),
            StorageLive(_55),
            _55 = const <static(DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE))>,
            _54 = &(*_55),
            _53 = move _54 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_54),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:19:13: 19:33 (#0),
                    scope: scope[7],
                },
                kind: _52 = core::slice::<impl [u8]>::as_ptr(move _53) -> [return: bb18, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_53),
            StorageLive(_56),
            StorageLive(_57),
            _57 = _26,
            _56 = move _57 as isize (IntToInt),
            StorageDead(_57),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:19:13: 19:53 (#0),
                    scope: scope[7],
                },
                kind: _51 = core::ptr::const_ptr::<impl *const u8>::offset(move _52, move _56) -> [return: bb19, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
            StorageDead(_52),
            StorageLive(_58),
            StorageLive(_59),
            _59 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:20:13: 20:30 (#0),
                    scope: scope[7],
                },
                kind: _58 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _59, const -2_isize) -> [return: bb20, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_59),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:18:9: 22:10 (#0),
                    scope: scope[7],
                },
                kind: _50 = core::intrinsics::copy_nonoverlapping::<u8>(move _51, move _58, const 2_usize) -> [return: bb21, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_58),
            StorageDead(_51),
            StorageDead(_55),
            StorageDead(_50),
            StorageLive(_60),
            StorageLive(_61),
            StorageLive(_62),
            StorageLive(_63),
            StorageLive(_64),
            StorageLive(_65),
            _65 = const <static(DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE))>,
            _64 = &(*_65),
            _63 = move _64 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:24:13: 24:33 (#0),
                    scope: scope[7],
                },
                kind: _62 = core::slice::<impl [u8]>::as_ptr(move _63) -> [return: bb22, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_63),
            StorageLive(_66),
            StorageLive(_67),
            _67 = _32,
            _66 = move _67 as isize (IntToInt),
            StorageDead(_67),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:24:13: 24:53 (#0),
                    scope: scope[7],
                },
                kind: _61 = core::ptr::const_ptr::<impl *const u8>::offset(move _62, move _66) -> [return: bb23, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_66),
            StorageDead(_62),
            StorageLive(_68),
            StorageLive(_69),
            _69 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:25:13: 25:30 (#0),
                    scope: scope[7],
                },
                kind: _68 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _69, const -4_isize) -> [return: bb24, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_69),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:23:9: 27:10 (#0),
                    scope: scope[7],
                },
                kind: _60 = core::intrinsics::copy_nonoverlapping::<u8>(move _61, move _68, const 2_usize) -> [return: bb25, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_68),
            StorageDead(_61),
            StorageDead(_65),
            StorageDead(_60),
            StorageLive(_70),
            StorageLive(_71),
            StorageLive(_72),
            StorageLive(_73),
            StorageLive(_74),
            StorageLive(_75),
            _75 = const <static(DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE))>,
            _74 = &(*_75),
            _73 = move _74 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_74),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:29:13: 29:33 (#0),
                    scope: scope[7],
                },
                kind: _72 = core::slice::<impl [u8]>::as_ptr(move _73) -> [return: bb26, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_73),
            StorageLive(_76),
            StorageLive(_77),
            _77 = _38,
            _76 = move _77 as isize (IntToInt),
            StorageDead(_77),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:29:13: 29:53 (#0),
                    scope: scope[7],
                },
                kind: _71 = core::ptr::const_ptr::<impl *const u8>::offset(move _72, move _76) -> [return: bb27, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_76),
            StorageDead(_72),
            StorageLive(_78),
            StorageLive(_79),
            _79 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:30:13: 30:30 (#0),
                    scope: scope[7],
                },
                kind: _78 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _79, const -6_isize) -> [return: bb28, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_79),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:28:9: 32:10 (#0),
                    scope: scope[7],
                },
                kind: _70 = core::intrinsics::copy_nonoverlapping::<u8>(move _71, move _78, const 2_usize) -> [return: bb29, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_78),
            StorageDead(_71),
            StorageDead(_75),
            StorageDead(_70),
            StorageLive(_80),
            StorageLive(_81),
            StorageLive(_82),
            StorageLive(_83),
            StorageLive(_84),
            StorageLive(_85),
            _85 = const <static(DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE))>,
            _84 = &(*_85),
            _83 = move _84 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_84),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:34:13: 34:33 (#0),
                    scope: scope[7],
                },
                kind: _82 = core::slice::<impl [u8]>::as_ptr(move _83) -> [return: bb30, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_83),
            StorageLive(_86),
            StorageLive(_87),
            _87 = _44,
            _86 = move _87 as isize (IntToInt),
            StorageDead(_87),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:34:13: 34:53 (#0),
                    scope: scope[7],
                },
                kind: _81 = core::ptr::const_ptr::<impl *const u8>::offset(move _82, move _86) -> [return: bb31, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_86),
            StorageDead(_82),
            StorageLive(_88),
            StorageLive(_89),
            _89 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:35:13: 35:30 (#0),
                    scope: scope[7],
                },
                kind: _88 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _89, const -8_isize) -> [return: bb32, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_89),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:33:9: 37:10 (#0),
                    scope: scope[7],
                },
                kind: _80 = core::intrinsics::copy_nonoverlapping::<u8>(move _81, move _88, const 2_usize) -> [return: bb33, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_88),
            StorageDead(_81),
            StorageDead(_85),
            StorageDead(_80),
            StorageLive(_90),
            StorageLive(_91),
            _91 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:38:18: 38:35 (#0),
                    scope: scope[7],
                },
                kind: _90 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _91, const -8_isize) -> [return: bb34, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_91),
            _2 = move _90,
            StorageDead(_90),
            _3 = const (),
            StorageDead(_44),
            StorageDead(_38),
            StorageDead(_32),
            StorageDead(_26),
            StorageDead(_23),
            StorageDead(_19),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:6:5: 39:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb36,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:6:5: 39:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb36,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_92),
            StorageLive(_93),
            StorageLive(_94),
            _94 = _1,
            _93 = move _94 as u32 (IntToInt),
            StorageDead(_94),
            StorageLive(_95),
            _95 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:40:5: 40:42 (#0),
                    scope: scope[0],
                },
                kind: _92 = pretty::mantissa::write_mantissa(move _93, move _95) -> [return: bb37, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_95),
            StorageDead(_93),
            StorageDead(_92),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:41:2: 41:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:5:1: 41:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:5:72: 5:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: Some(
                            src/pretty/mantissa.rs:5:47: 5:50 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:5:35: 5:45 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:5:35: 5:45 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:5:35: 5:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: Some(
                            src/pretty/mantissa.rs:5:64: 5:71 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:5:52: 5:62 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:5:52: 5:62 (#0),
                    },
                ),
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:5:52: 5:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:6:5: 39:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:6:8: 6:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:6:8: 6:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:6:9: 6:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:6:8: 6:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:6:8: 6:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:8:27: 8:81 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:8:13: 8:24 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:8:13: 8:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:8:27: 8:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:8:28: 8:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:8:37: 8:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:8:51: 8:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:8:52: 8:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:8:51: 8:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u64, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:8:37: 8:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u64, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:8:27: 8:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:9:9: 9:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:11:17: 11:33 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:11:13: 11:14 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:11:13: 11:14 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:11:17: 11:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:11:17: 11:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:12:9: 12:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:13:17: 13:33 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:13:13: 13:14 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:13:13: 13:14 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:13:17: 13:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:13:17: 13:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:14:18: 14:32 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:14:13: 14:15 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:14:13: 14:15 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:14:18: 14:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:14:19: 14:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:14:18: 14:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:14:18: 14:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:14:18: 14:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:15:18: 15:32 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:15:13: 15:15 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:15:13: 15:15 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:15:18: 15:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:15:19: 15:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:15:18: 15:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:15:18: 15:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:15:18: 15:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:16:18: 16:32 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:16:13: 16:15 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:16:13: 16:15 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:16:18: 16:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:16:19: 16:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:16:18: 16:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:16:18: 16:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:16:18: 16:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:17:18: 17:32 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:17:13: 17:15 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:17:13: 17:15 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:17:18: 17:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:17:19: 17:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:17:18: 17:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:17:18: 17:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:17:18: 17:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:18:9: 22:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:19:13: 19:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:19:13: 19:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:19:13: 19:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:19:13: 19:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            StaticRef {
                def_id: DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE),
                is_thread_local: false,
            },
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:19:13: 19:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:19:41: 19:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:19:41: 19:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:20:13: 20:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:20:13: 20:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:23:9: 27:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:24:13: 24:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:24:13: 24:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:24:13: 24:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:24:13: 24:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            StaticRef {
                def_id: DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE),
                is_thread_local: false,
            },
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:24:13: 24:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:24:41: 24:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:24:41: 24:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:25:13: 25:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:25:13: 25:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:28:9: 32:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:29:13: 29:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:29:13: 29:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:29:13: 29:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:29:13: 29:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            StaticRef {
                def_id: DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE),
                is_thread_local: false,
            },
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:29:13: 29:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:29:41: 29:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:29:41: 29:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:30:13: 30:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:30:13: 30:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:33:9: 37:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:34:13: 34:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:34:13: 34:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:34:13: 34:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:34:13: 34:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            StaticRef {
                def_id: DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE),
                is_thread_local: false,
            },
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:34:13: 34:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:34:41: 34:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:34:41: 34:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:35:13: 35:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:35:13: 35:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:38:18: 38:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:38:18: 38:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:40:5: 40:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:40:20: 40:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:40:20: 40:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:40:35: 40:41 (#0),
            scope: scope[0],
        },
    },
]