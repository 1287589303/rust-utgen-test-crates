[
    BasicBlockData {
        statements: [
            StorageLive(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:45:5: 61:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb1,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:45:5: 61:6 (#0),
                    scope: scope[0],
                },
                kind: falseUnwind -> [real: bb2, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_5),
            StorageLive(_6),
            _6 = _1,
            _5 = Ge(move _6, const 10000_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:45:11: 45:27 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _5) -> [0: bb21, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = _1,
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            _11 = _1,
            _12 = Eq(const 10000_u32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:46:35: 46:52 (#0),
                    scope: scope[0],
                },
                kind: assert(!move _12, "attempt to divide `{}` by zero", _11) -> [success: bb4, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _10 = Div(move _11, const 10000_u32),
            StorageDead(_11),
            _13 = MulWithOverflow(const 10000_u32, _10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:46:26: 46:52 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_13.1: bool), "attempt to compute `{} * {}`, which would overflow", const 10000_u32, move _10) -> [success: bb5, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _9 = move (_13.0: u32),
            StorageDead(_10),
            _14 = SubWithOverflow(_8, _9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:46:17: 46:52 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_14.1: bool), "attempt to compute `{} - {}`, which would overflow", move _8, move _9) -> [success: bb6, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = move (_14.0: u32),
            StorageDead(_9),
            StorageDead(_8),
            FakeRead(ForLet(None), _7),
            _15 = Eq(const 10000_u32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:47:9: 47:25 (#0),
                    scope: scope[1],
                },
                kind: assert(!move _15, "attempt to divide `{}` by zero", _1) -> [success: bb7, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _1 = Div(_1, const 10000_u32),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            _18 = _7,
            _19 = Eq(const 100_u32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:48:18: 48:27 (#0),
                    scope: scope[1],
                },
                kind: assert(!move _19, "attempt to calculate the remainder of `{}` with a divisor of zero", _18) -> [success: bb8, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _17 = Rem(move _18, const 100_u32),
            StorageDead(_18),
            _20 = const 1_i32 as u32 (IntToInt),
            _21 = Lt(move _20, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:48:18: 48:32 (#0),
                    scope: scope[1],
                },
                kind: assert(move _21, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb9, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = Shl(move _17, const 1_i32),
            StorageDead(_17),
            FakeRead(ForLet(None), _16),
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            _24 = _7,
            _25 = Eq(const 100_u32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:49:18: 49:27 (#0),
                    scope: scope[2],
                },
                kind: assert(!move _25, "attempt to divide `{}` by zero", _24) -> [success: bb10, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _23 = Div(move _24, const 100_u32),
            StorageDead(_24),
            _26 = const 1_i32 as u32 (IntToInt),
            _27 = Lt(move _26, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:49:18: 49:32 (#0),
                    scope: scope[2],
                },
                kind: assert(move _27, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb11, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _22 = Shl(move _23, const 1_i32),
            StorageDead(_23),
            FakeRead(ForLet(None), _22),
            StorageLive(_28),
            StorageLive(_29),
            StorageLive(_30),
            StorageLive(_31),
            StorageLive(_32),
            StorageLive(_33),
            _33 = const <static(DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE))>,
            _32 = &(*_33),
            _31 = move _32 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:51:13: 51:33 (#0),
                    scope: scope[3],
                },
                kind: _30 = core::slice::<impl [u8]>::as_ptr(move _31) -> [return: bb12, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            StorageLive(_34),
            StorageLive(_35),
            _35 = _16,
            _34 = move _35 as isize (IntToInt),
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:51:13: 51:53 (#0),
                    scope: scope[3],
                },
                kind: _29 = core::ptr::const_ptr::<impl *const u8>::offset(move _30, move _34) -> [return: bb13, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageDead(_30),
            StorageLive(_36),
            StorageLive(_37),
            _37 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:52:13: 52:30 (#0),
                    scope: scope[3],
                },
                kind: _36 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _37, const -2_isize) -> [return: bb14, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:50:9: 54:10 (#0),
                    scope: scope[3],
                },
                kind: _28 = core::intrinsics::copy_nonoverlapping::<u8>(move _29, move _36, const 2_usize) -> [return: bb15, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageDead(_29),
            StorageDead(_33),
            StorageDead(_28),
            StorageLive(_38),
            StorageLive(_39),
            StorageLive(_40),
            StorageLive(_41),
            StorageLive(_42),
            StorageLive(_43),
            _43 = const <static(DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE))>,
            _42 = &(*_43),
            _41 = move _42 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:56:13: 56:33 (#0),
                    scope: scope[3],
                },
                kind: _40 = core::slice::<impl [u8]>::as_ptr(move _41) -> [return: bb16, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
            StorageLive(_44),
            StorageLive(_45),
            _45 = _22,
            _44 = move _45 as isize (IntToInt),
            StorageDead(_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:56:13: 56:53 (#0),
                    scope: scope[3],
                },
                kind: _39 = core::ptr::const_ptr::<impl *const u8>::offset(move _40, move _44) -> [return: bb17, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
            StorageDead(_40),
            StorageLive(_46),
            StorageLive(_47),
            _47 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:57:13: 57:30 (#0),
                    scope: scope[3],
                },
                kind: _46 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _47, const -4_isize) -> [return: bb18, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_47),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:55:9: 59:10 (#0),
                    scope: scope[3],
                },
                kind: _38 = core::intrinsics::copy_nonoverlapping::<u8>(move _39, move _46, const 2_usize) -> [return: bb19, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_39),
            StorageDead(_43),
            StorageDead(_38),
            StorageLive(_48),
            StorageLive(_49),
            _49 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:60:18: 60:35 (#0),
                    scope: scope[3],
                },
                kind: _48 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _49, const -4_isize) -> [return: bb20, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            _2 = move _48,
            StorageDead(_48),
            _4 = const (),
            StorageDead(_22),
            StorageDead(_16),
            StorageDead(_7),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:45:5: 61:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb1,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageLive(_51),
            _3 = const (),
            StorageDead(_51),
            StorageDead(_5),
            StorageDead(_3),
            StorageLive(_53),
            StorageLive(_54),
            StorageLive(_55),
            _55 = _1,
            _54 = Ge(move _55, const 100_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:62:8: 62:21 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _54) -> [0: bb23, otherwise: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
            StorageLive(_56),
            StorageLive(_57),
            StorageLive(_58),
            _58 = _1,
            _59 = Eq(const 100_u32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:63:17: 63:31 (#0),
                    scope: scope[0],
                },
                kind: assert(!move _59, "attempt to calculate the remainder of `{}` with a divisor of zero", _58) -> [success: bb24, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
            _53 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:62:5: 71:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb32,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _57 = Rem(move _58, const 100_u32),
            StorageDead(_58),
            _60 = const 1_i32 as u32 (IntToInt),
            _61 = Lt(move _60, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:63:17: 63:36 (#0),
                    scope: scope[0],
                },
                kind: assert(move _61, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb25, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _56 = Shl(move _57, const 1_i32),
            StorageDead(_57),
            FakeRead(ForLet(None), _56),
            _62 = Eq(const 100_u32, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:64:9: 64:22 (#0),
                    scope: scope[4],
                },
                kind: assert(!move _62, "attempt to divide `{}` by zero", _1) -> [success: bb26, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _1 = Div(_1, const 100_u32),
            StorageLive(_63),
            StorageLive(_64),
            StorageLive(_65),
            StorageLive(_66),
            StorageLive(_67),
            StorageLive(_68),
            _68 = const <static(DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE))>,
            _67 = &(*_68),
            _66 = move _67 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_67),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:66:13: 66:33 (#0),
                    scope: scope[4],
                },
                kind: _65 = core::slice::<impl [u8]>::as_ptr(move _66) -> [return: bb27, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_66),
            StorageLive(_69),
            StorageLive(_70),
            _70 = _56,
            _69 = move _70 as isize (IntToInt),
            StorageDead(_70),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:66:13: 66:52 (#0),
                    scope: scope[4],
                },
                kind: _64 = core::ptr::const_ptr::<impl *const u8>::offset(move _65, move _69) -> [return: bb28, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_69),
            StorageDead(_65),
            StorageLive(_71),
            StorageLive(_72),
            _72 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:67:13: 67:30 (#0),
                    scope: scope[4],
                },
                kind: _71 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _72, const -2_isize) -> [return: bb29, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_72),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:65:9: 69:10 (#0),
                    scope: scope[4],
                },
                kind: _63 = core::intrinsics::copy_nonoverlapping::<u8>(move _64, move _71, const 2_usize) -> [return: bb30, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_71),
            StorageDead(_64),
            StorageDead(_68),
            StorageDead(_63),
            StorageLive(_73),
            StorageLive(_74),
            _74 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:70:18: 70:35 (#0),
                    scope: scope[4],
                },
                kind: _73 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _74, const -2_isize) -> [return: bb31, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_74),
            _2 = move _73,
            StorageDead(_73),
            _53 = const (),
            StorageDead(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:62:5: 71:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb32,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_54),
            StorageDead(_53),
            StorageLive(_75),
            StorageLive(_76),
            _76 = _1,
            _75 = Ge(move _76, const 10_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:72:8: 72:20 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _75) -> [0: bb39, otherwise: bb33],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_76),
            StorageLive(_77),
            StorageLive(_78),
            _78 = _1,
            _79 = const 1_i32 as u32 (IntToInt),
            _80 = Lt(move _79, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:73:17: 73:28 (#0),
                    scope: scope[0],
                },
                kind: assert(move _80, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb34, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _77 = Shl(move _78, const 1_i32),
            StorageDead(_78),
            FakeRead(ForLet(None), _77),
            StorageLive(_81),
            StorageLive(_82),
            StorageLive(_83),
            StorageLive(_84),
            StorageLive(_85),
            StorageLive(_86),
            _86 = const <static(DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE))>,
            _85 = &(*_86),
            _84 = move _85 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_85),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:75:13: 75:33 (#0),
                    scope: scope[5],
                },
                kind: _83 = core::slice::<impl [u8]>::as_ptr(move _84) -> [return: bb35, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            StorageLive(_87),
            StorageLive(_88),
            _88 = _77,
            _87 = move _88 as isize (IntToInt),
            StorageDead(_88),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:75:13: 75:52 (#0),
                    scope: scope[5],
                },
                kind: _82 = core::ptr::const_ptr::<impl *const u8>::offset(move _83, move _87) -> [return: bb36, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_87),
            StorageDead(_83),
            StorageLive(_89),
            StorageLive(_90),
            _90 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:76:13: 76:30 (#0),
                    scope: scope[5],
                },
                kind: _89 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _90, const -2_isize) -> [return: bb37, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_90),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:74:9: 78:10 (#0),
                    scope: scope[5],
                },
                kind: _81 = core::intrinsics::copy_nonoverlapping::<u8>(move _82, move _89, const 2_usize) -> [return: bb38, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_89),
            StorageDead(_82),
            StorageDead(_86),
            StorageDead(_81),
            _0 = const (),
            StorageDead(_77),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:72:5: 81:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb42,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_76),
            StorageLive(_91),
            StorageLive(_92),
            _92 = _1,
            _91 = move _92 as u8 (IntToInt),
            StorageDead(_92),
            _93 = AddWithOverflow(const 48_u8, _91),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:80:30: 80:49 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_93.1: bool), "attempt to compute `{} + {}`, which would overflow", const 48_u8, move _91) -> [success: bb40, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_94),
            StorageLive(_95),
            _95 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:80:10: 80:27 (#0),
                    scope: scope[0],
                },
                kind: _94 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _95, const -1_isize) -> [return: bb41, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_95),
            (*_94) = move (_93.0: u8),
            StorageDead(_91),
            StorageDead(_94),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:72:5: 81:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb42,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_75),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:82:2: 82:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/pretty/mantissa.rs:44:1: 82:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:44:67: 44:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: Some(
                            src/pretty/mantissa.rs:44:42: 44:45 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:44:30: 44:40 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:44:30: 44:40 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:44:30: 44:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: Some(
                            src/pretty/mantissa.rs:44:59: 44:66 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:44:47: 44:57 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:44:47: 44:57 (#0),
                    },
                ),
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:44:47: 44:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:45:5: 61:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:44:1: 82:2 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/pretty/mantissa.rs:45:5: 61:6 (#291),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:45:11: 45:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/pretty/mantissa.rs:45:5: 61:6 (#291),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:45:11: 45:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:46:17: 46:52 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:46:13: 46:14 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:46:13: 46:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:46:17: 46:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:46:26: 46:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:46:35: 46:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:46:36: 46:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:46:35: 46:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u32, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:46:26: 46:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u32, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:46:17: 46:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:47:9: 47:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:48:18: 48:32 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:48:13: 48:15 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:48:13: 48:15 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:48:18: 48:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:48:19: 48:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:48:18: 48:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:48:18: 48:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:48:18: 48:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:49:18: 49:32 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:49:13: 49:15 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:49:13: 49:15 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:49:18: 49:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:49:19: 49:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:49:18: 49:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:49:18: 49:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:49:18: 49:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:50:9: 54:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:51:13: 51:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:51:13: 51:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:51:13: 51:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:51:13: 51:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            StaticRef {
                def_id: DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE),
                is_thread_local: false,
            },
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:51:13: 51:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:51:41: 51:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:51:41: 51:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:52:13: 52:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:52:13: 52:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:55:9: 59:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:56:13: 56:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:56:13: 56:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:56:13: 56:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:56:13: 56:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            StaticRef {
                def_id: DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE),
                is_thread_local: false,
            },
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:56:13: 56:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:56:41: 56:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:56:41: 56:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:57:13: 57:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:57:13: 57:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:60:18: 60:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:60:18: 60:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/pretty/mantissa.rs:45:5: 61:6 (#291),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:45:5: 61:6 (#291),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:45:5: 61:6 (#291),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:45:5: 61:6 (#291),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:62:5: 71:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:62:8: 62:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:62:8: 62:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:63:17: 63:36 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:63:13: 63:14 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:63:13: 63:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:63:17: 63:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:63:18: 63:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:63:17: 63:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:63:17: 63:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:63:17: 63:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:64:9: 64:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:65:9: 69:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:66:13: 66:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:66:13: 66:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:66:13: 66:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:66:13: 66:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            StaticRef {
                def_id: DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE),
                is_thread_local: false,
            },
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:66:13: 66:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:66:41: 66:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:66:41: 66:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:67:13: 67:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:67:13: 67:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:70:18: 70:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:70:18: 70:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/pretty/mantissa.rs:72:5: 81:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:72:8: 72:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/pretty/mantissa.rs:72:5: 81:6 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:72:8: 72:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/pretty/mantissa.rs:73:17: 73:28 (#0),
                            ),
                        ),
                        pat_span: src/pretty/mantissa.rs:73:13: 73:14 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:73:13: 73:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:73:17: 73:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:73:17: 73:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:73:17: 73:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:74:9: 78:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:75:13: 75:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:75:13: 75:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:75:13: 75:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:75:13: 75:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            StaticRef {
                def_id: DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE),
                is_thread_local: false,
            },
        ),
        ty: &'{erased} [u8; 200_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:75:13: 75:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:75:41: 75:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:75:41: 75:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:76:13: 76:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:76:13: 76:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:80:37: 80:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:80:37: 80:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u8, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:80:30: 80:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:80:10: 80:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/pretty/mantissa.rs:80:10: 80:16 (#0),
            scope: scope[0],
        },
    },
]